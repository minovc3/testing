(function(ht) {
	typeof define == "function" && define.amd ? define(ht) : ht()
})(function() {
	"use strict";
	var Gte = Object.defineProperty;
	var Qte = (ht, lt, qt) => lt in ht ? Gte(ht, lt, {
		enumerable: !0,
		configurable: !0,
		writable: !0,
		value: qt
	}) : ht[lt] = qt;
	var ho = (ht, lt, qt) => (Qte(ht, typeof lt != "symbol" ? lt + "" : lt, qt), qt);

	function ht(t, e) {
		for (var n = 0; n < e.length; n++) {
			const i = e[n];
			if (typeof i != "string" && !Array.isArray(i)) {
				for (const o in i)
					if (o !== "default" && !(o in t)) {
						const r = Object.getOwnPropertyDescriptor(i, o);
						r && Object.defineProperty(t, o, r.get ? r : {
							enumerable: !0,
							get: () => i[o]
						})
					}
			}
		}
		return Object.freeze(Object.defineProperty(t, Symbol.toStringTag, {
			value: "Module"
		}))
	}

	function lt(t) {
		return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
	}
	var qt = {
			exports: {}
		},
		go = {};
	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	var Xd = Object.getOwnPropertySymbols,
		Dq = Object.prototype.hasOwnProperty,
		Iq = Object.prototype.propertyIsEnumerable;

	function Rq(t) {
		if (t == null) throw new TypeError("Object.assign cannot be called with null or undefined");
		return Object(t)
	}

	function Yq() {
		try {
			if (!Object.assign) return !1;
			var t = new String("abc");
			if (t[5] = "de", Object.getOwnPropertyNames(t)[0] === "5") return !1;
			for (var e = {}, n = 0; n < 10; n++) e["_" + String.fromCharCode(n)] = n;
			var i = Object.getOwnPropertyNames(e).map(function(r) {
				return e[r]
			});
			if (i.join("") !== "0123456789") return !1;
			var o = {};
			return "abcdefghijklmnopqrst".split("").forEach(function(r) {
				o[r] = r
			}), Object.keys(Object.assign({}, o)).join("") === "abcdefghijklmnopqrst"
		} catch {
			return !1
		}
	}
	var Zd = Yq() ? Object.assign : function(t, e) {
			for (var n, i = Rq(t), o, r = 1; r < arguments.length; r++) {
				n = Object(arguments[r]);
				for (var a in n) Dq.call(n, a) && (i[a] = n[a]);
				if (Xd) {
					o = Xd(n);
					for (var s = 0; s < o.length; s++) Iq.call(n, o[s]) && (i[o[s]] = n[o[s]])
				}
			}
			return i
		},
		em = {
			exports: {}
		},
		H = {};
	/** @license React v17.0.2
	 * react.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	var ul = Zd,
		pi = 60103,
		tm = 60106;
	H.Fragment = 60107, H.StrictMode = 60108, H.Profiler = 60114;
	var nm = 60109,
		im = 60110,
		om = 60112;
	H.Suspense = 60113;
	var rm = 60115,
		am = 60116;
	if (typeof Symbol == "function" && Symbol.for) {
		var ut = Symbol.for;
		pi = ut("react.element"), tm = ut("react.portal"), H.Fragment = ut("react.fragment"), H.StrictMode = ut("react.strict_mode"), H.Profiler = ut("react.profiler"), nm = ut("react.provider"), im = ut("react.context"), om = ut("react.forward_ref"), H.Suspense = ut("react.suspense"), rm = ut("react.memo"), am = ut("react.lazy")
	}
	var sm = typeof Symbol == "function" && Symbol.iterator;

	function Lq(t) {
		return t === null || typeof t != "object" ? null : (t = sm && t[sm] || t["@@iterator"], typeof t == "function" ? t : null)
	}

	function yo(t) {
		for (var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, n = 1; n < arguments.length; n++) e += "&args[]=" + encodeURIComponent(arguments[n]);
		return "Minified React error #" + t + "; visit " + e + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
	}
	var lm = {
			isMounted: function() {
				return !1
			},
			enqueueForceUpdate: function() {},
			enqueueReplaceState: function() {},
			enqueueSetState: function() {}
		},
		um = {};

	function fi(t, e, n) {
		this.props = t, this.context = e, this.refs = um, this.updater = n || lm
	}
	fi.prototype.isReactComponent = {}, fi.prototype.setState = function(t, e) {
		if (typeof t != "object" && typeof t != "function" && t != null) throw Error(yo(85));
		this.updater.enqueueSetState(this, t, e, "setState")
	}, fi.prototype.forceUpdate = function(t) {
		this.updater.enqueueForceUpdate(this, t, "forceUpdate")
	};

	function cm() {}
	cm.prototype = fi.prototype;

	function cl(t, e, n) {
		this.props = t, this.context = e, this.refs = um, this.updater = n || lm
	}
	var dl = cl.prototype = new cm;
	dl.constructor = cl, ul(dl, fi.prototype), dl.isPureReactComponent = !0;
	var ml = {
			current: null
		},
		dm = Object.prototype.hasOwnProperty,
		mm = {
			key: !0,
			ref: !0,
			__self: !0,
			__source: !0
		};

	function pm(t, e, n) {
		var i, o = {},
			r = null,
			a = null;
		if (e != null)
			for (i in e.ref !== void 0 && (a = e.ref), e.key !== void 0 && (r = "" + e.key), e) dm.call(e, i) && !mm.hasOwnProperty(i) && (o[i] = e[i]);
		var s = arguments.length - 2;
		if (s === 1) o.children = n;
		else if (1 < s) {
			for (var l = Array(s), u = 0; u < s; u++) l[u] = arguments[u + 2];
			o.children = l
		}
		if (t && t.defaultProps)
			for (i in s = t.defaultProps, s) o[i] === void 0 && (o[i] = s[i]);
		return {
			$$typeof: pi,
			type: t,
			key: r,
			ref: a,
			props: o,
			_owner: ml.current
		}
	}

	function Fq(t, e) {
		return {
			$$typeof: pi,
			type: t.type,
			key: e,
			ref: t.ref,
			props: t.props,
			_owner: t._owner
		}
	}

	function pl(t) {
		return typeof t == "object" && t !== null && t.$$typeof === pi
	}

	function Bq(t) {
		var e = {
			"=": "=0",
			":": "=2"
		};
		return "$" + t.replace(/[=:]/g, function(n) {
			return e[n]
		})
	}
	var fm = /\/+/g;

	function fl(t, e) {
		return typeof t == "object" && t !== null && t.key != null ? Bq("" + t.key) : e.toString(36)
	}

	function Br(t, e, n, i, o) {
		var r = typeof t;
		(r === "undefined" || r === "boolean") && (t = null);
		var a = !1;
		if (t === null) a = !0;
		else switch (r) {
			case "string":
			case "number":
				a = !0;
				break;
			case "object":
				switch (t.$$typeof) {
					case pi:
					case tm:
						a = !0
				}
		}
		if (a) return a = t, o = o(a), t = i === "" ? "." + fl(a, 0) : i, Array.isArray(o) ? (n = "", t != null && (n = t.replace(fm, "$&/") + "/"), Br(o, e, n, "", function(u) {
			return u
		})) : o != null && (pl(o) && (o = Fq(o, n + (!o.key || a && a.key === o.key ? "" : ("" + o.key).replace(fm, "$&/") + "/") + t)), e.push(o)), 1;
		if (a = 0, i = i === "" ? "." : i + ":", Array.isArray(t))
			for (var s = 0; s < t.length; s++) {
				r = t[s];
				var l = i + fl(r, s);
				a += Br(r, e, n, l, o)
			} else if (l = Lq(t), typeof l == "function")
				for (t = l.call(t), s = 0; !(r = t.next()).done;) r = r.value, l = i + fl(r, s++), a += Br(r, e, n, l, o);
			else if (r === "object") throw e = "" + t, Error(yo(31, e === "[object Object]" ? "object with keys {" + Object.keys(t).join(", ") + "}" : e));
		return a
	}

	function Ur(t, e, n) {
		if (t == null) return t;
		var i = [],
			o = 0;
		return Br(t, i, "", "", function(r) {
			return e.call(n, r, o++)
		}), i
	}

	function Uq(t) {
		if (t._status === -1) {
			var e = t._result;
			e = e(), t._status = 0, t._result = e, e.then(function(n) {
				t._status === 0 && (n = n.default, t._status = 1, t._result = n)
			}, function(n) {
				t._status === 0 && (t._status = 2, t._result = n)
			})
		}
		if (t._status === 1) return t._result;
		throw t._result
	}
	var hm = {
		current: null
	};

	function _t() {
		var t = hm.current;
		if (t === null) throw Error(yo(321));
		return t
	}
	var Vq = {
		ReactCurrentDispatcher: hm,
		ReactCurrentBatchConfig: {
			transition: 0
		},
		ReactCurrentOwner: ml,
		IsSomeRendererActing: {
			current: !1
		},
		assign: ul
	};
	H.Children = {
		map: Ur,
		forEach: function(t, e, n) {
			Ur(t, function() {
				e.apply(this, arguments)
			}, n)
		},
		count: function(t) {
			var e = 0;
			return Ur(t, function() {
				e++
			}), e
		},
		toArray: function(t) {
			return Ur(t, function(e) {
				return e
			}) || []
		},
		only: function(t) {
			if (!pl(t)) throw Error(yo(143));
			return t
		}
	}, H.Component = fi, H.PureComponent = cl, H.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Vq, H.cloneElement = function(t, e, n) {
		if (t == null) throw Error(yo(267, t));
		var i = ul({}, t.props),
			o = t.key,
			r = t.ref,
			a = t._owner;
		if (e != null) {
			if (e.ref !== void 0 && (r = e.ref, a = ml.current), e.key !== void 0 && (o = "" + e.key), t.type && t.type.defaultProps) var s = t.type.defaultProps;
			for (l in e) dm.call(e, l) && !mm.hasOwnProperty(l) && (i[l] = e[l] === void 0 && s !== void 0 ? s[l] : e[l])
		}
		var l = arguments.length - 2;
		if (l === 1) i.children = n;
		else if (1 < l) {
			s = Array(l);
			for (var u = 0; u < l; u++) s[u] = arguments[u + 2];
			i.children = s
		}
		return {
			$$typeof: pi,
			type: t.type,
			key: o,
			ref: r,
			props: i,
			_owner: a
		}
	}, H.createContext = function(t, e) {
		return e === void 0 && (e = null), t = {
			$$typeof: im,
			_calculateChangedBits: e,
			_currentValue: t,
			_currentValue2: t,
			_threadCount: 0,
			Provider: null,
			Consumer: null
		}, t.Provider = {
			$$typeof: nm,
			_context: t
		}, t.Consumer = t
	}, H.createElement = pm, H.createFactory = function(t) {
		var e = pm.bind(null, t);
		return e.type = t, e
	}, H.createRef = function() {
		return {
			current: null
		}
	}, H.forwardRef = function(t) {
		return {
			$$typeof: om,
			render: t
		}
	}, H.isValidElement = pl, H.lazy = function(t) {
		return {
			$$typeof: am,
			_payload: {
				_status: -1,
				_result: t
			},
			_init: Uq
		}
	}, H.memo = function(t, e) {
		return {
			$$typeof: rm,
			type: t,
			compare: e === void 0 ? null : e
		}
	}, H.useCallback = function(t, e) {
		return _t().useCallback(t, e)
	}, H.useContext = function(t, e) {
		return _t().useContext(t, e)
	}, H.useDebugValue = function() {}, H.useEffect = function(t, e) {
		return _t().useEffect(t, e)
	}, H.useImperativeHandle = function(t, e, n) {
		return _t().useImperativeHandle(t, e, n)
	}, H.useLayoutEffect = function(t, e) {
		return _t().useLayoutEffect(t, e)
	}, H.useMemo = function(t, e) {
		return _t().useMemo(t, e)
	}, H.useReducer = function(t, e, n) {
		return _t().useReducer(t, e, n)
	}, H.useRef = function(t) {
		return _t().useRef(t)
	}, H.useState = function(t) {
		return _t().useState(t)
	}, H.version = "17.0.2", em.exports = H;
	var C = em.exports;
	const q = lt(C),
		gm = ht({
			__proto__: null,
			default: q
		}, [C]);
	/** @license React v17.0.2
	 * react-jsx-runtime.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	var Hq = C,
		ym = 60103;
	if (go.Fragment = 60107, typeof Symbol == "function" && Symbol.for) {
		var bm = Symbol.for;
		ym = bm("react.element"), go.Fragment = bm("react.fragment")
	}
	var qq = Hq.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
		Wq = Object.prototype.hasOwnProperty,
		Kq = {
			key: !0,
			ref: !0,
			__self: !0,
			__source: !0
		};

	function km(t, e, n) {
		var i, o = {},
			r = null,
			a = null;
		n !== void 0 && (r = "" + n), e.key !== void 0 && (r = "" + e.key), e.ref !== void 0 && (a = e.ref);
		for (i in e) Wq.call(e, i) && !Kq.hasOwnProperty(i) && (o[i] = e[i]);
		if (t && t.defaultProps)
			for (i in e = t.defaultProps, e) o[i] === void 0 && (o[i] = e[i]);
		return {
			$$typeof: ym,
			type: t,
			key: r,
			ref: a,
			props: o,
			_owner: qq.current
		}
	}
	go.jsx = km, go.jsxs = km, qt.exports = go;
	var k = qt.exports;
	const Jq = ({
		adminUrl: t,
		onLoad: e
	}) => {
		const n = {
			display: "none"
		};
		return k.jsx("iframe", {
			"data-frame": "admin-auth",
			src: t + "auth-frame/",
			style: n,
			title: "auth-frame",
			onLoad: e
		})
	};
	var Gq = function(t) {
			return t instanceof RegExp
		},
		Qq = function(e) {
			var n = /[\\^$.*+?()[\]{}|]/g,
				i = RegExp(n.source);
			return e && i.test(e) ? e.replace(n, "\\$&") : e
		},
		vm = function(t) {
			return typeof t == "string"
		},
		Xq = function(t) {
			var e = [];
			return t.forEach(function(n) {
				Array.isArray(n) ? e = e.concat(n) : e.push(n)
			}), e
		};

	function Zq(t, e, n) {
		var i = 0,
			o = 0;
		if (t === "") return t;
		if (!t || !vm(t)) throw new TypeError("First argument to react-string-replace#replaceString must be a string");
		var r = e;
		Gq(r) || (r = new RegExp("(" + Qq(r) + ")", "gi"));
		for (var a = t.split(r), s = 1, l = a.length; s < l; s += 2) {
			if (a[s] === void 0 || a[s - 1] === void 0) {
				console.warn("reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.");
				continue
			}
			o = a[s].length, i += a[s - 1].length, a[s] = n(a[s], s, i), i += o
		}
		return a
	}
	var e6 = function(e, n, i) {
		return Array.isArray(e) || (e = [e]), Xq(e.map(function(o) {
			return vm(o) ? Zq(o, n, i) : o
		}))
	};
	const wm = lt(e6),
		hl = q.createContext({});
	hl.Provider;
	const V = () => C.useContext(hl),
		Sm = ({
			isFirst: t,
			isPaid: e
		}) => {
			const {
				accentColor: n,
				publication: i,
				member: o,
				t: r
			} = V(), a = {
				backgroundColor: n
			}, s = {
				color: n
			}, l = r(t ? "Start the conversation" : "Join the discussion"), u = () => {
				window.location.href = e && o ? "#/portal/account/plans" : "#/portal/signup"
			}, c = () => {
				window.location.href = "#/portal/signin"
			}, m = wm(r(e ? "Become a paid member of {{publication}} to start commenting." : "Become a member of {{publication}} to start commenting."), "{{publication}}", () => k.jsx("span", {
				className: "font-semibold",
				children: i
			}));
			return k.jsxs("section", {
				className: `flex flex-col items-center pt-[40px] ${o?"pb-[32px]":"pb-[48px]"} ${!t&&"mt-4"} border-y border-[rgba(0,0,0,0.075)] dark:border-[rgba(255,255,255,0.1)] sm:px-8`,
				"data-testid": "cta-box",
				children: [k.jsx("h1", {
					className: `mb-[8px] text-center font-sans text-[24px] tracking-tight  text-black dark:text-[rgba(255,255,255,0.85)] ${t?"font-semibold":"font-bold"}`,
					children: l
				}), k.jsx("p", {
					className: "mb-[28px] w-full px-0 text-center font-sans text-[16px] leading-normal text-neutral-600 dark:text-[rgba(255,255,255,0.85)] sm:max-w-screen-sm sm:px-8",
					children: m
				}), k.jsx("button", {
					className: "font-san mb-[12px] inline-block rounded px-5 py-[14px] font-medium leading-none text-white transition-all hover:opacity-90",
					"data-testid": "signup-button",
					style: a,
					type: "button",
					onClick: u,
					children: r(e && o ? "Upgrade now" : "Sign up now")
				}), !o && k.jsxs("p", {
					className: "text-center font-sans text-sm text-[rgba(0,0,0,0.4)] dark:text-[rgba(255,255,255,0.5)]",
					children: [k.jsx("span", {
						className: "mr-1 inline-block text-[15px]",
						children: r("Already a member?")
					}), k.jsx("button", {
						className: "rounded-md text-sm font-semibold transition-all hover:opacity-90",
						"data-testid": "signin-button",
						style: s,
						type: "button",
						onClick: c,
						children: r("Sign in")
					})]
				})]
			})
		},
		Cm = t => C.createElement("svg", {
			width: 24,
			height: 24,
			viewBox: "0 0 24 24",
			fill: "none",
			xmlns: "http://www.w3.org/2000/svg",
			...t
		}, C.createElement("path", {
			d: "M7 9.5C7 10.1566 7.12933 10.8068 7.3806 11.4134C7.63188 12.02 8.00017 12.5712 8.46447 13.0355C8.92876 13.4998 9.47995 13.8681 10.0866 14.1194C10.6932 14.3707 11.3434 14.5 12 14.5C12.6566 14.5 13.3068 14.3707 13.9134 14.1194C14.52 13.8681 15.0712 13.4998 15.5355 13.0355C15.9998 12.5712 16.3681 12.02 16.6194 11.4134C16.8707 10.8068 17 10.1566 17 9.5C17 8.84339 16.8707 8.19321 16.6194 7.58658C16.3681 6.97995 15.9998 6.42876 15.5355 5.96447C15.0712 5.50017 14.52 5.13188 13.9134 4.8806C13.3068 4.62933 12.6566 4.5 12 4.5C11.3434 4.5 10.6932 4.62933 10.0866 4.8806C9.47995 5.13188 8.92876 5.50017 8.46447 5.96447C8.00017 6.42876 7.63188 6.97995 7.3806 7.58658C7.12933 8.19321 7 8.84339 7 9.5V9.5Z",
			stroke: "white",
			strokeWidth: 1.25,
			strokeLinecap: "round",
			strokeLinejoin: "round"
		}), C.createElement("circle", {
			cx: 12,
			cy: 12,
			r: 11.375,
			stroke: "white",
			strokeWidth: 1.25
		}), C.createElement("path", {
			d: "M19.5 20C19.092 19.6069 18.4941 19.2498 17.7403 18.9489C16.9864 18.6481 16.0915 18.4094 15.1066 18.2466C14.1217 18.0838 13.0661 18 12 18C10.9339 18 9.87831 18.0838 8.8934 18.2466C7.90848 18.4094 7.01357 18.6481 6.25975 18.9489C5.50593 19.2498 4.90796 19.6069 4.5 20",
			stroke: "white",
			strokeWidth: 1.25,
			strokeLinecap: "round",
			strokeLinejoin: "round"
		}));

	function gl(t) {
		return t !== 0 && !t ? "" : t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
	}

	function t6(t, e) {
		const n = new Date(t),
			i = new Date;
		let o = Math.round((i.getTime() - n.getTime()) / 1e3);
		if (o < 5) return e("Just now");
		if (o < 60) return e("{{amount}} seconds ago", {
			amount: o
		});
		if (o = o / 60, o < 60) return Math.floor(o) === 1 ? e("One minute ago") : e("{{amount}} minutes ago", {
			amount: Math.floor(o)
		});
		const r = new Date(i.getFullYear(), i.getMonth(), i.getDate() - 1);
		return n.getFullYear() === r.getFullYear() && n.getMonth() === r.getMonth() && n.getDate() === r.getDate() ? e("Yesterday") : (o = o / 60, o < 24 ? Math.floor(o) === 1 ? e("One hour ago") : e("{{amount}} hours ago", {
			amount: Math.floor(o)
		}) : (o = o / 24, o < 7 ? Math.floor(o) === 1 ? e("One day ago") : e("{{amount}} days ago", {
			amount: Math.floor(o)
		}) : (o = o / 7, o < 4 ? Math.floor(o) === 1 ? e("One week ago") : e("{{amount}} weeks ago", {
			amount: Math.floor(o)
		}) : (o = o * 7 / 30, o < 12 ? Math.floor(o) === 1 ? e("One month ago") : e("{{amount}} months ago", {
			amount: Math.floor(o)
		}) : (o = o * 30 / 365, Math.floor(o) === 1 ? e("One year ago") : e("{{amount}} years ago", {
			amount: Math.floor(o)
		}))))))
	}

	function n6(t) {
		const e = new Date(t),
			n = e.toLocaleDateString("en-us", {
				day: "2-digit"
			}),
			i = e.toLocaleString("en-us", {
				month: "short"
			}),
			o = e.getFullYear(),
			r = (e.getHours() < 10 ? "0" : "") + e.getHours(),
			a = (e.getMinutes() < 10 ? "0" : "") + e.getMinutes();
		return `${n} ${i} ${o} ${r}:${a}`
	}

	function yl(t) {
		if (!t) return "";
		const e = t.split(" ");
		return e.length === 0 ? "" : e.length === 1 ? e[0].substring(0, 1).toLocaleUpperCase() : e[0].substring(0, 1).toLocaleUpperCase() + e[e.length - 1].substring(0, 1).toLocaleUpperCase()
	}

	function Vr() {
		return Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) < 480
	}

	function i6(t) {
		return t.status === "published"
	}
	const o6 = t => {
			let e = 0,
				n = t.ownerDocument.defaultView;
			for (; n && n !== window;) {
				const o = n.parent;
				for (let r = 0; r < o.frames.length; r++)
					if (o.frames[r] === n) {
						for (const a of o.document.getElementsByTagName("iframe"))
							if (a.contentWindow === n) {
								const s = a.getBoundingClientRect();
								e += s.top + n.pageYOffset
							} n = o;
						break
					}
			}
			return t.getBoundingClientRect().top + window.pageYOffset + e
		},
		xm = t => {
			const e = t.offsetHeight,
				n = o6(t),
				i = n + e,
				o = 64,
				r = window.innerHeight,
				a = window.scrollY,
				s = a + r;
			if (n - o < a || i + o > s) {
				const l = (n + i) / 2;
				window.scrollTo({
					top: l - r / 2,
					left: 0,
					behavior: "smooth"
				})
			}
		};

	function Em() {
		return "w-9 h-9 sm:w-[40px] sm:h-[40px]"
	}
	const r6 = () => {
			const t = Em();
			return k.jsx("figure", {
				className: `relative ${t}`,
				children: k.jsx("div", {
					className: `flex items-center justify-center rounded-full bg-[rgba(0,0,0,0.085)] dark:bg-[rgba(255,255,255,0.15)] ${t}`,
					children: k.jsx(Cm, {
						className: "stroke-white opacity-80"
					})
				})
			})
		},
		Tm = ({
			comment: t
		}) => {
			var y;
			const {
				member: e,
				avatarSaturation: n,
				t: i
			} = V(), o = Em(), r = (e == null ? void 0 : e.name) ?? ((y = t == null ? void 0 : t.member) == null ? void 0 : y.name), a = h => {
				let g = 0;
				for (let b = 0; b < h.length; b++) g = h.charCodeAt(b) + ((g << 5) - g);
				return g = Math.abs(g), g
			}, s = (h, g, b) => Math.floor(h % (b - g) + g), l = () => {
				const h = t ? t.member : e;
				if (!h || !h.name) return [0, 0, 10];
				const g = n === void 0 || isNaN(n) ? 50 : n,
					b = [0, 360],
					v = Math.round(g / (100 / 30)) + 30,
					x = [v - 20, v],
					S = a(h.name),
					E = s(S, b[0], b[1]),
					T = s(S, x[0], x[1]);
				return [E, g, T]
			}, u = h => `hsl(${h[0]}, ${h[1]}%, ${h[2]}%)`, c = () => {
				if (t && !t.member) return yl(i("Deleted member"));
				const h = t ? t.member : e;
				return !h || !h.name ? yl(i("Anonymous")) : yl(h.name)
			}, m = t ? t.member : e, p = {
				background: u(l())
			}, f = k.jsxs(k.Fragment, {
				children: [r ? k.jsx("div", {
					className: `flex items-center justify-center rounded-full ${o}`,
					"data-testid": "avatar-background",
					style: p,
					children: k.jsx("p", {
						className: "font-sans text-lg font-semibold text-white",
						children: c()
					})
				}) : k.jsx("div", {
					className: `flex items-center justify-center rounded-full bg-neutral-900 dark:bg-[rgba(255,255,255,0.7)] ${o}`,
					"data-testid": "avatar-background",
					children: k.jsx(Cm, {
						className: "stroke-white dark:stroke-[rgba(0,0,0,0.6)]"
					})
				}), m && k.jsx("img", {
					alt: "Avatar",
					className: `absolute left-0 top-0 rounded-full ${o}`,
					src: m.avatar_image
				})]
			});
			return k.jsx("figure", {
				className: `relative ${o}`,
				children: f
			})
		},
		a6 = t => C.createElement("svg", {
			xmlns: "http://www.w3.org/2000/svg",
			height: 24,
			width: 24,
			viewBox: "0 0 24 24",
			...t
		}, C.createElement("g", {
			strokeLinecap: "round",
			strokeWidth: 2,
			fill: "none",
			strokeLinejoin: "round",
			className: "nc-icon-wrapper"
		}, C.createElement("polygon", {
			points: "7 21 2 22 3 17 18 2 22 6 7 21"
		})));

	function ge(t) {
		this.content = t
	}
	ge.prototype = {
		constructor: ge,
		find: function(t) {
			for (var e = 0; e < this.content.length; e += 2)
				if (this.content[e] === t) return e;
			return -1
		},
		get: function(t) {
			var e = this.find(t);
			return e == -1 ? void 0 : this.content[e + 1]
		},
		update: function(t, e, n) {
			var i = n && n != t ? this.remove(n) : this,
				o = i.find(t),
				r = i.content.slice();
			return o == -1 ? r.push(n || t, e) : (r[o + 1] = e, n && (r[o] = n)), new ge(r)
		},
		remove: function(t) {
			var e = this.find(t);
			if (e == -1) return this;
			var n = this.content.slice();
			return n.splice(e, 2), new ge(n)
		},
		addToStart: function(t, e) {
			return new ge([t, e].concat(this.remove(t).content))
		},
		addToEnd: function(t, e) {
			var n = this.remove(t).content.slice();
			return n.push(t, e), new ge(n)
		},
		addBefore: function(t, e, n) {
			var i = this.remove(e),
				o = i.content.slice(),
				r = i.find(t);
			return o.splice(r == -1 ? o.length : r, 0, e, n), new ge(o)
		},
		forEach: function(t) {
			for (var e = 0; e < this.content.length; e += 2) t(this.content[e], this.content[e + 1])
		},
		prepend: function(t) {
			return t = ge.from(t), t.size ? new ge(t.content.concat(this.subtract(t).content)) : this
		},
		append: function(t) {
			return t = ge.from(t), t.size ? new ge(this.subtract(t).content.concat(t.content)) : this
		},
		subtract: function(t) {
			var e = this;
			t = ge.from(t);
			for (var n = 0; n < t.content.length; n += 2) e = e.remove(t.content[n]);
			return e
		},
		toObject: function() {
			var t = {};
			return this.forEach(function(e, n) {
				t[e] = n
			}), t
		},
		get size() {
			return this.content.length >> 1
		}
	}, ge.from = function(t) {
		if (t instanceof ge) return t;
		var e = [];
		if (t)
			for (var n in t) e.push(n, t[n]);
		return new ge(e)
	};

	function jm(t, e, n) {
		for (let i = 0;; i++) {
			if (i == t.childCount || i == e.childCount) return t.childCount == e.childCount ? null : n;
			let o = t.child(i),
				r = e.child(i);
			if (o == r) {
				n += o.nodeSize;
				continue
			}
			if (!o.sameMarkup(r)) return n;
			if (o.isText && o.text != r.text) {
				for (let a = 0; o.text[a] == r.text[a]; a++) n++;
				return n
			}
			if (o.content.size || r.content.size) {
				let a = jm(o.content, r.content, n + 1);
				if (a != null) return a
			}
			n += o.nodeSize
		}
	}

	function $m(t, e, n, i) {
		for (let o = t.childCount, r = e.childCount;;) {
			if (o == 0 || r == 0) return o == r ? null : {
				a: n,
				b: i
			};
			let a = t.child(--o),
				s = e.child(--r),
				l = a.nodeSize;
			if (a == s) {
				n -= l, i -= l;
				continue
			}
			if (!a.sameMarkup(s)) return {
				a: n,
				b: i
			};
			if (a.isText && a.text != s.text) {
				let u = 0,
					c = Math.min(a.text.length, s.text.length);
				for (; u < c && a.text[a.text.length - u - 1] == s.text[s.text.length - u - 1];) u++, n--, i--;
				return {
					a: n,
					b: i
				}
			}
			if (a.content.size || s.content.size) {
				let u = $m(a.content, s.content, n - 1, i - 1);
				if (u) return u
			}
			n -= l, i -= l
		}
	}
	class j {
		constructor(e, n) {
			if (this.content = e, this.size = n || 0, n == null)
				for (let i = 0; i < e.length; i++) this.size += e[i].nodeSize
		}
		nodesBetween(e, n, i, o = 0, r) {
			for (let a = 0, s = 0; s < n; a++) {
				let l = this.content[a],
					u = s + l.nodeSize;
				if (u > e && i(l, o + s, r || null, a) !== !1 && l.content.size) {
					let c = s + 1;
					l.nodesBetween(Math.max(0, e - c), Math.min(l.content.size, n - c), i, o + c)
				}
				s = u
			}
		}
		descendants(e) {
			this.nodesBetween(0, this.size, e)
		}
		textBetween(e, n, i, o) {
			let r = "",
				a = !0;
			return this.nodesBetween(e, n, (s, l) => {
				s.isText ? (r += s.text.slice(Math.max(e, l) - l, n - l), a = !i) : s.isLeaf ? (o ? r += typeof o == "function" ? o(s) : o : s.type.spec.leafText && (r += s.type.spec.leafText(s)), a = !i) : !a && s.isBlock && (r += i, a = !0)
			}, 0), r
		}
		append(e) {
			if (!e.size) return this;
			if (!this.size) return e;
			let n = this.lastChild,
				i = e.firstChild,
				o = this.content.slice(),
				r = 0;
			for (n.isText && n.sameMarkup(i) && (o[o.length - 1] = n.withText(n.text + i.text), r = 1); r < e.content.length; r++) o.push(e.content[r]);
			return new j(o, this.size + e.size)
		}
		cut(e, n = this.size) {
			if (e == 0 && n == this.size) return this;
			let i = [],
				o = 0;
			if (n > e)
				for (let r = 0, a = 0; a < n; r++) {
					let s = this.content[r],
						l = a + s.nodeSize;
					l > e && ((a < e || l > n) && (s.isText ? s = s.cut(Math.max(0, e - a), Math.min(s.text.length, n - a)) : s = s.cut(Math.max(0, e - a - 1), Math.min(s.content.size, n - a - 1))), i.push(s), o += s.nodeSize), a = l
				}
			return new j(i, o)
		}
		cutByIndex(e, n) {
			return e == n ? j.empty : e == 0 && n == this.content.length ? this : new j(this.content.slice(e, n))
		}
		replaceChild(e, n) {
			let i = this.content[e];
			if (i == n) return this;
			let o = this.content.slice(),
				r = this.size + n.nodeSize - i.nodeSize;
			return o[e] = n, new j(o, r)
		}
		addToStart(e) {
			return new j([e].concat(this.content), this.size + e.nodeSize)
		}
		addToEnd(e) {
			return new j(this.content.concat(e), this.size + e.nodeSize)
		}
		eq(e) {
			if (this.content.length != e.content.length) return !1;
			for (let n = 0; n < this.content.length; n++)
				if (!this.content[n].eq(e.content[n])) return !1;
			return !0
		}
		get firstChild() {
			return this.content.length ? this.content[0] : null
		}
		get lastChild() {
			return this.content.length ? this.content[this.content.length - 1] : null
		}
		get childCount() {
			return this.content.length
		}
		child(e) {
			let n = this.content[e];
			if (!n) throw new RangeError("Index " + e + " out of range for " + this);
			return n
		}
		maybeChild(e) {
			return this.content[e] || null
		}
		forEach(e) {
			for (let n = 0, i = 0; n < this.content.length; n++) {
				let o = this.content[n];
				e(o, i, n), i += o.nodeSize
			}
		}
		findDiffStart(e, n = 0) {
			return jm(this, e, n)
		}
		findDiffEnd(e, n = this.size, i = e.size) {
			return $m(this, e, n, i)
		}
		findIndex(e, n = -1) {
			if (e == 0) return Hr(0, e);
			if (e == this.size) return Hr(this.content.length, e);
			if (e > this.size || e < 0) throw new RangeError(`Position ${e} outside of fragment (${this})`);
			for (let i = 0, o = 0;; i++) {
				let r = this.child(i),
					a = o + r.nodeSize;
				if (a >= e) return a == e || n > 0 ? Hr(i + 1, a) : Hr(i, o);
				o = a
			}
		}
		toString() {
			return "<" + this.toStringInner() + ">"
		}
		toStringInner() {
			return this.content.join(", ")
		}
		toJSON() {
			return this.content.length ? this.content.map(e => e.toJSON()) : null
		}
		static fromJSON(e, n) {
			if (!n) return j.empty;
			if (!Array.isArray(n)) throw new RangeError("Invalid input for Fragment.fromJSON");
			return new j(n.map(e.nodeFromJSON))
		}
		static fromArray(e) {
			if (!e.length) return j.empty;
			let n, i = 0;
			for (let o = 0; o < e.length; o++) {
				let r = e[o];
				i += r.nodeSize, o && r.isText && e[o - 1].sameMarkup(r) ? (n || (n = e.slice(0, o)), n[n.length - 1] = r.withText(n[n.length - 1].text + r.text)) : n && n.push(r)
			}
			return new j(n || e, i)
		}
		static from(e) {
			if (!e) return j.empty;
			if (e instanceof j) return e;
			if (Array.isArray(e)) return this.fromArray(e);
			if (e.attrs) return new j([e], e.nodeSize);
			throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""))
		}
	}
	j.empty = new j([], 0);
	const bl = {
		index: 0,
		offset: 0
	};

	function Hr(t, e) {
		return bl.index = t, bl.offset = e, bl
	}

	function qr(t, e) {
		if (t === e) return !0;
		if (!(t && typeof t == "object") || !(e && typeof e == "object")) return !1;
		let n = Array.isArray(t);
		if (Array.isArray(e) != n) return !1;
		if (n) {
			if (t.length != e.length) return !1;
			for (let i = 0; i < t.length; i++)
				if (!qr(t[i], e[i])) return !1
		} else {
			for (let i in t)
				if (!(i in e) || !qr(t[i], e[i])) return !1;
			for (let i in e)
				if (!(i in t)) return !1
		}
		return !0
	}
	let J = class Gd {
		constructor(e, n) {
			this.type = e, this.attrs = n
		}
		addToSet(e) {
			let n, i = !1;
			for (let o = 0; o < e.length; o++) {
				let r = e[o];
				if (this.eq(r)) return e;
				if (this.type.excludes(r.type)) n || (n = e.slice(0, o));
				else {
					if (r.type.excludes(this.type)) return e;
					!i && r.type.rank > this.type.rank && (n || (n = e.slice(0, o)), n.push(this), i = !0), n && n.push(r)
				}
			}
			return n || (n = e.slice()), i || n.push(this), n
		}
		removeFromSet(e) {
			for (let n = 0; n < e.length; n++)
				if (this.eq(e[n])) return e.slice(0, n).concat(e.slice(n + 1));
			return e
		}
		isInSet(e) {
			for (let n = 0; n < e.length; n++)
				if (this.eq(e[n])) return !0;
			return !1
		}
		eq(e) {
			return this == e || this.type == e.type && qr(this.attrs, e.attrs)
		}
		toJSON() {
			let e = {
				type: this.type.name
			};
			for (let n in this.attrs) {
				e.attrs = this.attrs;
				break
			}
			return e
		}
		static fromJSON(e, n) {
			if (!n) throw new RangeError("Invalid input for Mark.fromJSON");
			let i = e.marks[n.type];
			if (!i) throw new RangeError(`There is no mark type ${n.type} in this schema`);
			return i.create(n.attrs)
		}
		static sameSet(e, n) {
			if (e == n) return !0;
			if (e.length != n.length) return !1;
			for (let i = 0; i < e.length; i++)
				if (!e[i].eq(n[i])) return !1;
			return !0
		}
		static setFrom(e) {
			if (!e || Array.isArray(e) && e.length == 0) return Gd.none;
			if (e instanceof Gd) return [e];
			let n = e.slice();
			return n.sort((i, o) => i.type.rank - o.type.rank), n
		}
	};
	J.none = [];
	class Wr extends Error {}
	class P {
		constructor(e, n, i) {
			this.content = e, this.openStart = n, this.openEnd = i
		}
		get size() {
			return this.content.size - this.openStart - this.openEnd
		}
		insertAt(e, n) {
			let i = Nm(this.content, e + this.openStart, n);
			return i && new P(i, this.openStart, this.openEnd)
		}
		removeBetween(e, n) {
			return new P(Am(this.content, e + this.openStart, n + this.openStart), this.openStart, this.openEnd)
		}
		eq(e) {
			return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd
		}
		toString() {
			return this.content + "(" + this.openStart + "," + this.openEnd + ")"
		}
		toJSON() {
			if (!this.content.size) return null;
			let e = {
				content: this.content.toJSON()
			};
			return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e
		}
		static fromJSON(e, n) {
			if (!n) return P.empty;
			let i = n.openStart || 0,
				o = n.openEnd || 0;
			if (typeof i != "number" || typeof o != "number") throw new RangeError("Invalid input for Slice.fromJSON");
			return new P(j.fromJSON(e, n.content), i, o)
		}
		static maxOpen(e, n = !0) {
			let i = 0,
				o = 0;
			for (let r = e.firstChild; r && !r.isLeaf && (n || !r.type.spec.isolating); r = r.firstChild) i++;
			for (let r = e.lastChild; r && !r.isLeaf && (n || !r.type.spec.isolating); r = r.lastChild) o++;
			return new P(e, i, o)
		}
	}
	P.empty = new P(j.empty, 0, 0);

	function Am(t, e, n) {
		let {
			index: i,
			offset: o
		} = t.findIndex(e), r = t.maybeChild(i), {
			index: a,
			offset: s
		} = t.findIndex(n);
		if (o == e || r.isText) {
			if (s != n && !t.child(a).isText) throw new RangeError("Removing non-flat range");
			return t.cut(0, e).append(t.cut(n))
		}
		if (i != a) throw new RangeError("Removing non-flat range");
		return t.replaceChild(i, r.copy(Am(r.content, e - o - 1, n - o - 1)))
	}

	function Nm(t, e, n, i) {
		let {
			index: o,
			offset: r
		} = t.findIndex(e), a = t.maybeChild(o);
		if (r == e || a.isText) return i && !i.canReplace(o, o, n) ? null : t.cut(0, e).append(n).append(t.cut(e));
		let s = Nm(a.content, e - r - 1, n);
		return s && t.replaceChild(o, a.copy(s))
	}

	function s6(t, e, n) {
		if (n.openStart > t.depth) throw new Wr("Inserted content deeper than insertion position");
		if (t.depth - n.openStart != e.depth - n.openEnd) throw new Wr("Inconsistent open depths");
		return Mm(t, e, n, 0)
	}

	function Mm(t, e, n, i) {
		let o = t.index(i),
			r = t.node(i);
		if (o == e.index(i) && i < t.depth - n.openStart) {
			let a = Mm(t, e, n, i + 1);
			return r.copy(r.content.replaceChild(o, a))
		} else if (n.content.size)
			if (!n.openStart && !n.openEnd && t.depth == i && e.depth == i) {
				let a = t.parent,
					s = a.content;
				return zn(a, s.cut(0, t.parentOffset).append(n.content).append(s.cut(e.parentOffset)))
			} else {
				let {
					start: a,
					end: s
				} = l6(n, t);
				return zn(r, _m(t, a, s, e, i))
			}
		else return zn(r, Kr(t, e, i))
	}

	function Pm(t, e) {
		if (!e.type.compatibleContent(t.type)) throw new Wr("Cannot join " + e.type.name + " onto " + t.type.name)
	}

	function kl(t, e, n) {
		let i = t.node(n);
		return Pm(i, e.node(n)), i
	}

	function _n(t, e) {
		let n = e.length - 1;
		n >= 0 && t.isText && t.sameMarkup(e[n]) ? e[n] = t.withText(e[n].text + t.text) : e.push(t)
	}

	function bo(t, e, n, i) {
		let o = (e || t).node(n),
			r = 0,
			a = e ? e.index(n) : o.childCount;
		t && (r = t.index(n), t.depth > n ? r++ : t.textOffset && (_n(t.nodeAfter, i), r++));
		for (let s = r; s < a; s++) _n(o.child(s), i);
		e && e.depth == n && e.textOffset && _n(e.nodeBefore, i)
	}

	function zn(t, e) {
		return t.type.checkContent(e), t.copy(e)
	}

	function _m(t, e, n, i, o) {
		let r = t.depth > o && kl(t, e, o + 1),
			a = i.depth > o && kl(n, i, o + 1),
			s = [];
		return bo(null, t, o, s), r && a && e.index(o) == n.index(o) ? (Pm(r, a), _n(zn(r, _m(t, e, n, i, o + 1)), s)) : (r && _n(zn(r, Kr(t, e, o + 1)), s), bo(e, n, o, s), a && _n(zn(a, Kr(n, i, o + 1)), s)), bo(i, null, o, s), new j(s)
	}

	function Kr(t, e, n) {
		let i = [];
		if (bo(null, t, n, i), t.depth > n) {
			let o = kl(t, e, n + 1);
			_n(zn(o, Kr(t, e, n + 1)), i)
		}
		return bo(e, null, n, i), new j(i)
	}

	function l6(t, e) {
		let n = e.depth - t.openStart,
			o = e.node(n).copy(t.content);
		for (let r = n - 1; r >= 0; r--) o = e.node(r).copy(j.from(o));
		return {
			start: o.resolveNoCache(t.openStart + n),
			end: o.resolveNoCache(o.content.size - t.openEnd - n)
		}
	}
	class ko {
		constructor(e, n, i) {
			this.pos = e, this.path = n, this.parentOffset = i, this.depth = n.length / 3 - 1
		}
		resolveDepth(e) {
			return e == null ? this.depth : e < 0 ? this.depth + e : e
		}
		get parent() {
			return this.node(this.depth)
		}
		get doc() {
			return this.node(0)
		}
		node(e) {
			return this.path[this.resolveDepth(e) * 3]
		}
		index(e) {
			return this.path[this.resolveDepth(e) * 3 + 1]
		}
		indexAfter(e) {
			return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1)
		}
		start(e) {
			return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1
		}
		end(e) {
			return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size
		}
		before(e) {
			if (e = this.resolveDepth(e), !e) throw new RangeError("There is no position before the top-level node");
			return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1]
		}
		after(e) {
			if (e = this.resolveDepth(e), !e) throw new RangeError("There is no position after the top-level node");
			return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize
		}
		get textOffset() {
			return this.pos - this.path[this.path.length - 1]
		}
		get nodeAfter() {
			let e = this.parent,
				n = this.index(this.depth);
			if (n == e.childCount) return null;
			let i = this.pos - this.path[this.path.length - 1],
				o = e.child(n);
			return i ? e.child(n).cut(i) : o
		}
		get nodeBefore() {
			let e = this.index(this.depth),
				n = this.pos - this.path[this.path.length - 1];
			return n ? this.parent.child(e).cut(0, n) : e == 0 ? null : this.parent.child(e - 1)
		}
		posAtIndex(e, n) {
			n = this.resolveDepth(n);
			let i = this.path[n * 3],
				o = n == 0 ? 0 : this.path[n * 3 - 1] + 1;
			for (let r = 0; r < e; r++) o += i.child(r).nodeSize;
			return o
		}
		marks() {
			let e = this.parent,
				n = this.index();
			if (e.content.size == 0) return J.none;
			if (this.textOffset) return e.child(n).marks;
			let i = e.maybeChild(n - 1),
				o = e.maybeChild(n);
			if (!i) {
				let s = i;
				i = o, o = s
			}
			let r = i.marks;
			for (var a = 0; a < r.length; a++) r[a].type.spec.inclusive === !1 && (!o || !r[a].isInSet(o.marks)) && (r = r[a--].removeFromSet(r));
			return r
		}
		marksAcross(e) {
			let n = this.parent.maybeChild(this.index());
			if (!n || !n.isInline) return null;
			let i = n.marks,
				o = e.parent.maybeChild(e.index());
			for (var r = 0; r < i.length; r++) i[r].type.spec.inclusive === !1 && (!o || !i[r].isInSet(o.marks)) && (i = i[r--].removeFromSet(i));
			return i
		}
		sharedDepth(e) {
			for (let n = this.depth; n > 0; n--)
				if (this.start(n) <= e && this.end(n) >= e) return n;
			return 0
		}
		blockRange(e = this, n) {
			if (e.pos < this.pos) return e.blockRange(this);
			for (let i = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); i >= 0; i--)
				if (e.pos <= this.end(i) && (!n || n(this.node(i)))) return new Jr(this, e, i);
			return null
		}
		sameParent(e) {
			return this.pos - this.parentOffset == e.pos - e.parentOffset
		}
		max(e) {
			return e.pos > this.pos ? e : this
		}
		min(e) {
			return e.pos < this.pos ? e : this
		}
		toString() {
			let e = "";
			for (let n = 1; n <= this.depth; n++) e += (e ? "/" : "") + this.node(n).type.name + "_" + this.index(n - 1);
			return e + ":" + this.parentOffset
		}
		static resolve(e, n) {
			if (!(n >= 0 && n <= e.content.size)) throw new RangeError("Position " + n + " out of range");
			let i = [],
				o = 0,
				r = n;
			for (let a = e;;) {
				let {
					index: s,
					offset: l
				} = a.content.findIndex(r), u = r - l;
				if (i.push(a, s, o + l), !u || (a = a.child(s), a.isText)) break;
				r = u - 1, o += l + 1
			}
			return new ko(n, i, r)
		}
		static resolveCached(e, n) {
			for (let o = 0; o < vl.length; o++) {
				let r = vl[o];
				if (r.pos == n && r.doc == e) return r
			}
			let i = vl[wl] = ko.resolve(e, n);
			return wl = (wl + 1) % u6, i
		}
	}
	let vl = [],
		wl = 0,
		u6 = 12;
	class Jr {
		constructor(e, n, i) {
			this.$from = e, this.$to = n, this.depth = i
		}
		get start() {
			return this.$from.before(this.depth + 1)
		}
		get end() {
			return this.$to.after(this.depth + 1)
		}
		get parent() {
			return this.$from.node(this.depth)
		}
		get startIndex() {
			return this.$from.index(this.depth)
		}
		get endIndex() {
			return this.$to.indexAfter(this.depth)
		}
	}
	const c6 = Object.create(null);
	let On = class Qd {
		constructor(e, n, i, o = J.none) {
			this.type = e, this.attrs = n, this.marks = o, this.content = i || j.empty
		}
		get nodeSize() {
			return this.isLeaf ? 1 : 2 + this.content.size
		}
		get childCount() {
			return this.content.childCount
		}
		child(e) {
			return this.content.child(e)
		}
		maybeChild(e) {
			return this.content.maybeChild(e)
		}
		forEach(e) {
			this.content.forEach(e)
		}
		nodesBetween(e, n, i, o = 0) {
			this.content.nodesBetween(e, n, i, o, this)
		}
		descendants(e) {
			this.nodesBetween(0, this.content.size, e)
		}
		get textContent() {
			return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "")
		}
		textBetween(e, n, i, o) {
			return this.content.textBetween(e, n, i, o)
		}
		get firstChild() {
			return this.content.firstChild
		}
		get lastChild() {
			return this.content.lastChild
		}
		eq(e) {
			return this == e || this.sameMarkup(e) && this.content.eq(e.content)
		}
		sameMarkup(e) {
			return this.hasMarkup(e.type, e.attrs, e.marks)
		}
		hasMarkup(e, n, i) {
			return this.type == e && qr(this.attrs, n || e.defaultAttrs || c6) && J.sameSet(this.marks, i || J.none)
		}
		copy(e = null) {
			return e == this.content ? this : new Qd(this.type, this.attrs, e, this.marks)
		}
		mark(e) {
			return e == this.marks ? this : new Qd(this.type, this.attrs, this.content, e)
		}
		cut(e, n = this.content.size) {
			return e == 0 && n == this.content.size ? this : this.copy(this.content.cut(e, n))
		}
		slice(e, n = this.content.size, i = !1) {
			if (e == n) return P.empty;
			let o = this.resolve(e),
				r = this.resolve(n),
				a = i ? 0 : o.sharedDepth(n),
				s = o.start(a),
				u = o.node(a).content.cut(o.pos - s, r.pos - s);
			return new P(u, o.depth - a, r.depth - a)
		}
		replace(e, n, i) {
			return s6(this.resolve(e), this.resolve(n), i)
		}
		nodeAt(e) {
			for (let n = this;;) {
				let {
					index: i,
					offset: o
				} = n.content.findIndex(e);
				if (n = n.maybeChild(i), !n) return null;
				if (o == e || n.isText) return n;
				e -= o + 1
			}
		}
		childAfter(e) {
			let {
				index: n,
				offset: i
			} = this.content.findIndex(e);
			return {
				node: this.content.maybeChild(n),
				index: n,
				offset: i
			}
		}
		childBefore(e) {
			if (e == 0) return {
				node: null,
				index: 0,
				offset: 0
			};
			let {
				index: n,
				offset: i
			} = this.content.findIndex(e);
			if (i < e) return {
				node: this.content.child(n),
				index: n,
				offset: i
			};
			let o = this.content.child(n - 1);
			return {
				node: o,
				index: n - 1,
				offset: i - o.nodeSize
			}
		}
		resolve(e) {
			return ko.resolveCached(this, e)
		}
		resolveNoCache(e) {
			return ko.resolve(this, e)
		}
		rangeHasMark(e, n, i) {
			let o = !1;
			return n > e && this.nodesBetween(e, n, r => (i.isInSet(r.marks) && (o = !0), !o)), o
		}
		get isBlock() {
			return this.type.isBlock
		}
		get isTextblock() {
			return this.type.isTextblock
		}
		get inlineContent() {
			return this.type.inlineContent
		}
		get isInline() {
			return this.type.isInline
		}
		get isText() {
			return this.type.isText
		}
		get isLeaf() {
			return this.type.isLeaf
		}
		get isAtom() {
			return this.type.isAtom
		}
		toString() {
			if (this.type.spec.toDebugString) return this.type.spec.toDebugString(this);
			let e = this.type.name;
			return this.content.size && (e += "(" + this.content.toStringInner() + ")"), zm(this.marks, e)
		}
		contentMatchAt(e) {
			let n = this.type.contentMatch.matchFragment(this.content, 0, e);
			if (!n) throw new Error("Called contentMatchAt on a node with invalid content");
			return n
		}
		canReplace(e, n, i = j.empty, o = 0, r = i.childCount) {
			let a = this.contentMatchAt(e).matchFragment(i, o, r),
				s = a && a.matchFragment(this.content, n);
			if (!s || !s.validEnd) return !1;
			for (let l = o; l < r; l++)
				if (!this.type.allowsMarks(i.child(l).marks)) return !1;
			return !0
		}
		canReplaceWith(e, n, i, o) {
			if (o && !this.type.allowsMarks(o)) return !1;
			let r = this.contentMatchAt(e).matchType(i),
				a = r && r.matchFragment(this.content, n);
			return a ? a.validEnd : !1
		}
		canAppend(e) {
			return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type)
		}
		check() {
			this.type.checkContent(this.content);
			let e = J.none;
			for (let n = 0; n < this.marks.length; n++) e = this.marks[n].addToSet(e);
			if (!J.sameSet(e, this.marks)) throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map(n=>n.type.name)}`);
			this.content.forEach(n => n.check())
		}
		toJSON() {
			let e = {
				type: this.type.name
			};
			for (let n in this.attrs) {
				e.attrs = this.attrs;
				break
			}
			return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map(n => n.toJSON())), e
		}
		static fromJSON(e, n) {
			if (!n) throw new RangeError("Invalid input for Node.fromJSON");
			let i = null;
			if (n.marks) {
				if (!Array.isArray(n.marks)) throw new RangeError("Invalid mark data for Node.fromJSON");
				i = n.marks.map(e.markFromJSON)
			}
			if (n.type == "text") {
				if (typeof n.text != "string") throw new RangeError("Invalid text node in JSON");
				return e.text(n.text, i)
			}
			let o = j.fromJSON(e, n.content);
			return e.nodeType(n.type).create(n.attrs, o, i)
		}
	};
	On.prototype.text = void 0;
	class Gr extends On {
		constructor(e, n, i, o) {
			if (super(e, n, null, o), !i) throw new RangeError("Empty text nodes are not allowed");
			this.text = i
		}
		toString() {
			return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : zm(this.marks, JSON.stringify(this.text))
		}
		get textContent() {
			return this.text
		}
		textBetween(e, n) {
			return this.text.slice(e, n)
		}
		get nodeSize() {
			return this.text.length
		}
		mark(e) {
			return e == this.marks ? this : new Gr(this.type, this.attrs, this.text, e)
		}
		withText(e) {
			return e == this.text ? this : new Gr(this.type, this.attrs, e, this.marks)
		}
		cut(e = 0, n = this.text.length) {
			return e == 0 && n == this.text.length ? this : this.withText(this.text.slice(e, n))
		}
		eq(e) {
			return this.sameMarkup(e) && this.text == e.text
		}
		toJSON() {
			let e = super.toJSON();
			return e.text = this.text, e
		}
	}

	function zm(t, e) {
		for (let n = t.length - 1; n >= 0; n--) e = t[n].type.name + "(" + e + ")";
		return e
	}
	class Dn {
		constructor(e) {
			this.validEnd = e, this.next = [], this.wrapCache = []
		}
		static parse(e, n) {
			let i = new d6(e, n);
			if (i.next == null) return Dn.empty;
			let o = Om(i);
			i.next && i.err("Unexpected trailing text");
			let r = b6(y6(o));
			return k6(r, i), r
		}
		matchType(e) {
			for (let n = 0; n < this.next.length; n++)
				if (this.next[n].type == e) return this.next[n].next;
			return null
		}
		matchFragment(e, n = 0, i = e.childCount) {
			let o = this;
			for (let r = n; o && r < i; r++) o = o.matchType(e.child(r).type);
			return o
		}
		get inlineContent() {
			return this.next.length != 0 && this.next[0].type.isInline
		}
		get defaultType() {
			for (let e = 0; e < this.next.length; e++) {
				let {
					type: n
				} = this.next[e];
				if (!(n.isText || n.hasRequiredAttrs())) return n
			}
			return null
		}
		compatible(e) {
			for (let n = 0; n < this.next.length; n++)
				for (let i = 0; i < e.next.length; i++)
					if (this.next[n].type == e.next[i].type) return !0;
			return !1
		}
		fillBefore(e, n = !1, i = 0) {
			let o = [this];

			function r(a, s) {
				let l = a.matchFragment(e, i);
				if (l && (!n || l.validEnd)) return j.from(s.map(u => u.createAndFill()));
				for (let u = 0; u < a.next.length; u++) {
					let {
						type: c,
						next: m
					} = a.next[u];
					if (!(c.isText || c.hasRequiredAttrs()) && o.indexOf(m) == -1) {
						o.push(m);
						let d = r(m, s.concat(c));
						if (d) return d
					}
				}
				return null
			}
			return r(this, [])
		}
		findWrapping(e) {
			for (let i = 0; i < this.wrapCache.length; i += 2)
				if (this.wrapCache[i] == e) return this.wrapCache[i + 1];
			let n = this.computeWrapping(e);
			return this.wrapCache.push(e, n), n
		}
		computeWrapping(e) {
			let n = Object.create(null),
				i = [{
					match: this,
					type: null,
					via: null
				}];
			for (; i.length;) {
				let o = i.shift(),
					r = o.match;
				if (r.matchType(e)) {
					let a = [];
					for (let s = o; s.type; s = s.via) a.push(s.type);
					return a.reverse()
				}
				for (let a = 0; a < r.next.length; a++) {
					let {
						type: s,
						next: l
					} = r.next[a];
					!s.isLeaf && !s.hasRequiredAttrs() && !(s.name in n) && (!o.type || l.validEnd) && (i.push({
						match: s.contentMatch,
						type: s,
						via: o
					}), n[s.name] = !0)
				}
			}
			return null
		}
		get edgeCount() {
			return this.next.length
		}
		edge(e) {
			if (e >= this.next.length) throw new RangeError(`There's no ${e}th edge in this content match`);
			return this.next[e]
		}
		toString() {
			let e = [];

			function n(i) {
				e.push(i);
				for (let o = 0; o < i.next.length; o++) e.indexOf(i.next[o].next) == -1 && n(i.next[o].next)
			}
			return n(this), e.map((i, o) => {
				let r = o + (i.validEnd ? "*" : " ") + " ";
				for (let a = 0; a < i.next.length; a++) r += (a ? ", " : "") + i.next[a].type.name + "->" + e.indexOf(i.next[a].next);
				return r
			}).join(`
`)
		}
	}
	Dn.empty = new Dn(!0);
	class d6 {
		constructor(e, n) {
			this.string = e, this.nodeTypes = n, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift()
		}
		get next() {
			return this.tokens[this.pos]
		}
		eat(e) {
			return this.next == e && (this.pos++ || !0)
		}
		err(e) {
			throw new SyntaxError(e + " (in content expression '" + this.string + "')")
		}
	}

	function Om(t) {
		let e = [];
		do e.push(m6(t)); while (t.eat("|"));
		return e.length == 1 ? e[0] : {
			type: "choice",
			exprs: e
		}
	}

	function m6(t) {
		let e = [];
		do e.push(p6(t)); while (t.next && t.next != ")" && t.next != "|");
		return e.length == 1 ? e[0] : {
			type: "seq",
			exprs: e
		}
	}

	function p6(t) {
		let e = g6(t);
		for (;;)
			if (t.eat("+")) e = {
				type: "plus",
				expr: e
			};
			else if (t.eat("*")) e = {
			type: "star",
			expr: e
		};
		else if (t.eat("?")) e = {
			type: "opt",
			expr: e
		};
		else if (t.eat("{")) e = f6(t, e);
		else break;
		return e
	}

	function Dm(t) {
		/\D/.test(t.next) && t.err("Expected number, got '" + t.next + "'");
		let e = Number(t.next);
		return t.pos++, e
	}

	function f6(t, e) {
		let n = Dm(t),
			i = n;
		return t.eat(",") && (t.next != "}" ? i = Dm(t) : i = -1), t.eat("}") || t.err("Unclosed braced range"), {
			type: "range",
			min: n,
			max: i,
			expr: e
		}
	}

	function h6(t, e) {
		let n = t.nodeTypes,
			i = n[e];
		if (i) return [i];
		let o = [];
		for (let r in n) {
			let a = n[r];
			a.groups.indexOf(e) > -1 && o.push(a)
		}
		return o.length == 0 && t.err("No node type or group '" + e + "' found"), o
	}

	function g6(t) {
		if (t.eat("(")) {
			let e = Om(t);
			return t.eat(")") || t.err("Missing closing paren"), e
		} else if (/\W/.test(t.next)) t.err("Unexpected token '" + t.next + "'");
		else {
			let e = h6(t, t.next).map(n => (t.inline == null ? t.inline = n.isInline : t.inline != n.isInline && t.err("Mixing inline and block content"), {
				type: "name",
				value: n
			}));
			return t.pos++, e.length == 1 ? e[0] : {
				type: "choice",
				exprs: e
			}
		}
	}

	function y6(t) {
		let e = [
			[]
		];
		return o(r(t, 0), n()), e;

		function n() {
			return e.push([]) - 1
		}

		function i(a, s, l) {
			let u = {
				term: l,
				to: s
			};
			return e[a].push(u), u
		}

		function o(a, s) {
			a.forEach(l => l.to = s)
		}

		function r(a, s) {
			if (a.type == "choice") return a.exprs.reduce((l, u) => l.concat(r(u, s)), []);
			if (a.type == "seq")
				for (let l = 0;; l++) {
					let u = r(a.exprs[l], s);
					if (l == a.exprs.length - 1) return u;
					o(u, s = n())
				} else if (a.type == "star") {
					let l = n();
					return i(s, l), o(r(a.expr, l), l), [i(l)]
				} else if (a.type == "plus") {
				let l = n();
				return o(r(a.expr, s), l), o(r(a.expr, l), l), [i(l)]
			} else {
				if (a.type == "opt") return [i(s)].concat(r(a.expr, s));
				if (a.type == "range") {
					let l = s;
					for (let u = 0; u < a.min; u++) {
						let c = n();
						o(r(a.expr, l), c), l = c
					}
					if (a.max == -1) o(r(a.expr, l), l);
					else
						for (let u = a.min; u < a.max; u++) {
							let c = n();
							i(l, c), o(r(a.expr, l), c), l = c
						}
					return [i(l)]
				} else {
					if (a.type == "name") return [i(s, void 0, a.value)];
					throw new Error("Unknown expr type")
				}
			}
		}
	}

	function Im(t, e) {
		return e - t
	}

	function Rm(t, e) {
		let n = [];
		return i(e), n.sort(Im);

		function i(o) {
			let r = t[o];
			if (r.length == 1 && !r[0].term) return i(r[0].to);
			n.push(o);
			for (let a = 0; a < r.length; a++) {
				let {
					term: s,
					to: l
				} = r[a];
				!s && n.indexOf(l) == -1 && i(l)
			}
		}
	}

	function b6(t) {
		let e = Object.create(null);
		return n(Rm(t, 0));

		function n(i) {
			let o = [];
			i.forEach(a => {
				t[a].forEach(({
					term: s,
					to: l
				}) => {
					if (!s) return;
					let u;
					for (let c = 0; c < o.length; c++) o[c][0] == s && (u = o[c][1]);
					Rm(t, l).forEach(c => {
						u || o.push([s, u = []]), u.indexOf(c) == -1 && u.push(c)
					})
				})
			});
			let r = e[i.join(",")] = new Dn(i.indexOf(t.length - 1) > -1);
			for (let a = 0; a < o.length; a++) {
				let s = o[a][1].sort(Im);
				r.next.push({
					type: o[a][0],
					next: e[s.join(",")] || n(s)
				})
			}
			return r
		}
	}

	function k6(t, e) {
		for (let n = 0, i = [t]; n < i.length; n++) {
			let o = i[n],
				r = !o.validEnd,
				a = [];
			for (let s = 0; s < o.next.length; s++) {
				let {
					type: l,
					next: u
				} = o.next[s];
				a.push(l.name), r && !(l.isText || l.hasRequiredAttrs()) && (r = !1), i.indexOf(u) == -1 && i.push(u)
			}
			r && e.err("Only non-generatable nodes (" + a.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)")
		}
	}

	function Ym(t) {
		let e = Object.create(null);
		for (let n in t) {
			let i = t[n];
			if (!i.hasDefault) return null;
			e[n] = i.default
		}
		return e
	}

	function Lm(t, e) {
		let n = Object.create(null);
		for (let i in t) {
			let o = e && e[i];
			if (o === void 0) {
				let r = t[i];
				if (r.hasDefault) o = r.default;
				else throw new RangeError("No value supplied for attribute " + i)
			}
			n[i] = o
		}
		return n
	}

	function Fm(t) {
		let e = Object.create(null);
		if (t)
			for (let n in t) e[n] = new v6(t[n]);
		return e
	}
	let Bm = class Oq {
		constructor(e, n, i) {
			this.name = e, this.schema = n, this.spec = i, this.markSet = null, this.groups = i.group ? i.group.split(" ") : [], this.attrs = Fm(i.attrs), this.defaultAttrs = Ym(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(i.inline || e == "text"), this.isText = e == "text"
		}
		get isInline() {
			return !this.isBlock
		}
		get isTextblock() {
			return this.isBlock && this.inlineContent
		}
		get isLeaf() {
			return this.contentMatch == Dn.empty
		}
		get isAtom() {
			return this.isLeaf || !!this.spec.atom
		}
		get whitespace() {
			return this.spec.whitespace || (this.spec.code ? "pre" : "normal")
		}
		hasRequiredAttrs() {
			for (let e in this.attrs)
				if (this.attrs[e].isRequired) return !0;
			return !1
		}
		compatibleContent(e) {
			return this == e || this.contentMatch.compatible(e.contentMatch)
		}
		computeAttrs(e) {
			return !e && this.defaultAttrs ? this.defaultAttrs : Lm(this.attrs, e)
		}
		create(e = null, n, i) {
			if (this.isText) throw new Error("NodeType.create can't construct text nodes");
			return new On(this, this.computeAttrs(e), j.from(n), J.setFrom(i))
		}
		createChecked(e = null, n, i) {
			return n = j.from(n), this.checkContent(n), new On(this, this.computeAttrs(e), n, J.setFrom(i))
		}
		createAndFill(e = null, n, i) {
			if (e = this.computeAttrs(e), n = j.from(n), n.size) {
				let a = this.contentMatch.fillBefore(n);
				if (!a) return null;
				n = a.append(n)
			}
			let o = this.contentMatch.matchFragment(n),
				r = o && o.fillBefore(j.empty, !0);
			return r ? new On(this, e, n.append(r), J.setFrom(i)) : null
		}
		validContent(e) {
			let n = this.contentMatch.matchFragment(e);
			if (!n || !n.validEnd) return !1;
			for (let i = 0; i < e.childCount; i++)
				if (!this.allowsMarks(e.child(i).marks)) return !1;
			return !0
		}
		checkContent(e) {
			if (!this.validContent(e)) throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0,50)}`)
		}
		allowsMarkType(e) {
			return this.markSet == null || this.markSet.indexOf(e) > -1
		}
		allowsMarks(e) {
			if (this.markSet == null) return !0;
			for (let n = 0; n < e.length; n++)
				if (!this.allowsMarkType(e[n].type)) return !1;
			return !0
		}
		allowedMarks(e) {
			if (this.markSet == null) return e;
			let n;
			for (let i = 0; i < e.length; i++) this.allowsMarkType(e[i].type) ? n && n.push(e[i]) : n || (n = e.slice(0, i));
			return n ? n.length ? n : J.none : e
		}
		static compile(e, n) {
			let i = Object.create(null);
			e.forEach((r, a) => i[r] = new Oq(r, n, a));
			let o = n.spec.topNode || "doc";
			if (!i[o]) throw new RangeError("Schema is missing its top node type ('" + o + "')");
			if (!i.text) throw new RangeError("Every schema needs a 'text' type");
			for (let r in i.text.attrs) throw new RangeError("The text node type should not have attributes");
			return i
		}
	};
	class v6 {
		constructor(e) {
			this.hasDefault = Object.prototype.hasOwnProperty.call(e, "default"), this.default = e.default
		}
		get isRequired() {
			return !this.hasDefault
		}
	}
	class Qr {
		constructor(e, n, i, o) {
			this.name = e, this.rank = n, this.schema = i, this.spec = o, this.attrs = Fm(o.attrs), this.excluded = null;
			let r = Ym(this.attrs);
			this.instance = r ? new J(this, r) : null
		}
		create(e = null) {
			return !e && this.instance ? this.instance : new J(this, Lm(this.attrs, e))
		}
		static compile(e, n) {
			let i = Object.create(null),
				o = 0;
			return e.forEach((r, a) => i[r] = new Qr(r, o++, n, a)), i
		}
		removeFromSet(e) {
			for (var n = 0; n < e.length; n++) e[n].type == this && (e = e.slice(0, n).concat(e.slice(n + 1)), n--);
			return e
		}
		isInSet(e) {
			for (let n = 0; n < e.length; n++)
				if (e[n].type == this) return e[n]
		}
		excludes(e) {
			return this.excluded.indexOf(e) > -1
		}
	}
	class w6 {
		constructor(e) {
			this.cached = Object.create(null);
			let n = this.spec = {};
			for (let o in e) n[o] = e[o];
			n.nodes = ge.from(e.nodes), n.marks = ge.from(e.marks || {}), this.nodes = Bm.compile(this.spec.nodes, this), this.marks = Qr.compile(this.spec.marks, this);
			let i = Object.create(null);
			for (let o in this.nodes) {
				if (o in this.marks) throw new RangeError(o + " can not be both a node and a mark");
				let r = this.nodes[o],
					a = r.spec.content || "",
					s = r.spec.marks;
				r.contentMatch = i[a] || (i[a] = Dn.parse(a, this.nodes)), r.inlineContent = r.contentMatch.inlineContent, r.markSet = s == "_" ? null : s ? Um(this, s.split(" ")) : s == "" || !r.inlineContent ? [] : null
			}
			for (let o in this.marks) {
				let r = this.marks[o],
					a = r.spec.excludes;
				r.excluded = a == null ? [r] : a == "" ? [] : Um(this, a.split(" "))
			}
			this.nodeFromJSON = this.nodeFromJSON.bind(this), this.markFromJSON = this.markFromJSON.bind(this), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = Object.create(null)
		}
		node(e, n = null, i, o) {
			if (typeof e == "string") e = this.nodeType(e);
			else if (e instanceof Bm) {
				if (e.schema != this) throw new RangeError("Node type from different schema used (" + e.name + ")")
			} else throw new RangeError("Invalid node type: " + e);
			return e.createChecked(n, i, o)
		}
		text(e, n) {
			let i = this.nodes.text;
			return new Gr(i, i.defaultAttrs, e, J.setFrom(n))
		}
		mark(e, n) {
			return typeof e == "string" && (e = this.marks[e]), e.create(n)
		}
		nodeFromJSON(e) {
			return On.fromJSON(this, e)
		}
		markFromJSON(e) {
			return J.fromJSON(this, e)
		}
		nodeType(e) {
			let n = this.nodes[e];
			if (!n) throw new RangeError("Unknown node type: " + e);
			return n
		}
	}

	function Um(t, e) {
		let n = [];
		for (let i = 0; i < e.length; i++) {
			let o = e[i],
				r = t.marks[o],
				a = r;
			if (r) n.push(r);
			else
				for (let s in t.marks) {
					let l = t.marks[s];
					(o == "_" || l.spec.group && l.spec.group.split(" ").indexOf(o) > -1) && n.push(a = l)
				}
			if (!a) throw new SyntaxError("Unknown mark type: '" + e[i] + "'")
		}
		return n
	}
	class hi {
		constructor(e, n) {
			this.schema = e, this.rules = n, this.tags = [], this.styles = [], n.forEach(i => {
				i.tag ? this.tags.push(i) : i.style && this.styles.push(i)
			}), this.normalizeLists = !this.tags.some(i => {
				if (!/^(ul|ol)\b/.test(i.tag) || !i.node) return !1;
				let o = e.nodes[i.node];
				return o.contentMatch.matchType(o)
			})
		}
		parse(e, n = {}) {
			let i = new Wm(this, n, !1);
			return i.addAll(e, n.from, n.to), i.finish()
		}
		parseSlice(e, n = {}) {
			let i = new Wm(this, n, !0);
			return i.addAll(e, n.from, n.to), P.maxOpen(i.finish())
		}
		matchTag(e, n, i) {
			for (let o = i ? this.tags.indexOf(i) + 1 : 0; o < this.tags.length; o++) {
				let r = this.tags[o];
				if (x6(e, r.tag) && (r.namespace === void 0 || e.namespaceURI == r.namespace) && (!r.context || n.matchesContext(r.context))) {
					if (r.getAttrs) {
						let a = r.getAttrs(e);
						if (a === !1) continue;
						r.attrs = a || void 0
					}
					return r
				}
			}
		}
		matchStyle(e, n, i, o) {
			for (let r = o ? this.styles.indexOf(o) + 1 : 0; r < this.styles.length; r++) {
				let a = this.styles[r],
					s = a.style;
				if (!(s.indexOf(e) != 0 || a.context && !i.matchesContext(a.context) || s.length > e.length && (s.charCodeAt(e.length) != 61 || s.slice(e.length + 1) != n))) {
					if (a.getAttrs) {
						let l = a.getAttrs(n);
						if (l === !1) continue;
						a.attrs = l || void 0
					}
					return a
				}
			}
		}
		static schemaRules(e) {
			let n = [];

			function i(o) {
				let r = o.priority == null ? 50 : o.priority,
					a = 0;
				for (; a < n.length; a++) {
					let s = n[a];
					if ((s.priority == null ? 50 : s.priority) < r) break
				}
				n.splice(a, 0, o)
			}
			for (let o in e.marks) {
				let r = e.marks[o].spec.parseDOM;
				r && r.forEach(a => {
					i(a = Km(a)), a.mark || a.ignore || a.clearMark || (a.mark = o)
				})
			}
			for (let o in e.nodes) {
				let r = e.nodes[o].spec.parseDOM;
				r && r.forEach(a => {
					i(a = Km(a)), a.node || a.ignore || a.mark || (a.node = o)
				})
			}
			return n
		}
		static fromSchema(e) {
			return e.cached.domParser || (e.cached.domParser = new hi(e, hi.schemaRules(e)))
		}
	}
	const Vm = {
			address: !0,
			article: !0,
			aside: !0,
			blockquote: !0,
			canvas: !0,
			dd: !0,
			div: !0,
			dl: !0,
			fieldset: !0,
			figcaption: !0,
			figure: !0,
			footer: !0,
			form: !0,
			h1: !0,
			h2: !0,
			h3: !0,
			h4: !0,
			h5: !0,
			h6: !0,
			header: !0,
			hgroup: !0,
			hr: !0,
			li: !0,
			noscript: !0,
			ol: !0,
			output: !0,
			p: !0,
			pre: !0,
			section: !0,
			table: !0,
			tfoot: !0,
			ul: !0
		},
		S6 = {
			head: !0,
			noscript: !0,
			object: !0,
			script: !0,
			style: !0,
			title: !0
		},
		Hm = {
			ol: !0,
			ul: !0
		},
		Xr = 1,
		Zr = 2,
		vo = 4;

	function qm(t, e, n) {
		return e != null ? (e ? Xr : 0) | (e === "full" ? Zr : 0) : t && t.whitespace == "pre" ? Xr | Zr : n & ~vo
	}
	class ea {
		constructor(e, n, i, o, r, a, s) {
			this.type = e, this.attrs = n, this.marks = i, this.pendingMarks = o, this.solid = r, this.options = s, this.content = [], this.activeMarks = J.none, this.stashMarks = [], this.match = a || (s & vo ? null : e.contentMatch)
		}
		findWrapping(e) {
			if (!this.match) {
				if (!this.type) return [];
				let n = this.type.contentMatch.fillBefore(j.from(e));
				if (n) this.match = this.type.contentMatch.matchFragment(n);
				else {
					let i = this.type.contentMatch,
						o;
					return (o = i.findWrapping(e.type)) ? (this.match = i, o) : null
				}
			}
			return this.match.findWrapping(e.type)
		}
		finish(e) {
			if (!(this.options & Xr)) {
				let i = this.content[this.content.length - 1],
					o;
				if (i && i.isText && (o = /[ \t\r\n\u000c]+$/.exec(i.text))) {
					let r = i;
					i.text.length == o[0].length ? this.content.pop() : this.content[this.content.length - 1] = r.withText(r.text.slice(0, r.text.length - o[0].length))
				}
			}
			let n = j.from(this.content);
			return !e && this.match && (n = n.append(this.match.fillBefore(j.empty, !0))), this.type ? this.type.create(this.attrs, n, this.marks) : n
		}
		popFromStashMark(e) {
			for (let n = this.stashMarks.length - 1; n >= 0; n--)
				if (e.eq(this.stashMarks[n])) return this.stashMarks.splice(n, 1)[0]
		}
		applyPending(e) {
			for (let n = 0, i = this.pendingMarks; n < i.length; n++) {
				let o = i[n];
				(this.type ? this.type.allowsMarkType(o.type) : T6(o.type, e)) && !o.isInSet(this.activeMarks) && (this.activeMarks = o.addToSet(this.activeMarks), this.pendingMarks = o.removeFromSet(this.pendingMarks))
			}
		}
		inlineContext(e) {
			return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !Vm.hasOwnProperty(e.parentNode.nodeName.toLowerCase())
		}
	}
	class Wm {
		constructor(e, n, i) {
			this.parser = e, this.options = n, this.isOpen = i, this.open = 0;
			let o = n.topNode,
				r, a = qm(null, n.preserveWhitespace, 0) | (i ? vo : 0);
			o ? r = new ea(o.type, o.attrs, J.none, J.none, !0, n.topMatch || o.type.contentMatch, a) : i ? r = new ea(null, null, J.none, J.none, !0, null, a) : r = new ea(e.schema.topNodeType, null, J.none, J.none, !0, null, a), this.nodes = [r], this.find = n.findPositions, this.needsBlock = !1
		}
		get top() {
			return this.nodes[this.open]
		}
		addDOM(e) {
			e.nodeType == 3 ? this.addTextNode(e) : e.nodeType == 1 && this.addElement(e)
		}
		withStyleRules(e, n) {
			let i = e.getAttribute("style");
			if (!i) return n();
			let o = this.readStyles(E6(i));
			if (!o) return;
			let [r, a] = o, s = this.top;
			for (let l = 0; l < a.length; l++) this.removePendingMark(a[l], s);
			for (let l = 0; l < r.length; l++) this.addPendingMark(r[l]);
			n();
			for (let l = 0; l < r.length; l++) this.removePendingMark(r[l], s);
			for (let l = 0; l < a.length; l++) this.addPendingMark(a[l])
		}
		addTextNode(e) {
			let n = e.nodeValue,
				i = this.top;
			if (i.options & Zr || i.inlineContext(e) || /[^ \t\r\n\u000c]/.test(n)) {
				if (i.options & Xr) i.options & Zr ? n = n.replace(/\r\n?/g, `
`) : n = n.replace(/\r?\n|\r/g, " ");
				else if (n = n.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(n) && this.open == this.nodes.length - 1) {
					let o = i.content[i.content.length - 1],
						r = e.previousSibling;
					(!o || r && r.nodeName == "BR" || o.isText && /[ \t\r\n\u000c]$/.test(o.text)) && (n = n.slice(1))
				}
				n && this.insertNode(this.parser.schema.text(n)), this.findInText(e)
			} else this.findInside(e)
		}
		addElement(e, n) {
			let i = e.nodeName.toLowerCase(),
				o;
			Hm.hasOwnProperty(i) && this.parser.normalizeLists && C6(e);
			let r = this.options.ruleFromNode && this.options.ruleFromNode(e) || (o = this.parser.matchTag(e, this, n));
			if (r ? r.ignore : S6.hasOwnProperty(i)) this.findInside(e), this.ignoreFallback(e);
			else if (!r || r.skip || r.closeParent) {
				r && r.closeParent ? this.open = Math.max(0, this.open - 1) : r && r.skip.nodeType && (e = r.skip);
				let a, s = this.top,
					l = this.needsBlock;
				if (Vm.hasOwnProperty(i)) s.content.length && s.content[0].isInline && this.open && (this.open--, s = this.top), a = !0, s.type || (this.needsBlock = !0);
				else if (!e.firstChild) {
					this.leafFallback(e);
					return
				}
				r && r.skip ? this.addAll(e) : this.withStyleRules(e, () => this.addAll(e)), a && this.sync(s), this.needsBlock = l
			} else this.withStyleRules(e, () => {
				this.addElementByRule(e, r, r.consuming === !1 ? o : void 0)
			})
		}
		leafFallback(e) {
			e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`))
		}
		ignoreFallback(e) {
			e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"))
		}
		readStyles(e) {
			let n = J.none,
				i = J.none;
			for (let o = 0; o < e.length; o += 2)
				for (let r = void 0;;) {
					let a = this.parser.matchStyle(e[o], e[o + 1], this, r);
					if (!a) break;
					if (a.ignore) return null;
					if (a.clearMark ? this.top.pendingMarks.concat(this.top.activeMarks).forEach(s => {
							a.clearMark(s) && (i = s.addToSet(i))
						}) : n = this.parser.schema.marks[a.mark].create(a.attrs).addToSet(n), a.consuming === !1) r = a;
					else break
				}
			return [n, i]
		}
		addElementByRule(e, n, i) {
			let o, r, a;
			n.node ? (r = this.parser.schema.nodes[n.node], r.isLeaf ? this.insertNode(r.create(n.attrs)) || this.leafFallback(e) : o = this.enter(r, n.attrs || null, n.preserveWhitespace)) : (a = this.parser.schema.marks[n.mark].create(n.attrs), this.addPendingMark(a));
			let s = this.top;
			if (r && r.isLeaf) this.findInside(e);
			else if (i) this.addElement(e, i);
			else if (n.getContent) this.findInside(e), n.getContent(e, this.parser.schema).forEach(l => this.insertNode(l));
			else {
				let l = e;
				typeof n.contentElement == "string" ? l = e.querySelector(n.contentElement) : typeof n.contentElement == "function" ? l = n.contentElement(e) : n.contentElement && (l = n.contentElement), this.findAround(e, l, !0), this.addAll(l)
			}
			o && this.sync(s) && this.open--, a && this.removePendingMark(a, s)
		}
		addAll(e, n, i) {
			let o = n || 0;
			for (let r = n ? e.childNodes[n] : e.firstChild, a = i == null ? null : e.childNodes[i]; r != a; r = r.nextSibling, ++o) this.findAtPoint(e, o), this.addDOM(r);
			this.findAtPoint(e, o)
		}
		findPlace(e) {
			let n, i;
			for (let o = this.open; o >= 0; o--) {
				let r = this.nodes[o],
					a = r.findWrapping(e);
				if (a && (!n || n.length > a.length) && (n = a, i = r, !a.length) || r.solid) break
			}
			if (!n) return !1;
			this.sync(i);
			for (let o = 0; o < n.length; o++) this.enterInner(n[o], null, !1);
			return !0
		}
		insertNode(e) {
			if (e.isInline && this.needsBlock && !this.top.type) {
				let n = this.textblockFromContext();
				n && this.enterInner(n)
			}
			if (this.findPlace(e)) {
				this.closeExtra();
				let n = this.top;
				n.applyPending(e.type), n.match && (n.match = n.match.matchType(e.type));
				let i = n.activeMarks;
				for (let o = 0; o < e.marks.length; o++)(!n.type || n.type.allowsMarkType(e.marks[o].type)) && (i = e.marks[o].addToSet(i));
				return n.content.push(e.mark(i)), !0
			}
			return !1
		}
		enter(e, n, i) {
			let o = this.findPlace(e.create(n));
			return o && this.enterInner(e, n, !0, i), o
		}
		enterInner(e, n = null, i = !1, o) {
			this.closeExtra();
			let r = this.top;
			r.applyPending(e), r.match = r.match && r.match.matchType(e);
			let a = qm(e, o, r.options);
			r.options & vo && r.content.length == 0 && (a |= vo), this.nodes.push(new ea(e, n, r.activeMarks, r.pendingMarks, i, null, a)), this.open++
		}
		closeExtra(e = !1) {
			let n = this.nodes.length - 1;
			if (n > this.open) {
				for (; n > this.open; n--) this.nodes[n - 1].content.push(this.nodes[n].finish(e));
				this.nodes.length = this.open + 1
			}
		}
		finish() {
			return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(this.isOpen || this.options.topOpen)
		}
		sync(e) {
			for (let n = this.open; n >= 0; n--)
				if (this.nodes[n] == e) return this.open = n, !0;
			return !1
		}
		get currentPos() {
			this.closeExtra();
			let e = 0;
			for (let n = this.open; n >= 0; n--) {
				let i = this.nodes[n].content;
				for (let o = i.length - 1; o >= 0; o--) e += i[o].nodeSize;
				n && e++
			}
			return e
		}
		findAtPoint(e, n) {
			if (this.find)
				for (let i = 0; i < this.find.length; i++) this.find[i].node == e && this.find[i].offset == n && (this.find[i].pos = this.currentPos)
		}
		findInside(e) {
			if (this.find)
				for (let n = 0; n < this.find.length; n++) this.find[n].pos == null && e.nodeType == 1 && e.contains(this.find[n].node) && (this.find[n].pos = this.currentPos)
		}
		findAround(e, n, i) {
			if (e != n && this.find)
				for (let o = 0; o < this.find.length; o++) this.find[o].pos == null && e.nodeType == 1 && e.contains(this.find[o].node) && n.compareDocumentPosition(this.find[o].node) & (i ? 2 : 4) && (this.find[o].pos = this.currentPos)
		}
		findInText(e) {
			if (this.find)
				for (let n = 0; n < this.find.length; n++) this.find[n].node == e && (this.find[n].pos = this.currentPos - (e.nodeValue.length - this.find[n].offset))
		}
		matchesContext(e) {
			if (e.indexOf("|") > -1) return e.split(/\s*\|\s*/).some(this.matchesContext, this);
			let n = e.split("/"),
				i = this.options.context,
				o = !this.isOpen && (!i || i.parent.type == this.nodes[0].type),
				r = -(i ? i.depth + 1 : 0) + (o ? 0 : 1),
				a = (s, l) => {
					for (; s >= 0; s--) {
						let u = n[s];
						if (u == "") {
							if (s == n.length - 1 || s == 0) continue;
							for (; l >= r; l--)
								if (a(s - 1, l)) return !0;
							return !1
						} else {
							let c = l > 0 || l == 0 && o ? this.nodes[l].type : i && l >= r ? i.node(l - r).type : null;
							if (!c || c.name != u && c.groups.indexOf(u) == -1) return !1;
							l--
						}
					}
					return !0
				};
			return a(n.length - 1, this.open)
		}
		textblockFromContext() {
			let e = this.options.context;
			if (e)
				for (let n = e.depth; n >= 0; n--) {
					let i = e.node(n).contentMatchAt(e.indexAfter(n)).defaultType;
					if (i && i.isTextblock && i.defaultAttrs) return i
				}
			for (let n in this.parser.schema.nodes) {
				let i = this.parser.schema.nodes[n];
				if (i.isTextblock && i.defaultAttrs) return i
			}
		}
		addPendingMark(e) {
			let n = j6(e, this.top.pendingMarks);
			n && this.top.stashMarks.push(n), this.top.pendingMarks = e.addToSet(this.top.pendingMarks)
		}
		removePendingMark(e, n) {
			for (let i = this.open; i >= 0; i--) {
				let o = this.nodes[i];
				if (o.pendingMarks.lastIndexOf(e) > -1) o.pendingMarks = e.removeFromSet(o.pendingMarks);
				else {
					o.activeMarks = e.removeFromSet(o.activeMarks);
					let a = o.popFromStashMark(e);
					a && o.type && o.type.allowsMarkType(a.type) && (o.activeMarks = a.addToSet(o.activeMarks))
				}
				if (o == n) break
			}
		}
	}

	function C6(t) {
		for (let e = t.firstChild, n = null; e; e = e.nextSibling) {
			let i = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
			i && Hm.hasOwnProperty(i) && n ? (n.appendChild(e), e = n) : i == "li" ? n = e : i && (n = null)
		}
	}

	function x6(t, e) {
		return (t.matches || t.msMatchesSelector || t.webkitMatchesSelector || t.mozMatchesSelector).call(t, e)
	}

	function E6(t) {
		let e = /\s*([\w-]+)\s*:\s*([^;]+)/g,
			n, i = [];
		for (; n = e.exec(t);) i.push(n[1], n[2].trim());
		return i
	}

	function Km(t) {
		let e = {};
		for (let n in t) e[n] = t[n];
		return e
	}

	function T6(t, e) {
		let n = e.schema.nodes;
		for (let i in n) {
			let o = n[i];
			if (!o.allowsMarkType(t)) continue;
			let r = [],
				a = s => {
					r.push(s);
					for (let l = 0; l < s.edgeCount; l++) {
						let {
							type: u,
							next: c
						} = s.edge(l);
						if (u == e || r.indexOf(c) < 0 && a(c)) return !0
					}
				};
			if (a(o.contentMatch)) return !0
		}
	}

	function j6(t, e) {
		for (let n = 0; n < e.length; n++)
			if (t.eq(e[n])) return e[n]
	}
	class gt {
		constructor(e, n) {
			this.nodes = e, this.marks = n
		}
		serializeFragment(e, n = {}, i) {
			i || (i = Sl(n).createDocumentFragment());
			let o = i,
				r = [];
			return e.forEach(a => {
				if (r.length || a.marks.length) {
					let s = 0,
						l = 0;
					for (; s < r.length && l < a.marks.length;) {
						let u = a.marks[l];
						if (!this.marks[u.type.name]) {
							l++;
							continue
						}
						if (!u.eq(r[s][0]) || u.type.spec.spanning === !1) break;
						s++, l++
					}
					for (; s < r.length;) o = r.pop()[1];
					for (; l < a.marks.length;) {
						let u = a.marks[l++],
							c = this.serializeMark(u, a.isInline, n);
						c && (r.push([u, o]), o.appendChild(c.dom), o = c.contentDOM || c.dom)
					}
				}
				o.appendChild(this.serializeNodeInner(a, n))
			}), i
		}
		serializeNodeInner(e, n) {
			let {
				dom: i,
				contentDOM: o
			} = gt.renderSpec(Sl(n), this.nodes[e.type.name](e));
			if (o) {
				if (e.isLeaf) throw new RangeError("Content hole not allowed in a leaf node spec");
				this.serializeFragment(e.content, n, o)
			}
			return i
		}
		serializeNode(e, n = {}) {
			let i = this.serializeNodeInner(e, n);
			for (let o = e.marks.length - 1; o >= 0; o--) {
				let r = this.serializeMark(e.marks[o], e.isInline, n);
				r && ((r.contentDOM || r.dom).appendChild(i), i = r.dom)
			}
			return i
		}
		serializeMark(e, n, i = {}) {
			let o = this.marks[e.type.name];
			return o && gt.renderSpec(Sl(i), o(e, n))
		}
		static renderSpec(e, n, i = null) {
			if (typeof n == "string") return {
				dom: e.createTextNode(n)
			};
			if (n.nodeType != null) return {
				dom: n
			};
			if (n.dom && n.dom.nodeType != null) return n;
			let o = n[0],
				r = o.indexOf(" ");
			r > 0 && (i = o.slice(0, r), o = o.slice(r + 1));
			let a, s = i ? e.createElementNS(i, o) : e.createElement(o),
				l = n[1],
				u = 1;
			if (l && typeof l == "object" && l.nodeType == null && !Array.isArray(l)) {
				u = 2;
				for (let c in l)
					if (l[c] != null) {
						let m = c.indexOf(" ");
						m > 0 ? s.setAttributeNS(c.slice(0, m), c.slice(m + 1), l[c]) : s.setAttribute(c, l[c])
					}
			}
			for (let c = u; c < n.length; c++) {
				let m = n[c];
				if (m === 0) {
					if (c < n.length - 1 || c > u) throw new RangeError("Content hole must be the only child of its parent node");
					return {
						dom: s,
						contentDOM: s
					}
				} else {
					let {
						dom: d,
						contentDOM: p
					} = gt.renderSpec(e, m, i);
					if (s.appendChild(d), p) {
						if (a) throw new RangeError("Multiple content holes");
						a = p
					}
				}
			}
			return {
				dom: s,
				contentDOM: a
			}
		}
		static fromSchema(e) {
			return e.cached.domSerializer || (e.cached.domSerializer = new gt(this.nodesFromSchema(e), this.marksFromSchema(e)))
		}
		static nodesFromSchema(e) {
			let n = Jm(e.nodes);
			return n.text || (n.text = i => i.text), n
		}
		static marksFromSchema(e) {
			return Jm(e.marks)
		}
	}

	function Jm(t) {
		let e = {};
		for (let n in t) {
			let i = t[n].spec.toDOM;
			i && (e[n] = i)
		}
		return e
	}

	function Sl(t) {
		return t.document || window.document
	}
	const Gm = 65535,
		Qm = Math.pow(2, 16);

	function $6(t, e) {
		return t + e * Qm
	}

	function Xm(t) {
		return t & Gm
	}

	function A6(t) {
		return (t - (t & Gm)) / Qm
	}
	const Zm = 1,
		ep = 2,
		ta = 4,
		tp = 8;
	class Cl {
		constructor(e, n, i) {
			this.pos = e, this.delInfo = n, this.recover = i
		}
		get deleted() {
			return (this.delInfo & tp) > 0
		}
		get deletedBefore() {
			return (this.delInfo & (Zm | ta)) > 0
		}
		get deletedAfter() {
			return (this.delInfo & (ep | ta)) > 0
		}
		get deletedAcross() {
			return (this.delInfo & ta) > 0
		}
	}
	class Ge {
		constructor(e, n = !1) {
			if (this.ranges = e, this.inverted = n, !e.length && Ge.empty) return Ge.empty
		}
		recover(e) {
			let n = 0,
				i = Xm(e);
			if (!this.inverted)
				for (let o = 0; o < i; o++) n += this.ranges[o * 3 + 2] - this.ranges[o * 3 + 1];
			return this.ranges[i * 3] + n + A6(e)
		}
		mapResult(e, n = 1) {
			return this._map(e, n, !1)
		}
		map(e, n = 1) {
			return this._map(e, n, !0)
		}
		_map(e, n, i) {
			let o = 0,
				r = this.inverted ? 2 : 1,
				a = this.inverted ? 1 : 2;
			for (let s = 0; s < this.ranges.length; s += 3) {
				let l = this.ranges[s] - (this.inverted ? o : 0);
				if (l > e) break;
				let u = this.ranges[s + r],
					c = this.ranges[s + a],
					m = l + u;
				if (e <= m) {
					let d = u ? e == l ? -1 : e == m ? 1 : n : n,
						p = l + o + (d < 0 ? 0 : c);
					if (i) return p;
					let f = e == (n < 0 ? l : m) ? null : $6(s / 3, e - l),
						y = e == l ? ep : e == m ? Zm : ta;
					return (n < 0 ? e != l : e != m) && (y |= tp), new Cl(p, y, f)
				}
				o += c - u
			}
			return i ? e + o : new Cl(e + o, 0, null)
		}
		touches(e, n) {
			let i = 0,
				o = Xm(n),
				r = this.inverted ? 2 : 1,
				a = this.inverted ? 1 : 2;
			for (let s = 0; s < this.ranges.length; s += 3) {
				let l = this.ranges[s] - (this.inverted ? i : 0);
				if (l > e) break;
				let u = this.ranges[s + r],
					c = l + u;
				if (e <= c && s == o * 3) return !0;
				i += this.ranges[s + a] - u
			}
			return !1
		}
		forEach(e) {
			let n = this.inverted ? 2 : 1,
				i = this.inverted ? 1 : 2;
			for (let o = 0, r = 0; o < this.ranges.length; o += 3) {
				let a = this.ranges[o],
					s = a - (this.inverted ? r : 0),
					l = a + (this.inverted ? 0 : r),
					u = this.ranges[o + n],
					c = this.ranges[o + i];
				e(s, s + u, l, l + c), r += c - u
			}
		}
		invert() {
			return new Ge(this.ranges, !this.inverted)
		}
		toString() {
			return (this.inverted ? "-" : "") + JSON.stringify(this.ranges)
		}
		static offset(e) {
			return e == 0 ? Ge.empty : new Ge(e < 0 ? [0, -e, 0] : [0, 0, e])
		}
	}
	Ge.empty = new Ge([]);
	class wo {
		constructor(e = [], n, i = 0, o = e.length) {
			this.maps = e, this.mirror = n, this.from = i, this.to = o
		}
		slice(e = 0, n = this.maps.length) {
			return new wo(this.maps, this.mirror, e, n)
		}
		copy() {
			return new wo(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)
		}
		appendMap(e, n) {
			this.to = this.maps.push(e), n != null && this.setMirror(this.maps.length - 1, n)
		}
		appendMapping(e) {
			for (let n = 0, i = this.maps.length; n < e.maps.length; n++) {
				let o = e.getMirror(n);
				this.appendMap(e.maps[n], o != null && o < n ? i + o : void 0)
			}
		}
		getMirror(e) {
			if (this.mirror) {
				for (let n = 0; n < this.mirror.length; n++)
					if (this.mirror[n] == e) return this.mirror[n + (n % 2 ? -1 : 1)]
			}
		}
		setMirror(e, n) {
			this.mirror || (this.mirror = []), this.mirror.push(e, n)
		}
		appendMappingInverted(e) {
			for (let n = e.maps.length - 1, i = this.maps.length + e.maps.length; n >= 0; n--) {
				let o = e.getMirror(n);
				this.appendMap(e.maps[n].invert(), o != null && o > n ? i - o - 1 : void 0)
			}
		}
		invert() {
			let e = new wo;
			return e.appendMappingInverted(this), e
		}
		map(e, n = 1) {
			if (this.mirror) return this._map(e, n, !0);
			for (let i = this.from; i < this.to; i++) e = this.maps[i].map(e, n);
			return e
		}
		mapResult(e, n = 1) {
			return this._map(e, n, !1)
		}
		_map(e, n, i) {
			let o = 0;
			for (let r = this.from; r < this.to; r++) {
				let a = this.maps[r],
					s = a.mapResult(e, n);
				if (s.recover != null) {
					let l = this.getMirror(r);
					if (l != null && l > r && l < this.to) {
						r = l, e = this.maps[l].recover(s.recover);
						continue
					}
				}
				o |= s.delInfo, e = s.pos
			}
			return i ? e : new Cl(e, o, null)
		}
	}
	const xl = Object.create(null);
	class Ye {
		getMap() {
			return Ge.empty
		}
		merge(e) {
			return null
		}
		static fromJSON(e, n) {
			if (!n || !n.stepType) throw new RangeError("Invalid input for Step.fromJSON");
			let i = xl[n.stepType];
			if (!i) throw new RangeError(`No step type ${n.stepType} defined`);
			return i.fromJSON(e, n)
		}
		static jsonID(e, n) {
			if (e in xl) throw new RangeError("Duplicate use of step JSON ID " + e);
			return xl[e] = n, n.prototype.jsonID = e, n
		}
	}
	class le {
		constructor(e, n) {
			this.doc = e, this.failed = n
		}
		static ok(e) {
			return new le(e, null)
		}
		static fail(e) {
			return new le(null, e)
		}
		static fromReplace(e, n, i, o) {
			try {
				return le.ok(e.replace(n, i, o))
			} catch (r) {
				if (r instanceof Wr) return le.fail(r.message);
				throw r
			}
		}
	}

	function El(t, e, n) {
		let i = [];
		for (let o = 0; o < t.childCount; o++) {
			let r = t.child(o);
			r.content.size && (r = r.copy(El(r.content, e, r))), r.isInline && (r = e(r, n, o)), i.push(r)
		}
		return j.fromArray(i)
	}
	class Wt extends Ye {
		constructor(e, n, i) {
			super(), this.from = e, this.to = n, this.mark = i
		}
		apply(e) {
			let n = e.slice(this.from, this.to),
				i = e.resolve(this.from),
				o = i.node(i.sharedDepth(this.to)),
				r = new P(El(n.content, (a, s) => !a.isAtom || !s.type.allowsMarkType(this.mark.type) ? a : a.mark(this.mark.addToSet(a.marks)), o), n.openStart, n.openEnd);
			return le.fromReplace(e, this.from, this.to, r)
		}
		invert() {
			return new yt(this.from, this.to, this.mark)
		}
		map(e) {
			let n = e.mapResult(this.from, 1),
				i = e.mapResult(this.to, -1);
			return n.deleted && i.deleted || n.pos >= i.pos ? null : new Wt(n.pos, i.pos, this.mark)
		}
		merge(e) {
			return e instanceof Wt && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new Wt(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null
		}
		toJSON() {
			return {
				stepType: "addMark",
				mark: this.mark.toJSON(),
				from: this.from,
				to: this.to
			}
		}
		static fromJSON(e, n) {
			if (typeof n.from != "number" || typeof n.to != "number") throw new RangeError("Invalid input for AddMarkStep.fromJSON");
			return new Wt(n.from, n.to, e.markFromJSON(n.mark))
		}
	}
	Ye.jsonID("addMark", Wt);
	class yt extends Ye {
		constructor(e, n, i) {
			super(), this.from = e, this.to = n, this.mark = i
		}
		apply(e) {
			let n = e.slice(this.from, this.to),
				i = new P(El(n.content, o => o.mark(this.mark.removeFromSet(o.marks)), e), n.openStart, n.openEnd);
			return le.fromReplace(e, this.from, this.to, i)
		}
		invert() {
			return new Wt(this.from, this.to, this.mark)
		}
		map(e) {
			let n = e.mapResult(this.from, 1),
				i = e.mapResult(this.to, -1);
			return n.deleted && i.deleted || n.pos >= i.pos ? null : new yt(n.pos, i.pos, this.mark)
		}
		merge(e) {
			return e instanceof yt && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new yt(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null
		}
		toJSON() {
			return {
				stepType: "removeMark",
				mark: this.mark.toJSON(),
				from: this.from,
				to: this.to
			}
		}
		static fromJSON(e, n) {
			if (typeof n.from != "number" || typeof n.to != "number") throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
			return new yt(n.from, n.to, e.markFromJSON(n.mark))
		}
	}
	Ye.jsonID("removeMark", yt);
	class Kt extends Ye {
		constructor(e, n) {
			super(), this.pos = e, this.mark = n
		}
		apply(e) {
			let n = e.nodeAt(this.pos);
			if (!n) return le.fail("No node at mark step's position");
			let i = n.type.create(n.attrs, null, this.mark.addToSet(n.marks));
			return le.fromReplace(e, this.pos, this.pos + 1, new P(j.from(i), 0, n.isLeaf ? 0 : 1))
		}
		invert(e) {
			let n = e.nodeAt(this.pos);
			if (n) {
				let i = this.mark.addToSet(n.marks);
				if (i.length == n.marks.length) {
					for (let o = 0; o < n.marks.length; o++)
						if (!n.marks[o].isInSet(i)) return new Kt(this.pos, n.marks[o]);
					return new Kt(this.pos, this.mark)
				}
			}
			return new gi(this.pos, this.mark)
		}
		map(e) {
			let n = e.mapResult(this.pos, 1);
			return n.deletedAfter ? null : new Kt(n.pos, this.mark)
		}
		toJSON() {
			return {
				stepType: "addNodeMark",
				pos: this.pos,
				mark: this.mark.toJSON()
			}
		}
		static fromJSON(e, n) {
			if (typeof n.pos != "number") throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
			return new Kt(n.pos, e.markFromJSON(n.mark))
		}
	}
	Ye.jsonID("addNodeMark", Kt);
	class gi extends Ye {
		constructor(e, n) {
			super(), this.pos = e, this.mark = n
		}
		apply(e) {
			let n = e.nodeAt(this.pos);
			if (!n) return le.fail("No node at mark step's position");
			let i = n.type.create(n.attrs, null, this.mark.removeFromSet(n.marks));
			return le.fromReplace(e, this.pos, this.pos + 1, new P(j.from(i), 0, n.isLeaf ? 0 : 1))
		}
		invert(e) {
			let n = e.nodeAt(this.pos);
			return !n || !this.mark.isInSet(n.marks) ? this : new Kt(this.pos, this.mark)
		}
		map(e) {
			let n = e.mapResult(this.pos, 1);
			return n.deletedAfter ? null : new gi(n.pos, this.mark)
		}
		toJSON() {
			return {
				stepType: "removeNodeMark",
				pos: this.pos,
				mark: this.mark.toJSON()
			}
		}
		static fromJSON(e, n) {
			if (typeof n.pos != "number") throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
			return new gi(n.pos, e.markFromJSON(n.mark))
		}
	}
	Ye.jsonID("removeNodeMark", gi);
	class Ee extends Ye {
		constructor(e, n, i, o = !1) {
			super(), this.from = e, this.to = n, this.slice = i, this.structure = o
		}
		apply(e) {
			return this.structure && Tl(e, this.from, this.to) ? le.fail("Structure replace would overwrite content") : le.fromReplace(e, this.from, this.to, this.slice)
		}
		getMap() {
			return new Ge([this.from, this.to - this.from, this.slice.size])
		}
		invert(e) {
			return new Ee(this.from, this.from + this.slice.size, e.slice(this.from, this.to))
		}
		map(e) {
			let n = e.mapResult(this.from, 1),
				i = e.mapResult(this.to, -1);
			return n.deletedAcross && i.deletedAcross ? null : new Ee(n.pos, Math.max(n.pos, i.pos), this.slice)
		}
		merge(e) {
			if (!(e instanceof Ee) || e.structure || this.structure) return null;
			if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
				let n = this.slice.size + e.slice.size == 0 ? P.empty : new P(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
				return new Ee(this.from, this.to + (e.to - e.from), n, this.structure)
			} else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
				let n = this.slice.size + e.slice.size == 0 ? P.empty : new P(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
				return new Ee(e.from, this.to, n, this.structure)
			} else return null
		}
		toJSON() {
			let e = {
				stepType: "replace",
				from: this.from,
				to: this.to
			};
			return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e
		}
		static fromJSON(e, n) {
			if (typeof n.from != "number" || typeof n.to != "number") throw new RangeError("Invalid input for ReplaceStep.fromJSON");
			return new Ee(n.from, n.to, P.fromJSON(e, n.slice), !!n.structure)
		}
	}
	Ye.jsonID("replace", Ee);
	class de extends Ye {
		constructor(e, n, i, o, r, a, s = !1) {
			super(), this.from = e, this.to = n, this.gapFrom = i, this.gapTo = o, this.slice = r, this.insert = a, this.structure = s
		}
		apply(e) {
			if (this.structure && (Tl(e, this.from, this.gapFrom) || Tl(e, this.gapTo, this.to))) return le.fail("Structure gap-replace would overwrite content");
			let n = e.slice(this.gapFrom, this.gapTo);
			if (n.openStart || n.openEnd) return le.fail("Gap is not a flat range");
			let i = this.slice.insertAt(this.insert, n.content);
			return i ? le.fromReplace(e, this.from, this.to, i) : le.fail("Content does not fit in gap")
		}
		getMap() {
			return new Ge([this.from, this.gapFrom - this.from, this.insert, this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])
		}
		invert(e) {
			let n = this.gapTo - this.gapFrom;
			return new de(this.from, this.from + this.slice.size + n, this.from + this.insert, this.from + this.insert + n, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure)
		}
		map(e) {
			let n = e.mapResult(this.from, 1),
				i = e.mapResult(this.to, -1),
				o = e.map(this.gapFrom, -1),
				r = e.map(this.gapTo, 1);
			return n.deletedAcross && i.deletedAcross || o < n.pos || r > i.pos ? null : new de(n.pos, i.pos, o, r, this.slice, this.insert, this.structure)
		}
		toJSON() {
			let e = {
				stepType: "replaceAround",
				from: this.from,
				to: this.to,
				gapFrom: this.gapFrom,
				gapTo: this.gapTo,
				insert: this.insert
			};
			return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e
		}
		static fromJSON(e, n) {
			if (typeof n.from != "number" || typeof n.to != "number" || typeof n.gapFrom != "number" || typeof n.gapTo != "number" || typeof n.insert != "number") throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
			return new de(n.from, n.to, n.gapFrom, n.gapTo, P.fromJSON(e, n.slice), n.insert, !!n.structure)
		}
	}
	Ye.jsonID("replaceAround", de);

	function Tl(t, e, n) {
		let i = t.resolve(e),
			o = n - e,
			r = i.depth;
		for (; o > 0 && r > 0 && i.indexAfter(r) == i.node(r).childCount;) r--, o--;
		if (o > 0) {
			let a = i.node(r).maybeChild(i.indexAfter(r));
			for (; o > 0;) {
				if (!a || a.isLeaf) return !0;
				a = a.firstChild, o--
			}
		}
		return !1
	}

	function N6(t, e, n, i) {
		let o = [],
			r = [],
			a, s;
		t.doc.nodesBetween(e, n, (l, u, c) => {
			if (!l.isInline) return;
			let m = l.marks;
			if (!i.isInSet(m) && c.type.allowsMarkType(i.type)) {
				let d = Math.max(u, e),
					p = Math.min(u + l.nodeSize, n),
					f = i.addToSet(m);
				for (let y = 0; y < m.length; y++) m[y].isInSet(f) || (a && a.to == d && a.mark.eq(m[y]) ? a.to = p : o.push(a = new yt(d, p, m[y])));
				s && s.to == d ? s.to = p : r.push(s = new Wt(d, p, i))
			}
		}), o.forEach(l => t.step(l)), r.forEach(l => t.step(l))
	}

	function M6(t, e, n, i) {
		let o = [],
			r = 0;
		t.doc.nodesBetween(e, n, (a, s) => {
			if (!a.isInline) return;
			r++;
			let l = null;
			if (i instanceof Qr) {
				let u = a.marks,
					c;
				for (; c = i.isInSet(u);)(l || (l = [])).push(c), u = c.removeFromSet(u)
			} else i ? i.isInSet(a.marks) && (l = [i]) : l = a.marks;
			if (l && l.length) {
				let u = Math.min(s + a.nodeSize, n);
				for (let c = 0; c < l.length; c++) {
					let m = l[c],
						d;
					for (let p = 0; p < o.length; p++) {
						let f = o[p];
						f.step == r - 1 && m.eq(o[p].style) && (d = f)
					}
					d ? (d.to = u, d.step = r) : o.push({
						style: m,
						from: Math.max(s, e),
						to: u,
						step: r
					})
				}
			}
		}), o.forEach(a => t.step(new yt(a.from, a.to, a.style)))
	}

	function P6(t, e, n, i = n.contentMatch) {
		let o = t.doc.nodeAt(e),
			r = [],
			a = e + 1;
		for (let s = 0; s < o.childCount; s++) {
			let l = o.child(s),
				u = a + l.nodeSize,
				c = i.matchType(l.type);
			if (!c) r.push(new Ee(a, u, P.empty));
			else {
				i = c;
				for (let m = 0; m < l.marks.length; m++) n.allowsMarkType(l.marks[m].type) || t.step(new yt(a, u, l.marks[m]))
			}
			a = u
		}
		if (!i.validEnd) {
			let s = i.fillBefore(j.empty, !0);
			t.replace(a, a, new P(s, 0, 0))
		}
		for (let s = r.length - 1; s >= 0; s--) t.step(r[s])
	}

	function _6(t, e, n) {
		return (e == 0 || t.canReplace(e, t.childCount)) && (n == t.childCount || t.canReplace(0, n))
	}

	function yi(t) {
		let n = t.parent.content.cutByIndex(t.startIndex, t.endIndex);
		for (let i = t.depth;; --i) {
			let o = t.$from.node(i),
				r = t.$from.index(i),
				a = t.$to.indexAfter(i);
			if (i < t.depth && o.canReplace(r, a, n)) return i;
			if (i == 0 || o.type.spec.isolating || !_6(o, r, a)) break
		}
		return null
	}

	function z6(t, e, n) {
		let {
			$from: i,
			$to: o,
			depth: r
		} = e, a = i.before(r + 1), s = o.after(r + 1), l = a, u = s, c = j.empty, m = 0;
		for (let f = r, y = !1; f > n; f--) y || i.index(f) > 0 ? (y = !0, c = j.from(i.node(f).copy(c)), m++) : l--;
		let d = j.empty,
			p = 0;
		for (let f = r, y = !1; f > n; f--) y || o.after(f + 1) < o.end(f) ? (y = !0, d = j.from(o.node(f).copy(d)), p++) : u++;
		t.step(new de(l, u, a, s, new P(c.append(d), m, p), c.size - m, !0))
	}

	function jl(t, e, n = null, i = t) {
		let o = O6(t, e),
			r = o && D6(i, e);
		return r ? o.map(np).concat({
			type: e,
			attrs: n
		}).concat(r.map(np)) : null
	}

	function np(t) {
		return {
			type: t,
			attrs: null
		}
	}

	function O6(t, e) {
		let {
			parent: n,
			startIndex: i,
			endIndex: o
		} = t, r = n.contentMatchAt(i).findWrapping(e);
		if (!r) return null;
		let a = r.length ? r[0] : e;
		return n.canReplaceWith(i, o, a) ? r : null
	}

	function D6(t, e) {
		let {
			parent: n,
			startIndex: i,
			endIndex: o
		} = t, r = n.child(i), a = e.contentMatch.findWrapping(r.type);
		if (!a) return null;
		let l = (a.length ? a[a.length - 1] : e).contentMatch;
		for (let u = i; l && u < o; u++) l = l.matchType(n.child(u).type);
		return !l || !l.validEnd ? null : a
	}

	function I6(t, e, n) {
		let i = j.empty;
		for (let a = n.length - 1; a >= 0; a--) {
			if (i.size) {
				let s = n[a].type.contentMatch.matchFragment(i);
				if (!s || !s.validEnd) throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper")
			}
			i = j.from(n[a].type.create(n[a].attrs, i))
		}
		let o = e.start,
			r = e.end;
		t.step(new de(o, r, o, r, new P(i, 0, 0), n.length, !0))
	}

	function R6(t, e, n, i, o) {
		if (!i.isTextblock) throw new RangeError("Type given to setBlockType should be a textblock");
		let r = t.steps.length;
		t.doc.nodesBetween(e, n, (a, s) => {
			if (a.isTextblock && !a.hasMarkup(i, o) && Y6(t.doc, t.mapping.slice(r).map(s), i)) {
				t.clearIncompatible(t.mapping.slice(r).map(s, 1), i);
				let l = t.mapping.slice(r),
					u = l.map(s, 1),
					c = l.map(s + a.nodeSize, 1);
				return t.step(new de(u, c, u + 1, c - 1, new P(j.from(i.create(o, null, a.marks)), 0, 0), 1, !0)), !1
			}
		})
	}

	function Y6(t, e, n) {
		let i = t.resolve(e),
			o = i.index();
		return i.parent.canReplaceWith(o, o + 1, n)
	}

	function L6(t, e, n, i, o) {
		let r = t.doc.nodeAt(e);
		if (!r) throw new RangeError("No node at given position");
		n || (n = r.type);
		let a = n.create(i, null, o || r.marks);
		if (r.isLeaf) return t.replaceWith(e, e + r.nodeSize, a);
		if (!n.validContent(r.content)) throw new RangeError("Invalid content for node type " + n.name);
		t.step(new de(e, e + r.nodeSize, e + 1, e + r.nodeSize - 1, new P(j.from(a), 0, 0), 1, !0))
	}

	function bi(t, e, n = 1, i) {
		let o = t.resolve(e),
			r = o.depth - n,
			a = i && i[i.length - 1] || o.parent;
		if (r < 0 || o.parent.type.spec.isolating || !o.parent.canReplace(o.index(), o.parent.childCount) || !a.type.validContent(o.parent.content.cutByIndex(o.index(), o.parent.childCount))) return !1;
		for (let u = o.depth - 1, c = n - 2; u > r; u--, c--) {
			let m = o.node(u),
				d = o.index(u);
			if (m.type.spec.isolating) return !1;
			let p = m.content.cutByIndex(d, m.childCount),
				f = i && i[c + 1];
			f && (p = p.replaceChild(0, f.type.create(f.attrs)));
			let y = i && i[c] || m;
			if (!m.canReplace(d + 1, m.childCount) || !y.type.validContent(p)) return !1
		}
		let s = o.indexAfter(r),
			l = i && i[0];
		return o.node(r).canReplaceWith(s, s, l ? l.type : o.node(r + 1).type)
	}

	function F6(t, e, n = 1, i) {
		let o = t.doc.resolve(e),
			r = j.empty,
			a = j.empty;
		for (let s = o.depth, l = o.depth - n, u = n - 1; s > l; s--, u--) {
			r = j.from(o.node(s).copy(r));
			let c = i && i[u];
			a = j.from(c ? c.type.create(c.attrs, a) : o.node(s).copy(a))
		}
		t.step(new Ee(e, e, new P(r.append(a), n, n), !0))
	}

	function Jt(t, e) {
		let n = t.resolve(e),
			i = n.index();
		return ip(n.nodeBefore, n.nodeAfter) && n.parent.canReplace(i, i + 1)
	}

	function ip(t, e) {
		return !!(t && e && !t.isLeaf && t.canAppend(e))
	}

	function na(t, e, n = -1) {
		let i = t.resolve(e);
		for (let o = i.depth;; o--) {
			let r, a, s = i.index(o);
			if (o == i.depth ? (r = i.nodeBefore, a = i.nodeAfter) : n > 0 ? (r = i.node(o + 1), s++, a = i.node(o).maybeChild(s)) : (r = i.node(o).maybeChild(s - 1), a = i.node(o + 1)), r && !r.isTextblock && ip(r, a) && i.node(o).canReplace(s, s + 1)) return e;
			if (o == 0) break;
			e = n < 0 ? i.before(o) : i.after(o)
		}
	}

	function B6(t, e, n) {
		let i = new Ee(e - n, e + n, P.empty, !0);
		t.step(i)
	}

	function U6(t, e, n) {
		let i = t.resolve(e);
		if (i.parent.canReplaceWith(i.index(), i.index(), n)) return e;
		if (i.parentOffset == 0)
			for (let o = i.depth - 1; o >= 0; o--) {
				let r = i.index(o);
				if (i.node(o).canReplaceWith(r, r, n)) return i.before(o + 1);
				if (r > 0) return null
			}
		if (i.parentOffset == i.parent.content.size)
			for (let o = i.depth - 1; o >= 0; o--) {
				let r = i.indexAfter(o);
				if (i.node(o).canReplaceWith(r, r, n)) return i.after(o + 1);
				if (r < i.node(o).childCount) return null
			}
		return null
	}

	function V6(t, e, n) {
		let i = t.resolve(e);
		if (!n.content.size) return e;
		let o = n.content;
		for (let r = 0; r < n.openStart; r++) o = o.firstChild.content;
		for (let r = 1; r <= (n.openStart == 0 && n.size ? 2 : 1); r++)
			for (let a = i.depth; a >= 0; a--) {
				let s = a == i.depth ? 0 : i.pos <= (i.start(a + 1) + i.end(a + 1)) / 2 ? -1 : 1,
					l = i.index(a) + (s > 0 ? 1 : 0),
					u = i.node(a),
					c = !1;
				if (r == 1) c = u.canReplace(l, l, o);
				else {
					let m = u.contentMatchAt(l).findWrapping(o.firstChild.type);
					c = m && u.canReplaceWith(l, l, m[0])
				}
				if (c) return s == 0 ? i.pos : s < 0 ? i.before(a + 1) : i.after(a + 1)
			}
		return null
	}

	function $l(t, e, n = e, i = P.empty) {
		if (e == n && !i.size) return null;
		let o = t.resolve(e),
			r = t.resolve(n);
		return op(o, r, i) ? new Ee(e, n, i) : new H6(o, r, i).fit()
	}

	function op(t, e, n) {
		return !n.openStart && !n.openEnd && t.start() == e.start() && t.parent.canReplace(t.index(), e.index(), n.content)
	}
	class H6 {
		constructor(e, n, i) {
			this.$from = e, this.$to = n, this.unplaced = i, this.frontier = [], this.placed = j.empty;
			for (let o = 0; o <= e.depth; o++) {
				let r = e.node(o);
				this.frontier.push({
					type: r.type,
					match: r.contentMatchAt(e.indexAfter(o))
				})
			}
			for (let o = e.depth; o > 0; o--) this.placed = j.from(e.node(o).copy(this.placed))
		}
		get depth() {
			return this.frontier.length - 1
		}
		fit() {
			for (; this.unplaced.size;) {
				let u = this.findFittable();
				u ? this.placeNodes(u) : this.openMore() || this.dropNode()
			}
			let e = this.mustMoveInline(),
				n = this.placed.size - this.depth - this.$from.depth,
				i = this.$from,
				o = this.close(e < 0 ? this.$to : i.doc.resolve(e));
			if (!o) return null;
			let r = this.placed,
				a = i.depth,
				s = o.depth;
			for (; a && s && r.childCount == 1;) r = r.firstChild.content, a--, s--;
			let l = new P(r, a, s);
			return e > -1 ? new de(i.pos, e, this.$to.pos, this.$to.end(), l, n) : l.size || i.pos != this.$to.pos ? new Ee(i.pos, o.pos, l) : null
		}
		findFittable() {
			let e = this.unplaced.openStart;
			for (let n = this.unplaced.content, i = 0, o = this.unplaced.openEnd; i < e; i++) {
				let r = n.firstChild;
				if (n.childCount > 1 && (o = 0), r.type.spec.isolating && o <= i) {
					e = i;
					break
				}
				n = r.content
			}
			for (let n = 1; n <= 2; n++)
				for (let i = n == 1 ? e : this.unplaced.openStart; i >= 0; i--) {
					let o, r = null;
					i ? (r = Al(this.unplaced.content, i - 1).firstChild, o = r.content) : o = this.unplaced.content;
					let a = o.firstChild;
					for (let s = this.depth; s >= 0; s--) {
						let {
							type: l,
							match: u
						} = this.frontier[s], c, m = null;
						if (n == 1 && (a ? u.matchType(a.type) || (m = u.fillBefore(j.from(a), !1)) : r && l.compatibleContent(r.type))) return {
							sliceDepth: i,
							frontierDepth: s,
							parent: r,
							inject: m
						};
						if (n == 2 && a && (c = u.findWrapping(a.type))) return {
							sliceDepth: i,
							frontierDepth: s,
							parent: r,
							wrap: c
						};
						if (r && u.matchType(r.type)) break
					}
				}
		}
		openMore() {
			let {
				content: e,
				openStart: n,
				openEnd: i
			} = this.unplaced, o = Al(e, n);
			return !o.childCount || o.firstChild.isLeaf ? !1 : (this.unplaced = new P(e, n + 1, Math.max(i, o.size + n >= e.size - i ? n + 1 : 0)), !0)
		}
		dropNode() {
			let {
				content: e,
				openStart: n,
				openEnd: i
			} = this.unplaced, o = Al(e, n);
			if (o.childCount <= 1 && n > 0) {
				let r = e.size - n <= n + o.size;
				this.unplaced = new P(So(e, n - 1, 1), n - 1, r ? n - 1 : i)
			} else this.unplaced = new P(So(e, n, 1), n, i)
		}
		placeNodes({
			sliceDepth: e,
			frontierDepth: n,
			parent: i,
			inject: o,
			wrap: r
		}) {
			for (; this.depth > n;) this.closeFrontierNode();
			if (r)
				for (let y = 0; y < r.length; y++) this.openFrontierNode(r[y]);
			let a = this.unplaced,
				s = i ? i.content : a.content,
				l = a.openStart - e,
				u = 0,
				c = [],
				{
					match: m,
					type: d
				} = this.frontier[n];
			if (o) {
				for (let y = 0; y < o.childCount; y++) c.push(o.child(y));
				m = m.matchFragment(o)
			}
			let p = s.size + e - (a.content.size - a.openEnd);
			for (; u < s.childCount;) {
				let y = s.child(u),
					h = m.matchType(y.type);
				if (!h) break;
				u++, (u > 1 || l == 0 || y.content.size) && (m = h, c.push(rp(y.mark(d.allowedMarks(y.marks)), u == 1 ? l : 0, u == s.childCount ? p : -1)))
			}
			let f = u == s.childCount;
			f || (p = -1), this.placed = Co(this.placed, n, j.from(c)), this.frontier[n].match = m, f && p < 0 && i && i.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
			for (let y = 0, h = s; y < p; y++) {
				let g = h.lastChild;
				this.frontier.push({
					type: g.type,
					match: g.contentMatchAt(g.childCount)
				}), h = g.content
			}
			this.unplaced = f ? e == 0 ? P.empty : new P(So(a.content, e - 1, 1), e - 1, p < 0 ? a.openEnd : e - 1) : new P(So(a.content, e, u), a.openStart, a.openEnd)
		}
		mustMoveInline() {
			if (!this.$to.parent.isTextblock) return -1;
			let e = this.frontier[this.depth],
				n;
			if (!e.type.isTextblock || !Nl(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (n = this.findCloseLevel(this.$to)) && n.depth == this.depth) return -1;
			let {
				depth: i
			} = this.$to, o = this.$to.after(i);
			for (; i > 1 && o == this.$to.end(--i);) ++o;
			return o
		}
		findCloseLevel(e) {
			e: for (let n = Math.min(this.depth, e.depth); n >= 0; n--) {
				let {
					match: i,
					type: o
				} = this.frontier[n], r = n < e.depth && e.end(n + 1) == e.pos + (e.depth - (n + 1)), a = Nl(e, n, o, i, r);
				if (a) {
					for (let s = n - 1; s >= 0; s--) {
						let {
							match: l,
							type: u
						} = this.frontier[s], c = Nl(e, s, u, l, !0);
						if (!c || c.childCount) continue e
					}
					return {
						depth: n,
						fit: a,
						move: r ? e.doc.resolve(e.after(n + 1)) : e
					}
				}
			}
		}
		close(e) {
			let n = this.findCloseLevel(e);
			if (!n) return null;
			for (; this.depth > n.depth;) this.closeFrontierNode();
			n.fit.childCount && (this.placed = Co(this.placed, n.depth, n.fit)), e = n.move;
			for (let i = n.depth + 1; i <= e.depth; i++) {
				let o = e.node(i),
					r = o.type.contentMatch.fillBefore(o.content, !0, e.index(i));
				this.openFrontierNode(o.type, o.attrs, r)
			}
			return e
		}
		openFrontierNode(e, n = null, i) {
			let o = this.frontier[this.depth];
			o.match = o.match.matchType(e), this.placed = Co(this.placed, this.depth, j.from(e.create(n, i))), this.frontier.push({
				type: e,
				match: e.contentMatch
			})
		}
		closeFrontierNode() {
			let n = this.frontier.pop().match.fillBefore(j.empty, !0);
			n.childCount && (this.placed = Co(this.placed, this.frontier.length, n))
		}
	}

	function So(t, e, n) {
		return e == 0 ? t.cutByIndex(n, t.childCount) : t.replaceChild(0, t.firstChild.copy(So(t.firstChild.content, e - 1, n)))
	}

	function Co(t, e, n) {
		return e == 0 ? t.append(n) : t.replaceChild(t.childCount - 1, t.lastChild.copy(Co(t.lastChild.content, e - 1, n)))
	}

	function Al(t, e) {
		for (let n = 0; n < e; n++) t = t.firstChild.content;
		return t
	}

	function rp(t, e, n) {
		if (e <= 0) return t;
		let i = t.content;
		return e > 1 && (i = i.replaceChild(0, rp(i.firstChild, e - 1, i.childCount == 1 ? n - 1 : 0))), e > 0 && (i = t.type.contentMatch.fillBefore(i).append(i), n <= 0 && (i = i.append(t.type.contentMatch.matchFragment(i).fillBefore(j.empty, !0)))), t.copy(i)
	}

	function Nl(t, e, n, i, o) {
		let r = t.node(e),
			a = o ? t.indexAfter(e) : t.index(e);
		if (a == r.childCount && !n.compatibleContent(r.type)) return null;
		let s = i.fillBefore(r.content, !0, a);
		return s && !q6(n, r.content, a) ? s : null
	}

	function q6(t, e, n) {
		for (let i = n; i < e.childCount; i++)
			if (!t.allowsMarks(e.child(i).marks)) return !0;
		return !1
	}

	function W6(t) {
		return t.spec.defining || t.spec.definingForContent
	}

	function K6(t, e, n, i) {
		if (!i.size) return t.deleteRange(e, n);
		let o = t.doc.resolve(e),
			r = t.doc.resolve(n);
		if (op(o, r, i)) return t.step(new Ee(e, n, i));
		let a = sp(o, t.doc.resolve(n));
		a[a.length - 1] == 0 && a.pop();
		let s = -(o.depth + 1);
		a.unshift(s);
		for (let d = o.depth, p = o.pos - 1; d > 0; d--, p--) {
			let f = o.node(d).type.spec;
			if (f.defining || f.definingAsContext || f.isolating) break;
			a.indexOf(d) > -1 ? s = d : o.before(d) == p && a.splice(1, 0, -d)
		}
		let l = a.indexOf(s),
			u = [],
			c = i.openStart;
		for (let d = i.content, p = 0;; p++) {
			let f = d.firstChild;
			if (u.push(f), p == i.openStart) break;
			d = f.content
		}
		for (let d = c - 1; d >= 0; d--) {
			let p = u[d].type,
				f = W6(p);
			if (f && o.node(l).type != p) c = d;
			else if (f || !p.isTextblock) break
		}
		for (let d = i.openStart; d >= 0; d--) {
			let p = (d + c + 1) % (i.openStart + 1),
				f = u[p];
			if (f)
				for (let y = 0; y < a.length; y++) {
					let h = a[(y + l) % a.length],
						g = !0;
					h < 0 && (g = !1, h = -h);
					let b = o.node(h - 1),
						v = o.index(h - 1);
					if (b.canReplaceWith(v, v, f.type, f.marks)) return t.replace(o.before(h), g ? r.after(h) : n, new P(ap(i.content, 0, i.openStart, p), p, i.openEnd))
				}
		}
		let m = t.steps.length;
		for (let d = a.length - 1; d >= 0 && (t.replace(e, n, i), !(t.steps.length > m)); d--) {
			let p = a[d];
			p < 0 || (e = o.before(p), n = r.after(p))
		}
	}

	function ap(t, e, n, i, o) {
		if (e < n) {
			let r = t.firstChild;
			t = t.replaceChild(0, r.copy(ap(r.content, e + 1, n, i, r)))
		}
		if (e > i) {
			let r = o.contentMatchAt(0),
				a = r.fillBefore(t).append(t);
			t = a.append(r.matchFragment(a).fillBefore(j.empty, !0))
		}
		return t
	}

	function J6(t, e, n, i) {
		if (!i.isInline && e == n && t.doc.resolve(e).parent.content.size) {
			let o = U6(t.doc, e, i.type);
			o != null && (e = n = o)
		}
		t.replaceRange(e, n, new P(j.from(i), 0, 0))
	}

	function G6(t, e, n) {
		let i = t.doc.resolve(e),
			o = t.doc.resolve(n),
			r = sp(i, o);
		for (let a = 0; a < r.length; a++) {
			let s = r[a],
				l = a == r.length - 1;
			if (l && s == 0 || i.node(s).type.contentMatch.validEnd) return t.delete(i.start(s), o.end(s));
			if (s > 0 && (l || i.node(s - 1).canReplace(i.index(s - 1), o.indexAfter(s - 1)))) return t.delete(i.before(s), o.after(s))
		}
		for (let a = 1; a <= i.depth && a <= o.depth; a++)
			if (e - i.start(a) == i.depth - a && n > i.end(a) && o.end(a) - n != o.depth - a) return t.delete(i.before(a), n);
		t.delete(e, n)
	}

	function sp(t, e) {
		let n = [],
			i = Math.min(t.depth, e.depth);
		for (let o = i; o >= 0; o--) {
			let r = t.start(o);
			if (r < t.pos - (t.depth - o) || e.end(o) > e.pos + (e.depth - o) || t.node(o).type.spec.isolating || e.node(o).type.spec.isolating) break;
			(r == e.start(o) || o == t.depth && o == e.depth && t.parent.inlineContent && e.parent.inlineContent && o && e.start(o - 1) == r - 1) && n.push(o)
		}
		return n
	}
	class ki extends Ye {
		constructor(e, n, i) {
			super(), this.pos = e, this.attr = n, this.value = i
		}
		apply(e) {
			let n = e.nodeAt(this.pos);
			if (!n) return le.fail("No node at attribute step's position");
			let i = Object.create(null);
			for (let r in n.attrs) i[r] = n.attrs[r];
			i[this.attr] = this.value;
			let o = n.type.create(i, null, n.marks);
			return le.fromReplace(e, this.pos, this.pos + 1, new P(j.from(o), 0, n.isLeaf ? 0 : 1))
		}
		getMap() {
			return Ge.empty
		}
		invert(e) {
			return new ki(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr])
		}
		map(e) {
			let n = e.mapResult(this.pos, 1);
			return n.deletedAfter ? null : new ki(n.pos, this.attr, this.value)
		}
		toJSON() {
			return {
				stepType: "attr",
				pos: this.pos,
				attr: this.attr,
				value: this.value
			}
		}
		static fromJSON(e, n) {
			if (typeof n.pos != "number" || typeof n.attr != "string") throw new RangeError("Invalid input for AttrStep.fromJSON");
			return new ki(n.pos, n.attr, n.value)
		}
	}
	Ye.jsonID("attr", ki);
	let vi = class extends Error {};
	vi = function t(e) {
		let n = Error.call(this, e);
		return n.__proto__ = t.prototype, n
	}, vi.prototype = Object.create(Error.prototype), vi.prototype.constructor = vi, vi.prototype.name = "TransformError";
	class lp {
		constructor(e) {
			this.doc = e, this.steps = [], this.docs = [], this.mapping = new wo
		}
		get before() {
			return this.docs.length ? this.docs[0] : this.doc
		}
		step(e) {
			let n = this.maybeStep(e);
			if (n.failed) throw new vi(n.failed);
			return this
		}
		maybeStep(e) {
			let n = e.apply(this.doc);
			return n.failed || this.addStep(e, n.doc), n
		}
		get docChanged() {
			return this.steps.length > 0
		}
		addStep(e, n) {
			this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = n
		}
		replace(e, n = e, i = P.empty) {
			let o = $l(this.doc, e, n, i);
			return o && this.step(o), this
		}
		replaceWith(e, n, i) {
			return this.replace(e, n, new P(j.from(i), 0, 0))
		}
		delete(e, n) {
			return this.replace(e, n, P.empty)
		}
		insert(e, n) {
			return this.replaceWith(e, e, n)
		}
		replaceRange(e, n, i) {
			return K6(this, e, n, i), this
		}
		replaceRangeWith(e, n, i) {
			return J6(this, e, n, i), this
		}
		deleteRange(e, n) {
			return G6(this, e, n), this
		}
		lift(e, n) {
			return z6(this, e, n), this
		}
		join(e, n = 1) {
			return B6(this, e, n), this
		}
		wrap(e, n) {
			return I6(this, e, n), this
		}
		setBlockType(e, n = e, i, o = null) {
			return R6(this, e, n, i, o), this
		}
		setNodeMarkup(e, n, i = null, o) {
			return L6(this, e, n, i, o), this
		}
		setNodeAttribute(e, n, i) {
			return this.step(new ki(e, n, i)), this
		}
		addNodeMark(e, n) {
			return this.step(new Kt(e, n)), this
		}
		removeNodeMark(e, n) {
			if (!(n instanceof J)) {
				let i = this.doc.nodeAt(e);
				if (!i) throw new RangeError("No node at position " + e);
				if (n = n.isInSet(i.marks), !n) return this
			}
			return this.step(new gi(e, n)), this
		}
		split(e, n = 1, i) {
			return F6(this, e, n, i), this
		}
		addMark(e, n, i) {
			return N6(this, e, n, i), this
		}
		removeMark(e, n, i) {
			return M6(this, e, n, i), this
		}
		clearIncompatible(e, n, i) {
			return P6(this, e, n, i), this
		}
	}
	const Ml = Object.create(null);
	class L {
		constructor(e, n, i) {
			this.$anchor = e, this.$head = n, this.ranges = i || [new Q6(e.min(n), e.max(n))]
		}
		get anchor() {
			return this.$anchor.pos
		}
		get head() {
			return this.$head.pos
		}
		get from() {
			return this.$from.pos
		}
		get to() {
			return this.$to.pos
		}
		get $from() {
			return this.ranges[0].$from
		}
		get $to() {
			return this.ranges[0].$to
		}
		get empty() {
			let e = this.ranges;
			for (let n = 0; n < e.length; n++)
				if (e[n].$from.pos != e[n].$to.pos) return !1;
			return !0
		}
		content() {
			return this.$from.doc.slice(this.from, this.to, !0)
		}
		replace(e, n = P.empty) {
			let i = n.content.lastChild,
				o = null;
			for (let s = 0; s < n.openEnd; s++) o = i, i = i.lastChild;
			let r = e.steps.length,
				a = this.ranges;
			for (let s = 0; s < a.length; s++) {
				let {
					$from: l,
					$to: u
				} = a[s], c = e.mapping.slice(r);
				e.replaceRange(c.map(l.pos), c.map(u.pos), s ? P.empty : n), s == 0 && dp(e, r, (i ? i.isInline : o && o.isTextblock) ? -1 : 1)
			}
		}
		replaceWith(e, n) {
			let i = e.steps.length,
				o = this.ranges;
			for (let r = 0; r < o.length; r++) {
				let {
					$from: a,
					$to: s
				} = o[r], l = e.mapping.slice(i), u = l.map(a.pos), c = l.map(s.pos);
				r ? e.deleteRange(u, c) : (e.replaceRangeWith(u, c, n), dp(e, i, n.isInline ? -1 : 1))
			}
		}
		static findFrom(e, n, i = !1) {
			let o = e.parent.inlineContent ? new F(e) : wi(e.node(0), e.parent, e.pos, e.index(), n, i);
			if (o) return o;
			for (let r = e.depth - 1; r >= 0; r--) {
				let a = n < 0 ? wi(e.node(0), e.node(r), e.before(r + 1), e.index(r), n, i) : wi(e.node(0), e.node(r), e.after(r + 1), e.index(r) + 1, n, i);
				if (a) return a
			}
			return null
		}
		static near(e, n = 1) {
			return this.findFrom(e, n) || this.findFrom(e, -n) || new ct(e.node(0))
		}
		static atStart(e) {
			return wi(e, e, 0, 0, 1) || new ct(e)
		}
		static atEnd(e) {
			return wi(e, e, e.content.size, e.childCount, -1) || new ct(e)
		}
		static fromJSON(e, n) {
			if (!n || !n.type) throw new RangeError("Invalid input for Selection.fromJSON");
			let i = Ml[n.type];
			if (!i) throw new RangeError(`No selection type ${n.type} defined`);
			return i.fromJSON(e, n)
		}
		static jsonID(e, n) {
			if (e in Ml) throw new RangeError("Duplicate use of selection JSON ID " + e);
			return Ml[e] = n, n.prototype.jsonID = e, n
		}
		getBookmark() {
			return F.between(this.$anchor, this.$head).getBookmark()
		}
	}
	L.prototype.visible = !0;
	class Q6 {
		constructor(e, n) {
			this.$from = e, this.$to = n
		}
	}
	let up = !1;

	function cp(t) {
		!up && !t.parent.inlineContent && (up = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + t.parent.type.name + ")"))
	}
	class F extends L {
		constructor(e, n = e) {
			cp(e), cp(n), super(e, n)
		}
		get $cursor() {
			return this.$anchor.pos == this.$head.pos ? this.$head : null
		}
		map(e, n) {
			let i = e.resolve(n.map(this.head));
			if (!i.parent.inlineContent) return L.near(i);
			let o = e.resolve(n.map(this.anchor));
			return new F(o.parent.inlineContent ? o : i, i)
		}
		replace(e, n = P.empty) {
			if (super.replace(e, n), n == P.empty) {
				let i = this.$from.marksAcross(this.$to);
				i && e.ensureMarks(i)
			}
		}
		eq(e) {
			return e instanceof F && e.anchor == this.anchor && e.head == this.head
		}
		getBookmark() {
			return new ia(this.anchor, this.head)
		}
		toJSON() {
			return {
				type: "text",
				anchor: this.anchor,
				head: this.head
			}
		}
		static fromJSON(e, n) {
			if (typeof n.anchor != "number" || typeof n.head != "number") throw new RangeError("Invalid input for TextSelection.fromJSON");
			return new F(e.resolve(n.anchor), e.resolve(n.head))
		}
		static create(e, n, i = n) {
			let o = e.resolve(n);
			return new this(o, i == n ? o : e.resolve(i))
		}
		static between(e, n, i) {
			let o = e.pos - n.pos;
			if ((!i || o) && (i = o >= 0 ? 1 : -1), !n.parent.inlineContent) {
				let r = L.findFrom(n, i, !0) || L.findFrom(n, -i, !0);
				if (r) n = r.$head;
				else return L.near(n, i)
			}
			return e.parent.inlineContent || (o == 0 ? e = n : (e = (L.findFrom(e, -i, !0) || L.findFrom(e, i, !0)).$anchor, e.pos < n.pos != o < 0 && (e = n))), new F(e, n)
		}
	}
	L.jsonID("text", F);
	class ia {
		constructor(e, n) {
			this.anchor = e, this.head = n
		}
		map(e) {
			return new ia(e.map(this.anchor), e.map(this.head))
		}
		resolve(e) {
			return F.between(e.resolve(this.anchor), e.resolve(this.head))
		}
	}
	class R extends L {
		constructor(e) {
			let n = e.nodeAfter,
				i = e.node(0).resolve(e.pos + n.nodeSize);
			super(e, i), this.node = n
		}
		map(e, n) {
			let {
				deleted: i,
				pos: o
			} = n.mapResult(this.anchor), r = e.resolve(o);
			return i ? L.near(r) : new R(r)
		}
		content() {
			return new P(j.from(this.node), 0, 0)
		}
		eq(e) {
			return e instanceof R && e.anchor == this.anchor
		}
		toJSON() {
			return {
				type: "node",
				anchor: this.anchor
			}
		}
		getBookmark() {
			return new Pl(this.anchor)
		}
		static fromJSON(e, n) {
			if (typeof n.anchor != "number") throw new RangeError("Invalid input for NodeSelection.fromJSON");
			return new R(e.resolve(n.anchor))
		}
		static create(e, n) {
			return new R(e.resolve(n))
		}
		static isSelectable(e) {
			return !e.isText && e.type.spec.selectable !== !1
		}
	}
	R.prototype.visible = !1, L.jsonID("node", R);
	class Pl {
		constructor(e) {
			this.anchor = e
		}
		map(e) {
			let {
				deleted: n,
				pos: i
			} = e.mapResult(this.anchor);
			return n ? new ia(i, i) : new Pl(i)
		}
		resolve(e) {
			let n = e.resolve(this.anchor),
				i = n.nodeAfter;
			return i && R.isSelectable(i) ? new R(n) : L.near(n)
		}
	}
	class ct extends L {
		constructor(e) {
			super(e.resolve(0), e.resolve(e.content.size))
		}
		replace(e, n = P.empty) {
			if (n == P.empty) {
				e.delete(0, e.doc.content.size);
				let i = L.atStart(e.doc);
				i.eq(e.selection) || e.setSelection(i)
			} else super.replace(e, n)
		}
		toJSON() {
			return {
				type: "all"
			}
		}
		static fromJSON(e) {
			return new ct(e)
		}
		map(e) {
			return new ct(e)
		}
		eq(e) {
			return e instanceof ct
		}
		getBookmark() {
			return X6
		}
	}
	L.jsonID("all", ct);
	const X6 = {
		map() {
			return this
		},
		resolve(t) {
			return new ct(t)
		}
	};

	function wi(t, e, n, i, o, r = !1) {
		if (e.inlineContent) return F.create(t, n);
		for (let a = i - (o > 0 ? 0 : 1); o > 0 ? a < e.childCount : a >= 0; a += o) {
			let s = e.child(a);
			if (s.isAtom) {
				if (!r && R.isSelectable(s)) return R.create(t, n - (o < 0 ? s.nodeSize : 0))
			} else {
				let l = wi(t, s, n + o, o < 0 ? s.childCount : 0, o, r);
				if (l) return l
			}
			n += s.nodeSize * o
		}
		return null
	}

	function dp(t, e, n) {
		let i = t.steps.length - 1;
		if (i < e) return;
		let o = t.steps[i];
		if (!(o instanceof Ee || o instanceof de)) return;
		let r = t.mapping.maps[i],
			a;
		r.forEach((s, l, u, c) => {
			a == null && (a = c)
		}), t.setSelection(L.near(t.doc.resolve(a), n))
	}
	const mp = 1,
		oa = 2,
		pp = 4;
	class Z6 extends lp {
		constructor(e) {
			super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks
		}
		get selection() {
			return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection
		}
		setSelection(e) {
			if (e.$from.doc != this.doc) throw new RangeError("Selection passed to setSelection must point at the current document");
			return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | mp) & ~oa, this.storedMarks = null, this
		}
		get selectionSet() {
			return (this.updated & mp) > 0
		}
		setStoredMarks(e) {
			return this.storedMarks = e, this.updated |= oa, this
		}
		ensureMarks(e) {
			return J.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this
		}
		addStoredMark(e) {
			return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()))
		}
		removeStoredMark(e) {
			return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()))
		}
		get storedMarksSet() {
			return (this.updated & oa) > 0
		}
		addStep(e, n) {
			super.addStep(e, n), this.updated = this.updated & ~oa, this.storedMarks = null
		}
		setTime(e) {
			return this.time = e, this
		}
		replaceSelection(e) {
			return this.selection.replace(this, e), this
		}
		replaceSelectionWith(e, n = !0) {
			let i = this.selection;
			return n && (e = e.mark(this.storedMarks || (i.empty ? i.$from.marks() : i.$from.marksAcross(i.$to) || J.none))), i.replaceWith(this, e), this
		}
		deleteSelection() {
			return this.selection.replace(this), this
		}
		insertText(e, n, i) {
			let o = this.doc.type.schema;
			if (n == null) return e ? this.replaceSelectionWith(o.text(e), !0) : this.deleteSelection();
			{
				if (i == null && (i = n), i = i ?? n, !e) return this.deleteRange(n, i);
				let r = this.storedMarks;
				if (!r) {
					let a = this.doc.resolve(n);
					r = i == n ? a.marks() : a.marksAcross(this.doc.resolve(i))
				}
				return this.replaceRangeWith(n, i, o.text(e, r)), this.selection.empty || this.setSelection(L.near(this.selection.$to)), this
			}
		}
		setMeta(e, n) {
			return this.meta[typeof e == "string" ? e : e.key] = n, this
		}
		getMeta(e) {
			return this.meta[typeof e == "string" ? e : e.key]
		}
		get isGeneric() {
			for (let e in this.meta) return !1;
			return !0
		}
		scrollIntoView() {
			return this.updated |= pp, this
		}
		get scrolledIntoView() {
			return (this.updated & pp) > 0
		}
	}

	function fp(t, e) {
		return !e || !t ? t : t.bind(e)
	}
	class xo {
		constructor(e, n, i) {
			this.name = e, this.init = fp(n.init, i), this.apply = fp(n.apply, i)
		}
	}
	const e8 = [new xo("doc", {
		init(t) {
			return t.doc || t.schema.topNodeType.createAndFill()
		},
		apply(t) {
			return t.doc
		}
	}), new xo("selection", {
		init(t, e) {
			return t.selection || L.atStart(e.doc)
		},
		apply(t) {
			return t.selection
		}
	}), new xo("storedMarks", {
		init(t) {
			return t.storedMarks || null
		},
		apply(t, e, n, i) {
			return i.selection.$cursor ? t.storedMarks : null
		}
	}), new xo("scrollToSelection", {
		init() {
			return 0
		},
		apply(t, e) {
			return t.scrolledIntoView ? e + 1 : e
		}
	})];
	class _l {
		constructor(e, n) {
			this.schema = e, this.plugins = [], this.pluginsByKey = Object.create(null), this.fields = e8.slice(), n && n.forEach(i => {
				if (this.pluginsByKey[i.key]) throw new RangeError("Adding different instances of a keyed plugin (" + i.key + ")");
				this.plugins.push(i), this.pluginsByKey[i.key] = i, i.spec.state && this.fields.push(new xo(i.key, i.spec.state, i))
			})
		}
	}
	class Si {
		constructor(e) {
			this.config = e
		}
		get schema() {
			return this.config.schema
		}
		get plugins() {
			return this.config.plugins
		}
		apply(e) {
			return this.applyTransaction(e).state
		}
		filterTransaction(e, n = -1) {
			for (let i = 0; i < this.config.plugins.length; i++)
				if (i != n) {
					let o = this.config.plugins[i];
					if (o.spec.filterTransaction && !o.spec.filterTransaction.call(o, e, this)) return !1
				} return !0
		}
		applyTransaction(e) {
			if (!this.filterTransaction(e)) return {
				state: this,
				transactions: []
			};
			let n = [e],
				i = this.applyInner(e),
				o = null;
			for (;;) {
				let r = !1;
				for (let a = 0; a < this.config.plugins.length; a++) {
					let s = this.config.plugins[a];
					if (s.spec.appendTransaction) {
						let l = o ? o[a].n : 0,
							u = o ? o[a].state : this,
							c = l < n.length && s.spec.appendTransaction.call(s, l ? n.slice(l) : n, u, i);
						if (c && i.filterTransaction(c, a)) {
							if (c.setMeta("appendedTransaction", e), !o) {
								o = [];
								for (let m = 0; m < this.config.plugins.length; m++) o.push(m < a ? {
									state: i,
									n: n.length
								} : {
									state: this,
									n: 0
								})
							}
							n.push(c), i = i.applyInner(c), r = !0
						}
						o && (o[a] = {
							state: i,
							n: n.length
						})
					}
				}
				if (!r) return {
					state: i,
					transactions: n
				}
			}
		}
		applyInner(e) {
			if (!e.before.eq(this.doc)) throw new RangeError("Applying a mismatched transaction");
			let n = new Si(this.config),
				i = this.config.fields;
			for (let o = 0; o < i.length; o++) {
				let r = i[o];
				n[r.name] = r.apply(e, this[r.name], this, n)
			}
			return n
		}
		get tr() {
			return new Z6(this)
		}
		static create(e) {
			let n = new _l(e.doc ? e.doc.type.schema : e.schema, e.plugins),
				i = new Si(n);
			for (let o = 0; o < n.fields.length; o++) i[n.fields[o].name] = n.fields[o].init(e, i);
			return i
		}
		reconfigure(e) {
			let n = new _l(this.schema, e.plugins),
				i = n.fields,
				o = new Si(n);
			for (let r = 0; r < i.length; r++) {
				let a = i[r].name;
				o[a] = this.hasOwnProperty(a) ? this[a] : i[r].init(e, o)
			}
			return o
		}
		toJSON(e) {
			let n = {
				doc: this.doc.toJSON(),
				selection: this.selection.toJSON()
			};
			if (this.storedMarks && (n.storedMarks = this.storedMarks.map(i => i.toJSON())), e && typeof e == "object")
				for (let i in e) {
					if (i == "doc" || i == "selection") throw new RangeError("The JSON fields `doc` and `selection` are reserved");
					let o = e[i],
						r = o.spec.state;
					r && r.toJSON && (n[i] = r.toJSON.call(o, this[o.key]))
				}
			return n
		}
		static fromJSON(e, n, i) {
			if (!n) throw new RangeError("Invalid input for EditorState.fromJSON");
			if (!e.schema) throw new RangeError("Required config field 'schema' missing");
			let o = new _l(e.schema, e.plugins),
				r = new Si(o);
			return o.fields.forEach(a => {
				if (a.name == "doc") r.doc = On.fromJSON(e.schema, n.doc);
				else if (a.name == "selection") r.selection = L.fromJSON(r.doc, n.selection);
				else if (a.name == "storedMarks") n.storedMarks && (r.storedMarks = n.storedMarks.map(e.schema.markFromJSON));
				else {
					if (i)
						for (let s in i) {
							let l = i[s],
								u = l.spec.state;
							if (l.key == a.name && u && u.fromJSON && Object.prototype.hasOwnProperty.call(n, s)) {
								r[a.name] = u.fromJSON.call(l, e, n[s], r);
								return
							}
						}
					r[a.name] = a.init(e, r)
				}
			}), r
		}
	}

	function hp(t, e, n) {
		for (let i in t) {
			let o = t[i];
			o instanceof Function ? o = o.bind(e) : i == "handleDOMEvents" && (o = hp(o, e, {})), n[i] = o
		}
		return n
	}
	class Qe {
		constructor(e) {
			this.spec = e, this.props = {}, e.props && hp(e.props, this, this.props), this.key = e.key ? e.key.key : gp("plugin")
		}
		getState(e) {
			return e[this.key]
		}
	}
	const zl = Object.create(null);

	function gp(t) {
		return t in zl ? t + "$" + ++zl[t] : (zl[t] = 0, t + "$")
	}
	class zt {
		constructor(e = "key") {
			this.key = gp(e)
		}
		get(e) {
			return e.config.pluginsByKey[this.key]
		}
		getState(e) {
			return e[this.key]
		}
	}
	const We = function(t) {
			for (var e = 0;; e++)
				if (t = t.previousSibling, !t) return e
		},
		Eo = function(t) {
			let e = t.assignedSlot || t.parentNode;
			return e && e.nodeType == 11 ? e.host : e
		};
	let yp = null;
	const Ot = function(t, e, n) {
			let i = yp || (yp = document.createRange());
			return i.setEnd(t, n ?? t.nodeValue.length), i.setStart(t, e || 0), i
		},
		In = function(t, e, n, i) {
			return n && (bp(t, e, n, i, -1) || bp(t, e, n, i, 1))
		},
		t8 = /^(img|br|input|textarea|hr)$/i;

	function bp(t, e, n, i, o) {
		for (;;) {
			if (t == n && e == i) return !0;
			if (e == (o < 0 ? 0 : bt(t))) {
				let r = t.parentNode;
				if (!r || r.nodeType != 1 || i8(t) || t8.test(t.nodeName) || t.contentEditable == "false") return !1;
				e = We(t) + (o < 0 ? 0 : 1), t = r
			} else if (t.nodeType == 1) {
				if (t = t.childNodes[e + (o < 0 ? -1 : 0)], t.contentEditable == "false") return !1;
				e = o < 0 ? bt(t) : 0
			} else return !1
		}
	}

	function bt(t) {
		return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length
	}

	function n8(t, e, n) {
		for (let i = e == 0, o = e == bt(t); i || o;) {
			if (t == n) return !0;
			let r = We(t);
			if (t = t.parentNode, !t) return !1;
			i = i && r == 0, o = o && r == bt(t)
		}
	}

	function i8(t) {
		let e;
		for (let n = t; n && !(e = n.pmViewDesc); n = n.parentNode);
		return e && e.node && e.node.isBlock && (e.dom == t || e.contentDOM == t)
	}
	const ra = function(t) {
		return t.focusNode && In(t.focusNode, t.focusOffset, t.anchorNode, t.anchorOffset)
	};

	function Rn(t, e) {
		let n = document.createEvent("Event");
		return n.initEvent("keydown", !0, !0), n.keyCode = t, n.key = n.code = e, n
	}

	function o8(t) {
		let e = t.activeElement;
		for (; e && e.shadowRoot;) e = e.shadowRoot.activeElement;
		return e
	}

	function r8(t, e, n) {
		if (t.caretPositionFromPoint) try {
			let i = t.caretPositionFromPoint(e, n);
			if (i) return {
				node: i.offsetNode,
				offset: i.offset
			}
		} catch {}
		if (t.caretRangeFromPoint) {
			let i = t.caretRangeFromPoint(e, n);
			if (i) return {
				node: i.startContainer,
				offset: i.startOffset
			}
		}
	}
	const kt = typeof navigator < "u" ? navigator : null,
		kp = typeof document < "u" ? document : null,
		Gt = kt && kt.userAgent || "",
		Ol = /Edge\/(\d+)/.exec(Gt),
		vp = /MSIE \d/.exec(Gt),
		Dl = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Gt),
		Le = !!(vp || Dl || Ol),
		Qt = vp ? document.documentMode : Dl ? +Dl[1] : Ol ? +Ol[1] : 0,
		dt = !Le && /gecko\/(\d+)/i.test(Gt);
	dt && +(/Firefox\/(\d+)/.exec(Gt) || [0, 0])[1];
	const Il = !Le && /Chrome\/(\d+)/.exec(Gt),
		Te = !!Il,
		a8 = Il ? +Il[1] : 0,
		_e = !Le && !!kt && /Apple Computer/.test(kt.vendor),
		Ci = _e && (/Mobile\/\w+/.test(Gt) || !!kt && kt.maxTouchPoints > 2),
		Xe = Ci || (kt ? /Mac/.test(kt.platform) : !1),
		s8 = kt ? /Win/.test(kt.platform) : !1,
		mt = /Android \d/.test(Gt),
		aa = !!kp && "webkitFontSmoothing" in kp.documentElement.style,
		l8 = aa ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;

	function u8(t) {
		return {
			left: 0,
			right: t.documentElement.clientWidth,
			top: 0,
			bottom: t.documentElement.clientHeight
		}
	}

	function Xt(t, e) {
		return typeof t == "number" ? t : t[e]
	}

	function c8(t) {
		let e = t.getBoundingClientRect(),
			n = e.width / t.offsetWidth || 1,
			i = e.height / t.offsetHeight || 1;
		return {
			left: e.left,
			right: e.left + t.clientWidth * n,
			top: e.top,
			bottom: e.top + t.clientHeight * i
		}
	}

	function wp(t, e, n) {
		let i = t.someProp("scrollThreshold") || 0,
			o = t.someProp("scrollMargin") || 5,
			r = t.dom.ownerDocument;
		for (let a = n || t.dom; a; a = Eo(a)) {
			if (a.nodeType != 1) continue;
			let s = a,
				l = s == r.body,
				u = l ? u8(r) : c8(s),
				c = 0,
				m = 0;
			if (e.top < u.top + Xt(i, "top") ? m = -(u.top - e.top + Xt(o, "top")) : e.bottom > u.bottom - Xt(i, "bottom") && (m = e.bottom - u.bottom + Xt(o, "bottom")), e.left < u.left + Xt(i, "left") ? c = -(u.left - e.left + Xt(o, "left")) : e.right > u.right - Xt(i, "right") && (c = e.right - u.right + Xt(o, "right")), c || m)
				if (l) r.defaultView.scrollBy(c, m);
				else {
					let d = s.scrollLeft,
						p = s.scrollTop;
					m && (s.scrollTop += m), c && (s.scrollLeft += c);
					let f = s.scrollLeft - d,
						y = s.scrollTop - p;
					e = {
						left: e.left - f,
						top: e.top - y,
						right: e.right - f,
						bottom: e.bottom - y
					}
				} if (l || /^(fixed|sticky)$/.test(getComputedStyle(a).position)) break
		}
	}

	function d8(t) {
		let e = t.dom.getBoundingClientRect(),
			n = Math.max(0, e.top),
			i, o;
		for (let r = (e.left + e.right) / 2, a = n + 1; a < Math.min(innerHeight, e.bottom); a += 5) {
			let s = t.root.elementFromPoint(r, a);
			if (!s || s == t.dom || !t.dom.contains(s)) continue;
			let l = s.getBoundingClientRect();
			if (l.top >= n - 20) {
				i = s, o = l.top;
				break
			}
		}
		return {
			refDOM: i,
			refTop: o,
			stack: Sp(t.dom)
		}
	}

	function Sp(t) {
		let e = [],
			n = t.ownerDocument;
		for (let i = t; i && (e.push({
				dom: i,
				top: i.scrollTop,
				left: i.scrollLeft
			}), t != n); i = Eo(i));
		return e
	}

	function m8({
		refDOM: t,
		refTop: e,
		stack: n
	}) {
		let i = t ? t.getBoundingClientRect().top : 0;
		Cp(n, i == 0 ? 0 : i - e)
	}

	function Cp(t, e) {
		for (let n = 0; n < t.length; n++) {
			let {
				dom: i,
				top: o,
				left: r
			} = t[n];
			i.scrollTop != o + e && (i.scrollTop = o + e), i.scrollLeft != r && (i.scrollLeft = r)
		}
	}
	let xi = null;

	function p8(t) {
		if (t.setActive) return t.setActive();
		if (xi) return t.focus(xi);
		let e = Sp(t);
		t.focus(xi == null ? {
			get preventScroll() {
				return xi = {
					preventScroll: !0
				}, !0
			}
		} : void 0), xi || (xi = !1, Cp(e, 0))
	}

	function xp(t, e) {
		let n, i = 2e8,
			o, r = 0,
			a = e.top,
			s = e.top,
			l, u;
		for (let c = t.firstChild, m = 0; c; c = c.nextSibling, m++) {
			let d;
			if (c.nodeType == 1) d = c.getClientRects();
			else if (c.nodeType == 3) d = Ot(c).getClientRects();
			else continue;
			for (let p = 0; p < d.length; p++) {
				let f = d[p];
				if (f.top <= a && f.bottom >= s) {
					a = Math.max(f.bottom, a), s = Math.min(f.top, s);
					let y = f.left > e.left ? f.left - e.left : f.right < e.left ? e.left - f.right : 0;
					if (y < i) {
						n = c, i = y, o = y && n.nodeType == 3 ? {
							left: f.right < e.left ? f.right : f.left,
							top: e.top
						} : e, c.nodeType == 1 && y && (r = m + (e.left >= (f.left + f.right) / 2 ? 1 : 0));
						continue
					}
				} else f.top > e.top && !l && f.left <= e.left && f.right >= e.left && (l = c, u = {
					left: Math.max(f.left, Math.min(f.right, e.left)),
					top: f.top
				});
				!n && (e.left >= f.right && e.top >= f.top || e.left >= f.left && e.top >= f.bottom) && (r = m + 1)
			}
		}
		return !n && l && (n = l, o = u, i = 0), n && n.nodeType == 3 ? f8(n, o) : !n || i && n.nodeType == 1 ? {
			node: t,
			offset: r
		} : xp(n, o)
	}

	function f8(t, e) {
		let n = t.nodeValue.length,
			i = document.createRange();
		for (let o = 0; o < n; o++) {
			i.setEnd(t, o + 1), i.setStart(t, o);
			let r = Zt(i, 1);
			if (r.top != r.bottom && Rl(e, r)) return {
				node: t,
				offset: o + (e.left >= (r.left + r.right) / 2 ? 1 : 0)
			}
		}
		return {
			node: t,
			offset: 0
		}
	}

	function Rl(t, e) {
		return t.left >= e.left - 1 && t.left <= e.right + 1 && t.top >= e.top - 1 && t.top <= e.bottom + 1
	}

	function h8(t, e) {
		let n = t.parentNode;
		return n && /^li$/i.test(n.nodeName) && e.left < t.getBoundingClientRect().left ? n : t
	}

	function g8(t, e, n) {
		let {
			node: i,
			offset: o
		} = xp(e, n), r = -1;
		if (i.nodeType == 1 && !i.firstChild) {
			let a = i.getBoundingClientRect();
			r = a.left != a.right && n.left > (a.left + a.right) / 2 ? 1 : -1
		}
		return t.docView.posFromDOM(i, o, r)
	}

	function y8(t, e, n, i) {
		let o = -1;
		for (let r = e, a = !1; r != t.dom;) {
			let s = t.docView.nearestDesc(r, !0);
			if (!s) return null;
			if (s.dom.nodeType == 1 && (s.node.isBlock && s.parent && !a || !s.contentDOM)) {
				let l = s.dom.getBoundingClientRect();
				if (s.node.isBlock && s.parent && !a && (a = !0, l.left > i.left || l.top > i.top ? o = s.posBefore : (l.right < i.left || l.bottom < i.top) && (o = s.posAfter)), !s.contentDOM && o < 0 && !s.node.isText) return (s.node.isBlock ? i.top < (l.top + l.bottom) / 2 : i.left < (l.left + l.right) / 2) ? s.posBefore : s.posAfter
			}
			r = s.dom.parentNode
		}
		return o > -1 ? o : t.docView.posFromDOM(e, n, -1)
	}

	function Ep(t, e, n) {
		let i = t.childNodes.length;
		if (i && n.top < n.bottom)
			for (let o = Math.max(0, Math.min(i - 1, Math.floor(i * (e.top - n.top) / (n.bottom - n.top)) - 2)), r = o;;) {
				let a = t.childNodes[r];
				if (a.nodeType == 1) {
					let s = a.getClientRects();
					for (let l = 0; l < s.length; l++) {
						let u = s[l];
						if (Rl(e, u)) return Ep(a, e, u)
					}
				}
				if ((r = (r + 1) % i) == o) break
			}
		return t
	}

	function b8(t, e) {
		let n = t.dom.ownerDocument,
			i, o = 0,
			r = r8(n, e.left, e.top);
		r && ({
			node: i,
			offset: o
		} = r);
		let a = (t.root.elementFromPoint ? t.root : n).elementFromPoint(e.left, e.top),
			s;
		if (!a || !t.dom.contains(a.nodeType != 1 ? a.parentNode : a)) {
			let u = t.dom.getBoundingClientRect();
			if (!Rl(e, u) || (a = Ep(t.dom, e, u), !a)) return null
		}
		if (_e)
			for (let u = a; i && u; u = Eo(u)) u.draggable && (i = void 0);
		if (a = h8(a, e), i) {
			if (dt && i.nodeType == 1 && (o = Math.min(o, i.childNodes.length), o < i.childNodes.length)) {
				let u = i.childNodes[o],
					c;
				u.nodeName == "IMG" && (c = u.getBoundingClientRect()).right <= e.left && c.bottom > e.top && o++
			}
			i == t.dom && o == i.childNodes.length - 1 && i.lastChild.nodeType == 1 && e.top > i.lastChild.getBoundingClientRect().bottom ? s = t.state.doc.content.size : (o == 0 || i.nodeType != 1 || i.childNodes[o - 1].nodeName != "BR") && (s = y8(t, i, o, e))
		}
		s == null && (s = g8(t, a, e));
		let l = t.docView.nearestDesc(a, !0);
		return {
			pos: s,
			inside: l ? l.posAtStart - l.border : -1
		}
	}

	function Tp(t) {
		return t.top < t.bottom || t.left < t.right
	}

	function Zt(t, e) {
		let n = t.getClientRects();
		if (n.length) {
			let i = n[e < 0 ? 0 : n.length - 1];
			if (Tp(i)) return i
		}
		return Array.prototype.find.call(n, Tp) || t.getBoundingClientRect()
	}
	const k8 = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;

	function jp(t, e, n) {
		let {
			node: i,
			offset: o,
			atom: r
		} = t.docView.domFromPos(e, n < 0 ? -1 : 1), a = aa || dt;
		if (i.nodeType == 3)
			if (a && (k8.test(i.nodeValue) || (n < 0 ? !o : o == i.nodeValue.length))) {
				let l = Zt(Ot(i, o, o), n);
				if (dt && o && /\s/.test(i.nodeValue[o - 1]) && o < i.nodeValue.length) {
					let u = Zt(Ot(i, o - 1, o - 1), -1);
					if (u.top == l.top) {
						let c = Zt(Ot(i, o, o + 1), -1);
						if (c.top != l.top) return To(c, c.left < u.left)
					}
				}
				return l
			} else {
				let l = o,
					u = o,
					c = n < 0 ? 1 : -1;
				return n < 0 && !o ? (u++, c = -1) : n >= 0 && o == i.nodeValue.length ? (l--, c = 1) : n < 0 ? l-- : u++, To(Zt(Ot(i, l, u), c), c < 0)
			} if (!t.state.doc.resolve(e - (r || 0)).parent.inlineContent) {
			if (r == null && o && (n < 0 || o == bt(i))) {
				let l = i.childNodes[o - 1];
				if (l.nodeType == 1) return Yl(l.getBoundingClientRect(), !1)
			}
			if (r == null && o < bt(i)) {
				let l = i.childNodes[o];
				if (l.nodeType == 1) return Yl(l.getBoundingClientRect(), !0)
			}
			return Yl(i.getBoundingClientRect(), n >= 0)
		}
		if (r == null && o && (n < 0 || o == bt(i))) {
			let l = i.childNodes[o - 1],
				u = l.nodeType == 3 ? Ot(l, bt(l) - (a ? 0 : 1)) : l.nodeType == 1 && (l.nodeName != "BR" || !l.nextSibling) ? l : null;
			if (u) return To(Zt(u, 1), !1)
		}
		if (r == null && o < bt(i)) {
			let l = i.childNodes[o];
			for (; l.pmViewDesc && l.pmViewDesc.ignoreForCoords;) l = l.nextSibling;
			let u = l ? l.nodeType == 3 ? Ot(l, 0, a ? 0 : 1) : l.nodeType == 1 ? l : null : null;
			if (u) return To(Zt(u, -1), !0)
		}
		return To(Zt(i.nodeType == 3 ? Ot(i) : i, -n), n >= 0)
	}

	function To(t, e) {
		if (t.width == 0) return t;
		let n = e ? t.left : t.right;
		return {
			top: t.top,
			bottom: t.bottom,
			left: n,
			right: n
		}
	}

	function Yl(t, e) {
		if (t.height == 0) return t;
		let n = e ? t.top : t.bottom;
		return {
			top: n,
			bottom: n,
			left: t.left,
			right: t.right
		}
	}

	function $p(t, e, n) {
		let i = t.state,
			o = t.root.activeElement;
		i != e && t.updateState(e), o != t.dom && t.focus();
		try {
			return n()
		} finally {
			i != e && t.updateState(i), o != t.dom && o && o.focus()
		}
	}

	function v8(t, e, n) {
		let i = e.selection,
			o = n == "up" ? i.$from : i.$to;
		return $p(t, e, () => {
			let {
				node: r
			} = t.docView.domFromPos(o.pos, n == "up" ? -1 : 1);
			for (;;) {
				let s = t.docView.nearestDesc(r, !0);
				if (!s) break;
				if (s.node.isBlock) {
					r = s.contentDOM || s.dom;
					break
				}
				r = s.dom.parentNode
			}
			let a = jp(t, o.pos, 1);
			for (let s = r.firstChild; s; s = s.nextSibling) {
				let l;
				if (s.nodeType == 1) l = s.getClientRects();
				else if (s.nodeType == 3) l = Ot(s, 0, s.nodeValue.length).getClientRects();
				else continue;
				for (let u = 0; u < l.length; u++) {
					let c = l[u];
					if (c.bottom > c.top + 1 && (n == "up" ? a.top - c.top > (c.bottom - a.top) * 2 : c.bottom - a.bottom > (a.bottom - c.top) * 2)) return !1
				}
			}
			return !0
		})
	}
	const w8 = /[\u0590-\u08ac]/;

	function S8(t, e, n) {
		let {
			$head: i
		} = e.selection;
		if (!i.parent.isTextblock) return !1;
		let o = i.parentOffset,
			r = !o,
			a = o == i.parent.content.size,
			s = t.domSelection();
		return !w8.test(i.parent.textContent) || !s.modify ? n == "left" || n == "backward" ? r : a : $p(t, e, () => {
			let {
				focusNode: l,
				focusOffset: u,
				anchorNode: c,
				anchorOffset: m
			} = t.domSelectionRange(), d = s.caretBidiLevel;
			s.modify("move", n, "character");
			let p = i.depth ? t.docView.domAfterPos(i.before()) : t.dom,
				{
					focusNode: f,
					focusOffset: y
				} = t.domSelectionRange(),
				h = f && !p.contains(f.nodeType == 1 ? f : f.parentNode) || l == f && u == y;
			try {
				s.collapse(c, m), l && (l != c || u != m) && s.extend && s.extend(l, u)
			} catch {}
			return d != null && (s.caretBidiLevel = d), h
		})
	}
	let Ap = null,
		Np = null,
		Mp = !1;

	function C8(t, e, n) {
		return Ap == e && Np == n ? Mp : (Ap = e, Np = n, Mp = n == "up" || n == "down" ? v8(t, e, n) : S8(t, e, n))
	}
	const Ze = 0,
		Pp = 1,
		Yn = 2,
		vt = 3;
	class jo {
		constructor(e, n, i, o) {
			this.parent = e, this.children = n, this.dom = i, this.contentDOM = o, this.dirty = Ze, i.pmViewDesc = this
		}
		matchesWidget(e) {
			return !1
		}
		matchesMark(e) {
			return !1
		}
		matchesNode(e, n, i) {
			return !1
		}
		matchesHack(e) {
			return !1
		}
		parseRule() {
			return null
		}
		stopEvent(e) {
			return !1
		}
		get size() {
			let e = 0;
			for (let n = 0; n < this.children.length; n++) e += this.children[n].size;
			return e
		}
		get border() {
			return 0
		}
		destroy() {
			this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
			for (let e = 0; e < this.children.length; e++) this.children[e].destroy()
		}
		posBeforeChild(e) {
			for (let n = 0, i = this.posAtStart;; n++) {
				let o = this.children[n];
				if (o == e) return i;
				i += o.size
			}
		}
		get posBefore() {
			return this.parent.posBeforeChild(this)
		}
		get posAtStart() {
			return this.parent ? this.parent.posBeforeChild(this) + this.border : 0
		}
		get posAfter() {
			return this.posBefore + this.size
		}
		get posAtEnd() {
			return this.posAtStart + this.size - 2 * this.border
		}
		localPosFromDOM(e, n, i) {
			if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
				if (i < 0) {
					let r, a;
					if (e == this.contentDOM) r = e.childNodes[n - 1];
					else {
						for (; e.parentNode != this.contentDOM;) e = e.parentNode;
						r = e.previousSibling
					}
					for (; r && !((a = r.pmViewDesc) && a.parent == this);) r = r.previousSibling;
					return r ? this.posBeforeChild(a) + a.size : this.posAtStart
				} else {
					let r, a;
					if (e == this.contentDOM) r = e.childNodes[n];
					else {
						for (; e.parentNode != this.contentDOM;) e = e.parentNode;
						r = e.nextSibling
					}
					for (; r && !((a = r.pmViewDesc) && a.parent == this);) r = r.nextSibling;
					return r ? this.posBeforeChild(a) : this.posAtEnd
				} let o;
			if (e == this.dom && this.contentDOM) o = n > We(this.contentDOM);
			else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) o = e.compareDocumentPosition(this.contentDOM) & 2;
			else if (this.dom.firstChild) {
				if (n == 0)
					for (let r = e;; r = r.parentNode) {
						if (r == this.dom) {
							o = !1;
							break
						}
						if (r.previousSibling) break
					}
				if (o == null && n == e.childNodes.length)
					for (let r = e;; r = r.parentNode) {
						if (r == this.dom) {
							o = !0;
							break
						}
						if (r.nextSibling) break
					}
			}
			return o ?? i > 0 ? this.posAtEnd : this.posAtStart
		}
		nearestDesc(e, n = !1) {
			for (let i = !0, o = e; o; o = o.parentNode) {
				let r = this.getDesc(o),
					a;
				if (r && (!n || r.node))
					if (i && (a = r.nodeDOM) && !(a.nodeType == 1 ? a.contains(e.nodeType == 1 ? e : e.parentNode) : a == e)) i = !1;
					else return r
			}
		}
		getDesc(e) {
			let n = e.pmViewDesc;
			for (let i = n; i; i = i.parent)
				if (i == this) return n
		}
		posFromDOM(e, n, i) {
			for (let o = e; o; o = o.parentNode) {
				let r = this.getDesc(o);
				if (r) return r.localPosFromDOM(e, n, i)
			}
			return -1
		}
		descAt(e) {
			for (let n = 0, i = 0; n < this.children.length; n++) {
				let o = this.children[n],
					r = i + o.size;
				if (i == e && r != i) {
					for (; !o.border && o.children.length;) o = o.children[0];
					return o
				}
				if (e < r) return o.descAt(e - i - o.border);
				i = r
			}
		}
		domFromPos(e, n) {
			if (!this.contentDOM) return {
				node: this.dom,
				offset: 0,
				atom: e + 1
			};
			let i = 0,
				o = 0;
			for (let r = 0; i < this.children.length; i++) {
				let a = this.children[i],
					s = r + a.size;
				if (s > e || a instanceof Op) {
					o = e - r;
					break
				}
				r = s
			}
			if (o) return this.children[i].domFromPos(o - this.children[i].border, n);
			for (let r; i && !(r = this.children[i - 1]).size && r instanceof _p && r.side >= 0; i--);
			if (n <= 0) {
				let r, a = !0;
				for (; r = i ? this.children[i - 1] : null, !(!r || r.dom.parentNode == this.contentDOM); i--, a = !1);
				return r && n && a && !r.border && !r.domAtom ? r.domFromPos(r.size, n) : {
					node: this.contentDOM,
					offset: r ? We(r.dom) + 1 : 0
				}
			} else {
				let r, a = !0;
				for (; r = i < this.children.length ? this.children[i] : null, !(!r || r.dom.parentNode == this.contentDOM); i++, a = !1);
				return r && a && !r.border && !r.domAtom ? r.domFromPos(0, n) : {
					node: this.contentDOM,
					offset: r ? We(r.dom) : this.contentDOM.childNodes.length
				}
			}
		}
		parseRange(e, n, i = 0) {
			if (this.children.length == 0) return {
				node: this.contentDOM,
				from: e,
				to: n,
				fromOffset: 0,
				toOffset: this.contentDOM.childNodes.length
			};
			let o = -1,
				r = -1;
			for (let a = i, s = 0;; s++) {
				let l = this.children[s],
					u = a + l.size;
				if (o == -1 && e <= u) {
					let c = a + l.border;
					if (e >= c && n <= u - l.border && l.node && l.contentDOM && this.contentDOM.contains(l.contentDOM)) return l.parseRange(e, n, c);
					e = a;
					for (let m = s; m > 0; m--) {
						let d = this.children[m - 1];
						if (d.size && d.dom.parentNode == this.contentDOM && !d.emptyChildAt(1)) {
							o = We(d.dom) + 1;
							break
						}
						e -= d.size
					}
					o == -1 && (o = 0)
				}
				if (o > -1 && (u > n || s == this.children.length - 1)) {
					n = u;
					for (let c = s + 1; c < this.children.length; c++) {
						let m = this.children[c];
						if (m.size && m.dom.parentNode == this.contentDOM && !m.emptyChildAt(-1)) {
							r = We(m.dom);
							break
						}
						n += m.size
					}
					r == -1 && (r = this.contentDOM.childNodes.length);
					break
				}
				a = u
			}
			return {
				node: this.contentDOM,
				from: e,
				to: n,
				fromOffset: o,
				toOffset: r
			}
		}
		emptyChildAt(e) {
			if (this.border || !this.contentDOM || !this.children.length) return !1;
			let n = this.children[e < 0 ? 0 : this.children.length - 1];
			return n.size == 0 || n.emptyChildAt(e)
		}
		domAfterPos(e) {
			let {
				node: n,
				offset: i
			} = this.domFromPos(e, 0);
			if (n.nodeType != 1 || i == n.childNodes.length) throw new RangeError("No node after pos " + e);
			return n.childNodes[i]
		}
		setSelection(e, n, i, o = !1) {
			let r = Math.min(e, n),
				a = Math.max(e, n);
			for (let d = 0, p = 0; d < this.children.length; d++) {
				let f = this.children[d],
					y = p + f.size;
				if (r > p && a < y) return f.setSelection(e - p - f.border, n - p - f.border, i, o);
				p = y
			}
			let s = this.domFromPos(e, e ? -1 : 1),
				l = n == e ? s : this.domFromPos(n, n ? -1 : 1),
				u = i.getSelection(),
				c = !1;
			if ((dt || _e) && e == n) {
				let {
					node: d,
					offset: p
				} = s;
				if (d.nodeType == 3) {
					if (c = !!(p && d.nodeValue[p - 1] == `
`), c && p == d.nodeValue.length)
						for (let f = d, y; f; f = f.parentNode) {
							if (y = f.nextSibling) {
								y.nodeName == "BR" && (s = l = {
									node: y.parentNode,
									offset: We(y) + 1
								});
								break
							}
							let h = f.pmViewDesc;
							if (h && h.node && h.node.isBlock) break
						}
				} else {
					let f = d.childNodes[p - 1];
					c = f && (f.nodeName == "BR" || f.contentEditable == "false")
				}
			}
			if (dt && u.focusNode && u.focusNode != l.node && u.focusNode.nodeType == 1) {
				let d = u.focusNode.childNodes[u.focusOffset];
				d && d.contentEditable == "false" && (o = !0)
			}
			if (!(o || c && _e) && In(s.node, s.offset, u.anchorNode, u.anchorOffset) && In(l.node, l.offset, u.focusNode, u.focusOffset)) return;
			let m = !1;
			if ((u.extend || e == n) && !c) {
				u.collapse(s.node, s.offset);
				try {
					e != n && u.extend(l.node, l.offset), m = !0
				} catch {}
			}
			if (!m) {
				if (e > n) {
					let p = s;
					s = l, l = p
				}
				let d = document.createRange();
				d.setEnd(l.node, l.offset), d.setStart(s.node, s.offset), u.removeAllRanges(), u.addRange(d)
			}
		}
		ignoreMutation(e) {
			return !this.contentDOM && e.type != "selection"
		}
		get contentLost() {
			return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)
		}
		markDirty(e, n) {
			for (let i = 0, o = 0; o < this.children.length; o++) {
				let r = this.children[o],
					a = i + r.size;
				if (i == a ? e <= a && n >= i : e < a && n > i) {
					let s = i + r.border,
						l = a - r.border;
					if (e >= s && n <= l) {
						this.dirty = e == i || n == a ? Yn : Pp, e == s && n == l && (r.contentLost || r.dom.parentNode != this.contentDOM) ? r.dirty = vt : r.markDirty(e - s, n - s);
						return
					} else r.dirty = r.dom == r.contentDOM && r.dom.parentNode == this.contentDOM && !r.children.length ? Yn : vt
				}
				i = a
			}
			this.dirty = Yn
		}
		markParentsDirty() {
			let e = 1;
			for (let n = this.parent; n; n = n.parent, e++) {
				let i = e == 1 ? Yn : Pp;
				n.dirty < i && (n.dirty = i)
			}
		}
		get domAtom() {
			return !1
		}
		get ignoreForCoords() {
			return !1
		}
	}
	class _p extends jo {
		constructor(e, n, i, o) {
			let r, a = n.type.toDOM;
			if (typeof a == "function" && (a = a(i, () => {
					if (!r) return o;
					if (r.parent) return r.parent.posBeforeChild(r)
				})), !n.type.spec.raw) {
				if (a.nodeType != 1) {
					let s = document.createElement("span");
					s.appendChild(a), a = s
				}
				a.contentEditable = "false", a.classList.add("ProseMirror-widget")
			}
			super(e, [], a, null), this.widget = n, this.widget = n, r = this
		}
		matchesWidget(e) {
			return this.dirty == Ze && e.type.eq(this.widget.type)
		}
		parseRule() {
			return {
				ignore: !0
			}
		}
		stopEvent(e) {
			let n = this.widget.spec.stopEvent;
			return n ? n(e) : !1
		}
		ignoreMutation(e) {
			return e.type != "selection" || this.widget.spec.ignoreSelection
		}
		destroy() {
			this.widget.type.destroy(this.dom), super.destroy()
		}
		get domAtom() {
			return !0
		}
		get side() {
			return this.widget.type.side
		}
	}
	class x8 extends jo {
		constructor(e, n, i, o) {
			super(e, [], n, null), this.textDOM = i, this.text = o
		}
		get size() {
			return this.text.length
		}
		localPosFromDOM(e, n) {
			return e != this.textDOM ? this.posAtStart + (n ? this.size : 0) : this.posAtStart + n
		}
		domFromPos(e) {
			return {
				node: this.textDOM,
				offset: e
			}
		}
		ignoreMutation(e) {
			return e.type === "characterData" && e.target.nodeValue == e.oldValue
		}
	}
	class Ln extends jo {
		constructor(e, n, i, o) {
			super(e, [], i, o), this.mark = n
		}
		static create(e, n, i, o) {
			let r = o.nodeViews[n.type.name],
				a = r && r(n, o, i);
			return (!a || !a.dom) && (a = gt.renderSpec(document, n.type.spec.toDOM(n, i))), new Ln(e, n, a.dom, a.contentDOM || a.dom)
		}
		parseRule() {
			return this.dirty & vt || this.mark.type.spec.reparseInView ? null : {
				mark: this.mark.type.name,
				attrs: this.mark.attrs,
				contentElement: this.contentDOM
			}
		}
		matchesMark(e) {
			return this.dirty != vt && this.mark.eq(e)
		}
		markDirty(e, n) {
			if (super.markDirty(e, n), this.dirty != Ze) {
				let i = this.parent;
				for (; !i.node;) i = i.parent;
				i.dirty < this.dirty && (i.dirty = this.dirty), this.dirty = Ze
			}
		}
		slice(e, n, i) {
			let o = Ln.create(this.parent, this.mark, !0, i),
				r = this.children,
				a = this.size;
			n < a && (r = Bl(r, n, a, i)), e > 0 && (r = Bl(r, 0, e, i));
			for (let s = 0; s < r.length; s++) r[s].parent = o;
			return o.children = r, o
		}
	}
	class en extends jo {
		constructor(e, n, i, o, r, a, s, l, u) {
			super(e, [], r, a), this.node = n, this.outerDeco = i, this.innerDeco = o, this.nodeDOM = s
		}
		static create(e, n, i, o, r, a) {
			let s = r.nodeViews[n.type.name],
				l, u = s && s(n, r, () => {
					if (!l) return a;
					if (l.parent) return l.parent.posBeforeChild(l)
				}, i, o),
				c = u && u.dom,
				m = u && u.contentDOM;
			if (n.isText) {
				if (!c) c = document.createTextNode(n.text);
				else if (c.nodeType != 3) throw new RangeError("Text must be rendered as a DOM text node")
			} else c || ({
				dom: c,
				contentDOM: m
			} = gt.renderSpec(document, n.type.spec.toDOM(n)));
			!m && !n.isText && c.nodeName != "BR" && (c.hasAttribute("contenteditable") || (c.contentEditable = "false"), n.type.spec.draggable && (c.draggable = !0));
			let d = c;
			return c = Rp(c, i, n), u ? l = new E8(e, n, i, o, c, m || null, d, u, r, a + 1) : n.isText ? new sa(e, n, i, o, c, d, r) : new en(e, n, i, o, c, m || null, d, r, a + 1)
		}
		parseRule() {
			if (this.node.type.spec.reparseInView) return null;
			let e = {
				node: this.node.type.name,
				attrs: this.node.attrs
			};
			if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM) e.getContent = () => this.node.content;
			else if (!this.contentLost) e.contentElement = this.contentDOM;
			else {
				for (let n = this.children.length - 1; n >= 0; n--) {
					let i = this.children[n];
					if (this.dom.contains(i.dom.parentNode)) {
						e.contentElement = i.dom.parentNode;
						break
					}
				}
				e.contentElement || (e.getContent = () => j.empty)
			}
			return e
		}
		matchesNode(e, n, i) {
			return this.dirty == Ze && e.eq(this.node) && Fl(n, this.outerDeco) && i.eq(this.innerDeco)
		}
		get size() {
			return this.node.nodeSize
		}
		get border() {
			return this.node.isLeaf ? 0 : 1
		}
		updateChildren(e, n) {
			let i = this.node.inlineContent,
				o = n,
				r = e.composing ? this.localCompositionInfo(e, n) : null,
				a = r && r.pos > -1 ? r : null,
				s = r && r.pos < 0,
				l = new j8(this, a && a.node, e);
			N8(this.node, this.innerDeco, (u, c, m) => {
				u.spec.marks ? l.syncToMarks(u.spec.marks, i, e) : u.type.side >= 0 && !m && l.syncToMarks(c == this.node.childCount ? J.none : this.node.child(c).marks, i, e), l.placeWidget(u, e, o)
			}, (u, c, m, d) => {
				l.syncToMarks(u.marks, i, e);
				let p;
				l.findNodeMatch(u, c, m, d) || s && e.state.selection.from > o && e.state.selection.to < o + u.nodeSize && (p = l.findIndexWithChild(r.node)) > -1 && l.updateNodeAt(u, c, m, p, e) || l.updateNextNode(u, c, m, e, d, o) || l.addNode(u, c, m, e, o), o += u.nodeSize
			}), l.syncToMarks([], i, e), this.node.isTextblock && l.addTextblockHacks(), l.destroyRest(), (l.changed || this.dirty == Yn) && (a && this.protectLocalComposition(e, a), Dp(this.contentDOM, this.children, e), Ci && M8(this.dom))
		}
		localCompositionInfo(e, n) {
			let {
				from: i,
				to: o
			} = e.state.selection;
			if (!(e.state.selection instanceof F) || i < n || o > n + this.node.content.size) return null;
			let r = e.domSelectionRange(),
				a = P8(r.focusNode, r.focusOffset);
			if (!a || !this.dom.contains(a.parentNode)) return null;
			if (this.node.inlineContent) {
				let s = a.nodeValue,
					l = _8(this.node.content, s, i - n, o - n);
				return l < 0 ? null : {
					node: a,
					pos: l,
					text: s
				}
			} else return {
				node: a,
				pos: -1,
				text: ""
			}
		}
		protectLocalComposition(e, {
			node: n,
			pos: i,
			text: o
		}) {
			if (this.getDesc(n)) return;
			let r = n;
			for (; r.parentNode != this.contentDOM; r = r.parentNode) {
				for (; r.previousSibling;) r.parentNode.removeChild(r.previousSibling);
				for (; r.nextSibling;) r.parentNode.removeChild(r.nextSibling);
				r.pmViewDesc && (r.pmViewDesc = void 0)
			}
			let a = new x8(this, r, n, o);
			e.input.compositionNodes.push(a), this.children = Bl(this.children, i, i + o.length, e, a)
		}
		update(e, n, i, o) {
			return this.dirty == vt || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, n, i, o), !0)
		}
		updateInner(e, n, i, o) {
			this.updateOuterDeco(n), this.node = e, this.innerDeco = i, this.contentDOM && this.updateChildren(o, this.posAtStart), this.dirty = Ze
		}
		updateOuterDeco(e) {
			if (Fl(e, this.outerDeco)) return;
			let n = this.nodeDOM.nodeType != 1,
				i = this.dom;
			this.dom = Ip(this.dom, this.nodeDOM, Ll(this.outerDeco, this.node, n), Ll(e, this.node, n)), this.dom != i && (i.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e
		}
		selectNode() {
			this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0)
		}
		deselectNode() {
			this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable")
		}
		get domAtom() {
			return this.node.isAtom
		}
	}

	function zp(t, e, n, i, o) {
		Rp(i, e, t);
		let r = new en(void 0, t, e, n, i, i, i, o, 0);
		return r.contentDOM && r.updateChildren(o, 0), r
	}
	class sa extends en {
		constructor(e, n, i, o, r, a, s) {
			super(e, n, i, o, r, null, a, s, 0)
		}
		parseRule() {
			let e = this.nodeDOM.parentNode;
			for (; e && e != this.dom && !e.pmIsDeco;) e = e.parentNode;
			return {
				skip: e || !0
			}
		}
		update(e, n, i, o) {
			return this.dirty == vt || this.dirty != Ze && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(n), (this.dirty != Ze || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, o.trackWrites == this.nodeDOM && (o.trackWrites = null)), this.node = e, this.dirty = Ze, !0)
		}
		inParent() {
			let e = this.parent.contentDOM;
			for (let n = this.nodeDOM; n; n = n.parentNode)
				if (n == e) return !0;
			return !1
		}
		domFromPos(e) {
			return {
				node: this.nodeDOM,
				offset: e
			}
		}
		localPosFromDOM(e, n, i) {
			return e == this.nodeDOM ? this.posAtStart + Math.min(n, this.node.text.length) : super.localPosFromDOM(e, n, i)
		}
		ignoreMutation(e) {
			return e.type != "characterData" && e.type != "selection"
		}
		slice(e, n, i) {
			let o = this.node.cut(e, n),
				r = document.createTextNode(o.text);
			return new sa(this.parent, o, this.outerDeco, this.innerDeco, r, r, i)
		}
		markDirty(e, n) {
			super.markDirty(e, n), this.dom != this.nodeDOM && (e == 0 || n == this.nodeDOM.nodeValue.length) && (this.dirty = vt)
		}
		get domAtom() {
			return !1
		}
	}
	class Op extends jo {
		parseRule() {
			return {
				ignore: !0
			}
		}
		matchesHack(e) {
			return this.dirty == Ze && this.dom.nodeName == e
		}
		get domAtom() {
			return !0
		}
		get ignoreForCoords() {
			return this.dom.nodeName == "IMG"
		}
	}
	class E8 extends en {
		constructor(e, n, i, o, r, a, s, l, u, c) {
			super(e, n, i, o, r, a, s, u, c), this.spec = l
		}
		update(e, n, i, o) {
			if (this.dirty == vt) return !1;
			if (this.spec.update) {
				let r = this.spec.update(e, n, i);
				return r && this.updateInner(e, n, i, o), r
			} else return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, n, i, o)
		}
		selectNode() {
			this.spec.selectNode ? this.spec.selectNode() : super.selectNode()
		}
		deselectNode() {
			this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode()
		}
		setSelection(e, n, i, o) {
			this.spec.setSelection ? this.spec.setSelection(e, n, i) : super.setSelection(e, n, i, o)
		}
		destroy() {
			this.spec.destroy && this.spec.destroy(), super.destroy()
		}
		stopEvent(e) {
			return this.spec.stopEvent ? this.spec.stopEvent(e) : !1
		}
		ignoreMutation(e) {
			return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e)
		}
	}

	function Dp(t, e, n) {
		let i = t.firstChild,
			o = !1;
		for (let r = 0; r < e.length; r++) {
			let a = e[r],
				s = a.dom;
			if (s.parentNode == t) {
				for (; s != i;) i = Yp(i), o = !0;
				i = i.nextSibling
			} else o = !0, t.insertBefore(s, i);
			if (a instanceof Ln) {
				let l = i ? i.previousSibling : t.lastChild;
				Dp(a.contentDOM, a.children, n), i = l ? l.nextSibling : t.firstChild
			}
		}
		for (; i;) i = Yp(i), o = !0;
		o && n.trackWrites == t && (n.trackWrites = null)
	}
	const $o = function(t) {
		t && (this.nodeName = t)
	};
	$o.prototype = Object.create(null);
	const Fn = [new $o];

	function Ll(t, e, n) {
		if (t.length == 0) return Fn;
		let i = n ? Fn[0] : new $o,
			o = [i];
		for (let r = 0; r < t.length; r++) {
			let a = t[r].type.attrs;
			if (a) {
				a.nodeName && o.push(i = new $o(a.nodeName));
				for (let s in a) {
					let l = a[s];
					l != null && (n && o.length == 1 && o.push(i = new $o(e.isInline ? "span" : "div")), s == "class" ? i.class = (i.class ? i.class + " " : "") + l : s == "style" ? i.style = (i.style ? i.style + ";" : "") + l : s != "nodeName" && (i[s] = l))
				}
			}
		}
		return o
	}

	function Ip(t, e, n, i) {
		if (n == Fn && i == Fn) return e;
		let o = e;
		for (let r = 0; r < i.length; r++) {
			let a = i[r],
				s = n[r];
			if (r) {
				let l;
				s && s.nodeName == a.nodeName && o != t && (l = o.parentNode) && l.nodeName.toLowerCase() == a.nodeName || (l = document.createElement(a.nodeName), l.pmIsDeco = !0, l.appendChild(o), s = Fn[0]), o = l
			}
			T8(o, s || Fn[0], a)
		}
		return o
	}

	function T8(t, e, n) {
		for (let i in e) i != "class" && i != "style" && i != "nodeName" && !(i in n) && t.removeAttribute(i);
		for (let i in n) i != "class" && i != "style" && i != "nodeName" && n[i] != e[i] && t.setAttribute(i, n[i]);
		if (e.class != n.class) {
			let i = e.class ? e.class.split(" ").filter(Boolean) : [],
				o = n.class ? n.class.split(" ").filter(Boolean) : [];
			for (let r = 0; r < i.length; r++) o.indexOf(i[r]) == -1 && t.classList.remove(i[r]);
			for (let r = 0; r < o.length; r++) i.indexOf(o[r]) == -1 && t.classList.add(o[r]);
			t.classList.length == 0 && t.removeAttribute("class")
		}
		if (e.style != n.style) {
			if (e.style) {
				let i = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g,
					o;
				for (; o = i.exec(e.style);) t.style.removeProperty(o[1])
			}
			n.style && (t.style.cssText += n.style)
		}
	}

	function Rp(t, e, n) {
		return Ip(t, t, Fn, Ll(e, n, t.nodeType != 1))
	}

	function Fl(t, e) {
		if (t.length != e.length) return !1;
		for (let n = 0; n < t.length; n++)
			if (!t[n].type.eq(e[n].type)) return !1;
		return !0
	}

	function Yp(t) {
		let e = t.nextSibling;
		return t.parentNode.removeChild(t), e
	}
	class j8 {
		constructor(e, n, i) {
			this.lock = n, this.view = i, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = $8(e.node.content, e)
		}
		destroyBetween(e, n) {
			if (e != n) {
				for (let i = e; i < n; i++) this.top.children[i].destroy();
				this.top.children.splice(e, n - e), this.changed = !0
			}
		}
		destroyRest() {
			this.destroyBetween(this.index, this.top.children.length)
		}
		syncToMarks(e, n, i) {
			let o = 0,
				r = this.stack.length >> 1,
				a = Math.min(r, e.length);
			for (; o < a && (o == r - 1 ? this.top : this.stack[o + 1 << 1]).matchesMark(e[o]) && e[o].type.spec.spanning !== !1;) o++;
			for (; o < r;) this.destroyRest(), this.top.dirty = Ze, this.index = this.stack.pop(), this.top = this.stack.pop(), r--;
			for (; r < e.length;) {
				this.stack.push(this.top, this.index + 1);
				let s = -1;
				for (let l = this.index; l < Math.min(this.index + 3, this.top.children.length); l++) {
					let u = this.top.children[l];
					if (u.matchesMark(e[r]) && !this.isLocked(u.dom)) {
						s = l;
						break
					}
				}
				if (s > -1) s > this.index && (this.changed = !0, this.destroyBetween(this.index, s)), this.top = this.top.children[this.index];
				else {
					let l = Ln.create(this.top, e[r], n, i);
					this.top.children.splice(this.index, 0, l), this.top = l, this.changed = !0
				}
				this.index = 0, r++
			}
		}
		findNodeMatch(e, n, i, o) {
			let r = -1,
				a;
			if (o >= this.preMatch.index && (a = this.preMatch.matches[o - this.preMatch.index]).parent == this.top && a.matchesNode(e, n, i)) r = this.top.children.indexOf(a, this.index);
			else
				for (let s = this.index, l = Math.min(this.top.children.length, s + 5); s < l; s++) {
					let u = this.top.children[s];
					if (u.matchesNode(e, n, i) && !this.preMatch.matched.has(u)) {
						r = s;
						break
					}
				}
			return r < 0 ? !1 : (this.destroyBetween(this.index, r), this.index++, !0)
		}
		updateNodeAt(e, n, i, o, r) {
			let a = this.top.children[o];
			return a.dirty == vt && a.dom == a.contentDOM && (a.dirty = Yn), a.update(e, n, i, r) ? (this.destroyBetween(this.index, o), this.index++, !0) : !1
		}
		findIndexWithChild(e) {
			for (;;) {
				let n = e.parentNode;
				if (!n) return -1;
				if (n == this.top.contentDOM) {
					let i = e.pmViewDesc;
					if (i) {
						for (let o = this.index; o < this.top.children.length; o++)
							if (this.top.children[o] == i) return o
					}
					return -1
				}
				e = n
			}
		}
		updateNextNode(e, n, i, o, r, a) {
			for (let s = this.index; s < this.top.children.length; s++) {
				let l = this.top.children[s];
				if (l instanceof en) {
					let u = this.preMatch.matched.get(l);
					if (u != null && u != r) return !1;
					let c = l.dom,
						m, d = this.isLocked(c) && !(e.isText && l.node && l.node.isText && l.nodeDOM.nodeValue == e.text && l.dirty != vt && Fl(n, l.outerDeco));
					if (!d && l.update(e, n, i, o)) return this.destroyBetween(this.index, s), l.dom != c && (this.changed = !0), this.index++, !0;
					if (!d && (m = this.recreateWrapper(l, e, n, i, o, a))) return this.top.children[this.index] = m, m.dirty = Yn, m.updateChildren(o, a + 1), m.dirty = Ze, this.changed = !0, this.index++, !0;
					break
				}
			}
			return !1
		}
		recreateWrapper(e, n, i, o, r, a) {
			if (e.dirty || n.isAtom || !e.children.length || !e.node.content.eq(n.content)) return null;
			let s = en.create(this.top, n, i, o, r, a);
			if (!s.contentDOM) return null;
			s.children = e.children, e.children = [], e.destroy();
			for (let l of s.children) l.parent = s;
			return s
		}
		addNode(e, n, i, o, r) {
			let a = en.create(this.top, e, n, i, o, r);
			a.contentDOM && a.updateChildren(o, r + 1), this.top.children.splice(this.index++, 0, a), this.changed = !0
		}
		placeWidget(e, n, i) {
			let o = this.index < this.top.children.length ? this.top.children[this.index] : null;
			if (o && o.matchesWidget(e) && (e == o.widget || !o.widget.type.toDOM.parentNode)) this.index++;
			else {
				let r = new _p(this.top, e, n, i);
				this.top.children.splice(this.index++, 0, r), this.changed = !0
			}
		}
		addTextblockHacks() {
			let e = this.top.children[this.index - 1],
				n = this.top;
			for (; e instanceof Ln;) n = e, e = n.children[n.children.length - 1];
			(!e || !(e instanceof sa) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((_e || Te) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", n), this.addHackNode("BR", this.top))
		}
		addHackNode(e, n) {
			if (n == this.top && this.index < n.children.length && n.children[this.index].matchesHack(e)) this.index++;
			else {
				let i = document.createElement(e);
				e == "IMG" && (i.className = "ProseMirror-separator", i.alt = ""), e == "BR" && (i.className = "ProseMirror-trailingBreak");
				let o = new Op(this.top, [], i, null);
				n != this.top ? n.children.push(o) : n.children.splice(this.index++, 0, o), this.changed = !0
			}
		}
		isLocked(e) {
			return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode))
		}
	}

	function $8(t, e) {
		let n = e,
			i = n.children.length,
			o = t.childCount,
			r = new Map,
			a = [];
		e: for (; o > 0;) {
			let s;
			for (;;)
				if (i) {
					let u = n.children[i - 1];
					if (u instanceof Ln) n = u, i = u.children.length;
					else {
						s = u, i--;
						break
					}
				} else {
					if (n == e) break e;
					i = n.parent.children.indexOf(n), n = n.parent
				} let l = s.node;
			if (l) {
				if (l != t.child(o - 1)) break;
				--o, r.set(s, o), a.push(s)
			}
		}
		return {
			index: o,
			matched: r,
			matches: a.reverse()
		}
	}

	function A8(t, e) {
		return t.type.side - e.type.side
	}

	function N8(t, e, n, i) {
		let o = e.locals(t),
			r = 0;
		if (o.length == 0) {
			for (let u = 0; u < t.childCount; u++) {
				let c = t.child(u);
				i(c, o, e.forChild(r, c), u), r += c.nodeSize
			}
			return
		}
		let a = 0,
			s = [],
			l = null;
		for (let u = 0;;) {
			if (a < o.length && o[a].to == r) {
				let f = o[a++],
					y;
				for (; a < o.length && o[a].to == r;)(y || (y = [f])).push(o[a++]);
				if (y) {
					y.sort(A8);
					for (let h = 0; h < y.length; h++) n(y[h], u, !!l)
				} else n(f, u, !!l)
			}
			let c, m;
			if (l) m = -1, c = l, l = null;
			else if (u < t.childCount) m = u, c = t.child(u++);
			else break;
			for (let f = 0; f < s.length; f++) s[f].to <= r && s.splice(f--, 1);
			for (; a < o.length && o[a].from <= r && o[a].to > r;) s.push(o[a++]);
			let d = r + c.nodeSize;
			if (c.isText) {
				let f = d;
				a < o.length && o[a].from < f && (f = o[a].from);
				for (let y = 0; y < s.length; y++) s[y].to < f && (f = s[y].to);
				f < d && (l = c.cut(f - r), c = c.cut(0, f - r), d = f, m = -1)
			}
			let p = c.isInline && !c.isLeaf ? s.filter(f => !f.inline) : s.slice();
			i(c, p, e.forChild(r, c), m), r = d
		}
	}

	function M8(t) {
		if (t.nodeName == "UL" || t.nodeName == "OL") {
			let e = t.style.cssText;
			t.style.cssText = e + "; list-style: square !important", window.getComputedStyle(t).listStyle, t.style.cssText = e
		}
	}

	function P8(t, e) {
		for (;;) {
			if (t.nodeType == 3) return t;
			if (t.nodeType == 1 && e > 0) {
				if (t.childNodes.length > e && t.childNodes[e].nodeType == 3) return t.childNodes[e];
				t = t.childNodes[e - 1], e = bt(t)
			} else if (t.nodeType == 1 && e < t.childNodes.length) t = t.childNodes[e], e = 0;
			else return null
		}
	}

	function _8(t, e, n, i) {
		for (let o = 0, r = 0; o < t.childCount && r <= i;) {
			let a = t.child(o++),
				s = r;
			if (r += a.nodeSize, !a.isText) continue;
			let l = a.text;
			for (; o < t.childCount;) {
				let u = t.child(o++);
				if (r += u.nodeSize, !u.isText) break;
				l += u.text
			}
			if (r >= n) {
				let u = s < i ? l.lastIndexOf(e, i - s - 1) : -1;
				if (u >= 0 && u + e.length + s >= n) return s + u;
				if (n == i && l.length >= i + e.length - s && l.slice(i - s, i - s + e.length) == e) return i
			}
		}
		return -1
	}

	function Bl(t, e, n, i, o) {
		let r = [];
		for (let a = 0, s = 0; a < t.length; a++) {
			let l = t[a],
				u = s,
				c = s += l.size;
			u >= n || c <= e ? r.push(l) : (u < e && r.push(l.slice(0, e - u, i)), o && (r.push(o), o = void 0), c > n && r.push(l.slice(n - u, l.size, i)))
		}
		return r
	}

	function Ul(t, e = null) {
		let n = t.domSelectionRange(),
			i = t.state.doc;
		if (!n.focusNode) return null;
		let o = t.docView.nearestDesc(n.focusNode),
			r = o && o.size == 0,
			a = t.docView.posFromDOM(n.focusNode, n.focusOffset, 1);
		if (a < 0) return null;
		let s = i.resolve(a),
			l, u;
		if (ra(n)) {
			for (l = s; o && !o.node;) o = o.parent;
			let c = o.node;
			if (o && c.isAtom && R.isSelectable(c) && o.parent && !(c.isInline && n8(n.focusNode, n.focusOffset, o.dom))) {
				let m = o.posBefore;
				u = new R(a == m ? s : i.resolve(m))
			}
		} else {
			let c = t.docView.posFromDOM(n.anchorNode, n.anchorOffset, 1);
			if (c < 0) return null;
			l = i.resolve(c)
		}
		if (!u) {
			let c = e == "pointer" || t.state.selection.head < s.pos && !r ? 1 : -1;
			u = Hl(t, l, s, c)
		}
		return u
	}

	function Lp(t) {
		return t.editable ? t.hasFocus() : Wp(t) && document.activeElement && document.activeElement.contains(t.dom)
	}

	function Dt(t, e = !1) {
		let n = t.state.selection;
		if (Vp(t, n), !!Lp(t)) {
			if (!e && t.input.mouseDown && t.input.mouseDown.allowDefault && Te) {
				let i = t.domSelectionRange(),
					o = t.domObserver.currentSelection;
				if (i.anchorNode && o.anchorNode && In(i.anchorNode, i.anchorOffset, o.anchorNode, o.anchorOffset)) {
					t.input.mouseDown.delayedSelectionSync = !0, t.domObserver.setCurSelection();
					return
				}
			}
			if (t.domObserver.disconnectSelection(), t.cursorWrapper) O8(t);
			else {
				let {
					anchor: i,
					head: o
				} = n, r, a;
				Fp && !(n instanceof F) && (n.$from.parent.inlineContent || (r = Bp(t, n.from)), !n.empty && !n.$from.parent.inlineContent && (a = Bp(t, n.to))), t.docView.setSelection(i, o, t.root, e), Fp && (r && Up(r), a && Up(a)), n.visible ? t.dom.classList.remove("ProseMirror-hideselection") : (t.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && z8(t))
			}
			t.domObserver.setCurSelection(), t.domObserver.connectSelection()
		}
	}
	const Fp = _e || Te && a8 < 63;

	function Bp(t, e) {
		let {
			node: n,
			offset: i
		} = t.docView.domFromPos(e, 0), o = i < n.childNodes.length ? n.childNodes[i] : null, r = i ? n.childNodes[i - 1] : null;
		if (_e && o && o.contentEditable == "false") return Vl(o);
		if ((!o || o.contentEditable == "false") && (!r || r.contentEditable == "false")) {
			if (o) return Vl(o);
			if (r) return Vl(r)
		}
	}

	function Vl(t) {
		return t.contentEditable = "true", _e && t.draggable && (t.draggable = !1, t.wasDraggable = !0), t
	}

	function Up(t) {
		t.contentEditable = "false", t.wasDraggable && (t.draggable = !0, t.wasDraggable = null)
	}

	function z8(t) {
		let e = t.dom.ownerDocument;
		e.removeEventListener("selectionchange", t.input.hideSelectionGuard);
		let n = t.domSelectionRange(),
			i = n.anchorNode,
			o = n.anchorOffset;
		e.addEventListener("selectionchange", t.input.hideSelectionGuard = () => {
			(n.anchorNode != i || n.anchorOffset != o) && (e.removeEventListener("selectionchange", t.input.hideSelectionGuard), setTimeout(() => {
				(!Lp(t) || t.state.selection.visible) && t.dom.classList.remove("ProseMirror-hideselection")
			}, 20))
		})
	}

	function O8(t) {
		let e = t.domSelection(),
			n = document.createRange(),
			i = t.cursorWrapper.dom,
			o = i.nodeName == "IMG";
		o ? n.setEnd(i.parentNode, We(i) + 1) : n.setEnd(i, 0), n.collapse(!1), e.removeAllRanges(), e.addRange(n), !o && !t.state.selection.visible && Le && Qt <= 11 && (i.disabled = !0, i.disabled = !1)
	}

	function Vp(t, e) {
		if (e instanceof R) {
			let n = t.docView.descAt(e.from);
			n != t.lastSelectedViewDesc && (Hp(t), n && n.selectNode(), t.lastSelectedViewDesc = n)
		} else Hp(t)
	}

	function Hp(t) {
		t.lastSelectedViewDesc && (t.lastSelectedViewDesc.parent && t.lastSelectedViewDesc.deselectNode(), t.lastSelectedViewDesc = void 0)
	}

	function Hl(t, e, n, i) {
		return t.someProp("createSelectionBetween", o => o(t, e, n)) || F.between(e, n, i)
	}

	function qp(t) {
		return t.editable && !t.hasFocus() ? !1 : Wp(t)
	}

	function Wp(t) {
		let e = t.domSelectionRange();
		if (!e.anchorNode) return !1;
		try {
			return t.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (t.editable || t.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode))
		} catch {
			return !1
		}
	}

	function D8(t) {
		let e = t.docView.domFromPos(t.state.selection.anchor, 0),
			n = t.domSelectionRange();
		return In(e.node, e.offset, n.anchorNode, n.anchorOffset)
	}

	function ql(t, e) {
		let {
			$anchor: n,
			$head: i
		} = t.selection, o = e > 0 ? n.max(i) : n.min(i), r = o.parent.inlineContent ? o.depth ? t.doc.resolve(e > 0 ? o.after() : o.before()) : null : o;
		return r && L.findFrom(r, e)
	}

	function Bn(t, e) {
		return t.dispatch(t.state.tr.setSelection(e).scrollIntoView()), !0
	}

	function Kp(t, e, n) {
		let i = t.state.selection;
		if (i instanceof F) {
			if (!i.empty || n.indexOf("s") > -1) return !1;
			if (t.endOfTextblock(e > 0 ? "forward" : "backward")) {
				let o = ql(t.state, e);
				return o && o instanceof R ? Bn(t, o) : !1
			} else if (!(Xe && n.indexOf("m") > -1)) {
				let o = i.$head,
					r = o.textOffset ? null : e < 0 ? o.nodeBefore : o.nodeAfter,
					a;
				if (!r || r.isText) return !1;
				let s = e < 0 ? o.pos - r.nodeSize : o.pos;
				return r.isAtom || (a = t.docView.descAt(s)) && !a.contentDOM ? R.isSelectable(r) ? Bn(t, new R(e < 0 ? t.state.doc.resolve(o.pos - r.nodeSize) : o)) : aa ? Bn(t, new F(t.state.doc.resolve(e < 0 ? s : s + r.nodeSize))) : !1 : !1
			}
		} else {
			if (i instanceof R && i.node.isInline) return Bn(t, new F(e > 0 ? i.$to : i.$from));
			{
				let o = ql(t.state, e);
				return o ? Bn(t, o) : !1
			}
		}
	}

	function la(t) {
		return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length
	}

	function Ao(t) {
		let e = t.pmViewDesc;
		return e && e.size == 0 && (t.nextSibling || t.nodeName != "BR")
	}

	function No(t, e) {
		return e < 0 ? I8(t) : Jp(t)
	}

	function I8(t) {
		let e = t.domSelectionRange(),
			n = e.focusNode,
			i = e.focusOffset;
		if (!n) return;
		let o, r, a = !1;
		for (dt && n.nodeType == 1 && i < la(n) && Ao(n.childNodes[i]) && (a = !0);;)
			if (i > 0) {
				if (n.nodeType != 1) break;
				{
					let s = n.childNodes[i - 1];
					if (Ao(s)) o = n, r = --i;
					else if (s.nodeType == 3) n = s, i = n.nodeValue.length;
					else break
				}
			} else {
				if (Gp(n)) break;
				{
					let s = n.previousSibling;
					for (; s && Ao(s);) o = n.parentNode, r = We(s), s = s.previousSibling;
					if (s) n = s, i = la(n);
					else {
						if (n = n.parentNode, n == t.dom) break;
						i = 0
					}
				}
			} a ? Wl(t, n, i) : o && Wl(t, o, r)
	}

	function Jp(t) {
		let e = t.domSelectionRange(),
			n = e.focusNode,
			i = e.focusOffset;
		if (!n) return;
		let o = la(n),
			r, a;
		for (;;)
			if (i < o) {
				if (n.nodeType != 1) break;
				let s = n.childNodes[i];
				if (Ao(s)) r = n, a = ++i;
				else break
			} else {
				if (Gp(n)) break;
				{
					let s = n.nextSibling;
					for (; s && Ao(s);) r = s.parentNode, a = We(s) + 1, s = s.nextSibling;
					if (s) n = s, i = 0, o = la(n);
					else {
						if (n = n.parentNode, n == t.dom) break;
						i = o = 0
					}
				}
			} r && Wl(t, r, a)
	}

	function Gp(t) {
		let e = t.pmViewDesc;
		return e && e.node && e.node.isBlock
	}

	function Wl(t, e, n) {
		let i = t.domSelection();
		if (ra(i)) {
			let r = document.createRange();
			r.setEnd(e, n), r.setStart(e, n), i.removeAllRanges(), i.addRange(r)
		} else i.extend && i.extend(e, n);
		t.domObserver.setCurSelection();
		let {
			state: o
		} = t;
		setTimeout(() => {
			t.state == o && Dt(t)
		}, 50)
	}

	function Qp(t, e) {
		let n = t.state.doc.resolve(e);
		if (!(Te || s8) && n.parent.inlineContent) {
			let o = t.coordsAtPos(e);
			if (e > n.start()) {
				let r = t.coordsAtPos(e - 1),
					a = (r.top + r.bottom) / 2;
				if (a > o.top && a < o.bottom && Math.abs(r.left - o.left) > 1) return r.left < o.left ? "ltr" : "rtl"
			}
			if (e < n.end()) {
				let r = t.coordsAtPos(e + 1),
					a = (r.top + r.bottom) / 2;
				if (a > o.top && a < o.bottom && Math.abs(r.left - o.left) > 1) return r.left > o.left ? "ltr" : "rtl"
			}
		}
		return getComputedStyle(t.dom).direction == "rtl" ? "rtl" : "ltr"
	}

	function Xp(t, e, n) {
		let i = t.state.selection;
		if (i instanceof F && !i.empty || n.indexOf("s") > -1 || Xe && n.indexOf("m") > -1) return !1;
		let {
			$from: o,
			$to: r
		} = i;
		if (!o.parent.inlineContent || t.endOfTextblock(e < 0 ? "up" : "down")) {
			let a = ql(t.state, e);
			if (a && a instanceof R) return Bn(t, a)
		}
		if (!o.parent.inlineContent) {
			let a = e < 0 ? o : r,
				s = i instanceof ct ? L.near(a, e) : L.findFrom(a, e);
			return s ? Bn(t, s) : !1
		}
		return !1
	}

	function Zp(t, e) {
		if (!(t.state.selection instanceof F)) return !0;
		let {
			$head: n,
			$anchor: i,
			empty: o
		} = t.state.selection;
		if (!n.sameParent(i)) return !0;
		if (!o) return !1;
		if (t.endOfTextblock(e > 0 ? "forward" : "backward")) return !0;
		let r = !n.textOffset && (e < 0 ? n.nodeBefore : n.nodeAfter);
		if (r && !r.isText) {
			let a = t.state.tr;
			return e < 0 ? a.delete(n.pos - r.nodeSize, n.pos) : a.delete(n.pos, n.pos + r.nodeSize), t.dispatch(a), !0
		}
		return !1
	}

	function ef(t, e, n) {
		t.domObserver.stop(), e.contentEditable = n, t.domObserver.start()
	}

	function R8(t) {
		if (!_e || t.state.selection.$head.parentOffset > 0) return !1;
		let {
			focusNode: e,
			focusOffset: n
		} = t.domSelectionRange();
		if (e && e.nodeType == 1 && n == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
			let i = e.firstChild;
			ef(t, i, "true"), setTimeout(() => ef(t, i, "false"), 20)
		}
		return !1
	}

	function Y8(t) {
		let e = "";
		return t.ctrlKey && (e += "c"), t.metaKey && (e += "m"), t.altKey && (e += "a"), t.shiftKey && (e += "s"), e
	}

	function L8(t, e) {
		let n = e.keyCode,
			i = Y8(e);
		if (n == 8 || Xe && n == 72 && i == "c") return Zp(t, -1) || No(t, -1);
		if (n == 46 && !e.shiftKey || Xe && n == 68 && i == "c") return Zp(t, 1) || No(t, 1);
		if (n == 13 || n == 27) return !0;
		if (n == 37 || Xe && n == 66 && i == "c") {
			let o = n == 37 ? Qp(t, t.state.selection.from) == "ltr" ? -1 : 1 : -1;
			return Kp(t, o, i) || No(t, o)
		} else if (n == 39 || Xe && n == 70 && i == "c") {
			let o = n == 39 ? Qp(t, t.state.selection.from) == "ltr" ? 1 : -1 : 1;
			return Kp(t, o, i) || No(t, o)
		} else {
			if (n == 38 || Xe && n == 80 && i == "c") return Xp(t, -1, i) || No(t, -1);
			if (n == 40 || Xe && n == 78 && i == "c") return R8(t) || Xp(t, 1, i) || Jp(t);
			if (i == (Xe ? "m" : "c") && (n == 66 || n == 73 || n == 89 || n == 90)) return !0
		}
		return !1
	}

	function tf(t, e) {
		t.someProp("transformCopied", p => {
			e = p(e, t)
		});
		let n = [],
			{
				content: i,
				openStart: o,
				openEnd: r
			} = e;
		for (; o > 1 && r > 1 && i.childCount == 1 && i.firstChild.childCount == 1;) {
			o--, r--;
			let p = i.firstChild;
			n.push(p.type.name, p.attrs != p.type.defaultAttrs ? p.attrs : null), i = p.content
		}
		let a = t.someProp("clipboardSerializer") || gt.fromSchema(t.state.schema),
			s = cf(),
			l = s.createElement("div");
		l.appendChild(a.serializeFragment(i, {
			document: s
		}));
		let u = l.firstChild,
			c, m = 0;
		for (; u && u.nodeType == 1 && (c = lf[u.nodeName.toLowerCase()]);) {
			for (let p = c.length - 1; p >= 0; p--) {
				let f = s.createElement(c[p]);
				for (; l.firstChild;) f.appendChild(l.firstChild);
				l.appendChild(f), m++
			}
			u = l.firstChild
		}
		u && u.nodeType == 1 && u.setAttribute("data-pm-slice", `${o} ${r}${m?` -${m}`:""} ${JSON.stringify(n)}`);
		let d = t.someProp("clipboardTextSerializer", p => p(e, t)) || e.content.textBetween(0, e.content.size, `

`);
		return {
			dom: l,
			text: d
		}
	}

	function nf(t, e, n, i, o) {
		let r = o.parent.type.spec.code,
			a, s;
		if (!n && !e) return null;
		let l = e && (i || r || !n);
		if (l) {
			if (t.someProp("transformPastedText", d => {
					e = d(e, r || i, t)
				}), r) return e ? new P(j.from(t.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0) : P.empty;
			let m = t.someProp("clipboardTextParser", d => d(e, o, i, t));
			if (m) s = m;
			else {
				let d = o.marks(),
					{
						schema: p
					} = t.state,
					f = gt.fromSchema(p);
				a = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach(y => {
					let h = a.appendChild(document.createElement("p"));
					y && h.appendChild(f.serializeNode(p.text(y, d)))
				})
			}
		} else t.someProp("transformPastedHTML", m => {
			n = m(n, t)
		}), a = U8(n), aa && V8(a);
		let u = a && a.querySelector("[data-pm-slice]"),
			c = u && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(u.getAttribute("data-pm-slice") || "");
		if (c && c[3])
			for (let m = +c[3]; m > 0; m--) {
				let d = a.firstChild;
				for (; d && d.nodeType != 1;) d = d.nextSibling;
				if (!d) break;
				a = d
			}
		if (s || (s = (t.someProp("clipboardParser") || t.someProp("domParser") || hi.fromSchema(t.state.schema)).parseSlice(a, {
				preserveWhitespace: !!(l || c),
				context: o,
				ruleFromNode(d) {
					return d.nodeName == "BR" && !d.nextSibling && d.parentNode && !F8.test(d.parentNode.nodeName) ? {
						ignore: !0
					} : null
				}
			})), c) s = H8(sf(s, +c[1], +c[2]), c[4]);
		else if (s = P.maxOpen(B8(s.content, o), !0), s.openStart || s.openEnd) {
			let m = 0,
				d = 0;
			for (let p = s.content.firstChild; m < s.openStart && !p.type.spec.isolating; m++, p = p.firstChild);
			for (let p = s.content.lastChild; d < s.openEnd && !p.type.spec.isolating; d++, p = p.lastChild);
			s = sf(s, m, d)
		}
		return t.someProp("transformPasted", m => {
			s = m(s, t)
		}), s
	}
	const F8 = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;

	function B8(t, e) {
		if (t.childCount < 2) return t;
		for (let n = e.depth; n >= 0; n--) {
			let o = e.node(n).contentMatchAt(e.index(n)),
				r, a = [];
			if (t.forEach(s => {
					if (!a) return;
					let l = o.findWrapping(s.type),
						u;
					if (!l) return a = null;
					if (u = a.length && r.length && rf(l, r, s, a[a.length - 1], 0)) a[a.length - 1] = u;
					else {
						a.length && (a[a.length - 1] = af(a[a.length - 1], r.length));
						let c = of(s, l);
						a.push(c), o = o.matchType(c.type), r = l
					}
				}), a) return j.from(a)
		}
		return t
	}

	function of(t, e, n = 0) {
		for (let i = e.length - 1; i >= n; i--) t = e[i].create(null, j.from(t));
		return t
	}

	function rf(t, e, n, i, o) {
		if (o < t.length && o < e.length && t[o] == e[o]) {
			let r = rf(t, e, n, i.lastChild, o + 1);
			if (r) return i.copy(i.content.replaceChild(i.childCount - 1, r));
			if (i.contentMatchAt(i.childCount).matchType(o == t.length - 1 ? n.type : t[o + 1])) return i.copy(i.content.append(j.from(of(n, t, o + 1))))
		}
	}

	function af(t, e) {
		if (e == 0) return t;
		let n = t.content.replaceChild(t.childCount - 1, af(t.lastChild, e - 1)),
			i = t.contentMatchAt(t.childCount).fillBefore(j.empty, !0);
		return t.copy(n.append(i))
	}

	function Kl(t, e, n, i, o, r) {
		let a = e < 0 ? t.firstChild : t.lastChild,
			s = a.content;
		return t.childCount > 1 && (r = 0), o < i - 1 && (s = Kl(s, e, n, i, o + 1, r)), o >= n && (s = e < 0 ? a.contentMatchAt(0).fillBefore(s, r <= o).append(s) : s.append(a.contentMatchAt(a.childCount).fillBefore(j.empty, !0))), t.replaceChild(e < 0 ? 0 : t.childCount - 1, a.copy(s))
	}

	function sf(t, e, n) {
		return e < t.openStart && (t = new P(Kl(t.content, -1, e, t.openStart, 0, t.openEnd), e, t.openEnd)), n < t.openEnd && (t = new P(Kl(t.content, 1, n, t.openEnd, 0, 0), t.openStart, n)), t
	}
	const lf = {
		thead: ["table"],
		tbody: ["table"],
		tfoot: ["table"],
		caption: ["table"],
		colgroup: ["table"],
		col: ["table", "colgroup"],
		tr: ["table", "tbody"],
		td: ["table", "tbody", "tr"],
		th: ["table", "tbody", "tr"]
	};
	let uf = null;

	function cf() {
		return uf || (uf = document.implementation.createHTMLDocument("title"))
	}

	function U8(t) {
		let e = /^(\s*<meta [^>]*>)*/.exec(t);
		e && (t = t.slice(e[0].length));
		let n = cf().createElement("div"),
			i = /<([a-z][^>\s]+)/i.exec(t),
			o;
		if ((o = i && lf[i[1].toLowerCase()]) && (t = o.map(r => "<" + r + ">").join("") + t + o.map(r => "</" + r + ">").reverse().join("")), n.innerHTML = t, o)
			for (let r = 0; r < o.length; r++) n = n.querySelector(o[r]) || n;
		return n
	}

	function V8(t) {
		let e = t.querySelectorAll(Te ? "span:not([class]):not([style])" : "span.Apple-converted-space");
		for (let n = 0; n < e.length; n++) {
			let i = e[n];
			i.childNodes.length == 1 && i.textContent == " " && i.parentNode && i.parentNode.replaceChild(t.ownerDocument.createTextNode(" "), i)
		}
	}

	function H8(t, e) {
		if (!t.size) return t;
		let n = t.content.firstChild.type.schema,
			i;
		try {
			i = JSON.parse(e)
		} catch {
			return t
		}
		let {
			content: o,
			openStart: r,
			openEnd: a
		} = t;
		for (let s = i.length - 2; s >= 0; s -= 2) {
			let l = n.nodes[i[s]];
			if (!l || l.hasRequiredAttrs()) break;
			o = j.from(l.create(i[s + 1], o)), r++, a++
		}
		return new P(o, r, a)
	}
	const ze = {},
		Oe = {},
		q8 = {
			touchstart: !0,
			touchmove: !0
		};
	class W8 {
		constructor() {
			this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = {
				time: 0,
				x: 0,
				y: 0,
				type: ""
			}, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastAndroidDelete = 0, this.composing = !1, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.compositionID = 1, this.domChangeCount = 0, this.eventHandlers = Object.create(null), this.hideSelectionGuard = null
		}
	}

	function K8(t) {
		for (let e in ze) {
			let n = ze[e];
			t.dom.addEventListener(e, t.input.eventHandlers[e] = i => {
				G8(t, i) && !Gl(t, i) && (t.editable || !(i.type in Oe)) && n(t, i)
			}, q8[e] ? {
				passive: !0
			} : void 0)
		}
		_e && t.dom.addEventListener("input", () => null), Jl(t)
	}

	function tn(t, e) {
		t.input.lastSelectionOrigin = e, t.input.lastSelectionTime = Date.now()
	}

	function J8(t) {
		t.domObserver.stop();
		for (let e in t.input.eventHandlers) t.dom.removeEventListener(e, t.input.eventHandlers[e]);
		clearTimeout(t.input.composingTimeout), clearTimeout(t.input.lastIOSEnterFallbackTimeout)
	}

	function Jl(t) {
		t.someProp("handleDOMEvents", e => {
			for (let n in e) t.input.eventHandlers[n] || t.dom.addEventListener(n, t.input.eventHandlers[n] = i => Gl(t, i))
		})
	}

	function Gl(t, e) {
		return t.someProp("handleDOMEvents", n => {
			let i = n[e.type];
			return i ? i(t, e) || e.defaultPrevented : !1
		})
	}

	function G8(t, e) {
		if (!e.bubbles) return !0;
		if (e.defaultPrevented) return !1;
		for (let n = e.target; n != t.dom; n = n.parentNode)
			if (!n || n.nodeType == 11 || n.pmViewDesc && n.pmViewDesc.stopEvent(e)) return !1;
		return !0
	}

	function Q8(t, e) {
		!Gl(t, e) && ze[e.type] && (t.editable || !(e.type in Oe)) && ze[e.type](t, e)
	}
	Oe.keydown = (t, e) => {
		let n = e;
		if (t.input.shiftKey = n.keyCode == 16 || n.shiftKey, !mf(t, n) && (t.input.lastKeyCode = n.keyCode, t.input.lastKeyCodeTime = Date.now(), !(mt && Te && n.keyCode == 13)))
			if (n.keyCode != 229 && t.domObserver.forceFlush(), Ci && n.keyCode == 13 && !n.ctrlKey && !n.altKey && !n.metaKey) {
				let i = Date.now();
				t.input.lastIOSEnter = i, t.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
					t.input.lastIOSEnter == i && (t.someProp("handleKeyDown", o => o(t, Rn(13, "Enter"))), t.input.lastIOSEnter = 0)
				}, 200)
			} else t.someProp("handleKeyDown", i => i(t, n)) || L8(t, n) ? n.preventDefault() : tn(t, "key")
	}, Oe.keyup = (t, e) => {
		e.keyCode == 16 && (t.input.shiftKey = !1)
	}, Oe.keypress = (t, e) => {
		let n = e;
		if (mf(t, n) || !n.charCode || n.ctrlKey && !n.altKey || Xe && n.metaKey) return;
		if (t.someProp("handleKeyPress", o => o(t, n))) {
			n.preventDefault();
			return
		}
		let i = t.state.selection;
		if (!(i instanceof F) || !i.$from.sameParent(i.$to)) {
			let o = String.fromCharCode(n.charCode);
			!/[\r\n]/.test(o) && !t.someProp("handleTextInput", r => r(t, i.$from.pos, i.$to.pos, o)) && t.dispatch(t.state.tr.insertText(o).scrollIntoView()), n.preventDefault()
		}
	};

	function ua(t) {
		return {
			left: t.clientX,
			top: t.clientY
		}
	}

	function X8(t, e) {
		let n = e.x - t.clientX,
			i = e.y - t.clientY;
		return n * n + i * i < 100
	}

	function Ql(t, e, n, i, o) {
		if (i == -1) return !1;
		let r = t.state.doc.resolve(i);
		for (let a = r.depth + 1; a > 0; a--)
			if (t.someProp(e, s => a > r.depth ? s(t, n, r.nodeAfter, r.before(a), o, !0) : s(t, n, r.node(a), r.before(a), o, !1))) return !0;
		return !1
	}

	function Ei(t, e, n) {
		t.focused || t.focus();
		let i = t.state.tr.setSelection(e);
		n == "pointer" && i.setMeta("pointer", !0), t.dispatch(i)
	}

	function Z8(t, e) {
		if (e == -1) return !1;
		let n = t.state.doc.resolve(e),
			i = n.nodeAfter;
		return i && i.isAtom && R.isSelectable(i) ? (Ei(t, new R(n), "pointer"), !0) : !1
	}

	function eW(t, e) {
		if (e == -1) return !1;
		let n = t.state.selection,
			i, o;
		n instanceof R && (i = n.node);
		let r = t.state.doc.resolve(e);
		for (let a = r.depth + 1; a > 0; a--) {
			let s = a > r.depth ? r.nodeAfter : r.node(a);
			if (R.isSelectable(s)) {
				i && n.$from.depth > 0 && a >= n.$from.depth && r.before(n.$from.depth + 1) == n.$from.pos ? o = r.before(n.$from.depth) : o = r.before(a);
				break
			}
		}
		return o != null ? (Ei(t, R.create(t.state.doc, o), "pointer"), !0) : !1
	}

	function tW(t, e, n, i, o) {
		return Ql(t, "handleClickOn", e, n, i) || t.someProp("handleClick", r => r(t, e, i)) || (o ? eW(t, n) : Z8(t, n))
	}

	function nW(t, e, n, i) {
		return Ql(t, "handleDoubleClickOn", e, n, i) || t.someProp("handleDoubleClick", o => o(t, e, i))
	}

	function iW(t, e, n, i) {
		return Ql(t, "handleTripleClickOn", e, n, i) || t.someProp("handleTripleClick", o => o(t, e, i)) || oW(t, n, i)
	}

	function oW(t, e, n) {
		if (n.button != 0) return !1;
		let i = t.state.doc;
		if (e == -1) return i.inlineContent ? (Ei(t, F.create(i, 0, i.content.size), "pointer"), !0) : !1;
		let o = i.resolve(e);
		for (let r = o.depth + 1; r > 0; r--) {
			let a = r > o.depth ? o.nodeAfter : o.node(r),
				s = o.before(r);
			if (a.inlineContent) Ei(t, F.create(i, s + 1, s + 1 + a.content.size), "pointer");
			else if (R.isSelectable(a)) Ei(t, R.create(i, s), "pointer");
			else continue;
			return !0
		}
	}

	function Xl(t) {
		return ca(t)
	}
	const df = Xe ? "metaKey" : "ctrlKey";
	ze.mousedown = (t, e) => {
		let n = e;
		t.input.shiftKey = n.shiftKey;
		let i = Xl(t),
			o = Date.now(),
			r = "singleClick";
		o - t.input.lastClick.time < 500 && X8(n, t.input.lastClick) && !n[df] && (t.input.lastClick.type == "singleClick" ? r = "doubleClick" : t.input.lastClick.type == "doubleClick" && (r = "tripleClick")), t.input.lastClick = {
			time: o,
			x: n.clientX,
			y: n.clientY,
			type: r
		};
		let a = t.posAtCoords(ua(n));
		a && (r == "singleClick" ? (t.input.mouseDown && t.input.mouseDown.done(), t.input.mouseDown = new rW(t, a, n, !!i)) : (r == "doubleClick" ? nW : iW)(t, a.pos, a.inside, n) ? n.preventDefault() : tn(t, "pointer"))
	};
	class rW {
		constructor(e, n, i, o) {
			this.view = e, this.pos = n, this.event = i, this.flushed = o, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!i[df], this.allowDefault = i.shiftKey;
			let r, a;
			if (n.inside > -1) r = e.state.doc.nodeAt(n.inside), a = n.inside;
			else {
				let c = e.state.doc.resolve(n.pos);
				r = c.parent, a = c.depth ? c.before() : 0
			}
			const s = o ? null : i.target,
				l = s ? e.docView.nearestDesc(s, !0) : null;
			this.target = l ? l.dom : null;
			let {
				selection: u
			} = e.state;
			(i.button == 0 && r.type.spec.draggable && r.type.spec.selectable !== !1 || u instanceof R && u.from <= a && u.to > a) && (this.mightDrag = {
				node: r,
				pos: a,
				addAttr: !!(this.target && !this.target.draggable),
				setUneditable: !!(this.target && dt && !this.target.hasAttribute("contentEditable"))
			}), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
				this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false")
			}, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), tn(e, "pointer")
		}
		done() {
			this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => Dt(this.view)), this.view.input.mouseDown = null
		}
		up(e) {
			if (this.done(), !this.view.dom.contains(e.target)) return;
			let n = this.pos;
			this.view.state.doc != this.startDoc && (n = this.view.posAtCoords(ua(e))), this.updateAllowDefault(e), this.allowDefault || !n ? tn(this.view, "pointer") : tW(this.view, n.pos, n.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || _e && this.mightDrag && !this.mightDrag.node.isAtom || Te && !this.view.state.selection.visible && Math.min(Math.abs(n.pos - this.view.state.selection.from), Math.abs(n.pos - this.view.state.selection.to)) <= 2) ? (Ei(this.view, L.near(this.view.state.doc.resolve(n.pos)), "pointer"), e.preventDefault()) : tn(this.view, "pointer")
		}
		move(e) {
			this.updateAllowDefault(e), tn(this.view, "pointer"), e.buttons == 0 && this.done()
		}
		updateAllowDefault(e) {
			!this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0)
		}
	}
	ze.touchstart = t => {
		t.input.lastTouch = Date.now(), Xl(t), tn(t, "pointer")
	}, ze.touchmove = t => {
		t.input.lastTouch = Date.now(), tn(t, "pointer")
	}, ze.contextmenu = t => Xl(t);

	function mf(t, e) {
		return t.composing ? !0 : _e && Math.abs(e.timeStamp - t.input.compositionEndedAt) < 500 ? (t.input.compositionEndedAt = -2e8, !0) : !1
	}
	const aW = mt ? 5e3 : -1;
	Oe.compositionstart = Oe.compositionupdate = t => {
		if (!t.composing) {
			t.domObserver.flush();
			let {
				state: e
			} = t, n = e.selection.$from;
			if (e.selection.empty && (e.storedMarks || !n.textOffset && n.parentOffset && n.nodeBefore.marks.some(i => i.type.spec.inclusive === !1))) t.markCursor = t.state.storedMarks || n.marks(), ca(t, !0), t.markCursor = null;
			else if (ca(t), dt && e.selection.empty && n.parentOffset && !n.textOffset && n.nodeBefore.marks.length) {
				let i = t.domSelectionRange();
				for (let o = i.focusNode, r = i.focusOffset; o && o.nodeType == 1 && r != 0;) {
					let a = r < 0 ? o.lastChild : o.childNodes[r - 1];
					if (!a) break;
					if (a.nodeType == 3) {
						t.domSelection().collapse(a, a.nodeValue.length);
						break
					} else o = a, r = -1
				}
			}
			t.input.composing = !0
		}
		pf(t, aW)
	}, Oe.compositionend = (t, e) => {
		t.composing && (t.input.composing = !1, t.input.compositionEndedAt = e.timeStamp, t.input.compositionID++, pf(t, 20))
	};

	function pf(t, e) {
		clearTimeout(t.input.composingTimeout), e > -1 && (t.input.composingTimeout = setTimeout(() => ca(t), e))
	}

	function ff(t) {
		for (t.composing && (t.input.composing = !1, t.input.compositionEndedAt = sW()); t.input.compositionNodes.length > 0;) t.input.compositionNodes.pop().markParentsDirty()
	}

	function sW() {
		let t = document.createEvent("Event");
		return t.initEvent("event", !0, !0), t.timeStamp
	}

	function ca(t, e = !1) {
		if (!(mt && t.domObserver.flushingSoon >= 0)) {
			if (t.domObserver.forceFlush(), ff(t), e || t.docView && t.docView.dirty) {
				let n = Ul(t);
				return n && !n.eq(t.state.selection) ? t.dispatch(t.state.tr.setSelection(n)) : t.updateState(t.state), !0
			}
			return !1
		}
	}

	function lW(t, e) {
		if (!t.dom.parentNode) return;
		let n = t.dom.parentNode.appendChild(document.createElement("div"));
		n.appendChild(e), n.style.cssText = "position: fixed; left: -10000px; top: 10px";
		let i = getSelection(),
			o = document.createRange();
		o.selectNodeContents(e), t.dom.blur(), i.removeAllRanges(), i.addRange(o), setTimeout(() => {
			n.parentNode && n.parentNode.removeChild(n), t.focus()
		}, 50)
	}
	const Ti = Le && Qt < 15 || Ci && l8 < 604;
	ze.copy = Oe.cut = (t, e) => {
		let n = e,
			i = t.state.selection,
			o = n.type == "cut";
		if (i.empty) return;
		let r = Ti ? null : n.clipboardData,
			a = i.content(),
			{
				dom: s,
				text: l
			} = tf(t, a);
		r ? (n.preventDefault(), r.clearData(), r.setData("text/html", s.innerHTML), r.setData("text/plain", l)) : lW(t, s), o && t.dispatch(t.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"))
	};

	function uW(t) {
		return t.openStart == 0 && t.openEnd == 0 && t.content.childCount == 1 ? t.content.firstChild : null
	}

	function cW(t, e) {
		if (!t.dom.parentNode) return;
		let n = t.input.shiftKey || t.state.selection.$from.parent.type.spec.code,
			i = t.dom.parentNode.appendChild(document.createElement(n ? "textarea" : "div"));
		n || (i.contentEditable = "true"), i.style.cssText = "position: fixed; left: -10000px; top: 10px", i.focus();
		let o = t.input.shiftKey && t.input.lastKeyCode != 45;
		setTimeout(() => {
			t.focus(), i.parentNode && i.parentNode.removeChild(i), n ? Mo(t, i.value, null, o, e) : Mo(t, i.textContent, i.innerHTML, o, e)
		}, 50)
	}

	function Mo(t, e, n, i, o) {
		let r = nf(t, e, n, i, t.state.selection.$from);
		if (t.someProp("handlePaste", l => l(t, o, r || P.empty))) return !0;
		if (!r) return !1;
		let a = uW(r),
			s = a ? t.state.tr.replaceSelectionWith(a, i) : t.state.tr.replaceSelection(r);
		return t.dispatch(s.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0
	}
	Oe.paste = (t, e) => {
		let n = e;
		if (t.composing && !mt) return;
		let i = Ti ? null : n.clipboardData,
			o = t.input.shiftKey && t.input.lastKeyCode != 45;
		i && Mo(t, i.getData("text/plain"), i.getData("text/html"), o, n) ? n.preventDefault() : cW(t, n)
	};
	class dW {
		constructor(e, n) {
			this.slice = e, this.move = n
		}
	}
	const hf = Xe ? "altKey" : "ctrlKey";
	ze.dragstart = (t, e) => {
		let n = e,
			i = t.input.mouseDown;
		if (i && i.done(), !n.dataTransfer) return;
		let o = t.state.selection,
			r = o.empty ? null : t.posAtCoords(ua(n));
		if (!(r && r.pos >= o.from && r.pos <= (o instanceof R ? o.to - 1 : o.to))) {
			if (i && i.mightDrag) t.dispatch(t.state.tr.setSelection(R.create(t.state.doc, i.mightDrag.pos)));
			else if (n.target && n.target.nodeType == 1) {
				let u = t.docView.nearestDesc(n.target, !0);
				u && u.node.type.spec.draggable && u != t.docView && t.dispatch(t.state.tr.setSelection(R.create(t.state.doc, u.posBefore)))
			}
		}
		let a = t.state.selection.content(),
			{
				dom: s,
				text: l
			} = tf(t, a);
		n.dataTransfer.clearData(), n.dataTransfer.setData(Ti ? "Text" : "text/html", s.innerHTML), n.dataTransfer.effectAllowed = "copyMove", Ti || n.dataTransfer.setData("text/plain", l), t.dragging = new dW(a, !n[hf])
	}, ze.dragend = t => {
		let e = t.dragging;
		window.setTimeout(() => {
			t.dragging == e && (t.dragging = null)
		}, 50)
	}, Oe.dragover = Oe.dragenter = (t, e) => e.preventDefault(), Oe.drop = (t, e) => {
		let n = e,
			i = t.dragging;
		if (t.dragging = null, !n.dataTransfer) return;
		let o = t.posAtCoords(ua(n));
		if (!o) return;
		let r = t.state.doc.resolve(o.pos),
			a = i && i.slice;
		a ? t.someProp("transformPasted", f => {
			a = f(a, t)
		}) : a = nf(t, n.dataTransfer.getData(Ti ? "Text" : "text/plain"), Ti ? null : n.dataTransfer.getData("text/html"), !1, r);
		let s = !!(i && !n[hf]);
		if (t.someProp("handleDrop", f => f(t, n, a || P.empty, s))) {
			n.preventDefault();
			return
		}
		if (!a) return;
		n.preventDefault();
		let l = a ? V6(t.state.doc, r.pos, a) : r.pos;
		l == null && (l = r.pos);
		let u = t.state.tr;
		s && u.deleteSelection();
		let c = u.mapping.map(l),
			m = a.openStart == 0 && a.openEnd == 0 && a.content.childCount == 1,
			d = u.doc;
		if (m ? u.replaceRangeWith(c, c, a.content.firstChild) : u.replaceRange(c, c, a), u.doc.eq(d)) return;
		let p = u.doc.resolve(c);
		if (m && R.isSelectable(a.content.firstChild) && p.nodeAfter && p.nodeAfter.sameMarkup(a.content.firstChild)) u.setSelection(new R(p));
		else {
			let f = u.mapping.map(l);
			u.mapping.maps[u.mapping.maps.length - 1].forEach((y, h, g, b) => f = b), u.setSelection(Hl(t, p, u.doc.resolve(f)))
		}
		t.focus(), t.dispatch(u.setMeta("uiEvent", "drop"))
	}, ze.focus = t => {
		t.input.lastFocus = Date.now(), t.focused || (t.domObserver.stop(), t.dom.classList.add("ProseMirror-focused"), t.domObserver.start(), t.focused = !0, setTimeout(() => {
			t.docView && t.hasFocus() && !t.domObserver.currentSelection.eq(t.domSelectionRange()) && Dt(t)
		}, 20))
	}, ze.blur = (t, e) => {
		let n = e;
		t.focused && (t.domObserver.stop(), t.dom.classList.remove("ProseMirror-focused"), t.domObserver.start(), n.relatedTarget && t.dom.contains(n.relatedTarget) && t.domObserver.currentSelection.clear(), t.focused = !1)
	}, ze.beforeinput = (t, e) => {
		if (Te && mt && e.inputType == "deleteContentBackward") {
			t.domObserver.flushSoon();
			let {
				domChangeCount: i
			} = t.input;
			setTimeout(() => {
				if (t.input.domChangeCount != i || (t.dom.blur(), t.focus(), t.someProp("handleKeyDown", r => r(t, Rn(8, "Backspace"))))) return;
				let {
					$cursor: o
				} = t.state.selection;
				o && o.pos > 0 && t.dispatch(t.state.tr.delete(o.pos - 1, o.pos).scrollIntoView())
			}, 50)
		}
	};
	for (let t in Oe) ze[t] = Oe[t];

	function Po(t, e) {
		if (t == e) return !0;
		for (let n in t)
			if (t[n] !== e[n]) return !1;
		for (let n in e)
			if (!(n in t)) return !1;
		return !0
	}
	class Zl {
		constructor(e, n) {
			this.toDOM = e, this.spec = n || Un, this.side = this.spec.side || 0
		}
		map(e, n, i, o) {
			let {
				pos: r,
				deleted: a
			} = e.mapResult(n.from + o, this.side < 0 ? -1 : 1);
			return a ? null : new et(r - i, r - i, this)
		}
		valid() {
			return !0
		}
		eq(e) {
			return this == e || e instanceof Zl && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && Po(this.spec, e.spec))
		}
		destroy(e) {
			this.spec.destroy && this.spec.destroy(e)
		}
	}
	class nn {
		constructor(e, n) {
			this.attrs = e, this.spec = n || Un
		}
		map(e, n, i, o) {
			let r = e.map(n.from + o, this.spec.inclusiveStart ? -1 : 1) - i,
				a = e.map(n.to + o, this.spec.inclusiveEnd ? 1 : -1) - i;
			return r >= a ? null : new et(r, a, this)
		}
		valid(e, n) {
			return n.from < n.to
		}
		eq(e) {
			return this == e || e instanceof nn && Po(this.attrs, e.attrs) && Po(this.spec, e.spec)
		}
		static is(e) {
			return e.type instanceof nn
		}
		destroy() {}
	}
	class eu {
		constructor(e, n) {
			this.attrs = e, this.spec = n || Un
		}
		map(e, n, i, o) {
			let r = e.mapResult(n.from + o, 1);
			if (r.deleted) return null;
			let a = e.mapResult(n.to + o, -1);
			return a.deleted || a.pos <= r.pos ? null : new et(r.pos - i, a.pos - i, this)
		}
		valid(e, n) {
			let {
				index: i,
				offset: o
			} = e.content.findIndex(n.from), r;
			return o == n.from && !(r = e.child(i)).isText && o + r.nodeSize == n.to
		}
		eq(e) {
			return this == e || e instanceof eu && Po(this.attrs, e.attrs) && Po(this.spec, e.spec)
		}
		destroy() {}
	}
	class et {
		constructor(e, n, i) {
			this.from = e, this.to = n, this.type = i
		}
		copy(e, n) {
			return new et(e, n, this.type)
		}
		eq(e, n = 0) {
			return this.type.eq(e.type) && this.from + n == e.from && this.to + n == e.to
		}
		map(e, n, i) {
			return this.type.map(e, this, n, i)
		}
		static widget(e, n, i) {
			return new et(e, e, new Zl(n, i))
		}
		static inline(e, n, i, o) {
			return new et(e, n, new nn(i, o))
		}
		static node(e, n, i, o) {
			return new et(e, n, new eu(i, o))
		}
		get spec() {
			return this.type.spec
		}
		get inline() {
			return this.type instanceof nn
		}
	}
	const ji = [],
		Un = {};
	class ue {
		constructor(e, n) {
			this.local = e.length ? e : ji, this.children = n.length ? n : ji
		}
		static create(e, n) {
			return n.length ? da(n, e, 0, Un) : je
		}
		find(e, n, i) {
			let o = [];
			return this.findInner(e ?? 0, n ?? 1e9, o, 0, i), o
		}
		findInner(e, n, i, o, r) {
			for (let a = 0; a < this.local.length; a++) {
				let s = this.local[a];
				s.from <= n && s.to >= e && (!r || r(s.spec)) && i.push(s.copy(s.from + o, s.to + o))
			}
			for (let a = 0; a < this.children.length; a += 3)
				if (this.children[a] < n && this.children[a + 1] > e) {
					let s = this.children[a] + 1;
					this.children[a + 2].findInner(e - s, n - s, i, o + s, r)
				}
		}
		map(e, n, i) {
			return this == je || e.maps.length == 0 ? this : this.mapInner(e, n, 0, 0, i || Un)
		}
		mapInner(e, n, i, o, r) {
			let a;
			for (let s = 0; s < this.local.length; s++) {
				let l = this.local[s].map(e, i, o);
				l && l.type.valid(n, l) ? (a || (a = [])).push(l) : r.onRemove && r.onRemove(this.local[s].spec)
			}
			return this.children.length ? mW(this.children, a || [], e, n, i, o, r) : a ? new ue(a.sort(Vn), ji) : je
		}
		add(e, n) {
			return n.length ? this == je ? ue.create(e, n) : this.addInner(e, n, 0) : this
		}
		addInner(e, n, i) {
			let o, r = 0;
			e.forEach((s, l) => {
				let u = l + i,
					c;
				if (c = yf(n, s, u)) {
					for (o || (o = this.children.slice()); r < o.length && o[r] < l;) r += 3;
					o[r] == l ? o[r + 2] = o[r + 2].addInner(s, c, u + 1) : o.splice(r, 0, l, l + s.nodeSize, da(c, s, u + 1, Un)), r += 3
				}
			});
			let a = gf(r ? bf(n) : n, -i);
			for (let s = 0; s < a.length; s++) a[s].type.valid(e, a[s]) || a.splice(s--, 1);
			return new ue(a.length ? this.local.concat(a).sort(Vn) : this.local, o || this.children)
		}
		remove(e) {
			return e.length == 0 || this == je ? this : this.removeInner(e, 0)
		}
		removeInner(e, n) {
			let i = this.children,
				o = this.local;
			for (let r = 0; r < i.length; r += 3) {
				let a, s = i[r] + n,
					l = i[r + 1] + n;
				for (let c = 0, m; c < e.length; c++)(m = e[c]) && m.from > s && m.to < l && (e[c] = null, (a || (a = [])).push(m));
				if (!a) continue;
				i == this.children && (i = this.children.slice());
				let u = i[r + 2].removeInner(a, s + 1);
				u != je ? i[r + 2] = u : (i.splice(r, 3), r -= 3)
			}
			if (o.length) {
				for (let r = 0, a; r < e.length; r++)
					if (a = e[r])
						for (let s = 0; s < o.length; s++) o[s].eq(a, n) && (o == this.local && (o = this.local.slice()), o.splice(s--, 1))
			}
			return i == this.children && o == this.local ? this : o.length || i.length ? new ue(o, i) : je
		}
		forChild(e, n) {
			if (this == je) return this;
			if (n.isLeaf) return ue.empty;
			let i, o;
			for (let s = 0; s < this.children.length; s += 3)
				if (this.children[s] >= e) {
					this.children[s] == e && (i = this.children[s + 2]);
					break
				} let r = e + 1,
				a = r + n.content.size;
			for (let s = 0; s < this.local.length; s++) {
				let l = this.local[s];
				if (l.from < a && l.to > r && l.type instanceof nn) {
					let u = Math.max(r, l.from) - r,
						c = Math.min(a, l.to) - r;
					u < c && (o || (o = [])).push(l.copy(u, c))
				}
			}
			if (o) {
				let s = new ue(o.sort(Vn), ji);
				return i ? new on([s, i]) : s
			}
			return i || je
		}
		eq(e) {
			if (this == e) return !0;
			if (!(e instanceof ue) || this.local.length != e.local.length || this.children.length != e.children.length) return !1;
			for (let n = 0; n < this.local.length; n++)
				if (!this.local[n].eq(e.local[n])) return !1;
			for (let n = 0; n < this.children.length; n += 3)
				if (this.children[n] != e.children[n] || this.children[n + 1] != e.children[n + 1] || !this.children[n + 2].eq(e.children[n + 2])) return !1;
			return !0
		}
		locals(e) {
			return tu(this.localsInner(e))
		}
		localsInner(e) {
			if (this == je) return ji;
			if (e.inlineContent || !this.local.some(nn.is)) return this.local;
			let n = [];
			for (let i = 0; i < this.local.length; i++) this.local[i].type instanceof nn || n.push(this.local[i]);
			return n
		}
	}
	ue.empty = new ue([], []), ue.removeOverlap = tu;
	const je = ue.empty;
	class on {
		constructor(e) {
			this.members = e
		}
		map(e, n) {
			const i = this.members.map(o => o.map(e, n, Un));
			return on.from(i)
		}
		forChild(e, n) {
			if (n.isLeaf) return ue.empty;
			let i = [];
			for (let o = 0; o < this.members.length; o++) {
				let r = this.members[o].forChild(e, n);
				r != je && (r instanceof on ? i = i.concat(r.members) : i.push(r))
			}
			return on.from(i)
		}
		eq(e) {
			if (!(e instanceof on) || e.members.length != this.members.length) return !1;
			for (let n = 0; n < this.members.length; n++)
				if (!this.members[n].eq(e.members[n])) return !1;
			return !0
		}
		locals(e) {
			let n, i = !0;
			for (let o = 0; o < this.members.length; o++) {
				let r = this.members[o].localsInner(e);
				if (r.length)
					if (!n) n = r;
					else {
						i && (n = n.slice(), i = !1);
						for (let a = 0; a < r.length; a++) n.push(r[a])
					}
			}
			return n ? tu(i ? n : n.sort(Vn)) : ji
		}
		static from(e) {
			switch (e.length) {
				case 0:
					return je;
				case 1:
					return e[0];
				default:
					return new on(e.every(n => n instanceof ue) ? e : e.reduce((n, i) => n.concat(i instanceof ue ? i : i.members), []))
			}
		}
	}

	function mW(t, e, n, i, o, r, a) {
		let s = t.slice();
		for (let u = 0, c = r; u < n.maps.length; u++) {
			let m = 0;
			n.maps[u].forEach((d, p, f, y) => {
				let h = y - f - (p - d);
				for (let g = 0; g < s.length; g += 3) {
					let b = s[g + 1];
					if (b < 0 || d > b + c - m) continue;
					let v = s[g] + c - m;
					p >= v ? s[g + 1] = d <= v ? -2 : -1 : f >= o && h && (s[g] += h, s[g + 1] += h)
				}
				m += h
			}), c = n.maps[u].map(c, -1)
		}
		let l = !1;
		for (let u = 0; u < s.length; u += 3)
			if (s[u + 1] < 0) {
				if (s[u + 1] == -2) {
					l = !0, s[u + 1] = -1;
					continue
				}
				let c = n.map(t[u] + r),
					m = c - o;
				if (m < 0 || m >= i.content.size) {
					l = !0;
					continue
				}
				let d = n.map(t[u + 1] + r, -1),
					p = d - o,
					{
						index: f,
						offset: y
					} = i.content.findIndex(m),
					h = i.maybeChild(f);
				if (h && y == m && y + h.nodeSize == p) {
					let g = s[u + 2].mapInner(n, h, c + 1, t[u] + r + 1, a);
					g != je ? (s[u] = m, s[u + 1] = p, s[u + 2] = g) : (s[u + 1] = -2, l = !0)
				} else l = !0
			} if (l) {
			let u = pW(s, t, e, n, o, r, a),
				c = da(u, i, 0, a);
			e = c.local;
			for (let m = 0; m < s.length; m += 3) s[m + 1] < 0 && (s.splice(m, 3), m -= 3);
			for (let m = 0, d = 0; m < c.children.length; m += 3) {
				let p = c.children[m];
				for (; d < s.length && s[d] < p;) d += 3;
				s.splice(d, 0, c.children[m], c.children[m + 1], c.children[m + 2])
			}
		}
		return new ue(e.sort(Vn), s)
	}

	function gf(t, e) {
		if (!e || !t.length) return t;
		let n = [];
		for (let i = 0; i < t.length; i++) {
			let o = t[i];
			n.push(new et(o.from + e, o.to + e, o.type))
		}
		return n
	}

	function pW(t, e, n, i, o, r, a) {
		function s(l, u) {
			for (let c = 0; c < l.local.length; c++) {
				let m = l.local[c].map(i, o, u);
				m ? n.push(m) : a.onRemove && a.onRemove(l.local[c].spec)
			}
			for (let c = 0; c < l.children.length; c += 3) s(l.children[c + 2], l.children[c] + u + 1)
		}
		for (let l = 0; l < t.length; l += 3) t[l + 1] == -1 && s(t[l + 2], e[l] + r + 1);
		return n
	}

	function yf(t, e, n) {
		if (e.isLeaf) return null;
		let i = n + e.nodeSize,
			o = null;
		for (let r = 0, a; r < t.length; r++)(a = t[r]) && a.from > n && a.to < i && ((o || (o = [])).push(a), t[r] = null);
		return o
	}

	function bf(t) {
		let e = [];
		for (let n = 0; n < t.length; n++) t[n] != null && e.push(t[n]);
		return e
	}

	function da(t, e, n, i) {
		let o = [],
			r = !1;
		e.forEach((s, l) => {
			let u = yf(t, s, l + n);
			if (u) {
				r = !0;
				let c = da(u, s, n + l + 1, i);
				c != je && o.push(l, l + s.nodeSize, c)
			}
		});
		let a = gf(r ? bf(t) : t, -n).sort(Vn);
		for (let s = 0; s < a.length; s++) a[s].type.valid(e, a[s]) || (i.onRemove && i.onRemove(a[s].spec), a.splice(s--, 1));
		return a.length || o.length ? new ue(a, o) : je
	}

	function Vn(t, e) {
		return t.from - e.from || t.to - e.to
	}

	function tu(t) {
		let e = t;
		for (let n = 0; n < e.length - 1; n++) {
			let i = e[n];
			if (i.from != i.to)
				for (let o = n + 1; o < e.length; o++) {
					let r = e[o];
					if (r.from == i.from) {
						r.to != i.to && (e == t && (e = t.slice()), e[o] = r.copy(r.from, i.to), kf(e, o + 1, r.copy(i.to, r.to)));
						continue
					} else {
						r.from < i.to && (e == t && (e = t.slice()), e[n] = i.copy(i.from, r.from), kf(e, o, i.copy(r.from, i.to)));
						break
					}
				}
		}
		return e
	}

	function kf(t, e, n) {
		for (; e < t.length && Vn(n, t[e]) > 0;) e++;
		t.splice(e, 0, n)
	}

	function nu(t) {
		let e = [];
		return t.someProp("decorations", n => {
			let i = n(t.state);
			i && i != je && e.push(i)
		}), t.cursorWrapper && e.push(ue.create(t.state.doc, [t.cursorWrapper.deco])), on.from(e)
	}
	const fW = {
			childList: !0,
			characterData: !0,
			characterDataOldValue: !0,
			attributes: !0,
			attributeOldValue: !0,
			subtree: !0
		},
		hW = Le && Qt <= 11;
	class gW {
		constructor() {
			this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0
		}
		set(e) {
			this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset
		}
		clear() {
			this.anchorNode = this.focusNode = null
		}
		eq(e) {
			return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset
		}
	}
	class yW {
		constructor(e, n) {
			this.view = e, this.handleDOMChange = n, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new gW, this.onCharData = null, this.suppressingSelectionUpdates = !1, this.observer = window.MutationObserver && new window.MutationObserver(i => {
				for (let o = 0; o < i.length; o++) this.queue.push(i[o]);
				Le && Qt <= 11 && i.some(o => o.type == "childList" && o.removedNodes.length || o.type == "characterData" && o.oldValue.length > o.target.nodeValue.length) ? this.flushSoon() : this.flush()
			}), hW && (this.onCharData = i => {
				this.queue.push({
					target: i.target,
					type: "characterData",
					oldValue: i.prevValue
				}), this.flushSoon()
			}), this.onSelectionChange = this.onSelectionChange.bind(this)
		}
		flushSoon() {
			this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
				this.flushingSoon = -1, this.flush()
			}, 20))
		}
		forceFlush() {
			this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush())
		}
		start() {
			this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, fW)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection()
		}
		stop() {
			if (this.observer) {
				let e = this.observer.takeRecords();
				if (e.length) {
					for (let n = 0; n < e.length; n++) this.queue.push(e[n]);
					window.setTimeout(() => this.flush(), 20)
				}
				this.observer.disconnect()
			}
			this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection()
		}
		connectSelection() {
			this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange)
		}
		disconnectSelection() {
			this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange)
		}
		suppressSelectionUpdates() {
			this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50)
		}
		onSelectionChange() {
			if (qp(this.view)) {
				if (this.suppressingSelectionUpdates) return Dt(this.view);
				if (Le && Qt <= 11 && !this.view.state.selection.empty) {
					let e = this.view.domSelectionRange();
					if (e.focusNode && In(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset)) return this.flushSoon()
				}
				this.flush()
			}
		}
		setCurSelection() {
			this.currentSelection.set(this.view.domSelectionRange())
		}
		ignoreSelectionChange(e) {
			if (!e.focusNode) return !0;
			let n = new Set,
				i;
			for (let r = e.focusNode; r; r = Eo(r)) n.add(r);
			for (let r = e.anchorNode; r; r = Eo(r))
				if (n.has(r)) {
					i = r;
					break
				} let o = i && this.view.docView.nearestDesc(i);
			if (o && o.ignoreMutation({
					type: "selection",
					target: i.nodeType == 3 ? i.parentNode : i
				})) return this.setCurSelection(), !0
		}
		flush() {
			let {
				view: e
			} = this;
			if (!e.docView || this.flushingSoon > -1) return;
			let n = this.observer ? this.observer.takeRecords() : [];
			this.queue.length && (n = this.queue.concat(n), this.queue.length = 0);
			let i = e.domSelectionRange(),
				o = !this.suppressingSelectionUpdates && !this.currentSelection.eq(i) && qp(e) && !this.ignoreSelectionChange(i),
				r = -1,
				a = -1,
				s = !1,
				l = [];
			if (e.editable)
				for (let c = 0; c < n.length; c++) {
					let m = this.registerMutation(n[c], l);
					m && (r = r < 0 ? m.from : Math.min(m.from, r), a = a < 0 ? m.to : Math.max(m.to, a), m.typeOver && (s = !0))
				}
			if (dt && l.length > 1) {
				let c = l.filter(m => m.nodeName == "BR");
				if (c.length == 2) {
					let m = c[0],
						d = c[1];
					m.parentNode && m.parentNode.parentNode == d.parentNode ? d.remove() : m.remove()
				}
			}
			let u = null;
			r < 0 && o && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && ra(i) && (u = Ul(e)) && u.eq(L.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, Dt(e), this.currentSelection.set(i), e.scrollToSelection()) : (r > -1 || o) && (r > -1 && (e.docView.markDirty(r, a), bW(e)), this.handleDOMChange(r, a, s, l), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(i) || Dt(e), this.currentSelection.set(i))
		}
		registerMutation(e, n) {
			if (n.indexOf(e.target) > -1) return null;
			let i = this.view.docView.nearestDesc(e.target);
			if (e.type == "attributes" && (i == this.view.docView || e.attributeName == "contenteditable" || e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !i || i.ignoreMutation(e)) return null;
			if (e.type == "childList") {
				for (let c = 0; c < e.addedNodes.length; c++) n.push(e.addedNodes[c]);
				if (i.contentDOM && i.contentDOM != i.dom && !i.contentDOM.contains(e.target)) return {
					from: i.posBefore,
					to: i.posAfter
				};
				let o = e.previousSibling,
					r = e.nextSibling;
				if (Le && Qt <= 11 && e.addedNodes.length)
					for (let c = 0; c < e.addedNodes.length; c++) {
						let {
							previousSibling: m,
							nextSibling: d
						} = e.addedNodes[c];
						(!m || Array.prototype.indexOf.call(e.addedNodes, m) < 0) && (o = m), (!d || Array.prototype.indexOf.call(e.addedNodes, d) < 0) && (r = d)
					}
				let a = o && o.parentNode == e.target ? We(o) + 1 : 0,
					s = i.localPosFromDOM(e.target, a, -1),
					l = r && r.parentNode == e.target ? We(r) : e.target.childNodes.length,
					u = i.localPosFromDOM(e.target, l, 1);
				return {
					from: s,
					to: u
				}
			} else return e.type == "attributes" ? {
				from: i.posAtStart - i.border,
				to: i.posAtEnd + i.border
			} : {
				from: i.posAtStart,
				to: i.posAtEnd,
				typeOver: e.target.nodeValue == e.oldValue
			}
		}
	}
	let vf = new WeakMap,
		wf = !1;

	function bW(t) {
		if (!vf.has(t) && (vf.set(t, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(t.dom).whiteSpace) !== -1)) {
			if (t.requiresGeckoHackNode = dt, wf) return;
			console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), wf = !0
		}
	}

	function kW(t) {
		let e;

		function n(l) {
			l.preventDefault(), l.stopImmediatePropagation(), e = l.getTargetRanges()[0]
		}
		t.dom.addEventListener("beforeinput", n, !0), document.execCommand("indent"), t.dom.removeEventListener("beforeinput", n, !0);
		let i = e.startContainer,
			o = e.startOffset,
			r = e.endContainer,
			a = e.endOffset,
			s = t.domAtPos(t.state.selection.anchor);
		return In(s.node, s.offset, r, a) && ([i, o, r, a] = [r, a, i, o]), {
			anchorNode: i,
			anchorOffset: o,
			focusNode: r,
			focusOffset: a
		}
	}

	function vW(t, e, n) {
		let {
			node: i,
			fromOffset: o,
			toOffset: r,
			from: a,
			to: s
		} = t.docView.parseRange(e, n), l = t.domSelectionRange(), u, c = l.anchorNode;
		if (c && t.dom.contains(c.nodeType == 1 ? c : c.parentNode) && (u = [{
				node: c,
				offset: l.anchorOffset
			}], ra(l) || u.push({
				node: l.focusNode,
				offset: l.focusOffset
			})), Te && t.input.lastKeyCode === 8)
			for (let h = r; h > o; h--) {
				let g = i.childNodes[h - 1],
					b = g.pmViewDesc;
				if (g.nodeName == "BR" && !b) {
					r = h;
					break
				}
				if (!b || b.size) break
			}
		let m = t.state.doc,
			d = t.someProp("domParser") || hi.fromSchema(t.state.schema),
			p = m.resolve(a),
			f = null,
			y = d.parse(i, {
				topNode: p.parent,
				topMatch: p.parent.contentMatchAt(p.index()),
				topOpen: !0,
				from: o,
				to: r,
				preserveWhitespace: p.parent.type.whitespace == "pre" ? "full" : !0,
				findPositions: u,
				ruleFromNode: wW,
				context: p
			});
		if (u && u[0].pos != null) {
			let h = u[0].pos,
				g = u[1] && u[1].pos;
			g == null && (g = h), f = {
				anchor: h + a,
				head: g + a
			}
		}
		return {
			doc: y,
			sel: f,
			from: a,
			to: s
		}
	}

	function wW(t) {
		let e = t.pmViewDesc;
		if (e) return e.parseRule();
		if (t.nodeName == "BR" && t.parentNode) {
			if (_e && /^(ul|ol)$/i.test(t.parentNode.nodeName)) {
				let n = document.createElement("div");
				return n.appendChild(document.createElement("li")), {
					skip: n
				}
			} else if (t.parentNode.lastChild == t || _e && /^(tr|table)$/i.test(t.parentNode.nodeName)) return {
				ignore: !0
			}
		} else if (t.nodeName == "IMG" && t.getAttribute("mark-placeholder")) return {
			ignore: !0
		};
		return null
	}
	const SW = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;

	function CW(t, e, n, i, o) {
		if (e < 0) {
			let T = t.input.lastSelectionTime > Date.now() - 50 ? t.input.lastSelectionOrigin : null,
				M = Ul(t, T);
			if (M && !t.state.selection.eq(M)) {
				if (Te && mt && t.input.lastKeyCode === 13 && Date.now() - 100 < t.input.lastKeyCodeTime && t.someProp("handleKeyDown", qe => qe(t, Rn(13, "Enter")))) return;
				let U = t.state.tr.setSelection(M);
				T == "pointer" ? U.setMeta("pointer", !0) : T == "key" && U.scrollIntoView(), t.composing && U.setMeta("composition", t.input.compositionID), t.dispatch(U)
			}
			return
		}
		let r = t.state.doc.resolve(e),
			a = r.sharedDepth(n);
		e = r.before(a + 1), n = t.state.doc.resolve(n).after(a + 1);
		let s = t.state.selection,
			l = vW(t, e, n),
			u = t.state.doc,
			c = u.slice(l.from, l.to),
			m, d;
		t.input.lastKeyCode === 8 && Date.now() - 100 < t.input.lastKeyCodeTime ? (m = t.state.selection.to, d = "end") : (m = t.state.selection.from, d = "start"), t.input.lastKeyCode = null;
		let p = TW(c.content, l.doc.content, l.from, m, d);
		if ((Ci && t.input.lastIOSEnter > Date.now() - 225 || mt) && o.some(T => T.nodeType == 1 && !SW.test(T.nodeName)) && (!p || p.endA >= p.endB) && t.someProp("handleKeyDown", T => T(t, Rn(13, "Enter")))) {
			t.input.lastIOSEnter = 0;
			return
		}
		if (!p)
			if (i && s instanceof F && !s.empty && s.$head.sameParent(s.$anchor) && !t.composing && !(l.sel && l.sel.anchor != l.sel.head)) p = {
				start: s.from,
				endA: s.to,
				endB: s.to
			};
			else {
				if (l.sel) {
					let T = Sf(t, t.state.doc, l.sel);
					if (T && !T.eq(t.state.selection)) {
						let M = t.state.tr.setSelection(T);
						t.composing && M.setMeta("composition", t.input.compositionID), t.dispatch(M)
					}
				}
				return
			} if (Te && t.cursorWrapper && l.sel && l.sel.anchor == t.cursorWrapper.deco.from && l.sel.head == l.sel.anchor) {
			let T = p.endB - p.start;
			l.sel = {
				anchor: l.sel.anchor + T,
				head: l.sel.anchor + T
			}
		}
		t.input.domChangeCount++, t.state.selection.from < t.state.selection.to && p.start == p.endB && t.state.selection instanceof F && (p.start > t.state.selection.from && p.start <= t.state.selection.from + 2 && t.state.selection.from >= l.from ? p.start = t.state.selection.from : p.endA < t.state.selection.to && p.endA >= t.state.selection.to - 2 && t.state.selection.to <= l.to && (p.endB += t.state.selection.to - p.endA, p.endA = t.state.selection.to)), Le && Qt <= 11 && p.endB == p.start + 1 && p.endA == p.start && p.start > l.from && l.doc.textBetween(p.start - l.from - 1, p.start - l.from + 1) == "  " && (p.start--, p.endA--, p.endB--);
		let f = l.doc.resolveNoCache(p.start - l.from),
			y = l.doc.resolveNoCache(p.endB - l.from),
			h = u.resolve(p.start),
			g = f.sameParent(y) && f.parent.inlineContent && h.end() >= p.endA,
			b;
		if ((Ci && t.input.lastIOSEnter > Date.now() - 225 && (!g || o.some(T => T.nodeName == "DIV" || T.nodeName == "P")) || !g && f.pos < l.doc.content.size && !f.sameParent(y) && (b = L.findFrom(l.doc.resolve(f.pos + 1), 1, !0)) && b.head == y.pos) && t.someProp("handleKeyDown", T => T(t, Rn(13, "Enter")))) {
			t.input.lastIOSEnter = 0;
			return
		}
		if (t.state.selection.anchor > p.start && EW(u, p.start, p.endA, f, y) && t.someProp("handleKeyDown", T => T(t, Rn(8, "Backspace")))) {
			mt && Te && t.domObserver.suppressSelectionUpdates();
			return
		}
		Te && mt && p.endB == p.start && (t.input.lastAndroidDelete = Date.now()), mt && !g && f.start() != y.start() && y.parentOffset == 0 && f.depth == y.depth && l.sel && l.sel.anchor == l.sel.head && l.sel.head == p.endA && (p.endB -= 2, y = l.doc.resolveNoCache(p.endB - l.from), setTimeout(() => {
			t.someProp("handleKeyDown", function(T) {
				return T(t, Rn(13, "Enter"))
			})
		}, 20));
		let v = p.start,
			w = p.endA,
			x, S, E;
		if (g) {
			if (f.pos == y.pos) Le && Qt <= 11 && f.parentOffset == 0 && (t.domObserver.suppressSelectionUpdates(), setTimeout(() => Dt(t), 20)), x = t.state.tr.delete(v, w), S = u.resolve(p.start).marksAcross(u.resolve(p.endA));
			else if (p.endA == p.endB && (E = xW(f.parent.content.cut(f.parentOffset, y.parentOffset), h.parent.content.cut(h.parentOffset, p.endA - h.start())))) x = t.state.tr, E.type == "add" ? x.addMark(v, w, E.mark) : x.removeMark(v, w, E.mark);
			else if (f.parent.child(f.index()).isText && f.index() == y.index() - (y.textOffset ? 0 : 1)) {
				let T = f.parent.textBetween(f.parentOffset, y.parentOffset);
				if (t.someProp("handleTextInput", M => M(t, v, w, T))) return;
				x = t.state.tr.insertText(T, v, w)
			}
		}
		if (x || (x = t.state.tr.replace(v, w, l.doc.slice(p.start - l.from, p.endB - l.from))), l.sel) {
			let T = Sf(t, x.doc, l.sel);
			T && !(Te && mt && t.composing && T.empty && (p.start != p.endB || t.input.lastAndroidDelete < Date.now() - 100) && (T.head == v || T.head == x.mapping.map(w) - 1) || Le && T.empty && T.head == v) && x.setSelection(T)
		}
		S && x.ensureMarks(S), t.composing && x.setMeta("composition", t.input.compositionID), t.dispatch(x.scrollIntoView())
	}

	function Sf(t, e, n) {
		return Math.max(n.anchor, n.head) > e.content.size ? null : Hl(t, e.resolve(n.anchor), e.resolve(n.head))
	}

	function xW(t, e) {
		let n = t.firstChild.marks,
			i = e.firstChild.marks,
			o = n,
			r = i,
			a, s, l;
		for (let c = 0; c < i.length; c++) o = i[c].removeFromSet(o);
		for (let c = 0; c < n.length; c++) r = n[c].removeFromSet(r);
		if (o.length == 1 && r.length == 0) s = o[0], a = "add", l = c => c.mark(s.addToSet(c.marks));
		else if (o.length == 0 && r.length == 1) s = r[0], a = "remove", l = c => c.mark(s.removeFromSet(c.marks));
		else return null;
		let u = [];
		for (let c = 0; c < e.childCount; c++) u.push(l(e.child(c)));
		if (j.from(u).eq(t)) return {
			mark: s,
			type: a
		}
	}

	function EW(t, e, n, i, o) {
		if (!i.parent.isTextblock || n - e <= o.pos - i.pos || iu(i, !0, !1) < o.pos) return !1;
		let r = t.resolve(e);
		if (r.parentOffset < r.parent.content.size || !r.parent.isTextblock) return !1;
		let a = t.resolve(iu(r, !0, !0));
		return !a.parent.isTextblock || a.pos > n || iu(a, !0, !1) < n ? !1 : i.parent.content.cut(i.parentOffset).eq(a.parent.content)
	}

	function iu(t, e, n) {
		let i = t.depth,
			o = e ? t.end() : t.pos;
		for (; i > 0 && (e || t.indexAfter(i) == t.node(i).childCount);) i--, o++, e = !1;
		if (n) {
			let r = t.node(i).maybeChild(t.indexAfter(i));
			for (; r && !r.isLeaf;) r = r.firstChild, o++
		}
		return o
	}

	function TW(t, e, n, i, o) {
		let r = t.findDiffStart(e, n);
		if (r == null) return null;
		let {
			a,
			b: s
		} = t.findDiffEnd(e, n + t.size, n + e.size);
		if (o == "end") {
			let l = Math.max(0, r - Math.min(a, s));
			i -= a + l - r
		}
		if (a < r && t.size < e.size) {
			let l = i <= r && i >= a ? r - i : 0;
			r -= l, s = r + (s - a), a = r
		} else if (s < r) {
			let l = i <= r && i >= s ? r - i : 0;
			r -= l, a = r + (a - s), s = r
		}
		return {
			start: r,
			endA: a,
			endB: s
		}
	}
	class jW {
		constructor(e, n) {
			this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new W8, this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = n, this.state = n.state, this.directPlugins = n.plugins || [], this.directPlugins.forEach(jf), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = Ef(this), xf(this), this.nodeViews = Tf(this), this.docView = zp(this.state.doc, Cf(this), nu(this), this.dom, this), this.domObserver = new yW(this, (i, o, r, a) => CW(this, i, o, r, a)), this.domObserver.start(), K8(this), this.updatePluginViews()
		}
		get composing() {
			return this.input.composing
		}
		get props() {
			if (this._props.state != this.state) {
				let e = this._props;
				this._props = {};
				for (let n in e) this._props[n] = e[n];
				this._props.state = this.state
			}
			return this._props
		}
		update(e) {
			e.handleDOMEvents != this._props.handleDOMEvents && Jl(this);
			let n = this._props;
			this._props = e, e.plugins && (e.plugins.forEach(jf), this.directPlugins = e.plugins), this.updateStateInner(e.state, n)
		}
		setProps(e) {
			let n = {};
			for (let i in this._props) n[i] = this._props[i];
			n.state = this.state;
			for (let i in e) n[i] = e[i];
			this.update(n)
		}
		updateState(e) {
			this.updateStateInner(e, this._props)
		}
		updateStateInner(e, n) {
			let i = this.state,
				o = !1,
				r = !1;
			e.storedMarks && this.composing && (ff(this), r = !0), this.state = e;
			let a = i.plugins != e.plugins || this._props.plugins != n.plugins;
			if (a || this._props.plugins != n.plugins || this._props.nodeViews != n.nodeViews) {
				let d = Tf(this);
				AW(d, this.nodeViews) && (this.nodeViews = d, o = !0)
			}(a || n.handleDOMEvents != this._props.handleDOMEvents) && Jl(this), this.editable = Ef(this), xf(this);
			let s = nu(this),
				l = Cf(this),
				u = i.plugins != e.plugins && !i.doc.eq(e.doc) ? "reset" : e.scrollToSelection > i.scrollToSelection ? "to selection" : "preserve",
				c = o || !this.docView.matchesNode(e.doc, l, s);
			(c || !e.selection.eq(i.selection)) && (r = !0);
			let m = u == "preserve" && r && this.dom.style.overflowAnchor == null && d8(this);
			if (r) {
				this.domObserver.stop();
				let d = c && (Le || Te) && !this.composing && !i.selection.empty && !e.selection.empty && $W(i.selection, e.selection);
				if (c) {
					let p = Te ? this.trackWrites = this.domSelectionRange().focusNode : null;
					(o || !this.docView.update(e.doc, l, s, this)) && (this.docView.updateOuterDeco([]), this.docView.destroy(), this.docView = zp(e.doc, l, s, this.dom, this)), p && !this.trackWrites && (d = !0)
				}
				d || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && D8(this)) ? Dt(this, d) : (Vp(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start()
			}
			this.updatePluginViews(i), u == "reset" ? this.dom.scrollTop = 0 : u == "to selection" ? this.scrollToSelection() : m && m8(m)
		}
		scrollToSelection() {
			let e = this.domSelectionRange().focusNode;
			if (!this.someProp("handleScrollToSelection", n => n(this)))
				if (this.state.selection instanceof R) {
					let n = this.docView.domAfterPos(this.state.selection.from);
					n.nodeType == 1 && wp(this, n.getBoundingClientRect(), e)
				} else wp(this, this.coordsAtPos(this.state.selection.head, 1), e)
		}
		destroyPluginViews() {
			let e;
			for (; e = this.pluginViews.pop();) e.destroy && e.destroy()
		}
		updatePluginViews(e) {
			if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
				this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
				for (let n = 0; n < this.directPlugins.length; n++) {
					let i = this.directPlugins[n];
					i.spec.view && this.pluginViews.push(i.spec.view(this))
				}
				for (let n = 0; n < this.state.plugins.length; n++) {
					let i = this.state.plugins[n];
					i.spec.view && this.pluginViews.push(i.spec.view(this))
				}
			} else
				for (let n = 0; n < this.pluginViews.length; n++) {
					let i = this.pluginViews[n];
					i.update && i.update(this, e)
				}
		}
		someProp(e, n) {
			let i = this._props && this._props[e],
				o;
			if (i != null && (o = n ? n(i) : i)) return o;
			for (let a = 0; a < this.directPlugins.length; a++) {
				let s = this.directPlugins[a].props[e];
				if (s != null && (o = n ? n(s) : s)) return o
			}
			let r = this.state.plugins;
			if (r)
				for (let a = 0; a < r.length; a++) {
					let s = r[a].props[e];
					if (s != null && (o = n ? n(s) : s)) return o
				}
		}
		hasFocus() {
			if (Le) {
				let e = this.root.activeElement;
				if (e == this.dom) return !0;
				if (!e || !this.dom.contains(e)) return !1;
				for (; e && this.dom != e && this.dom.contains(e);) {
					if (e.contentEditable == "false") return !1;
					e = e.parentElement
				}
				return !0
			}
			return this.root.activeElement == this.dom
		}
		focus() {
			this.domObserver.stop(), this.editable && p8(this.dom), Dt(this), this.domObserver.start()
		}
		get root() {
			let e = this._root;
			if (e == null) {
				for (let n = this.dom.parentNode; n; n = n.parentNode)
					if (n.nodeType == 9 || n.nodeType == 11 && n.host) return n.getSelection || (Object.getPrototypeOf(n).getSelection = () => n.ownerDocument.getSelection()), this._root = n
			}
			return e || document
		}
		posAtCoords(e) {
			return b8(this, e)
		}
		coordsAtPos(e, n = 1) {
			return jp(this, e, n)
		}
		domAtPos(e, n = 0) {
			return this.docView.domFromPos(e, n)
		}
		nodeDOM(e) {
			let n = this.docView.descAt(e);
			return n ? n.nodeDOM : null
		}
		posAtDOM(e, n, i = -1) {
			let o = this.docView.posFromDOM(e, n, i);
			if (o == null) throw new RangeError("DOM position not inside the editor");
			return o
		}
		endOfTextblock(e, n) {
			return C8(this, n || this.state, e)
		}
		pasteHTML(e, n) {
			return Mo(this, "", e, !1, n || new ClipboardEvent("paste"))
		}
		pasteText(e, n) {
			return Mo(this, e, null, !0, n || new ClipboardEvent("paste"))
		}
		destroy() {
			this.docView && (J8(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], nu(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null)
		}
		get isDestroyed() {
			return this.docView == null
		}
		dispatchEvent(e) {
			return Q8(this, e)
		}
		dispatch(e) {
			let n = this._props.dispatchTransaction;
			n ? n.call(this, e) : this.updateState(this.state.apply(e))
		}
		domSelectionRange() {
			return _e && this.root.nodeType === 11 && o8(this.dom.ownerDocument) == this.dom ? kW(this) : this.domSelection()
		}
		domSelection() {
			return this.root.getSelection()
		}
	}

	function Cf(t) {
		let e = Object.create(null);
		return e.class = "ProseMirror", e.contenteditable = String(t.editable), t.someProp("attributes", n => {
			if (typeof n == "function" && (n = n(t.state)), n)
				for (let i in n) i == "class" ? e.class += " " + n[i] : i == "style" ? e.style = (e.style ? e.style + ";" : "") + n[i] : !e[i] && i != "contenteditable" && i != "nodeName" && (e[i] = String(n[i]))
		}), e.translate || (e.translate = "no"), [et.node(0, t.state.doc.content.size, e)]
	}

	function xf(t) {
		if (t.markCursor) {
			let e = document.createElement("img");
			e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), t.cursorWrapper = {
				dom: e,
				deco: et.widget(t.state.selection.head, e, {
					raw: !0,
					marks: t.markCursor
				})
			}
		} else t.cursorWrapper = null
	}

	function Ef(t) {
		return !t.someProp("editable", e => e(t.state) === !1)
	}

	function $W(t, e) {
		let n = Math.min(t.$anchor.sharedDepth(t.head), e.$anchor.sharedDepth(e.head));
		return t.$anchor.start(n) != e.$anchor.start(n)
	}

	function Tf(t) {
		let e = Object.create(null);

		function n(i) {
			for (let o in i) Object.prototype.hasOwnProperty.call(e, o) || (e[o] = i[o])
		}
		return t.someProp("nodeViews", n), t.someProp("markViews", n), e
	}

	function AW(t, e) {
		let n = 0,
			i = 0;
		for (let o in t) {
			if (t[o] != e[o]) return !0;
			n++
		}
		for (let o in e) i++;
		return n != i
	}

	function jf(t) {
		if (t.spec.state || t.spec.filterTransaction || t.spec.appendTransaction) throw new RangeError("Plugins passed directly to the view must not have a state component")
	}
	for (var rn = {
			8: "Backspace",
			9: "Tab",
			10: "Enter",
			12: "NumLock",
			13: "Enter",
			16: "Shift",
			17: "Control",
			18: "Alt",
			20: "CapsLock",
			27: "Escape",
			32: " ",
			33: "PageUp",
			34: "PageDown",
			35: "End",
			36: "Home",
			37: "ArrowLeft",
			38: "ArrowUp",
			39: "ArrowRight",
			40: "ArrowDown",
			44: "PrintScreen",
			45: "Insert",
			46: "Delete",
			59: ";",
			61: "=",
			91: "Meta",
			92: "Meta",
			106: "*",
			107: "+",
			108: ",",
			109: "-",
			110: ".",
			111: "/",
			144: "NumLock",
			145: "ScrollLock",
			160: "Shift",
			161: "Shift",
			162: "Control",
			163: "Control",
			164: "Alt",
			165: "Alt",
			173: "-",
			186: ";",
			187: "=",
			188: ",",
			189: "-",
			190: ".",
			191: "/",
			192: "`",
			219: "[",
			220: "\\",
			221: "]",
			222: "'"
		}, ma = {
			48: ")",
			49: "!",
			50: "@",
			51: "#",
			52: "$",
			53: "%",
			54: "^",
			55: "&",
			56: "*",
			57: "(",
			59: ":",
			61: "+",
			173: "_",
			186: ":",
			187: "+",
			188: "<",
			189: "_",
			190: ">",
			191: "?",
			192: "~",
			219: "{",
			220: "|",
			221: "}",
			222: '"'
		}, NW = typeof navigator < "u" && /Mac/.test(navigator.platform), MW = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent), ye = 0; ye < 10; ye++) rn[48 + ye] = rn[96 + ye] = String(ye);
	for (var ye = 1; ye <= 24; ye++) rn[ye + 111] = "F" + ye;
	for (var ye = 65; ye <= 90; ye++) rn[ye] = String.fromCharCode(ye + 32), ma[ye] = String.fromCharCode(ye);
	for (var ou in rn) ma.hasOwnProperty(ou) || (ma[ou] = rn[ou]);

	function PW(t) {
		var e = NW && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || MW && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified",
			n = !e && t.key || (t.shiftKey ? ma : rn)[t.keyCode] || t.key || "Unidentified";
		return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n
	}
	const _W = typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : !1;

	function zW(t) {
		let e = t.split(/-(?!$)/),
			n = e[e.length - 1];
		n == "Space" && (n = " ");
		let i, o, r, a;
		for (let s = 0; s < e.length - 1; s++) {
			let l = e[s];
			if (/^(cmd|meta|m)$/i.test(l)) a = !0;
			else if (/^a(lt)?$/i.test(l)) i = !0;
			else if (/^(c|ctrl|control)$/i.test(l)) o = !0;
			else if (/^s(hift)?$/i.test(l)) r = !0;
			else if (/^mod$/i.test(l)) _W ? a = !0 : o = !0;
			else throw new Error("Unrecognized modifier name: " + l)
		}
		return i && (n = "Alt-" + n), o && (n = "Ctrl-" + n), a && (n = "Meta-" + n), r && (n = "Shift-" + n), n
	}

	function OW(t) {
		let e = Object.create(null);
		for (let n in t) e[zW(n)] = t[n];
		return e
	}

	function ru(t, e, n = !0) {
		return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n && e.shiftKey && (t = "Shift-" + t), t
	}

	function DW(t) {
		return new Qe({
			props: {
				handleKeyDown: IW(t)
			}
		})
	}

	function IW(t) {
		let e = OW(t);
		return function(n, i) {
			let o = PW(i),
				r, a = e[ru(o, i)];
			if (a && a(n.state, n.dispatch, n)) return !0;
			if (o.length == 1 && o != " ") {
				if (i.shiftKey) {
					let s = e[ru(o, i, !1)];
					if (s && s(n.state, n.dispatch, n)) return !0
				}
				if ((i.shiftKey || i.altKey || i.metaKey || o.charCodeAt(0) > 127) && (r = rn[i.keyCode]) && r != o) {
					let s = e[ru(r, i)];
					if (s && s(n.state, n.dispatch, n)) return !0
				}
			}
			return !1
		}
	}
	const RW = (t, e) => t.selection.empty ? !1 : (e && e(t.tr.deleteSelection().scrollIntoView()), !0);

	function YW(t, e) {
		let {
			$cursor: n
		} = t.selection;
		return !n || (e ? !e.endOfTextblock("backward", t) : n.parentOffset > 0) ? null : n
	}
	const LW = (t, e, n) => {
		let i = YW(t, n);
		if (!i) return !1;
		let o = $f(i);
		if (!o) {
			let a = i.blockRange(),
				s = a && yi(a);
			return s == null ? !1 : (e && e(t.tr.lift(a, s).scrollIntoView()), !0)
		}
		let r = o.nodeBefore;
		if (!r.type.spec.isolating && Mf(t, o, e)) return !0;
		if (i.parent.content.size == 0 && ($i(r, "end") || R.isSelectable(r))) {
			let a = $l(t.doc, i.before(), i.after(), P.empty);
			if (a && a.slice.size < a.to - a.from) {
				if (e) {
					let s = t.tr.step(a);
					s.setSelection($i(r, "end") ? L.findFrom(s.doc.resolve(s.mapping.map(o.pos, -1)), -1) : R.create(s.doc, o.pos - r.nodeSize)), e(s.scrollIntoView())
				}
				return !0
			}
		}
		return r.isAtom && o.depth == i.depth - 1 ? (e && e(t.tr.delete(o.pos - r.nodeSize, o.pos).scrollIntoView()), !0) : !1
	};

	function $i(t, e, n = !1) {
		for (let i = t; i; i = e == "start" ? i.firstChild : i.lastChild) {
			if (i.isTextblock) return !0;
			if (n && i.childCount != 1) return !1
		}
		return !1
	}
	const FW = (t, e, n) => {
		let {
			$head: i,
			empty: o
		} = t.selection, r = i;
		if (!o) return !1;
		if (i.parent.isTextblock) {
			if (n ? !n.endOfTextblock("backward", t) : i.parentOffset > 0) return !1;
			r = $f(i)
		}
		let a = r && r.nodeBefore;
		return !a || !R.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(R.create(t.doc, r.pos - a.nodeSize)).scrollIntoView()), !0)
	};

	function $f(t) {
		if (!t.parent.type.spec.isolating)
			for (let e = t.depth - 1; e >= 0; e--) {
				if (t.index(e) > 0) return t.doc.resolve(t.before(e + 1));
				if (t.node(e).type.spec.isolating) break
			}
		return null
	}

	function BW(t, e) {
		let {
			$cursor: n
		} = t.selection;
		return !n || (e ? !e.endOfTextblock("forward", t) : n.parentOffset < n.parent.content.size) ? null : n
	}
	const UW = (t, e, n) => {
			let i = BW(t, n);
			if (!i) return !1;
			let o = Af(i);
			if (!o) return !1;
			let r = o.nodeAfter;
			if (Mf(t, o, e)) return !0;
			if (i.parent.content.size == 0 && ($i(r, "start") || R.isSelectable(r))) {
				let a = $l(t.doc, i.before(), i.after(), P.empty);
				if (a && a.slice.size < a.to - a.from) {
					if (e) {
						let s = t.tr.step(a);
						s.setSelection($i(r, "start") ? L.findFrom(s.doc.resolve(s.mapping.map(o.pos)), 1) : R.create(s.doc, s.mapping.map(o.pos))), e(s.scrollIntoView())
					}
					return !0
				}
			}
			return r.isAtom && o.depth == i.depth - 1 ? (e && e(t.tr.delete(o.pos, o.pos + r.nodeSize).scrollIntoView()), !0) : !1
		},
		VW = (t, e, n) => {
			let {
				$head: i,
				empty: o
			} = t.selection, r = i;
			if (!o) return !1;
			if (i.parent.isTextblock) {
				if (n ? !n.endOfTextblock("forward", t) : i.parentOffset < i.parent.content.size) return !1;
				r = Af(i)
			}
			let a = r && r.nodeAfter;
			return !a || !R.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(R.create(t.doc, r.pos)).scrollIntoView()), !0)
		};

	function Af(t) {
		if (!t.parent.type.spec.isolating)
			for (let e = t.depth - 1; e >= 0; e--) {
				let n = t.node(e);
				if (t.index(e) + 1 < n.childCount) return t.doc.resolve(t.after(e + 1));
				if (n.type.spec.isolating) break
			}
		return null
	}
	const HW = (t, e) => {
			let n = t.selection,
				i = n instanceof R,
				o;
			if (i) {
				if (n.node.isTextblock || !Jt(t.doc, n.from)) return !1;
				o = n.from
			} else if (o = na(t.doc, n.from, -1), o == null) return !1;
			if (e) {
				let r = t.tr.join(o);
				i && r.setSelection(R.create(r.doc, o - t.doc.resolve(o).nodeBefore.nodeSize)), e(r.scrollIntoView())
			}
			return !0
		},
		qW = (t, e) => {
			let n = t.selection,
				i;
			if (n instanceof R) {
				if (n.node.isTextblock || !Jt(t.doc, n.to)) return !1;
				i = n.to
			} else if (i = na(t.doc, n.to, 1), i == null) return !1;
			return e && e(t.tr.join(i).scrollIntoView()), !0
		},
		WW = (t, e) => {
			let {
				$from: n,
				$to: i
			} = t.selection, o = n.blockRange(i), r = o && yi(o);
			return r == null ? !1 : (e && e(t.tr.lift(o, r).scrollIntoView()), !0)
		},
		KW = (t, e) => {
			let {
				$head: n,
				$anchor: i
			} = t.selection;
			return !n.parent.type.spec.code || !n.sameParent(i) ? !1 : (e && e(t.tr.insertText(`
`).scrollIntoView()), !0)
		};

	function Nf(t) {
		for (let e = 0; e < t.edgeCount; e++) {
			let {
				type: n
			} = t.edge(e);
			if (n.isTextblock && !n.hasRequiredAttrs()) return n
		}
		return null
	}
	const JW = (t, e) => {
			let {
				$head: n,
				$anchor: i
			} = t.selection;
			if (!n.parent.type.spec.code || !n.sameParent(i)) return !1;
			let o = n.node(-1),
				r = n.indexAfter(-1),
				a = Nf(o.contentMatchAt(r));
			if (!a || !o.canReplaceWith(r, r, a)) return !1;
			if (e) {
				let s = n.after(),
					l = t.tr.replaceWith(s, s, a.createAndFill());
				l.setSelection(L.near(l.doc.resolve(s), 1)), e(l.scrollIntoView())
			}
			return !0
		},
		GW = (t, e) => {
			let n = t.selection,
				{
					$from: i,
					$to: o
				} = n;
			if (n instanceof ct || i.parent.inlineContent || o.parent.inlineContent) return !1;
			let r = Nf(o.parent.contentMatchAt(o.indexAfter()));
			if (!r || !r.isTextblock) return !1;
			if (e) {
				let a = (!i.parentOffset && o.index() < o.parent.childCount ? i : o).pos,
					s = t.tr.insert(a, r.createAndFill());
				s.setSelection(F.create(s.doc, a + 1)), e(s.scrollIntoView())
			}
			return !0
		},
		QW = (t, e) => {
			let {
				$cursor: n
			} = t.selection;
			if (!n || n.parent.content.size) return !1;
			if (n.depth > 1 && n.after() != n.end(-1)) {
				let r = n.before();
				if (bi(t.doc, r)) return e && e(t.tr.split(r).scrollIntoView()), !0
			}
			let i = n.blockRange(),
				o = i && yi(i);
			return o == null ? !1 : (e && e(t.tr.lift(i, o).scrollIntoView()), !0)
		},
		XW = (t, e) => {
			let {
				$from: n,
				to: i
			} = t.selection, o, r = n.sharedDepth(i);
			return r == 0 ? !1 : (o = n.before(r), e && e(t.tr.setSelection(R.create(t.doc, o))), !0)
		};

	function ZW(t, e, n) {
		let i = e.nodeBefore,
			o = e.nodeAfter,
			r = e.index();
		return !i || !o || !i.type.compatibleContent(o.type) ? !1 : !i.content.size && e.parent.canReplace(r - 1, r) ? (n && n(t.tr.delete(e.pos - i.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(r, r + 1) || !(o.isTextblock || Jt(t.doc, e.pos)) ? !1 : (n && n(t.tr.clearIncompatible(e.pos, i.type, i.contentMatchAt(i.childCount)).join(e.pos).scrollIntoView()), !0)
	}

	function Mf(t, e, n) {
		let i = e.nodeBefore,
			o = e.nodeAfter,
			r, a;
		if (i.type.spec.isolating || o.type.spec.isolating) return !1;
		if (ZW(t, e, n)) return !0;
		let s = e.parent.canReplace(e.index(), e.index() + 1);
		if (s && (r = (a = i.contentMatchAt(i.childCount)).findWrapping(o.type)) && a.matchType(r[0] || o.type).validEnd) {
			if (n) {
				let m = e.pos + o.nodeSize,
					d = j.empty;
				for (let y = r.length - 1; y >= 0; y--) d = j.from(r[y].create(null, d));
				d = j.from(i.copy(d));
				let p = t.tr.step(new de(e.pos - 1, m, e.pos, m, new P(d, 1, 0), r.length, !0)),
					f = m + 2 * r.length;
				Jt(p.doc, f) && p.join(f), n(p.scrollIntoView())
			}
			return !0
		}
		let l = L.findFrom(e, 1),
			u = l && l.$from.blockRange(l.$to),
			c = u && yi(u);
		if (c != null && c >= e.depth) return n && n(t.tr.lift(u, c).scrollIntoView()), !0;
		if (s && $i(o, "start", !0) && $i(i, "end")) {
			let m = i,
				d = [];
			for (; d.push(m), !m.isTextblock;) m = m.lastChild;
			let p = o,
				f = 1;
			for (; !p.isTextblock; p = p.firstChild) f++;
			if (m.canReplace(m.childCount, m.childCount, p.content)) {
				if (n) {
					let y = j.empty;
					for (let g = d.length - 1; g >= 0; g--) y = j.from(d[g].copy(y));
					let h = t.tr.step(new de(e.pos - d.length, e.pos + o.nodeSize, e.pos + f, e.pos + o.nodeSize - f, new P(y, d.length, 0), 0, !0));
					n(h.scrollIntoView())
				}
				return !0
			}
		}
		return !1
	}

	function Pf(t) {
		return function(e, n) {
			let i = e.selection,
				o = t < 0 ? i.$from : i.$to,
				r = o.depth;
			for (; o.node(r).isInline;) {
				if (!r) return !1;
				r--
			}
			return o.node(r).isTextblock ? (n && n(e.tr.setSelection(F.create(e.doc, t < 0 ? o.start(r) : o.end(r)))), !0) : !1
		}
	}
	const e9 = Pf(-1),
		t9 = Pf(1);

	function n9(t, e = null) {
		return function(n, i) {
			let {
				$from: o,
				$to: r
			} = n.selection, a = o.blockRange(r), s = a && jl(a, t, e);
			return s ? (i && i(n.tr.wrap(a, s).scrollIntoView()), !0) : !1
		}
	}

	function _f(t, e = null) {
		return function(n, i) {
			let o = !1;
			for (let r = 0; r < n.selection.ranges.length && !o; r++) {
				let {
					$from: {
						pos: a
					},
					$to: {
						pos: s
					}
				} = n.selection.ranges[r];
				n.doc.nodesBetween(a, s, (l, u) => {
					if (o) return !1;
					if (!(!l.isTextblock || l.hasMarkup(t, e)))
						if (l.type == t) o = !0;
						else {
							let c = n.doc.resolve(u),
								m = c.index();
							o = c.parent.canReplaceWith(m, m + 1, t)
						}
				})
			}
			if (!o) return !1;
			if (i) {
				let r = n.tr;
				for (let a = 0; a < n.selection.ranges.length; a++) {
					let {
						$from: {
							pos: s
						},
						$to: {
							pos: l
						}
					} = n.selection.ranges[a];
					r.setBlockType(s, l, t, e)
				}
				i(r.scrollIntoView())
			}
			return !0
		}
	}
	typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";

	function i9(t, e = null) {
		return function(n, i) {
			let {
				$from: o,
				$to: r
			} = n.selection, a = o.blockRange(r), s = !1, l = a;
			if (!a) return !1;
			if (a.depth >= 2 && o.node(a.depth - 1).type.compatibleContent(t) && a.startIndex == 0) {
				if (o.index(a.depth - 1) == 0) return !1;
				let c = n.doc.resolve(a.start - 2);
				l = new Jr(c, c, a.depth), a.endIndex < a.parent.childCount && (a = new Jr(o, n.doc.resolve(r.end(a.depth)), a.depth)), s = !0
			}
			let u = jl(l, t, e, a);
			return u ? (i && i(o9(n.tr, a, u, s, t).scrollIntoView()), !0) : !1
		}
	}

	function o9(t, e, n, i, o) {
		let r = j.empty;
		for (let c = n.length - 1; c >= 0; c--) r = j.from(n[c].type.create(n[c].attrs, r));
		t.step(new de(e.start - (i ? 2 : 0), e.end, e.start, e.end, new P(r, 0, 0), n.length, !0));
		let a = 0;
		for (let c = 0; c < n.length; c++) n[c].type == o && (a = c + 1);
		let s = n.length - a,
			l = e.start + n.length - (i ? 2 : 0),
			u = e.parent;
		for (let c = e.startIndex, m = e.endIndex, d = !0; c < m; c++, d = !1) !d && bi(t.doc, l, s) && (t.split(l, s), l += 2 * s), l += u.child(c).nodeSize;
		return t
	}

	function r9(t) {
		return function(e, n) {
			let {
				$from: i,
				$to: o
			} = e.selection, r = i.blockRange(o, a => a.childCount > 0 && a.firstChild.type == t);
			return r ? n ? i.node(r.depth - 1).type == t ? a9(e, n, t, r) : s9(e, n, r) : !0 : !1
		}
	}

	function a9(t, e, n, i) {
		let o = t.tr,
			r = i.end,
			a = i.$to.end(i.depth);
		r < a && (o.step(new de(r - 1, a, r, a, new P(j.from(n.create(null, i.parent.copy())), 1, 0), 1, !0)), i = new Jr(o.doc.resolve(i.$from.pos), o.doc.resolve(a), i.depth));
		const s = yi(i);
		if (s == null) return !1;
		o.lift(i, s);
		let l = o.mapping.map(r, -1) - 1;
		return Jt(o.doc, l) && o.join(l), e(o.scrollIntoView()), !0
	}

	function s9(t, e, n) {
		let i = t.tr,
			o = n.parent;
		for (let p = n.end, f = n.endIndex - 1, y = n.startIndex; f > y; f--) p -= o.child(f).nodeSize, i.delete(p - 1, p + 1);
		let r = i.doc.resolve(n.start),
			a = r.nodeAfter;
		if (i.mapping.map(n.end) != n.start + r.nodeAfter.nodeSize) return !1;
		let s = n.startIndex == 0,
			l = n.endIndex == o.childCount,
			u = r.node(-1),
			c = r.index(-1);
		if (!u.canReplace(c + (s ? 0 : 1), c + 1, a.content.append(l ? j.empty : j.from(o)))) return !1;
		let m = r.pos,
			d = m + a.nodeSize;
		return i.step(new de(m - (s ? 1 : 0), d + (l ? 1 : 0), m + 1, d - 1, new P((s ? j.empty : j.from(o.copy(j.empty))).append(l ? j.empty : j.from(o.copy(j.empty))), s ? 0 : 1, l ? 0 : 1), s ? 0 : 1)), e(i.scrollIntoView()), !0
	}

	function l9(t) {
		return function(e, n) {
			let {
				$from: i,
				$to: o
			} = e.selection, r = i.blockRange(o, u => u.childCount > 0 && u.firstChild.type == t);
			if (!r) return !1;
			let a = r.startIndex;
			if (a == 0) return !1;
			let s = r.parent,
				l = s.child(a - 1);
			if (l.type != t) return !1;
			if (n) {
				let u = l.lastChild && l.lastChild.type == s.type,
					c = j.from(u ? t.create() : null),
					m = new P(j.from(t.create(null, j.from(s.type.create(null, c)))), u ? 3 : 1, 0),
					d = r.start,
					p = r.end;
				n(e.tr.step(new de(d - (u ? 3 : 1), p, d, p, m, 1, !0)).scrollIntoView())
			}
			return !0
		}
	}

	function pa(t) {
		const {
			state: e,
			transaction: n
		} = t;
		let {
			selection: i
		} = n, {
			doc: o
		} = n, {
			storedMarks: r
		} = n;
		return {
			...e,
			apply: e.apply.bind(e),
			applyTransaction: e.applyTransaction.bind(e),
			filterTransaction: e.filterTransaction,
			plugins: e.plugins,
			schema: e.schema,
			reconfigure: e.reconfigure.bind(e),
			toJSON: e.toJSON.bind(e),
			get storedMarks() {
				return r
			},
			get selection() {
				return i
			},
			get doc() {
				return o
			},
			get tr() {
				return i = n.selection, o = n.doc, r = n.storedMarks, n
			}
		}
	}
	class fa {
		constructor(e) {
			this.editor = e.editor, this.rawCommands = this.editor.extensionManager.commands, this.customState = e.state
		}
		get hasCustomState() {
			return !!this.customState
		}
		get state() {
			return this.customState || this.editor.state
		}
		get commands() {
			const {
				rawCommands: e,
				editor: n,
				state: i
			} = this, {
				view: o
			} = n, {
				tr: r
			} = i, a = this.buildProps(r);
			return Object.fromEntries(Object.entries(e).map(([s, l]) => [s, (...c) => {
				const m = l(...c)(a);
				return !r.getMeta("preventDispatch") && !this.hasCustomState && o.dispatch(r), m
			}]))
		}
		get chain() {
			return () => this.createChain()
		}
		get can() {
			return () => this.createCan()
		}
		createChain(e, n = !0) {
			const {
				rawCommands: i,
				editor: o,
				state: r
			} = this, {
				view: a
			} = o, s = [], l = !!e, u = e || r.tr, c = () => (!l && n && !u.getMeta("preventDispatch") && !this.hasCustomState && a.dispatch(u), s.every(d => d === !0)), m = {
				...Object.fromEntries(Object.entries(i).map(([d, p]) => [d, (...y) => {
					const h = this.buildProps(u, n),
						g = p(...y)(h);
					return s.push(g), m
				}])),
				run: c
			};
			return m
		}
		createCan(e) {
			const {
				rawCommands: n,
				state: i
			} = this, o = !1, r = e || i.tr, a = this.buildProps(r, o);
			return {
				...Object.fromEntries(Object.entries(n).map(([l, u]) => [l, (...c) => u(...c)({
					...a,
					dispatch: void 0
				})])),
				chain: () => this.createChain(r, o)
			}
		}
		buildProps(e, n = !0) {
			const {
				rawCommands: i,
				editor: o,
				state: r
			} = this, {
				view: a
			} = o, s = {
				tr: e,
				editor: o,
				view: a,
				state: pa({
					state: r,
					transaction: e
				}),
				dispatch: n ? () => {} : void 0,
				chain: () => this.createChain(e, n),
				can: () => this.createCan(e),
				get commands() {
					return Object.fromEntries(Object.entries(i).map(([l, u]) => [l, (...c) => u(...c)(s)]))
				}
			};
			return s
		}
	}
	let u9 = class {
		constructor() {
			this.callbacks = {}
		}
		on(e, n) {
			return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(n), this
		}
		emit(e, ...n) {
			const i = this.callbacks[e];
			return i && i.forEach(o => o.apply(this, n)), this
		}
		off(e, n) {
			const i = this.callbacks[e];
			return i && (n ? this.callbacks[e] = i.filter(o => o !== n) : delete this.callbacks[e]), this
		}
		removeAllListeners() {
			this.callbacks = {}
		}
	};

	function z(t, e, n) {
		return t.config[e] === void 0 && t.parent ? z(t.parent, e, n) : typeof t.config[e] == "function" ? t.config[e].bind({
			...n,
			parent: t.parent ? z(t.parent, e, n) : null
		}) : t.config[e]
	}

	function ha(t) {
		const e = t.filter(o => o.type === "extension"),
			n = t.filter(o => o.type === "node"),
			i = t.filter(o => o.type === "mark");
		return {
			baseExtensions: e,
			nodeExtensions: n,
			markExtensions: i
		}
	}

	function zf(t) {
		const e = [],
			{
				nodeExtensions: n,
				markExtensions: i
			} = ha(t),
			o = [...n, ...i],
			r = {
				default: null,
				rendered: !0,
				renderHTML: null,
				parseHTML: null,
				keepOnSplit: !0,
				isRequired: !1
			};
		return t.forEach(a => {
			const s = {
					name: a.name,
					options: a.options,
					storage: a.storage
				},
				l = z(a, "addGlobalAttributes", s);
			if (!l) return;
			l().forEach(c => {
				c.types.forEach(m => {
					Object.entries(c.attributes).forEach(([d, p]) => {
						e.push({
							type: m,
							name: d,
							attribute: {
								...r,
								...p
							}
						})
					})
				})
			})
		}), o.forEach(a => {
			const s = {
					name: a.name,
					options: a.options,
					storage: a.storage
				},
				l = z(a, "addAttributes", s);
			if (!l) return;
			const u = l();
			Object.entries(u).forEach(([c, m]) => {
				const d = {
					...r,
					...m
				};
				typeof(d == null ? void 0 : d.default) == "function" && (d.default = d.default()), d != null && d.isRequired && (d == null ? void 0 : d.default) === void 0 && delete d.default, e.push({
					type: a.name,
					name: c,
					attribute: d
				})
			})
		}), e
	}

	function me(t, e) {
		if (typeof t == "string") {
			if (!e.nodes[t]) throw Error(`There is no node type named '${t}'. Maybe you forgot to add the extension?`);
			return e.nodes[t]
		}
		return t
	}

	function _o(...t) {
		return t.filter(e => !!e).reduce((e, n) => {
			const i = {
				...e
			};
			return Object.entries(n).forEach(([o, r]) => {
				if (!i[o]) {
					i[o] = r;
					return
				}
				if (o === "class") {
					const s = r ? r.split(" ") : [],
						l = i[o] ? i[o].split(" ") : [],
						u = s.filter(c => !l.includes(c));
					i[o] = [...l, ...u].join(" ")
				} else o === "style" ? i[o] = [i[o], r].join("; ") : i[o] = r
			}), i
		}, {})
	}

	function au(t, e) {
		return e.filter(n => n.attribute.rendered).map(n => n.attribute.renderHTML ? n.attribute.renderHTML(t.attrs) || {} : {
			[n.name]: t.attrs[n.name]
		}).reduce((n, i) => _o(n, i), {})
	}

	function Of(t) {
		return typeof t == "function"
	}

	function B(t, e = void 0, ...n) {
		return Of(t) ? e ? t.bind(e)(...n) : t(...n) : t
	}

	function c9(t = {}) {
		return Object.keys(t).length === 0 && t.constructor === Object
	}

	function d9(t) {
		return typeof t != "string" ? t : t.match(/^[+-]?(?:\d*\.)?\d+$/) ? Number(t) : t === "true" ? !0 : t === "false" ? !1 : t
	}

	function Df(t, e) {
		return t.style ? t : {
			...t,
			getAttrs: n => {
				const i = t.getAttrs ? t.getAttrs(n) : t.attrs;
				if (i === !1) return !1;
				const o = e.reduce((r, a) => {
					const s = a.attribute.parseHTML ? a.attribute.parseHTML(n) : d9(n.getAttribute(a.name));
					return s == null ? r : {
						...r,
						[a.name]: s
					}
				}, {});
				return {
					...i,
					...o
				}
			}
		}
	}

	function If(t) {
		return Object.fromEntries(Object.entries(t).filter(([e, n]) => e === "attrs" && c9(n) ? !1 : n != null))
	}

	function m9(t, e) {
		var n;
		const i = zf(t),
			{
				nodeExtensions: o,
				markExtensions: r
			} = ha(t),
			a = (n = o.find(u => z(u, "topNode"))) === null || n === void 0 ? void 0 : n.name,
			s = Object.fromEntries(o.map(u => {
				const c = i.filter(g => g.type === u.name),
					m = {
						name: u.name,
						options: u.options,
						storage: u.storage,
						editor: e
					},
					d = t.reduce((g, b) => {
						const v = z(b, "extendNodeSchema", m);
						return {
							...g,
							...v ? v(u) : {}
						}
					}, {}),
					p = If({
						...d,
						content: B(z(u, "content", m)),
						marks: B(z(u, "marks", m)),
						group: B(z(u, "group", m)),
						inline: B(z(u, "inline", m)),
						atom: B(z(u, "atom", m)),
						selectable: B(z(u, "selectable", m)),
						draggable: B(z(u, "draggable", m)),
						code: B(z(u, "code", m)),
						defining: B(z(u, "defining", m)),
						isolating: B(z(u, "isolating", m)),
						attrs: Object.fromEntries(c.map(g => {
							var b;
							return [g.name, {
								default: (b = g == null ? void 0 : g.attribute) === null || b === void 0 ? void 0 : b.default
							}]
						}))
					}),
					f = B(z(u, "parseHTML", m));
				f && (p.parseDOM = f.map(g => Df(g, c)));
				const y = z(u, "renderHTML", m);
				y && (p.toDOM = g => y({
					node: g,
					HTMLAttributes: au(g, c)
				}));
				const h = z(u, "renderText", m);
				return h && (p.toText = h), [u.name, p]
			})),
			l = Object.fromEntries(r.map(u => {
				const c = i.filter(h => h.type === u.name),
					m = {
						name: u.name,
						options: u.options,
						storage: u.storage,
						editor: e
					},
					d = t.reduce((h, g) => {
						const b = z(g, "extendMarkSchema", m);
						return {
							...h,
							...b ? b(u) : {}
						}
					}, {}),
					p = If({
						...d,
						inclusive: B(z(u, "inclusive", m)),
						excludes: B(z(u, "excludes", m)),
						group: B(z(u, "group", m)),
						spanning: B(z(u, "spanning", m)),
						code: B(z(u, "code", m)),
						attrs: Object.fromEntries(c.map(h => {
							var g;
							return [h.name, {
								default: (g = h == null ? void 0 : h.attribute) === null || g === void 0 ? void 0 : g.default
							}]
						}))
					}),
					f = B(z(u, "parseHTML", m));
				f && (p.parseDOM = f.map(h => Df(h, c)));
				const y = z(u, "renderHTML", m);
				return y && (p.toDOM = h => y({
					mark: h,
					HTMLAttributes: au(h, c)
				})), [u.name, p]
			}));
		return new w6({
			topNode: a,
			nodes: s,
			marks: l
		})
	}

	function su(t, e) {
		return e.nodes[t] || e.marks[t] || null
	}

	function Rf(t, e) {
		return Array.isArray(e) ? e.some(n => (typeof n == "string" ? n : n.name) === t.name) : e
	}
	const p9 = (t, e = 500) => {
		let n = "";
		const i = t.parentOffset;
		return t.parent.nodesBetween(Math.max(0, i - e), i, (o, r, a, s) => {
			var l, u;
			const c = ((u = (l = o.type.spec).toText) === null || u === void 0 ? void 0 : u.call(l, {
				node: o,
				pos: r,
				parent: a,
				index: s
			})) || o.textContent || "%leaf%";
			n += c.slice(0, Math.max(0, i - r))
		}), n
	};

	function lu(t) {
		return Object.prototype.toString.call(t) === "[object RegExp]"
	}
	class f9 {
		constructor(e) {
			this.find = e.find, this.handler = e.handler
		}
	}
	const h9 = (t, e) => {
		if (lu(e)) return e.exec(t);
		const n = e(t);
		if (!n) return null;
		const i = [n.text];
		return i.index = n.index, i.input = t, i.data = n.data, n.replaceWith && (n.text.includes(n.replaceWith) || console.warn('[tiptap warn]: "inputRuleMatch.replaceWith" must be part of "inputRuleMatch.text".'), i.push(n.replaceWith)), i
	};

	function uu(t) {
		var e;
		const {
			editor: n,
			from: i,
			to: o,
			text: r,
			rules: a,
			plugin: s
		} = t, {
			view: l
		} = n;
		if (l.composing) return !1;
		const u = l.state.doc.resolve(i);
		if (u.parent.type.spec.code || !((e = u.nodeBefore || u.nodeAfter) === null || e === void 0) && e.marks.find(d => d.type.spec.code)) return !1;
		let c = !1;
		const m = p9(u) + r;
		return a.forEach(d => {
			if (c) return;
			const p = h9(m, d.find);
			if (!p) return;
			const f = l.state.tr,
				y = pa({
					state: l.state,
					transaction: f
				}),
				h = {
					from: i - (p[0].length - r.length),
					to: o
				},
				{
					commands: g,
					chain: b,
					can: v
				} = new fa({
					editor: n,
					state: y
				});
			d.handler({
				state: y,
				range: h,
				match: p,
				commands: g,
				chain: b,
				can: v
			}) === null || !f.steps.length || (f.setMeta(s, {
				transform: f,
				from: i,
				to: o,
				text: r
			}), l.dispatch(f), c = !0)
		}), c
	}

	function g9(t) {
		const {
			editor: e,
			rules: n
		} = t, i = new Qe({
			state: {
				init() {
					return null
				},
				apply(o, r) {
					const a = o.getMeta(i);
					return a || (o.selectionSet || o.docChanged ? null : r)
				}
			},
			props: {
				handleTextInput(o, r, a, s) {
					return uu({
						editor: e,
						from: r,
						to: a,
						text: s,
						rules: n,
						plugin: i
					})
				},
				handleDOMEvents: {
					compositionend: o => (setTimeout(() => {
						const {
							$cursor: r
						} = o.state.selection;
						r && uu({
							editor: e,
							from: r.pos,
							to: r.pos,
							text: "",
							rules: n,
							plugin: i
						})
					}), !1)
				},
				handleKeyDown(o, r) {
					if (r.key !== "Enter") return !1;
					const {
						$cursor: a
					} = o.state.selection;
					return a ? uu({
						editor: e,
						from: a.pos,
						to: a.pos,
						text: `
`,
						rules: n,
						plugin: i
					}) : !1
				}
			},
			isInputRules: !0
		});
		return i
	}

	function y9(t) {
		return typeof t == "number"
	}
	const b9 = (t, e) => {
		if (lu(e)) return [...t.matchAll(e)];
		const n = e(t);
		return n ? n.map(i => {
			const o = [i.text];
			return o.index = i.index, o.input = t, o.data = i.data, i.replaceWith && (i.text.includes(i.replaceWith) || console.warn('[tiptap warn]: "pasteRuleMatch.replaceWith" must be part of "pasteRuleMatch.text".'), o.push(i.replaceWith)), o
		}) : []
	};

	function k9(t) {
		const {
			editor: e,
			state: n,
			from: i,
			to: o,
			rule: r
		} = t, {
			commands: a,
			chain: s,
			can: l
		} = new fa({
			editor: e,
			state: n
		}), u = [];
		return n.doc.nodesBetween(i, o, (m, d) => {
			if (!m.isTextblock || m.type.spec.code) return;
			const p = Math.max(i, d),
				f = Math.min(o, d + m.content.size),
				y = m.textBetween(p - d, f - d, void 0, "￼");
			b9(y, r.find).forEach(g => {
				if (g.index === void 0) return;
				const b = p + g.index + 1,
					v = b + g[0].length,
					w = {
						from: n.tr.mapping.map(b),
						to: n.tr.mapping.map(v)
					},
					x = r.handler({
						state: n,
						range: w,
						match: g,
						commands: a,
						chain: s,
						can: l
					});
				u.push(x)
			})
		}), u.every(m => m !== null)
	}

	function v9(t) {
		const {
			editor: e,
			rules: n
		} = t;
		let i = null,
			o = !1,
			r = !1;
		return n.map(s => new Qe({
			view(l) {
				const u = c => {
					var m;
					i = !((m = l.dom.parentElement) === null || m === void 0) && m.contains(c.target) ? l.dom.parentElement : null
				};
				return window.addEventListener("dragstart", u), {
					destroy() {
						window.removeEventListener("dragstart", u)
					}
				}
			},
			props: {
				handleDOMEvents: {
					drop: l => (r = i === l.dom.parentElement, !1),
					paste: (l, u) => {
						var c;
						const m = (c = u.clipboardData) === null || c === void 0 ? void 0 : c.getData("text/html");
						return o = !!(m != null && m.includes("data-pm-slice")), !1
					}
				}
			},
			appendTransaction: (l, u, c) => {
				const m = l[0],
					d = m.getMeta("uiEvent") === "paste" && !o,
					p = m.getMeta("uiEvent") === "drop" && !r;
				if (!d && !p) return;
				const f = u.doc.content.findDiffStart(c.doc.content),
					y = u.doc.content.findDiffEnd(c.doc.content);
				if (!y9(f) || !y || f === y.b) return;
				const h = c.tr,
					g = pa({
						state: c,
						transaction: h
					});
				if (!(!k9({
						editor: e,
						state: g,
						from: Math.max(f - 1, 0),
						to: y.b - 1,
						rule: s
					}) || !h.steps.length)) return h
			}
		}))
	}

	function w9(t) {
		const e = t.filter((n, i) => t.indexOf(n) !== i);
		return [...new Set(e)]
	}
	class Ai {
		constructor(e, n) {
			this.splittableMarks = [], this.editor = n, this.extensions = Ai.resolve(e), this.schema = m9(this.extensions, n), this.extensions.forEach(i => {
				var o;
				this.editor.extensionStorage[i.name] = i.storage;
				const r = {
					name: i.name,
					options: i.options,
					storage: i.storage,
					editor: this.editor,
					type: su(i.name, this.schema)
				};
				i.type === "mark" && (!((o = B(z(i, "keepOnSplit", r))) !== null && o !== void 0) || o) && this.splittableMarks.push(i.name);
				const a = z(i, "onBeforeCreate", r);
				a && this.editor.on("beforeCreate", a);
				const s = z(i, "onCreate", r);
				s && this.editor.on("create", s);
				const l = z(i, "onUpdate", r);
				l && this.editor.on("update", l);
				const u = z(i, "onSelectionUpdate", r);
				u && this.editor.on("selectionUpdate", u);
				const c = z(i, "onTransaction", r);
				c && this.editor.on("transaction", c);
				const m = z(i, "onFocus", r);
				m && this.editor.on("focus", m);
				const d = z(i, "onBlur", r);
				d && this.editor.on("blur", d);
				const p = z(i, "onDestroy", r);
				p && this.editor.on("destroy", p)
			})
		}
		static resolve(e) {
			const n = Ai.sort(Ai.flatten(e)),
				i = w9(n.map(o => o.name));
			return i.length && console.warn(`[tiptap warn]: Duplicate extension names found: [${i.map(o=>`'${o}'`).join(", ")}]. This can lead to issues.`), n
		}
		static flatten(e) {
			return e.map(n => {
				const i = {
						name: n.name,
						options: n.options,
						storage: n.storage
					},
					o = z(n, "addExtensions", i);
				return o ? [n, ...this.flatten(o())] : n
			}).flat(10)
		}
		static sort(e) {
			return e.sort((i, o) => {
				const r = z(i, "priority") || 100,
					a = z(o, "priority") || 100;
				return r > a ? -1 : r < a ? 1 : 0
			})
		}
		get commands() {
			return this.extensions.reduce((e, n) => {
				const i = {
						name: n.name,
						options: n.options,
						storage: n.storage,
						editor: this.editor,
						type: su(n.name, this.schema)
					},
					o = z(n, "addCommands", i);
				return o ? {
					...e,
					...o()
				} : e
			}, {})
		}
		get plugins() {
			const {
				editor: e
			} = this, n = Ai.sort([...this.extensions].reverse()), i = [], o = [], r = n.map(a => {
				const s = {
						name: a.name,
						options: a.options,
						storage: a.storage,
						editor: e,
						type: su(a.name, this.schema)
					},
					l = [],
					u = z(a, "addKeyboardShortcuts", s);
				let c = {};
				if (a.type === "mark" && a.config.exitable && (c.ArrowRight = () => Oo.handleExit({
						editor: e,
						mark: a
					})), u) {
					const y = Object.fromEntries(Object.entries(u()).map(([h, g]) => [h, () => g({
						editor: e
					})]));
					c = {
						...c,
						...y
					}
				}
				const m = DW(c);
				l.push(m);
				const d = z(a, "addInputRules", s);
				Rf(a, e.options.enableInputRules) && d && i.push(...d());
				const p = z(a, "addPasteRules", s);
				Rf(a, e.options.enablePasteRules) && p && o.push(...p());
				const f = z(a, "addProseMirrorPlugins", s);
				if (f) {
					const y = f();
					l.push(...y)
				}
				return l
			}).flat();
			return [g9({
				editor: e,
				rules: i
			}), ...v9({
				editor: e,
				rules: o
			}), ...r]
		}
		get attributes() {
			return zf(this.extensions)
		}
		get nodeViews() {
			const {
				editor: e
			} = this, {
				nodeExtensions: n
			} = ha(this.extensions);
			return Object.fromEntries(n.filter(i => !!z(i, "addNodeView")).map(i => {
				const o = this.attributes.filter(l => l.type === i.name),
					r = {
						name: i.name,
						options: i.options,
						storage: i.storage,
						editor: e,
						type: me(i.name, this.schema)
					},
					a = z(i, "addNodeView", r);
				if (!a) return [];
				const s = (l, u, c, m) => {
					const d = au(l, o);
					return a()({
						editor: e,
						node: l,
						getPos: c,
						decorations: m,
						HTMLAttributes: d,
						extension: i
					})
				};
				return [i.name, s]
			}))
		}
	}

	function S9(t) {
		return Object.prototype.toString.call(t).slice(8, -1)
	}

	function cu(t) {
		return S9(t) !== "Object" ? !1 : t.constructor === Object && Object.getPrototypeOf(t) === Object.prototype
	}

	function ga(t, e) {
		const n = {
			...t
		};
		return cu(t) && cu(e) && Object.keys(e).forEach(i => {
			cu(e[i]) ? i in t ? n[i] = ga(t[i], e[i]) : Object.assign(n, {
				[i]: e[i]
			}) : Object.assign(n, {
				[i]: e[i]
			})
		}), n
	}
	class wt {
		constructor(e = {}) {
			this.type = "extension", this.name = "extension", this.parent = null, this.child = null, this.config = {
				name: this.name,
				defaultOptions: {}
			}, this.config = {
				...this.config,
				...e
			}, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = B(z(this, "addOptions", {
				name: this.name
			}))), this.storage = B(z(this, "addStorage", {
				name: this.name,
				options: this.options
			})) || {}
		}
		static create(e = {}) {
			return new wt(e)
		}
		configure(e = {}) {
			const n = this.extend();
			return n.options = ga(this.options, e), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
		extend(e = {}) {
			const n = new wt(e);
			return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = B(z(n, "addOptions", {
				name: n.name
			})), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
	}

	function Yf(t, e, n) {
		const {
			from: i,
			to: o
		} = e, {
			blockSeparator: r = `

`,
			textSerializers: a = {}
		} = n || {};
		let s = "",
			l = !0;
		return t.nodesBetween(i, o, (u, c, m, d) => {
			var p;
			const f = a == null ? void 0 : a[u.type.name];
			f ? (u.isBlock && !l && (s += r, l = !0), m && (s += f({
				node: u,
				pos: c,
				parent: m,
				index: d,
				range: e
			}))) : u.isText ? (s += (p = u == null ? void 0 : u.text) === null || p === void 0 ? void 0 : p.slice(Math.max(i, c) - c, o - c), l = !1) : u.isBlock && !l && (s += r, l = !0)
		}), s
	}

	function Lf(t) {
		return Object.fromEntries(Object.entries(t.nodes).filter(([, e]) => e.spec.toText).map(([e, n]) => [e, n.spec.toText]))
	}
	const C9 = wt.create({
			name: "clipboardTextSerializer",
			addProseMirrorPlugins() {
				return [new Qe({
					key: new zt("clipboardTextSerializer"),
					props: {
						clipboardTextSerializer: () => {
							const {
								editor: t
							} = this, {
								state: e,
								schema: n
							} = t, {
								doc: i,
								selection: o
							} = e, {
								ranges: r
							} = o, a = Math.min(...r.map(c => c.$from.pos)), s = Math.max(...r.map(c => c.$to.pos)), l = Lf(n);
							return Yf(i, {
								from: a,
								to: s
							}, {
								textSerializers: l
							})
						}
					}
				})]
			}
		}),
		x9 = () => ({
			editor: t,
			view: e
		}) => (requestAnimationFrame(() => {
			var n;
			t.isDestroyed || (e.dom.blur(), (n = window == null ? void 0 : window.getSelection()) === null || n === void 0 || n.removeAllRanges())
		}), !0),
		E9 = (t = !1) => ({
			commands: e
		}) => e.setContent("", t),
		T9 = () => ({
			state: t,
			tr: e,
			dispatch: n
		}) => {
			const {
				selection: i
			} = e, {
				ranges: o
			} = i;
			return n && o.forEach(({
				$from: r,
				$to: a
			}) => {
				t.doc.nodesBetween(r.pos, a.pos, (s, l) => {
					if (s.type.isText) return;
					const {
						doc: u,
						mapping: c
					} = e, m = u.resolve(c.map(l)), d = u.resolve(c.map(l + s.nodeSize)), p = m.blockRange(d);
					if (!p) return;
					const f = yi(p);
					if (s.type.isTextblock) {
						const {
							defaultType: y
						} = m.parent.contentMatchAt(m.index());
						e.setNodeMarkup(p.start, y)
					}(f || f === 0) && e.lift(p, f)
				})
			}), !0
		},
		j9 = t => e => t(e),
		$9 = () => ({
			state: t,
			dispatch: e
		}) => GW(t, e),
		A9 = (t, e) => ({
			editor: n,
			tr: i
		}) => {
			const {
				state: o
			} = n, r = o.doc.slice(t.from, t.to);
			i.deleteRange(t.from, t.to);
			const a = i.mapping.map(e);
			return i.insert(a, r.content), i.setSelection(new F(i.doc.resolve(a - 1))), !0
		},
		N9 = () => ({
			tr: t,
			dispatch: e
		}) => {
			const {
				selection: n
			} = t, i = n.$anchor.node();
			if (i.content.size > 0) return !1;
			const o = t.selection.$anchor;
			for (let r = o.depth; r > 0; r -= 1)
				if (o.node(r).type === i.type) {
					if (e) {
						const s = o.before(r),
							l = o.after(r);
						t.delete(s, l).scrollIntoView()
					}
					return !0
				} return !1
		},
		M9 = t => ({
			tr: e,
			state: n,
			dispatch: i
		}) => {
			const o = me(t, n.schema),
				r = e.selection.$anchor;
			for (let a = r.depth; a > 0; a -= 1)
				if (r.node(a).type === o) {
					if (i) {
						const l = r.before(a),
							u = r.after(a);
						e.delete(l, u).scrollIntoView()
					}
					return !0
				} return !1
		},
		P9 = t => ({
			tr: e,
			dispatch: n
		}) => {
			const {
				from: i,
				to: o
			} = t;
			return n && e.delete(i, o), !0
		},
		_9 = () => ({
			state: t,
			dispatch: e
		}) => RW(t, e),
		z9 = () => ({
			commands: t
		}) => t.keyboardShortcut("Enter"),
		O9 = () => ({
			state: t,
			dispatch: e
		}) => JW(t, e);

	function ya(t, e, n = {
		strict: !0
	}) {
		const i = Object.keys(e);
		return i.length ? i.every(o => n.strict ? e[o] === t[o] : lu(e[o]) ? e[o].test(t[o]) : e[o] === t[o]) : !0
	}

	function du(t, e, n = {}) {
		return t.find(i => i.type === e && ya(i.attrs, n))
	}

	function D9(t, e, n = {}) {
		return !!du(t, e, n)
	}

	function mu(t, e, n = {}) {
		if (!t || !e) return;
		let i = t.parent.childAfter(t.parentOffset);
		if (t.parentOffset === i.offset && i.offset !== 0 && (i = t.parent.childBefore(t.parentOffset)), !i.node) return;
		const o = du([...i.node.marks], e, n);
		if (!o) return;
		let r = i.index,
			a = t.start() + i.offset,
			s = r + 1,
			l = a + i.node.nodeSize;
		for (du([...i.node.marks], e, n); r > 0 && o.isInSet(t.parent.child(r - 1).marks);) r -= 1, a -= t.parent.child(r).nodeSize;
		for (; s < t.parent.childCount && D9([...t.parent.child(s).marks], e, n);) l += t.parent.child(s).nodeSize, s += 1;
		return {
			from: a,
			to: l
		}
	}

	function an(t, e) {
		if (typeof t == "string") {
			if (!e.marks[t]) throw Error(`There is no mark type named '${t}'. Maybe you forgot to add the extension?`);
			return e.marks[t]
		}
		return t
	}
	const I9 = (t, e = {}) => ({
			tr: n,
			state: i,
			dispatch: o
		}) => {
			const r = an(t, i.schema),
				{
					doc: a,
					selection: s
				} = n,
				{
					$from: l,
					from: u,
					to: c
				} = s;
			if (o) {
				const m = mu(l, r, e);
				if (m && m.from <= u && m.to >= c) {
					const d = F.create(a, m.from, m.to);
					n.setSelection(d)
				}
			}
			return !0
		},
		R9 = t => e => {
			const n = typeof t == "function" ? t(e) : t;
			for (let i = 0; i < n.length; i += 1)
				if (n[i](e)) return !0;
			return !1
		};

	function Ff(t) {
		return t instanceof F
	}

	function Hn(t = 0, e = 0, n = 0) {
		return Math.min(Math.max(t, e), n)
	}

	function Bf(t, e = null) {
		if (!e) return null;
		const n = L.atStart(t),
			i = L.atEnd(t);
		if (e === "start" || e === !0) return n;
		if (e === "end") return i;
		const o = n.from,
			r = i.to;
		return e === "all" ? F.create(t, Hn(0, o, r), Hn(t.content.size, o, r)) : F.create(t, Hn(e, o, r), Hn(e, o, r))
	}

	function pu() {
		return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document
	}
	const Y9 = (t = null, e = {}) => ({
			editor: n,
			view: i,
			tr: o,
			dispatch: r
		}) => {
			e = {
				scrollIntoView: !0,
				...e
			};
			const a = () => {
				pu() && i.dom.focus(), requestAnimationFrame(() => {
					n.isDestroyed || (i.focus(), e != null && e.scrollIntoView && n.commands.scrollIntoView())
				})
			};
			if (i.hasFocus() && t === null || t === !1) return !0;
			if (r && t === null && !Ff(n.state.selection)) return a(), !0;
			const s = Bf(o.doc, t) || n.state.selection,
				l = n.state.selection.eq(s);
			return r && (l || o.setSelection(s), l && o.storedMarks && o.setStoredMarks(o.storedMarks), a()), !0
		},
		L9 = (t, e) => n => t.every((i, o) => e(i, {
			...n,
			index: o
		})),
		F9 = (t, e) => ({
			tr: n,
			commands: i
		}) => i.insertContentAt({
			from: n.selection.from,
			to: n.selection.to
		}, t, e);

	function Uf(t) {
		const e = `<body>${t}</body>`;
		return new window.DOMParser().parseFromString(e, "text/html").body
	}

	function ba(t, e, n) {
		if (n = {
				slice: !0,
				parseOptions: {},
				...n
			}, typeof t == "object" && t !== null) try {
			return Array.isArray(t) && t.length > 0 ? j.fromArray(t.map(i => e.nodeFromJSON(i))) : e.nodeFromJSON(t)
		} catch (i) {
			return console.warn("[tiptap warn]: Invalid content.", "Passed value:", t, "Error:", i), ba("", e, n)
		}
		if (typeof t == "string") {
			const i = hi.fromSchema(e);
			return n.slice ? i.parseSlice(Uf(t), n.parseOptions).content : i.parse(Uf(t), n.parseOptions)
		}
		return ba("", e, n)
	}

	function B9(t, e, n) {
		const i = t.steps.length - 1;
		if (i < e) return;
		const o = t.steps[i];
		if (!(o instanceof Ee || o instanceof de)) return;
		const r = t.mapping.maps[i];
		let a = 0;
		r.forEach((s, l, u, c) => {
			a === 0 && (a = c)
		}), t.setSelection(L.near(t.doc.resolve(a), n))
	}
	const U9 = t => t.toString().startsWith("<"),
		V9 = (t, e, n) => ({
			tr: i,
			dispatch: o,
			editor: r
		}) => {
			if (o) {
				n = {
					parseOptions: {},
					updateSelection: !0,
					...n
				};
				const a = ba(e, r.schema, {
					parseOptions: {
						preserveWhitespace: "full",
						...n.parseOptions
					}
				});
				if (a.toString() === "<>") return !0;
				let {
					from: s,
					to: l
				} = typeof t == "number" ? {
					from: t,
					to: t
				} : {
					from: t.from,
					to: t.to
				}, u = !0, c = !0;
				if ((U9(a) ? a : [a]).forEach(d => {
						d.check(), u = u ? d.isText && d.marks.length === 0 : !1, c = c ? d.isBlock : !1
					}), s === l && c) {
					const {
						parent: d
					} = i.doc.resolve(s);
					d.isTextblock && !d.type.spec.code && !d.childCount && (s -= 1, l += 1)
				}
				u ? Array.isArray(e) ? i.insertText(e.map(d => d.text || "").join(""), s, l) : typeof e == "object" && e && e.text ? i.insertText(e.text, s, l) : i.insertText(e, s, l) : i.replaceWith(s, l, a), n.updateSelection && B9(i, i.steps.length - 1, -1)
			}
			return !0
		},
		H9 = () => ({
			state: t,
			dispatch: e
		}) => HW(t, e),
		q9 = () => ({
			state: t,
			dispatch: e
		}) => qW(t, e),
		W9 = () => ({
			state: t,
			dispatch: e
		}) => LW(t, e),
		K9 = () => ({
			state: t,
			dispatch: e
		}) => UW(t, e),
		J9 = () => ({
			tr: t,
			state: e,
			dispatch: n
		}) => {
			try {
				const i = na(e.doc, e.selection.$from.pos, -1);
				return i == null ? !1 : (t.join(i, 2), n && n(t), !0)
			} catch {
				return !1
			}
		},
		G9 = () => ({
			state: t,
			dispatch: e,
			tr: n
		}) => {
			try {
				const i = na(t.doc, t.selection.$from.pos, 1);
				return i == null ? !1 : (n.join(i, 2), e && e(n), !0)
			} catch {
				return !1
			}
		};

	function Vf() {
		return typeof navigator < "u" ? /Mac/.test(navigator.platform) : !1
	}

	function Q9(t) {
		const e = t.split(/-(?!$)/);
		let n = e[e.length - 1];
		n === "Space" && (n = " ");
		let i, o, r, a;
		for (let s = 0; s < e.length - 1; s += 1) {
			const l = e[s];
			if (/^(cmd|meta|m)$/i.test(l)) a = !0;
			else if (/^a(lt)?$/i.test(l)) i = !0;
			else if (/^(c|ctrl|control)$/i.test(l)) o = !0;
			else if (/^s(hift)?$/i.test(l)) r = !0;
			else if (/^mod$/i.test(l)) pu() || Vf() ? a = !0 : o = !0;
			else throw new Error(`Unrecognized modifier name: ${l}`)
		}
		return i && (n = `Alt-${n}`), o && (n = `Ctrl-${n}`), a && (n = `Meta-${n}`), r && (n = `Shift-${n}`), n
	}
	const X9 = t => ({
		editor: e,
		view: n,
		tr: i,
		dispatch: o
	}) => {
		const r = Q9(t).split(/-(?!$)/),
			a = r.find(u => !["Alt", "Ctrl", "Meta", "Shift"].includes(u)),
			s = new KeyboardEvent("keydown", {
				key: a === "Space" ? " " : a,
				altKey: r.includes("Alt"),
				ctrlKey: r.includes("Ctrl"),
				metaKey: r.includes("Meta"),
				shiftKey: r.includes("Shift"),
				bubbles: !0,
				cancelable: !0
			}),
			l = e.captureTransaction(() => {
				n.someProp("handleKeyDown", u => u(n, s))
			});
		return l == null || l.steps.forEach(u => {
			const c = u.map(i.mapping);
			c && o && i.maybeStep(c)
		}), !0
	};

	function zo(t, e, n = {}) {
		const {
			from: i,
			to: o,
			empty: r
		} = t.selection, a = e ? me(e, t.schema) : null, s = [];
		t.doc.nodesBetween(i, o, (m, d) => {
			if (m.isText) return;
			const p = Math.max(i, d),
				f = Math.min(o, d + m.nodeSize);
			s.push({
				node: m,
				from: p,
				to: f
			})
		});
		const l = o - i,
			u = s.filter(m => a ? a.name === m.node.type.name : !0).filter(m => ya(m.node.attrs, n, {
				strict: !1
			}));
		return r ? !!u.length : u.reduce((m, d) => m + d.to - d.from, 0) >= l
	}
	const Z9 = (t, e = {}) => ({
			state: n,
			dispatch: i
		}) => {
			const o = me(t, n.schema);
			return zo(n, o, e) ? WW(n, i) : !1
		},
		e7 = () => ({
			state: t,
			dispatch: e
		}) => QW(t, e),
		t7 = t => ({
			state: e,
			dispatch: n
		}) => {
			const i = me(t, e.schema);
			return r9(i)(e, n)
		},
		n7 = () => ({
			state: t,
			dispatch: e
		}) => KW(t, e);

	function ka(t, e) {
		return e.nodes[t] ? "node" : e.marks[t] ? "mark" : null
	}

	function Hf(t, e) {
		const n = typeof e == "string" ? [e] : e;
		return Object.keys(t).reduce((i, o) => (n.includes(o) || (i[o] = t[o]), i), {})
	}
	const i7 = (t, e) => ({
			tr: n,
			state: i,
			dispatch: o
		}) => {
			let r = null,
				a = null;
			const s = ka(typeof t == "string" ? t : t.name, i.schema);
			return s ? (s === "node" && (r = me(t, i.schema)), s === "mark" && (a = an(t, i.schema)), o && n.selection.ranges.forEach(l => {
				i.doc.nodesBetween(l.$from.pos, l.$to.pos, (u, c) => {
					r && r === u.type && n.setNodeMarkup(c, void 0, Hf(u.attrs, e)), a && u.marks.length && u.marks.forEach(m => {
						a === m.type && n.addMark(c, c + u.nodeSize, a.create(Hf(m.attrs, e)))
					})
				})
			}), !0) : !1
		},
		o7 = () => ({
			tr: t,
			dispatch: e
		}) => (e && t.scrollIntoView(), !0),
		r7 = () => ({
			tr: t,
			commands: e
		}) => e.setTextSelection({
			from: 0,
			to: t.doc.content.size
		}),
		a7 = () => ({
			state: t,
			dispatch: e
		}) => FW(t, e),
		s7 = () => ({
			state: t,
			dispatch: e
		}) => VW(t, e),
		l7 = () => ({
			state: t,
			dispatch: e
		}) => XW(t, e),
		u7 = () => ({
			state: t,
			dispatch: e
		}) => t9(t, e),
		c7 = () => ({
			state: t,
			dispatch: e
		}) => e9(t, e);

	function qf(t, e, n = {}) {
		return ba(t, e, {
			slice: !1,
			parseOptions: n
		})
	}
	const d7 = (t, e = !1, n = {}) => ({
		tr: i,
		editor: o,
		dispatch: r
	}) => {
		const {
			doc: a
		} = i, s = qf(t, o.schema, n);
		return r && i.replaceWith(0, a.content.size, s).setMeta("preventUpdate", !e), !0
	};

	function Wf(t, e) {
		const n = an(e, t.schema),
			{
				from: i,
				to: o,
				empty: r
			} = t.selection,
			a = [];
		r ? (t.storedMarks && a.push(...t.storedMarks), a.push(...t.selection.$head.marks())) : t.doc.nodesBetween(i, o, l => {
			a.push(...l.marks)
		});
		const s = a.find(l => l.type.name === n.name);
		return s ? {
			...s.attrs
		} : {}
	}

	function m7(t, e) {
		const n = new lp(t);
		return e.forEach(i => {
			i.steps.forEach(o => {
				n.step(o)
			})
		}), n
	}

	function p7(t) {
		for (let e = 0; e < t.edgeCount; e += 1) {
			const {
				type: n
			} = t.edge(e);
			if (n.isTextblock && !n.hasRequiredAttrs()) return n
		}
		return null
	}

	function f7(t, e, n) {
		const i = [];
		return t.nodesBetween(e.from, e.to, (o, r) => {
			n(o) && i.push({
				node: o,
				pos: r
			})
		}), i
	}

	function h7(t, e) {
		for (let n = t.depth; n > 0; n -= 1) {
			const i = t.node(n);
			if (e(i)) return {
				pos: n > 0 ? t.before(n) : 0,
				start: t.start(n),
				depth: n,
				node: i
			}
		}
	}

	function fu(t) {
		return e => h7(e.$from, t)
	}

	function g7(t, e) {
		const n = gt.fromSchema(e).serializeFragment(t),
			o = document.implementation.createHTMLDocument().createElement("div");
		return o.appendChild(n), o.innerHTML
	}

	function y7(t, e) {
		const n = {
			from: 0,
			to: t.content.size
		};
		return Yf(t, n, e)
	}

	function b7(t, e) {
		const n = me(e, t.schema),
			{
				from: i,
				to: o
			} = t.selection,
			r = [];
		t.doc.nodesBetween(i, o, s => {
			r.push(s)
		});
		const a = r.reverse().find(s => s.type.name === n.name);
		return a ? {
			...a.attrs
		} : {}
	}

	function Kf(t, e) {
		const n = ka(typeof e == "string" ? e : e.name, t.schema);
		return n === "node" ? b7(t, e) : n === "mark" ? Wf(t, e) : {}
	}

	function k7(t, e = JSON.stringify) {
		const n = {};
		return t.filter(i => {
			const o = e(i);
			return Object.prototype.hasOwnProperty.call(n, o) ? !1 : n[o] = !0
		})
	}

	function v7(t) {
		const e = k7(t);
		return e.length === 1 ? e : e.filter((n, i) => !e.filter((r, a) => a !== i).some(r => n.oldRange.from >= r.oldRange.from && n.oldRange.to <= r.oldRange.to && n.newRange.from >= r.newRange.from && n.newRange.to <= r.newRange.to))
	}

	function w7(t) {
		const {
			mapping: e,
			steps: n
		} = t, i = [];
		return e.maps.forEach((o, r) => {
			const a = [];
			if (o.ranges.length) o.forEach((s, l) => {
				a.push({
					from: s,
					to: l
				})
			});
			else {
				const {
					from: s,
					to: l
				} = n[r];
				if (s === void 0 || l === void 0) return;
				a.push({
					from: s,
					to: l
				})
			}
			a.forEach(({
				from: s,
				to: l
			}) => {
				const u = e.slice(r).map(s, -1),
					c = e.slice(r).map(l),
					m = e.invert().map(u, -1),
					d = e.invert().map(c);
				i.push({
					oldRange: {
						from: m,
						to: d
					},
					newRange: {
						from: u,
						to: c
					}
				})
			})
		}), v7(i)
	}

	function S7(t, e, n) {
		const i = [];
		return t === e ? n.resolve(t).marks().forEach(o => {
			const r = n.resolve(t - 1),
				a = mu(r, o.type);
			a && i.push({
				mark: o,
				...a
			})
		}) : n.nodesBetween(t, e, (o, r) => {
			i.push(...o.marks.map(a => ({
				from: r,
				to: r + o.nodeSize,
				mark: a
			})))
		}), i
	}

	function va(t, e, n) {
		return Object.fromEntries(Object.entries(n).filter(([i]) => {
			const o = t.find(r => r.type === e && r.name === i);
			return o ? o.attribute.keepOnSplit : !1
		}))
	}

	function hu(t, e, n = {}) {
		const {
			empty: i,
			ranges: o
		} = t.selection, r = e ? an(e, t.schema) : null;
		if (i) return !!(t.storedMarks || t.selection.$from.marks()).filter(m => r ? r.name === m.type.name : !0).find(m => ya(m.attrs, n, {
			strict: !1
		}));
		let a = 0;
		const s = [];
		if (o.forEach(({
				$from: m,
				$to: d
			}) => {
				const p = m.pos,
					f = d.pos;
				t.doc.nodesBetween(p, f, (y, h) => {
					if (!y.isText && !y.marks.length) return;
					const g = Math.max(p, h),
						b = Math.min(f, h + y.nodeSize),
						v = b - g;
					a += v, s.push(...y.marks.map(w => ({
						mark: w,
						from: g,
						to: b
					})))
				})
			}), a === 0) return !1;
		const l = s.filter(m => r ? r.name === m.mark.type.name : !0).filter(m => ya(m.mark.attrs, n, {
				strict: !1
			})).reduce((m, d) => m + d.to - d.from, 0),
			u = s.filter(m => r ? m.mark.type !== r && m.mark.type.excludes(r) : !0).reduce((m, d) => m + d.to - d.from, 0);
		return (l > 0 ? l + u : l) >= a
	}

	function C7(t, e, n = {}) {
		if (!e) return zo(t, null, n) || hu(t, null, n);
		const i = ka(e, t.schema);
		return i === "node" ? zo(t, e, n) : i === "mark" ? hu(t, e, n) : !1
	}

	function Jf(t, e) {
		const {
			nodeExtensions: n
		} = ha(e), i = n.find(a => a.name === t);
		if (!i) return !1;
		const o = {
				name: i.name,
				options: i.options,
				storage: i.storage
			},
			r = B(z(i, "group", o));
		return typeof r != "string" ? !1 : r.split(" ").includes("list")
	}

	function x7(t) {
		var e;
		const n = (e = t.type.createAndFill()) === null || e === void 0 ? void 0 : e.toJSON(),
			i = t.toJSON();
		return JSON.stringify(n) === JSON.stringify(i)
	}

	function E7(t, e, n) {
		var i;
		const {
			selection: o
		} = e;
		let r = null;
		if (Ff(o) && (r = o.$cursor), r) {
			const s = (i = t.storedMarks) !== null && i !== void 0 ? i : r.marks();
			return !!n.isInSet(s) || !s.some(l => l.type.excludes(n))
		}
		const {
			ranges: a
		} = o;
		return a.some(({
			$from: s,
			$to: l
		}) => {
			let u = s.depth === 0 ? t.doc.inlineContent && t.doc.type.allowsMarkType(n) : !1;
			return t.doc.nodesBetween(s.pos, l.pos, (c, m, d) => {
				if (u) return !1;
				if (c.isInline) {
					const p = !d || d.type.allowsMarkType(n),
						f = !!n.isInSet(c.marks) || !c.marks.some(y => y.type.excludes(n));
					u = p && f
				}
				return !u
			}), u
		})
	}
	const T7 = (t, e = {}) => ({
			tr: n,
			state: i,
			dispatch: o
		}) => {
			const {
				selection: r
			} = n, {
				empty: a,
				ranges: s
			} = r, l = an(t, i.schema);
			if (o)
				if (a) {
					const u = Wf(i, l);
					n.addStoredMark(l.create({
						...u,
						...e
					}))
				} else s.forEach(u => {
					const c = u.$from.pos,
						m = u.$to.pos;
					i.doc.nodesBetween(c, m, (d, p) => {
						const f = Math.max(p, c),
							y = Math.min(p + d.nodeSize, m);
						d.marks.find(g => g.type === l) ? d.marks.forEach(g => {
							l === g.type && n.addMark(f, y, l.create({
								...g.attrs,
								...e
							}))
						}) : n.addMark(f, y, l.create(e))
					})
				});
			return E7(i, n, l)
		},
		j7 = (t, e) => ({
			tr: n
		}) => (n.setMeta(t, e), !0),
		$7 = (t, e = {}) => ({
			state: n,
			dispatch: i,
			chain: o
		}) => {
			const r = me(t, n.schema);
			return r.isTextblock ? o().command(({
				commands: a
			}) => _f(r, e)(n) ? !0 : a.clearNodes()).command(({
				state: a
			}) => _f(r, e)(a, i)).run() : (console.warn('[tiptap warn]: Currently "setNode()" only supports text block nodes.'), !1)
		},
		A7 = t => ({
			tr: e,
			dispatch: n
		}) => {
			if (n) {
				const {
					doc: i
				} = e, o = Hn(t, 0, i.content.size), r = R.create(i, o);
				e.setSelection(r)
			}
			return !0
		},
		N7 = t => ({
			tr: e,
			dispatch: n
		}) => {
			if (n) {
				const {
					doc: i
				} = e, {
					from: o,
					to: r
				} = typeof t == "number" ? {
					from: t,
					to: t
				} : t, a = F.atStart(i).from, s = F.atEnd(i).to, l = Hn(o, a, s), u = Hn(r, a, s), c = F.create(i, l, u);
				e.setSelection(c)
			}
			return !0
		},
		M7 = t => ({
			state: e,
			dispatch: n
		}) => {
			const i = me(t, e.schema);
			return l9(i)(e, n)
		};

	function Gf(t, e) {
		const n = t.storedMarks || t.selection.$to.parentOffset && t.selection.$from.marks();
		if (n) {
			const i = n.filter(o => e == null ? void 0 : e.includes(o.type.name));
			t.tr.ensureMarks(i)
		}
	}
	const P7 = ({
			keepMarks: t = !0
		} = {}) => ({
			tr: e,
			state: n,
			dispatch: i,
			editor: o
		}) => {
			const {
				selection: r,
				doc: a
			} = e, {
				$from: s,
				$to: l
			} = r, u = o.extensionManager.attributes, c = va(u, s.node().type.name, s.node().attrs);
			if (r instanceof R && r.node.isBlock) return !s.parentOffset || !bi(a, s.pos) ? !1 : (i && (t && Gf(n, o.extensionManager.splittableMarks), e.split(s.pos).scrollIntoView()), !0);
			if (!s.parent.isBlock) return !1;
			if (i) {
				const m = l.parentOffset === l.parent.content.size;
				r instanceof F && e.deleteSelection();
				const d = s.depth === 0 ? void 0 : p7(s.node(-1).contentMatchAt(s.indexAfter(-1)));
				let p = m && d ? [{
						type: d,
						attrs: c
					}] : void 0,
					f = bi(e.doc, e.mapping.map(s.pos), 1, p);
				if (!p && !f && bi(e.doc, e.mapping.map(s.pos), 1, d ? [{
						type: d
					}] : void 0) && (f = !0, p = d ? [{
						type: d,
						attrs: c
					}] : void 0), f && (e.split(e.mapping.map(s.pos), 1, p), d && !m && !s.parentOffset && s.parent.type !== d)) {
					const y = e.mapping.map(s.before()),
						h = e.doc.resolve(y);
					s.node(-1).canReplaceWith(h.index(), h.index() + 1, d) && e.setNodeMarkup(e.mapping.map(s.before()), d)
				}
				t && Gf(n, o.extensionManager.splittableMarks), e.scrollIntoView()
			}
			return !0
		},
		_7 = t => ({
			tr: e,
			state: n,
			dispatch: i,
			editor: o
		}) => {
			var r;
			const a = me(t, n.schema),
				{
					$from: s,
					$to: l
				} = n.selection,
				u = n.selection.node;
			if (u && u.isBlock || s.depth < 2 || !s.sameParent(l)) return !1;
			const c = s.node(-1);
			if (c.type !== a) return !1;
			const m = o.extensionManager.attributes;
			if (s.parent.content.size === 0 && s.node(-1).childCount === s.indexAfter(-1)) {
				if (s.depth === 2 || s.node(-3).type !== a || s.index(-2) !== s.node(-2).childCount - 1) return !1;
				if (i) {
					let h = j.empty;
					const g = s.index(-1) ? 1 : s.index(-2) ? 2 : 3;
					for (let E = s.depth - g; E >= s.depth - 3; E -= 1) h = j.from(s.node(E).copy(h));
					const b = s.indexAfter(-1) < s.node(-2).childCount ? 1 : s.indexAfter(-2) < s.node(-3).childCount ? 2 : 3,
						v = va(m, s.node().type.name, s.node().attrs),
						w = ((r = a.contentMatch.defaultType) === null || r === void 0 ? void 0 : r.createAndFill(v)) || void 0;
					h = h.append(j.from(a.createAndFill(null, w) || void 0));
					const x = s.before(s.depth - (g - 1));
					e.replace(x, s.after(-b), new P(h, 4 - g, 0));
					let S = -1;
					e.doc.nodesBetween(x, e.doc.content.size, (E, T) => {
						if (S > -1) return !1;
						E.isTextblock && E.content.size === 0 && (S = T + 1)
					}), S > -1 && e.setSelection(F.near(e.doc.resolve(S))), e.scrollIntoView()
				}
				return !0
			}
			const d = l.pos === s.end() ? c.contentMatchAt(0).defaultType : null,
				p = va(m, c.type.name, c.attrs),
				f = va(m, s.node().type.name, s.node().attrs);
			e.delete(s.pos, l.pos);
			const y = d ? [{
				type: a,
				attrs: p
			}, {
				type: d,
				attrs: f
			}] : [{
				type: a,
				attrs: p
			}];
			if (!bi(e.doc, s.pos, 2)) return !1;
			if (i) {
				const {
					selection: h,
					storedMarks: g
				} = n, {
					splittableMarks: b
				} = o.extensionManager, v = g || h.$to.parentOffset && h.$from.marks();
				if (e.split(s.pos, 2, y).scrollIntoView(), !v || !i) return !0;
				const w = v.filter(x => b.includes(x.type.name));
				e.ensureMarks(w)
			}
			return !0
		},
		gu = (t, e) => {
			const n = fu(a => a.type === e)(t.selection);
			if (!n) return !0;
			const i = t.doc.resolve(Math.max(0, n.pos - 1)).before(n.depth);
			if (i === void 0) return !0;
			const o = t.doc.nodeAt(i);
			return n.node.type === (o == null ? void 0 : o.type) && Jt(t.doc, n.pos) && t.join(n.pos), !0
		},
		yu = (t, e) => {
			const n = fu(a => a.type === e)(t.selection);
			if (!n) return !0;
			const i = t.doc.resolve(n.start).after(n.depth);
			if (i === void 0) return !0;
			const o = t.doc.nodeAt(i);
			return n.node.type === (o == null ? void 0 : o.type) && Jt(t.doc, i) && t.join(i), !0
		};
	var z7 = Object.freeze({
		__proto__: null,
		blur: x9,
		clearContent: E9,
		clearNodes: T9,
		command: j9,
		createParagraphNear: $9,
		cut: A9,
		deleteCurrentNode: N9,
		deleteNode: M9,
		deleteRange: P9,
		deleteSelection: _9,
		enter: z9,
		exitCode: O9,
		extendMarkRange: I9,
		first: R9,
		focus: Y9,
		forEach: L9,
		insertContent: F9,
		insertContentAt: V9,
		joinUp: H9,
		joinDown: q9,
		joinBackward: W9,
		joinForward: K9,
		joinItemBackward: J9,
		joinItemForward: G9,
		keyboardShortcut: X9,
		lift: Z9,
		liftEmptyBlock: e7,
		liftListItem: t7,
		newlineInCode: n7,
		resetAttributes: i7,
		scrollIntoView: o7,
		selectAll: r7,
		selectNodeBackward: a7,
		selectNodeForward: s7,
		selectParentNode: l7,
		selectTextblockEnd: u7,
		selectTextblockStart: c7,
		setContent: d7,
		setMark: T7,
		setMeta: j7,
		setNode: $7,
		setNodeSelection: A7,
		setTextSelection: N7,
		sinkListItem: M7,
		splitBlock: P7,
		splitListItem: _7,
		toggleList: (t, e, n, i = {}) => ({
			editor: o,
			tr: r,
			state: a,
			dispatch: s,
			chain: l,
			commands: u,
			can: c
		}) => {
			const {
				extensions: m,
				splittableMarks: d
			} = o.extensionManager, p = me(t, a.schema), f = me(e, a.schema), {
				selection: y,
				storedMarks: h
			} = a, {
				$from: g,
				$to: b
			} = y, v = g.blockRange(b), w = h || y.$to.parentOffset && y.$from.marks();
			if (!v) return !1;
			const x = fu(S => Jf(S.type.name, m))(y);
			if (v.depth >= 1 && x && v.depth - x.depth <= 1) {
				if (x.node.type === p) return u.liftListItem(f);
				if (Jf(x.node.type.name, m) && p.validContent(x.node.content) && s) return l().command(() => (r.setNodeMarkup(x.pos, p), !0)).command(() => gu(r, p)).command(() => yu(r, p)).run()
			}
			return !n || !w || !s ? l().command(() => c().wrapInList(p, i) ? !0 : u.clearNodes()).wrapInList(p, i).command(() => gu(r, p)).command(() => yu(r, p)).run() : l().command(() => {
				const S = c().wrapInList(p, i),
					E = w.filter(T => d.includes(T.type.name));
				return r.ensureMarks(E), S ? !0 : u.clearNodes()
			}).wrapInList(p, i).command(() => gu(r, p)).command(() => yu(r, p)).run()
		},
		toggleMark: (t, e = {}, n = {}) => ({
			state: i,
			commands: o
		}) => {
			const {
				extendEmptyMarkRange: r = !1
			} = n, a = an(t, i.schema);
			return hu(i, a, e) ? o.unsetMark(a, {
				extendEmptyMarkRange: r
			}) : o.setMark(a, e)
		},
		toggleNode: (t, e, n = {}) => ({
			state: i,
			commands: o
		}) => {
			const r = me(t, i.schema),
				a = me(e, i.schema);
			return zo(i, r, n) ? o.setNode(a) : o.setNode(r, n)
		},
		toggleWrap: (t, e = {}) => ({
			state: n,
			commands: i
		}) => {
			const o = me(t, n.schema);
			return zo(n, o, e) ? i.lift(o) : i.wrapIn(o, e)
		},
		undoInputRule: () => ({
			state: t,
			dispatch: e
		}) => {
			const n = t.plugins;
			for (let i = 0; i < n.length; i += 1) {
				const o = n[i];
				let r;
				if (o.spec.isInputRules && (r = o.getState(t))) {
					if (e) {
						const a = t.tr,
							s = r.transform;
						for (let l = s.steps.length - 1; l >= 0; l -= 1) a.step(s.steps[l].invert(s.docs[l]));
						if (r.text) {
							const l = a.doc.resolve(r.from).marks();
							a.replaceWith(r.from, r.to, t.schema.text(r.text, l))
						} else a.delete(r.from, r.to)
					}
					return !0
				}
			}
			return !1
		},
		unsetAllMarks: () => ({
			tr: t,
			dispatch: e
		}) => {
			const {
				selection: n
			} = t, {
				empty: i,
				ranges: o
			} = n;
			return i || e && o.forEach(r => {
				t.removeMark(r.$from.pos, r.$to.pos)
			}), !0
		},
		unsetMark: (t, e = {}) => ({
			tr: n,
			state: i,
			dispatch: o
		}) => {
			var r;
			const {
				extendEmptyMarkRange: a = !1
			} = e, {
				selection: s
			} = n, l = an(t, i.schema), {
				$from: u,
				empty: c,
				ranges: m
			} = s;
			if (!o) return !0;
			if (c && a) {
				let {
					from: d,
					to: p
				} = s;
				const f = (r = u.marks().find(h => h.type === l)) === null || r === void 0 ? void 0 : r.attrs,
					y = mu(u, l, f);
				y && (d = y.from, p = y.to), n.removeMark(d, p, l)
			} else m.forEach(d => {
				n.removeMark(d.$from.pos, d.$to.pos, l)
			});
			return n.removeStoredMark(l), !0
		},
		updateAttributes: (t, e = {}) => ({
			tr: n,
			state: i,
			dispatch: o
		}) => {
			let r = null,
				a = null;
			const s = ka(typeof t == "string" ? t : t.name, i.schema);
			return s ? (s === "node" && (r = me(t, i.schema)), s === "mark" && (a = an(t, i.schema)), o && n.selection.ranges.forEach(l => {
				const u = l.$from.pos,
					c = l.$to.pos;
				i.doc.nodesBetween(u, c, (m, d) => {
					r && r === m.type && n.setNodeMarkup(d, void 0, {
						...m.attrs,
						...e
					}), a && m.marks.length && m.marks.forEach(p => {
						if (a === p.type) {
							const f = Math.max(d, u),
								y = Math.min(d + m.nodeSize, c);
							n.addMark(f, y, a.create({
								...p.attrs,
								...e
							}))
						}
					})
				})
			}), !0) : !1
		},
		wrapIn: (t, e = {}) => ({
			state: n,
			dispatch: i
		}) => {
			const o = me(t, n.schema);
			return n9(o, e)(n, i)
		},
		wrapInList: (t, e = {}) => ({
			state: n,
			dispatch: i
		}) => {
			const o = me(t, n.schema);
			return i9(o, e)(n, i)
		}
	});
	const O7 = wt.create({
			name: "commands",
			addCommands() {
				return {
					...z7
				}
			}
		}),
		D7 = wt.create({
			name: "editable",
			addProseMirrorPlugins() {
				return [new Qe({
					key: new zt("editable"),
					props: {
						editable: () => this.editor.options.editable
					}
				})]
			}
		}),
		I7 = wt.create({
			name: "focusEvents",
			addProseMirrorPlugins() {
				const {
					editor: t
				} = this;
				return [new Qe({
					key: new zt("focusEvents"),
					props: {
						handleDOMEvents: {
							focus: (e, n) => {
								t.isFocused = !0;
								const i = t.state.tr.setMeta("focus", {
									event: n
								}).setMeta("addToHistory", !1);
								return e.dispatch(i), !1
							},
							blur: (e, n) => {
								t.isFocused = !1;
								const i = t.state.tr.setMeta("blur", {
									event: n
								}).setMeta("addToHistory", !1);
								return e.dispatch(i), !1
							}
						}
					}
				})]
			}
		}),
		R7 = wt.create({
			name: "keymap",
			addKeyboardShortcuts() {
				const t = () => this.editor.commands.first(({
						commands: a
					}) => [() => a.undoInputRule(), () => a.command(({
						tr: s
					}) => {
						const {
							selection: l,
							doc: u
						} = s, {
							empty: c,
							$anchor: m
						} = l, {
							pos: d,
							parent: p
						} = m, f = m.parent.isTextblock ? s.doc.resolve(d - 1) : m, y = f.parent.type.spec.isolating, h = m.pos - m.parentOffset, g = y && f.parent.childCount === 1 ? h === m.pos : L.atStart(u).from === d;
						return !c || !g || !p.type.isTextblock || p.textContent.length ? !1 : a.clearNodes()
					}), () => a.deleteSelection(), () => a.joinBackward(), () => a.selectNodeBackward()]),
					e = () => this.editor.commands.first(({
						commands: a
					}) => [() => a.deleteSelection(), () => a.deleteCurrentNode(), () => a.joinForward(), () => a.selectNodeForward()]),
					i = {
						Enter: () => this.editor.commands.first(({
							commands: a
						}) => [() => a.newlineInCode(), () => a.createParagraphNear(), () => a.liftEmptyBlock(), () => a.splitBlock()]),
						"Mod-Enter": () => this.editor.commands.exitCode(),
						Backspace: t,
						"Mod-Backspace": t,
						"Shift-Backspace": t,
						Delete: e,
						"Mod-Delete": e,
						"Mod-a": () => this.editor.commands.selectAll()
					},
					o = {
						...i
					},
					r = {
						...i,
						"Ctrl-h": t,
						"Alt-Backspace": t,
						"Ctrl-d": e,
						"Ctrl-Alt-Backspace": e,
						"Alt-Delete": e,
						"Alt-d": e,
						"Ctrl-a": () => this.editor.commands.selectTextblockStart(),
						"Ctrl-e": () => this.editor.commands.selectTextblockEnd()
					};
				return pu() || Vf() ? r : o
			},
			addProseMirrorPlugins() {
				return [new Qe({
					key: new zt("clearDocument"),
					appendTransaction: (t, e, n) => {
						if (!(t.some(f => f.docChanged) && !e.doc.eq(n.doc))) return;
						const {
							empty: o,
							from: r,
							to: a
						} = e.selection, s = L.atStart(e.doc).from, l = L.atEnd(e.doc).to;
						if (o || !(r === s && a === l) || !(n.doc.textBetween(0, n.doc.content.size, " ", " ").length === 0)) return;
						const m = n.tr,
							d = pa({
								state: n,
								transaction: m
							}),
							{
								commands: p
							} = new fa({
								editor: this.editor,
								state: d
							});
						if (p.clearNodes(), !!m.steps.length) return m
					}
				})]
			}
		}),
		Y7 = wt.create({
			name: "tabindex",
			addProseMirrorPlugins() {
				return [new Qe({
					key: new zt("tabindex"),
					props: {
						attributes: this.editor.isEditable ? {
							tabindex: "0"
						} : {}
					}
				})]
			}
		});
	var L7 = Object.freeze({
		__proto__: null,
		ClipboardTextSerializer: C9,
		Commands: O7,
		Editable: D7,
		FocusEvents: I7,
		Keymap: R7,
		Tabindex: Y7
	});
	const F7 = `.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable="false"] {
  white-space: normal;
}

.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 1px !important;
  height: 1px !important;
}

.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}

.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}

.ProseMirror-hideselection * {
  caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

.tippy-box[data-animation=fade][data-state=hidden] {
  opacity: 0
}`;

	function B7(t, e, n) {
		const i = document.querySelector(`style[data-tiptap-style${n?`-${n}`:""}]`);
		if (i !== null) return i;
		const o = document.createElement("style");
		return e && o.setAttribute("nonce", e), o.setAttribute(`data-tiptap-style${n?`-${n}`:""}`, ""), o.innerHTML = t, document.getElementsByTagName("head")[0].appendChild(o), o
	}
	let U7 = class extends u9 {
		constructor(e = {}) {
			super(), this.isFocused = !1, this.extensionStorage = {}, this.options = {
				element: document.createElement("div"),
				content: "",
				injectCSS: !0,
				injectNonce: void 0,
				extensions: [],
				autofocus: !1,
				editable: !0,
				editorProps: {},
				parseOptions: {},
				enableInputRules: !0,
				enablePasteRules: !0,
				enableCoreExtensions: !0,
				onBeforeCreate: () => null,
				onCreate: () => null,
				onUpdate: () => null,
				onSelectionUpdate: () => null,
				onTransaction: () => null,
				onFocus: () => null,
				onBlur: () => null,
				onDestroy: () => null
			}, this.isCapturingTransaction = !1, this.capturedTransaction = null, this.setOptions(e), this.createExtensionManager(), this.createCommandManager(), this.createSchema(), this.on("beforeCreate", this.options.onBeforeCreate), this.emit("beforeCreate", {
				editor: this
			}), this.createView(), this.injectCSS(), this.on("create", this.options.onCreate), this.on("update", this.options.onUpdate), this.on("selectionUpdate", this.options.onSelectionUpdate), this.on("transaction", this.options.onTransaction), this.on("focus", this.options.onFocus), this.on("blur", this.options.onBlur), this.on("destroy", this.options.onDestroy), window.setTimeout(() => {
				this.isDestroyed || (this.commands.focus(this.options.autofocus), this.emit("create", {
					editor: this
				}))
			}, 0)
		}
		get storage() {
			return this.extensionStorage
		}
		get commands() {
			return this.commandManager.commands
		}
		chain() {
			return this.commandManager.chain()
		}
		can() {
			return this.commandManager.can()
		}
		injectCSS() {
			this.options.injectCSS && document && (this.css = B7(F7, this.options.injectNonce))
		}
		setOptions(e = {}) {
			this.options = {
				...this.options,
				...e
			}, !(!this.view || !this.state || this.isDestroyed) && (this.options.editorProps && this.view.setProps(this.options.editorProps), this.view.updateState(this.state))
		}
		setEditable(e, n = !0) {
			this.setOptions({
				editable: e
			}), n && this.emit("update", {
				editor: this,
				transaction: this.state.tr
			})
		}
		get isEditable() {
			return this.options.editable && this.view && this.view.editable
		}
		get state() {
			return this.view.state
		}
		registerPlugin(e, n) {
			const i = Of(n) ? n(e, [...this.state.plugins]) : [...this.state.plugins, e],
				o = this.state.reconfigure({
					plugins: i
				});
			this.view.updateState(o)
		}
		unregisterPlugin(e) {
			if (this.isDestroyed) return;
			const n = typeof e == "string" ? `${e}$` : e.key,
				i = this.state.reconfigure({
					plugins: this.state.plugins.filter(o => !o.key.startsWith(n))
				});
			this.view.updateState(i)
		}
		createExtensionManager() {
			const n = [...this.options.enableCoreExtensions ? Object.values(L7) : [], ...this.options.extensions].filter(i => ["extension", "node", "mark"].includes(i == null ? void 0 : i.type));
			this.extensionManager = new Ai(n, this)
		}
		createCommandManager() {
			this.commandManager = new fa({
				editor: this
			})
		}
		createSchema() {
			this.schema = this.extensionManager.schema
		}
		createView() {
			const e = qf(this.options.content, this.schema, this.options.parseOptions),
				n = Bf(e, this.options.autofocus);
			this.view = new jW(this.options.element, {
				...this.options.editorProps,
				dispatchTransaction: this.dispatchTransaction.bind(this),
				state: Si.create({
					doc: e,
					selection: n || void 0
				})
			});
			const i = this.state.reconfigure({
				plugins: this.extensionManager.plugins
			});
			this.view.updateState(i), this.createNodeViews(), this.prependClass();
			const o = this.view.dom;
			o.editor = this
		}
		createNodeViews() {
			this.view.setProps({
				nodeViews: this.extensionManager.nodeViews
			})
		}
		prependClass() {
			this.view.dom.className = `tiptap ${this.view.dom.className}`
		}
		captureTransaction(e) {
			this.isCapturingTransaction = !0, e(), this.isCapturingTransaction = !1;
			const n = this.capturedTransaction;
			return this.capturedTransaction = null, n
		}
		dispatchTransaction(e) {
			if (this.view.isDestroyed) return;
			if (this.isCapturingTransaction) {
				if (!this.capturedTransaction) {
					this.capturedTransaction = e;
					return
				}
				e.steps.forEach(a => {
					var s;
					return (s = this.capturedTransaction) === null || s === void 0 ? void 0 : s.step(a)
				});
				return
			}
			const n = this.state.apply(e),
				i = !this.state.selection.eq(n.selection);
			this.view.updateState(n), this.emit("transaction", {
				editor: this,
				transaction: e
			}), i && this.emit("selectionUpdate", {
				editor: this,
				transaction: e
			});
			const o = e.getMeta("focus"),
				r = e.getMeta("blur");
			o && this.emit("focus", {
				editor: this,
				event: o.event,
				transaction: e
			}), r && this.emit("blur", {
				editor: this,
				event: r.event,
				transaction: e
			}), !(!e.docChanged || e.getMeta("preventUpdate")) && this.emit("update", {
				editor: this,
				transaction: e
			})
		}
		getAttributes(e) {
			return Kf(this.state, e)
		}
		isActive(e, n) {
			const i = typeof e == "string" ? e : null,
				o = typeof e == "string" ? n : e;
			return C7(this.state, i, o)
		}
		getJSON() {
			return this.state.doc.toJSON()
		}
		getHTML() {
			return g7(this.state.doc.content, this.schema)
		}
		getText(e) {
			const {
				blockSeparator: n = `

`,
				textSerializers: i = {}
			} = e || {};
			return y7(this.state.doc, {
				blockSeparator: n,
				textSerializers: {
					...Lf(this.schema),
					...i
				}
			})
		}
		get isEmpty() {
			return x7(this.state.doc)
		}
		getCharacterCount() {
			return console.warn('[tiptap warn]: "editor.getCharacterCount()" is deprecated. Please use "editor.storage.characterCount.characters()" instead.'), this.state.doc.content.size - 2
		}
		destroy() {
			this.emit("destroy"), this.view && this.view.destroy(), this.removeAllListeners()
		}
		get isDestroyed() {
			var e;
			return !(!((e = this.view) === null || e === void 0) && e.docView)
		}
	};

	function V7(t) {
		return new f9({
			find: t.find,
			handler: ({
				state: e,
				range: n,
				match: i,
				chain: o
			}) => {
				const r = B(t.getAttributes, void 0, i) || {},
					a = e.tr.delete(n.from, n.to),
					l = a.doc.resolve(n.from).blockRange(),
					u = l && jl(l, t.type, r);
				if (!u) return null;
				if (a.wrap(l, u), t.keepMarks && t.editor) {
					const {
						selection: m,
						storedMarks: d
					} = e, {
						splittableMarks: p
					} = t.editor.extensionManager, f = d || m.$to.parentOffset && m.$from.marks();
					if (f) {
						const y = f.filter(h => p.includes(h.type.name));
						a.ensureMarks(y)
					}
				}
				if (t.keepAttributes) {
					const m = t.type.name === "bulletList" || t.type.name === "orderedList" ? "listItem" : "taskList";
					o().updateAttributes(m, r).run()
				}
				const c = a.doc.resolve(n.from - 1).nodeBefore;
				c && c.type === t.type && Jt(a.doc, n.from - 1) && (!t.joinPredicate || t.joinPredicate(i, c)) && a.join(n.from - 1)
			}
		})
	}
	class Oo {
		constructor(e = {}) {
			this.type = "mark", this.name = "mark", this.parent = null, this.child = null, this.config = {
				name: this.name,
				defaultOptions: {}
			}, this.config = {
				...this.config,
				...e
			}, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = B(z(this, "addOptions", {
				name: this.name
			}))), this.storage = B(z(this, "addStorage", {
				name: this.name,
				options: this.options
			})) || {}
		}
		static create(e = {}) {
			return new Oo(e)
		}
		configure(e = {}) {
			const n = this.extend();
			return n.options = ga(this.options, e), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
		extend(e = {}) {
			const n = new Oo(e);
			return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = B(z(n, "addOptions", {
				name: n.name
			})), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
		static handleExit({
			editor: e,
			mark: n
		}) {
			const {
				tr: i
			} = e.state, o = e.state.selection.$from;
			if (o.pos === o.end()) {
				const a = o.marks();
				if (!!!a.find(u => (u == null ? void 0 : u.type.name) === n.name)) return !1;
				const l = a.find(u => (u == null ? void 0 : u.type.name) === n.name);
				return l && i.removeStoredMark(l), i.insertText(" ", o.pos), e.view.dispatch(i), !0
			}
			return !1
		}
	}
	class sn {
		constructor(e = {}) {
			this.type = "node", this.name = "node", this.parent = null, this.child = null, this.config = {
				name: this.name,
				defaultOptions: {}
			}, this.config = {
				...this.config,
				...e
			}, this.name = this.config.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = B(z(this, "addOptions", {
				name: this.name
			}))), this.storage = B(z(this, "addStorage", {
				name: this.name,
				options: this.options
			})) || {}
		}
		static create(e = {}) {
			return new sn(e)
		}
		configure(e = {}) {
			const n = this.extend();
			return n.options = ga(this.options, e), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
		extend(e = {}) {
			const n = new sn(e);
			return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = B(z(n, "addOptions", {
				name: n.name
			})), n.storage = B(z(n, "addStorage", {
				name: n.name,
				options: n.options
			})), n
		}
	}
	var Qf = {
			exports: {}
		},
		tt = {},
		Xf = {
			exports: {}
		},
		Zf = {};
	/** @license React v0.20.2
	 * scheduler.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	(function(t) {
		var e, n, i, o;
		if (typeof performance == "object" && typeof performance.now == "function") {
			var r = performance;
			t.unstable_now = function() {
				return r.now()
			}
		} else {
			var a = Date,
				s = a.now();
			t.unstable_now = function() {
				return a.now() - s
			}
		}
		if (typeof window > "u" || typeof MessageChannel != "function") {
			var l = null,
				u = null,
				c = function() {
					if (l !== null) try {
						var N = t.unstable_now();
						l(!0, N), l = null
					} catch (D) {
						throw setTimeout(c, 0), D
					}
				};
			e = function(N) {
				l !== null ? setTimeout(e, 0, N) : (l = N, setTimeout(c, 0))
			}, n = function(N, D) {
				u = setTimeout(N, D)
			}, i = function() {
				clearTimeout(u)
			}, t.unstable_shouldYield = function() {
				return !1
			}, o = t.unstable_forceFrameRate = function() {}
		} else {
			var m = window.setTimeout,
				d = window.clearTimeout;
			if (typeof console < "u") {
				var p = window.cancelAnimationFrame;
				typeof window.requestAnimationFrame != "function" && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), typeof p != "function" && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")
			}
			var f = !1,
				y = null,
				h = -1,
				g = 5,
				b = 0;
			t.unstable_shouldYield = function() {
				return t.unstable_now() >= b
			}, o = function() {}, t.unstable_forceFrameRate = function(N) {
				0 > N || 125 < N ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : g = 0 < N ? Math.floor(1e3 / N) : 5
			};
			var v = new MessageChannel,
				w = v.port2;
			v.port1.onmessage = function() {
				if (y !== null) {
					var N = t.unstable_now();
					b = N + g;
					try {
						y(!0, N) ? w.postMessage(null) : (f = !1, y = null)
					} catch (D) {
						throw w.postMessage(null), D
					}
				} else f = !1
			}, e = function(N) {
				y = N, f || (f = !0, w.postMessage(null))
			}, n = function(N, D) {
				h = m(function() {
					N(t.unstable_now())
				}, D)
			}, i = function() {
				d(h), h = -1
			}
		}

		function x(N, D) {
			var I = N.length;
			N.push(D);
			e: for (;;) {
				var re = I - 1 >>> 1,
					xe = N[re];
				if (xe !== void 0 && 0 < T(xe, D)) N[re] = D, N[I] = xe, I = re;
				else break e
			}
		}

		function S(N) {
			return N = N[0], N === void 0 ? null : N
		}

		function E(N) {
			var D = N[0];
			if (D !== void 0) {
				var I = N.pop();
				if (I !== D) {
					N[0] = I;
					e: for (var re = 0, xe = N.length; re < xe;) {
						var di = 2 * (re + 1) - 1,
							mi = N[di],
							Fr = di + 1,
							fo = N[Fr];
						if (mi !== void 0 && 0 > T(mi, I)) fo !== void 0 && 0 > T(fo, mi) ? (N[re] = fo, N[Fr] = I, re = Fr) : (N[re] = mi, N[di] = I, re = di);
						else if (fo !== void 0 && 0 > T(fo, I)) N[re] = fo, N[Fr] = I, re = Fr;
						else break e
					}
				}
				return D
			}
			return null
		}

		function T(N, D) {
			var I = N.sortIndex - D.sortIndex;
			return I !== 0 ? I : N.id - D.id
		}
		var M = [],
			U = [],
			qe = 1,
			Z = null,
			W = 3,
			Se = !1,
			ae = !1,
			Ce = !1;

		function K(N) {
			for (var D = S(U); D !== null;) {
				if (D.callback === null) E(U);
				else if (D.startTime <= N) E(U), D.sortIndex = D.expirationTime, x(M, D);
				else break;
				D = S(U)
			}
		}

		function se(N) {
			if (Ce = !1, K(N), !ae)
				if (S(M) !== null) ae = !0, e(Pe);
				else {
					var D = S(U);
					D !== null && n(se, D.startTime - N)
				}
		}

		function Pe(N, D) {
			ae = !1, Ce && (Ce = !1, i()), Se = !0;
			var I = W;
			try {
				for (K(D), Z = S(M); Z !== null && (!(Z.expirationTime > D) || N && !t.unstable_shouldYield());) {
					var re = Z.callback;
					if (typeof re == "function") {
						Z.callback = null, W = Z.priorityLevel;
						var xe = re(Z.expirationTime <= D);
						D = t.unstable_now(), typeof xe == "function" ? Z.callback = xe : Z === S(M) && E(M), K(D)
					} else E(M);
					Z = S(M)
				}
				if (Z !== null) var di = !0;
				else {
					var mi = S(U);
					mi !== null && n(se, mi.startTime - D), di = !1
				}
				return di
			} finally {
				Z = null, W = I, Se = !1
			}
		}
		var Re = o;
		t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(N) {
			N.callback = null
		}, t.unstable_continueExecution = function() {
			ae || Se || (ae = !0, e(Pe))
		}, t.unstable_getCurrentPriorityLevel = function() {
			return W
		}, t.unstable_getFirstCallbackNode = function() {
			return S(M)
		}, t.unstable_next = function(N) {
			switch (W) {
				case 1:
				case 2:
				case 3:
					var D = 3;
					break;
				default:
					D = W
			}
			var I = W;
			W = D;
			try {
				return N()
			} finally {
				W = I
			}
		}, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = Re, t.unstable_runWithPriority = function(N, D) {
			switch (N) {
				case 1:
				case 2:
				case 3:
				case 4:
				case 5:
					break;
				default:
					N = 3
			}
			var I = W;
			W = N;
			try {
				return D()
			} finally {
				W = I
			}
		}, t.unstable_scheduleCallback = function(N, D, I) {
			var re = t.unstable_now();
			switch (typeof I == "object" && I !== null ? (I = I.delay, I = typeof I == "number" && 0 < I ? re + I : re) : I = re, N) {
				case 1:
					var xe = -1;
					break;
				case 2:
					xe = 250;
					break;
				case 5:
					xe = 1073741823;
					break;
				case 4:
					xe = 1e4;
					break;
				default:
					xe = 5e3
			}
			return xe = I + xe, N = {
				id: qe++,
				callback: D,
				priorityLevel: N,
				startTime: I,
				expirationTime: xe,
				sortIndex: -1
			}, I > re ? (N.sortIndex = I, x(U, N), S(M) === null && N === S(U) && (Ce ? i() : Ce = !0, n(se, I - re))) : (N.sortIndex = xe, x(M, N), ae || Se || (ae = !0, e(Pe))), N
		}, t.unstable_wrapCallback = function(N) {
			var D = W;
			return function() {
				var I = W;
				W = D;
				try {
					return N.apply(this, arguments)
				} finally {
					W = I
				}
			}
		}
	})(Zf), Xf.exports = Zf;
	var H7 = Xf.exports;
	/** @license React v17.0.2
	 * react-dom.production.min.js
	 *
	 * Copyright (c) Facebook, Inc. and its affiliates.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */
	var wa = C,
		ee = Zd,
		pe = H7;

	function A(t) {
		for (var e = "https://reactjs.org/docs/error-decoder.html?invariant=" + t, n = 1; n < arguments.length; n++) e += "&args[]=" + encodeURIComponent(arguments[n]);
		return "Minified React error #" + t + "; visit " + e + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
	}
	if (!wa) throw Error(A(227));
	var eh = new Set,
		Do = {};

	function qn(t, e) {
		Ni(t, e), Ni(t + "Capture", e)
	}

	function Ni(t, e) {
		for (Do[t] = e, t = 0; t < e.length; t++) eh.add(e[t])
	}
	var It = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"),
		q7 = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
		th = Object.prototype.hasOwnProperty,
		nh = {},
		ih = {};

	function W7(t) {
		return th.call(ih, t) ? !0 : th.call(nh, t) ? !1 : q7.test(t) ? ih[t] = !0 : (nh[t] = !0, !1)
	}

	function K7(t, e, n, i) {
		if (n !== null && n.type === 0) return !1;
		switch (typeof e) {
			case "function":
			case "symbol":
				return !0;
			case "boolean":
				return i ? !1 : n !== null ? !n.acceptsBooleans : (t = t.toLowerCase().slice(0, 5), t !== "data-" && t !== "aria-");
			default:
				return !1
		}
	}

	function J7(t, e, n, i) {
		if (e === null || typeof e > "u" || K7(t, e, n, i)) return !0;
		if (i) return !1;
		if (n !== null) switch (n.type) {
			case 3:
				return !e;
			case 4:
				return e === !1;
			case 5:
				return isNaN(e);
			case 6:
				return isNaN(e) || 1 > e
		}
		return !1
	}

	function De(t, e, n, i, o, r, a) {
		this.acceptsBooleans = e === 2 || e === 3 || e === 4, this.attributeName = i, this.attributeNamespace = o, this.mustUseProperty = n, this.propertyName = t, this.type = e, this.sanitizeURL = r, this.removeEmptyString = a
	}
	var be = {};
	"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t) {
		be[t] = new De(t, 0, !1, t, null, !1, !1)
	}), [
		["acceptCharset", "accept-charset"],
		["className", "class"],
		["htmlFor", "for"],
		["httpEquiv", "http-equiv"]
	].forEach(function(t) {
		var e = t[0];
		be[e] = new De(e, 1, !1, t[1], null, !1, !1)
	}), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(t) {
		be[t] = new De(t, 2, !1, t.toLowerCase(), null, !1, !1)
	}), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(t) {
		be[t] = new De(t, 2, !1, t, null, !1, !1)
	}), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t) {
		be[t] = new De(t, 3, !1, t.toLowerCase(), null, !1, !1)
	}), ["checked", "multiple", "muted", "selected"].forEach(function(t) {
		be[t] = new De(t, 3, !0, t, null, !1, !1)
	}), ["capture", "download"].forEach(function(t) {
		be[t] = new De(t, 4, !1, t, null, !1, !1)
	}), ["cols", "rows", "size", "span"].forEach(function(t) {
		be[t] = new De(t, 6, !1, t, null, !1, !1)
	}), ["rowSpan", "start"].forEach(function(t) {
		be[t] = new De(t, 5, !1, t.toLowerCase(), null, !1, !1)
	});
	var bu = /[\-:]([a-z])/g;

	function ku(t) {
		return t[1].toUpperCase()
	}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t) {
		var e = t.replace(bu, ku);
		be[e] = new De(e, 1, !1, t, null, !1, !1)
	}), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t) {
		var e = t.replace(bu, ku);
		be[e] = new De(e, 1, !1, t, "http://www.w3.org/1999/xlink", !1, !1)
	}), ["xml:base", "xml:lang", "xml:space"].forEach(function(t) {
		var e = t.replace(bu, ku);
		be[e] = new De(e, 1, !1, t, "http://www.w3.org/XML/1998/namespace", !1, !1)
	}), ["tabIndex", "crossOrigin"].forEach(function(t) {
		be[t] = new De(t, 1, !1, t.toLowerCase(), null, !1, !1)
	}), be.xlinkHref = new De("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach(function(t) {
		be[t] = new De(t, 1, !1, t.toLowerCase(), null, !0, !0)
	});

	function vu(t, e, n, i) {
		var o = be.hasOwnProperty(e) ? be[e] : null,
			r = o !== null ? o.type === 0 : i ? !1 : !(!(2 < e.length) || e[0] !== "o" && e[0] !== "O" || e[1] !== "n" && e[1] !== "N");
		r || (J7(e, n, o, i) && (n = null), i || o === null ? W7(e) && (n === null ? t.removeAttribute(e) : t.setAttribute(e, "" + n)) : o.mustUseProperty ? t[o.propertyName] = n === null ? o.type === 3 ? !1 : "" : n : (e = o.attributeName, i = o.attributeNamespace, n === null ? t.removeAttribute(e) : (o = o.type, n = o === 3 || o === 4 && n === !0 ? "" : "" + n, i ? t.setAttributeNS(i, e, n) : t.setAttribute(e, n))))
	}
	var Wn = wa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
		Io = 60103,
		Kn = 60106,
		ln = 60107,
		wu = 60108,
		Ro = 60114,
		Su = 60109,
		Cu = 60110,
		Sa = 60112,
		Yo = 60113,
		Ca = 60120,
		xa = 60115,
		xu = 60116,
		Eu = 60121,
		Tu = 60128,
		oh = 60129,
		ju = 60130,
		$u = 60131;
	if (typeof Symbol == "function" && Symbol.for) {
		var fe = Symbol.for;
		Io = fe("react.element"), Kn = fe("react.portal"), ln = fe("react.fragment"), wu = fe("react.strict_mode"), Ro = fe("react.profiler"), Su = fe("react.provider"), Cu = fe("react.context"), Sa = fe("react.forward_ref"), Yo = fe("react.suspense"), Ca = fe("react.suspense_list"), xa = fe("react.memo"), xu = fe("react.lazy"), Eu = fe("react.block"), fe("react.scope"), Tu = fe("react.opaque.id"), oh = fe("react.debug_trace_mode"), ju = fe("react.offscreen"), $u = fe("react.legacy_hidden")
	}
	var rh = typeof Symbol == "function" && Symbol.iterator;

	function Lo(t) {
		return t === null || typeof t != "object" ? null : (t = rh && t[rh] || t["@@iterator"], typeof t == "function" ? t : null)
	}
	var Au;

	function Fo(t) {
		if (Au === void 0) try {
			throw Error()
		} catch (n) {
			var e = n.stack.trim().match(/\n( *(at )?)/);
			Au = e && e[1] || ""
		}
		return `
` + Au + t
	}
	var Nu = !1;

	function Ea(t, e) {
		if (!t || Nu) return "";
		Nu = !0;
		var n = Error.prepareStackTrace;
		Error.prepareStackTrace = void 0;
		try {
			if (e)
				if (e = function() {
						throw Error()
					}, Object.defineProperty(e.prototype, "props", {
						set: function() {
							throw Error()
						}
					}), typeof Reflect == "object" && Reflect.construct) {
					try {
						Reflect.construct(e, [])
					} catch (l) {
						var i = l
					}
					Reflect.construct(t, [], e)
				} else {
					try {
						e.call()
					} catch (l) {
						i = l
					}
					t.call(e.prototype)
				}
			else {
				try {
					throw Error()
				} catch (l) {
					i = l
				}
				t()
			}
		} catch (l) {
			if (l && i && typeof l.stack == "string") {
				for (var o = l.stack.split(`
`), r = i.stack.split(`
`), a = o.length - 1, s = r.length - 1; 1 <= a && 0 <= s && o[a] !== r[s];) s--;
				for (; 1 <= a && 0 <= s; a--, s--)
					if (o[a] !== r[s]) {
						if (a !== 1 || s !== 1)
							do
								if (a--, s--, 0 > s || o[a] !== r[s]) return `
` + o[a].replace(" at new ", " at "); while (1 <= a && 0 <= s);
						break
					}
			}
		} finally {
			Nu = !1, Error.prepareStackTrace = n
		}
		return (t = t ? t.displayName || t.name : "") ? Fo(t) : ""
	}

	function G7(t) {
		switch (t.tag) {
			case 5:
				return Fo(t.type);
			case 16:
				return Fo("Lazy");
			case 13:
				return Fo("Suspense");
			case 19:
				return Fo("SuspenseList");
			case 0:
			case 2:
			case 15:
				return t = Ea(t.type, !1), t;
			case 11:
				return t = Ea(t.type.render, !1), t;
			case 22:
				return t = Ea(t.type._render, !1), t;
			case 1:
				return t = Ea(t.type, !0), t;
			default:
				return ""
		}
	}

	function Mi(t) {
		if (t == null) return null;
		if (typeof t == "function") return t.displayName || t.name || null;
		if (typeof t == "string") return t;
		switch (t) {
			case ln:
				return "Fragment";
			case Kn:
				return "Portal";
			case Ro:
				return "Profiler";
			case wu:
				return "StrictMode";
			case Yo:
				return "Suspense";
			case Ca:
				return "SuspenseList"
		}
		if (typeof t == "object") switch (t.$$typeof) {
			case Cu:
				return (t.displayName || "Context") + ".Consumer";
			case Su:
				return (t._context.displayName || "Context") + ".Provider";
			case Sa:
				var e = t.render;
				return e = e.displayName || e.name || "", t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef");
			case xa:
				return Mi(t.type);
			case Eu:
				return Mi(t._render);
			case xu:
				e = t._payload, t = t._init;
				try {
					return Mi(t(e))
				} catch {}
		}
		return null
	}

	function un(t) {
		switch (typeof t) {
			case "boolean":
			case "number":
			case "object":
			case "string":
			case "undefined":
				return t;
			default:
				return ""
		}
	}

	function ah(t) {
		var e = t.type;
		return (t = t.nodeName) && t.toLowerCase() === "input" && (e === "checkbox" || e === "radio")
	}

	function Q7(t) {
		var e = ah(t) ? "checked" : "value",
			n = Object.getOwnPropertyDescriptor(t.constructor.prototype, e),
			i = "" + t[e];
		if (!t.hasOwnProperty(e) && typeof n < "u" && typeof n.get == "function" && typeof n.set == "function") {
			var o = n.get,
				r = n.set;
			return Object.defineProperty(t, e, {
				configurable: !0,
				get: function() {
					return o.call(this)
				},
				set: function(a) {
					i = "" + a, r.call(this, a)
				}
			}), Object.defineProperty(t, e, {
				enumerable: n.enumerable
			}), {
				getValue: function() {
					return i
				},
				setValue: function(a) {
					i = "" + a
				},
				stopTracking: function() {
					t._valueTracker = null, delete t[e]
				}
			}
		}
	}

	function Ta(t) {
		t._valueTracker || (t._valueTracker = Q7(t))
	}

	function sh(t) {
		if (!t) return !1;
		var e = t._valueTracker;
		if (!e) return !0;
		var n = e.getValue(),
			i = "";
		return t && (i = ah(t) ? t.checked ? "true" : "false" : t.value), t = i, t !== n ? (e.setValue(t), !0) : !1
	}

	function ja(t) {
		if (t = t || (typeof document < "u" ? document : void 0), typeof t > "u") return null;
		try {
			return t.activeElement || t.body
		} catch {
			return t.body
		}
	}

	function Mu(t, e) {
		var n = e.checked;
		return ee({}, e, {
			defaultChecked: void 0,
			defaultValue: void 0,
			value: void 0,
			checked: n ?? t._wrapperState.initialChecked
		})
	}

	function lh(t, e) {
		var n = e.defaultValue == null ? "" : e.defaultValue,
			i = e.checked != null ? e.checked : e.defaultChecked;
		n = un(e.value != null ? e.value : n), t._wrapperState = {
			initialChecked: i,
			initialValue: n,
			controlled: e.type === "checkbox" || e.type === "radio" ? e.checked != null : e.value != null
		}
	}

	function uh(t, e) {
		e = e.checked, e != null && vu(t, "checked", e, !1)
	}

	function Pu(t, e) {
		uh(t, e);
		var n = un(e.value),
			i = e.type;
		if (n != null) i === "number" ? (n === 0 && t.value === "" || t.value != n) && (t.value = "" + n) : t.value !== "" + n && (t.value = "" + n);
		else if (i === "submit" || i === "reset") {
			t.removeAttribute("value");
			return
		}
		e.hasOwnProperty("value") ? _u(t, e.type, n) : e.hasOwnProperty("defaultValue") && _u(t, e.type, un(e.defaultValue)), e.checked == null && e.defaultChecked != null && (t.defaultChecked = !!e.defaultChecked)
	}

	function ch(t, e, n) {
		if (e.hasOwnProperty("value") || e.hasOwnProperty("defaultValue")) {
			var i = e.type;
			if (!(i !== "submit" && i !== "reset" || e.value !== void 0 && e.value !== null)) return;
			e = "" + t._wrapperState.initialValue, n || e === t.value || (t.value = e), t.defaultValue = e
		}
		n = t.name, n !== "" && (t.name = ""), t.defaultChecked = !!t._wrapperState.initialChecked, n !== "" && (t.name = n)
	}

	function _u(t, e, n) {
		(e !== "number" || ja(t.ownerDocument) !== t) && (n == null ? t.defaultValue = "" + t._wrapperState.initialValue : t.defaultValue !== "" + n && (t.defaultValue = "" + n))
	}

	function X7(t) {
		var e = "";
		return wa.Children.forEach(t, function(n) {
			n != null && (e += n)
		}), e
	}

	function zu(t, e) {
		return t = ee({
			children: void 0
		}, e), (e = X7(e.children)) && (t.children = e), t
	}

	function Pi(t, e, n, i) {
		if (t = t.options, e) {
			e = {};
			for (var o = 0; o < n.length; o++) e["$" + n[o]] = !0;
			for (n = 0; n < t.length; n++) o = e.hasOwnProperty("$" + t[n].value), t[n].selected !== o && (t[n].selected = o), o && i && (t[n].defaultSelected = !0)
		} else {
			for (n = "" + un(n), e = null, o = 0; o < t.length; o++) {
				if (t[o].value === n) {
					t[o].selected = !0, i && (t[o].defaultSelected = !0);
					return
				}
				e !== null || t[o].disabled || (e = t[o])
			}
			e !== null && (e.selected = !0)
		}
	}

	function Ou(t, e) {
		if (e.dangerouslySetInnerHTML != null) throw Error(A(91));
		return ee({}, e, {
			value: void 0,
			defaultValue: void 0,
			children: "" + t._wrapperState.initialValue
		})
	}

	function dh(t, e) {
		var n = e.value;
		if (n == null) {
			if (n = e.children, e = e.defaultValue, n != null) {
				if (e != null) throw Error(A(92));
				if (Array.isArray(n)) {
					if (!(1 >= n.length)) throw Error(A(93));
					n = n[0]
				}
				e = n
			}
			e == null && (e = ""), n = e
		}
		t._wrapperState = {
			initialValue: un(n)
		}
	}

	function mh(t, e) {
		var n = un(e.value),
			i = un(e.defaultValue);
		n != null && (n = "" + n, n !== t.value && (t.value = n), e.defaultValue == null && t.defaultValue !== n && (t.defaultValue = n)), i != null && (t.defaultValue = "" + i)
	}

	function ph(t) {
		var e = t.textContent;
		e === t._wrapperState.initialValue && e !== "" && e !== null && (t.value = e)
	}
	var Du = {
		html: "http://www.w3.org/1999/xhtml",
		mathml: "http://www.w3.org/1998/Math/MathML",
		svg: "http://www.w3.org/2000/svg"
	};

	function fh(t) {
		switch (t) {
			case "svg":
				return "http://www.w3.org/2000/svg";
			case "math":
				return "http://www.w3.org/1998/Math/MathML";
			default:
				return "http://www.w3.org/1999/xhtml"
		}
	}

	function Iu(t, e) {
		return t == null || t === "http://www.w3.org/1999/xhtml" ? fh(e) : t === "http://www.w3.org/2000/svg" && e === "foreignObject" ? "http://www.w3.org/1999/xhtml" : t
	}
	var $a, hh = function(t) {
		return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(e, n, i, o) {
			MSApp.execUnsafeLocalFunction(function() {
				return t(e, n, i, o)
			})
		} : t
	}(function(t, e) {
		if (t.namespaceURI !== Du.svg || "innerHTML" in t) t.innerHTML = e;
		else {
			for ($a = $a || document.createElement("div"), $a.innerHTML = "<svg>" + e.valueOf().toString() + "</svg>", e = $a.firstChild; t.firstChild;) t.removeChild(t.firstChild);
			for (; e.firstChild;) t.appendChild(e.firstChild)
		}
	});

	function Bo(t, e) {
		if (e) {
			var n = t.firstChild;
			if (n && n === t.lastChild && n.nodeType === 3) {
				n.nodeValue = e;
				return
			}
		}
		t.textContent = e
	}
	var Uo = {
			animationIterationCount: !0,
			borderImageOutset: !0,
			borderImageSlice: !0,
			borderImageWidth: !0,
			boxFlex: !0,
			boxFlexGroup: !0,
			boxOrdinalGroup: !0,
			columnCount: !0,
			columns: !0,
			flex: !0,
			flexGrow: !0,
			flexPositive: !0,
			flexShrink: !0,
			flexNegative: !0,
			flexOrder: !0,
			gridArea: !0,
			gridRow: !0,
			gridRowEnd: !0,
			gridRowSpan: !0,
			gridRowStart: !0,
			gridColumn: !0,
			gridColumnEnd: !0,
			gridColumnSpan: !0,
			gridColumnStart: !0,
			fontWeight: !0,
			lineClamp: !0,
			lineHeight: !0,
			opacity: !0,
			order: !0,
			orphans: !0,
			tabSize: !0,
			widows: !0,
			zIndex: !0,
			zoom: !0,
			fillOpacity: !0,
			floodOpacity: !0,
			stopOpacity: !0,
			strokeDasharray: !0,
			strokeDashoffset: !0,
			strokeMiterlimit: !0,
			strokeOpacity: !0,
			strokeWidth: !0
		},
		Z7 = ["Webkit", "ms", "Moz", "O"];
	Object.keys(Uo).forEach(function(t) {
		Z7.forEach(function(e) {
			e = e + t.charAt(0).toUpperCase() + t.substring(1), Uo[e] = Uo[t]
		})
	});

	function gh(t, e, n) {
		return e == null || typeof e == "boolean" || e === "" ? "" : n || typeof e != "number" || e === 0 || Uo.hasOwnProperty(t) && Uo[t] ? ("" + e).trim() : e + "px"
	}

	function yh(t, e) {
		t = t.style;
		for (var n in e)
			if (e.hasOwnProperty(n)) {
				var i = n.indexOf("--") === 0,
					o = gh(n, e[n], i);
				n === "float" && (n = "cssFloat"), i ? t.setProperty(n, o) : t[n] = o
			}
	}
	var eK = ee({
		menuitem: !0
	}, {
		area: !0,
		base: !0,
		br: !0,
		col: !0,
		embed: !0,
		hr: !0,
		img: !0,
		input: !0,
		keygen: !0,
		link: !0,
		meta: !0,
		param: !0,
		source: !0,
		track: !0,
		wbr: !0
	});

	function Ru(t, e) {
		if (e) {
			if (eK[t] && (e.children != null || e.dangerouslySetInnerHTML != null)) throw Error(A(137, t));
			if (e.dangerouslySetInnerHTML != null) {
				if (e.children != null) throw Error(A(60));
				if (!(typeof e.dangerouslySetInnerHTML == "object" && "__html" in e.dangerouslySetInnerHTML)) throw Error(A(61))
			}
			if (e.style != null && typeof e.style != "object") throw Error(A(62))
		}
	}

	function Yu(t, e) {
		if (t.indexOf("-") === -1) return typeof e.is == "string";
		switch (t) {
			case "annotation-xml":
			case "color-profile":
			case "font-face":
			case "font-face-src":
			case "font-face-uri":
			case "font-face-format":
			case "font-face-name":
			case "missing-glyph":
				return !1;
			default:
				return !0
		}
	}

	function Lu(t) {
		return t = t.target || t.srcElement || window, t.correspondingUseElement && (t = t.correspondingUseElement), t.nodeType === 3 ? t.parentNode : t
	}
	var Fu = null,
		_i = null,
		zi = null;

	function bh(t) {
		if (t = lr(t)) {
			if (typeof Fu != "function") throw Error(A(280));
			var e = t.stateNode;
			e && (e = qa(e), Fu(t.stateNode, t.type, e))
		}
	}

	function kh(t) {
		_i ? zi ? zi.push(t) : zi = [t] : _i = t
	}

	function vh() {
		if (_i) {
			var t = _i,
				e = zi;
			if (zi = _i = null, bh(t), e)
				for (t = 0; t < e.length; t++) bh(e[t])
		}
	}

	function Bu(t, e) {
		return t(e)
	}

	function wh(t, e, n, i, o) {
		return t(e, n, i, o)
	}

	function Uu() {}
	var Sh = Bu,
		Jn = !1,
		Vu = !1;

	function Hu() {
		(_i !== null || zi !== null) && (Uu(), vh())
	}

	function tK(t, e, n) {
		if (Vu) return t(e, n);
		Vu = !0;
		try {
			return Sh(t, e, n)
		} finally {
			Vu = !1, Hu()
		}
	}

	function Vo(t, e) {
		var n = t.stateNode;
		if (n === null) return null;
		var i = qa(n);
		if (i === null) return null;
		n = i[e];
		e: switch (e) {
			case "onClick":
			case "onClickCapture":
			case "onDoubleClick":
			case "onDoubleClickCapture":
			case "onMouseDown":
			case "onMouseDownCapture":
			case "onMouseMove":
			case "onMouseMoveCapture":
			case "onMouseUp":
			case "onMouseUpCapture":
			case "onMouseEnter":
				(i = !i.disabled) || (t = t.type, i = !(t === "button" || t === "input" || t === "select" || t === "textarea")), t = !i;
				break e;
			default:
				t = !1
		}
		if (t) return null;
		if (n && typeof n != "function") throw Error(A(231, e, typeof n));
		return n
	}
	var qu = !1;
	if (It) try {
		var Ho = {};
		Object.defineProperty(Ho, "passive", {
			get: function() {
				qu = !0
			}
		}), window.addEventListener("test", Ho, Ho), window.removeEventListener("test", Ho, Ho)
	} catch {
		qu = !1
	}

	function nK(t, e, n, i, o, r, a, s, l) {
		var u = Array.prototype.slice.call(arguments, 3);
		try {
			e.apply(n, u)
		} catch (c) {
			this.onError(c)
		}
	}
	var qo = !1,
		Aa = null,
		Na = !1,
		Wu = null,
		iK = {
			onError: function(t) {
				qo = !0, Aa = t
			}
		};

	function oK(t, e, n, i, o, r, a, s, l) {
		qo = !1, Aa = null, nK.apply(iK, arguments)
	}

	function rK(t, e, n, i, o, r, a, s, l) {
		if (oK.apply(this, arguments), qo) {
			if (qo) {
				var u = Aa;
				qo = !1, Aa = null
			} else throw Error(A(198));
			Na || (Na = !0, Wu = u)
		}
	}

	function Gn(t) {
		var e = t,
			n = t;
		if (t.alternate)
			for (; e.return;) e = e.return;
		else {
			t = e;
			do e = t, e.flags & 1026 && (n = e.return), t = e.return; while (t)
		}
		return e.tag === 3 ? n : null
	}

	function Ch(t) {
		if (t.tag === 13) {
			var e = t.memoizedState;
			if (e === null && (t = t.alternate, t !== null && (e = t.memoizedState)), e !== null) return e.dehydrated
		}
		return null
	}

	function xh(t) {
		if (Gn(t) !== t) throw Error(A(188))
	}

	function aK(t) {
		var e = t.alternate;
		if (!e) {
			if (e = Gn(t), e === null) throw Error(A(188));
			return e !== t ? null : t
		}
		for (var n = t, i = e;;) {
			var o = n.return;
			if (o === null) break;
			var r = o.alternate;
			if (r === null) {
				if (i = o.return, i !== null) {
					n = i;
					continue
				}
				break
			}
			if (o.child === r.child) {
				for (r = o.child; r;) {
					if (r === n) return xh(o), t;
					if (r === i) return xh(o), e;
					r = r.sibling
				}
				throw Error(A(188))
			}
			if (n.return !== i.return) n = o, i = r;
			else {
				for (var a = !1, s = o.child; s;) {
					if (s === n) {
						a = !0, n = o, i = r;
						break
					}
					if (s === i) {
						a = !0, i = o, n = r;
						break
					}
					s = s.sibling
				}
				if (!a) {
					for (s = r.child; s;) {
						if (s === n) {
							a = !0, n = r, i = o;
							break
						}
						if (s === i) {
							a = !0, i = r, n = o;
							break
						}
						s = s.sibling
					}
					if (!a) throw Error(A(189))
				}
			}
			if (n.alternate !== i) throw Error(A(190))
		}
		if (n.tag !== 3) throw Error(A(188));
		return n.stateNode.current === n ? t : e
	}

	function Eh(t) {
		if (t = aK(t), !t) return null;
		for (var e = t;;) {
			if (e.tag === 5 || e.tag === 6) return e;
			if (e.child) e.child.return = e, e = e.child;
			else {
				if (e === t) break;
				for (; !e.sibling;) {
					if (!e.return || e.return === t) return null;
					e = e.return
				}
				e.sibling.return = e.return, e = e.sibling
			}
		}
		return null
	}

	function Th(t, e) {
		for (var n = t.alternate; e !== null;) {
			if (e === t || e === n) return !0;
			e = e.return
		}
		return !1
	}
	var jh, Ku, $h, Ah, Ju = !1,
		St = [],
		cn = null,
		dn = null,
		mn = null,
		Wo = new Map,
		Ko = new Map,
		Jo = [],
		Nh = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

	function Gu(t, e, n, i, o) {
		return {
			blockedOn: t,
			domEventName: e,
			eventSystemFlags: n | 16,
			nativeEvent: o,
			targetContainers: [i]
		}
	}

	function Mh(t, e) {
		switch (t) {
			case "focusin":
			case "focusout":
				cn = null;
				break;
			case "dragenter":
			case "dragleave":
				dn = null;
				break;
			case "mouseover":
			case "mouseout":
				mn = null;
				break;
			case "pointerover":
			case "pointerout":
				Wo.delete(e.pointerId);
				break;
			case "gotpointercapture":
			case "lostpointercapture":
				Ko.delete(e.pointerId)
		}
	}

	function Go(t, e, n, i, o, r) {
		return t === null || t.nativeEvent !== r ? (t = Gu(e, n, i, o, r), e !== null && (e = lr(e), e !== null && Ku(e)), t) : (t.eventSystemFlags |= i, e = t.targetContainers, o !== null && e.indexOf(o) === -1 && e.push(o), t)
	}

	function sK(t, e, n, i, o) {
		switch (e) {
			case "focusin":
				return cn = Go(cn, t, e, n, i, o), !0;
			case "dragenter":
				return dn = Go(dn, t, e, n, i, o), !0;
			case "mouseover":
				return mn = Go(mn, t, e, n, i, o), !0;
			case "pointerover":
				var r = o.pointerId;
				return Wo.set(r, Go(Wo.get(r) || null, t, e, n, i, o)), !0;
			case "gotpointercapture":
				return r = o.pointerId, Ko.set(r, Go(Ko.get(r) || null, t, e, n, i, o)), !0
		}
		return !1
	}

	function lK(t) {
		var e = Qn(t.target);
		if (e !== null) {
			var n = Gn(e);
			if (n !== null) {
				if (e = n.tag, e === 13) {
					if (e = Ch(n), e !== null) {
						t.blockedOn = e, Ah(t.lanePriority, function() {
							pe.unstable_runWithPriority(t.priority, function() {
								$h(n)
							})
						});
						return
					}
				} else if (e === 3 && n.stateNode.hydrate) {
					t.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
					return
				}
			}
		}
		t.blockedOn = null
	}

	function Ma(t) {
		if (t.blockedOn !== null) return !1;
		for (var e = t.targetContainers; 0 < e.length;) {
			var n = nc(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
			if (n !== null) return e = lr(n), e !== null && Ku(e), t.blockedOn = n, !1;
			e.shift()
		}
		return !0
	}

	function Ph(t, e, n) {
		Ma(t) && n.delete(e)
	}

	function uK() {
		for (Ju = !1; 0 < St.length;) {
			var t = St[0];
			if (t.blockedOn !== null) {
				t = lr(t.blockedOn), t !== null && jh(t);
				break
			}
			for (var e = t.targetContainers; 0 < e.length;) {
				var n = nc(t.domEventName, t.eventSystemFlags, e[0], t.nativeEvent);
				if (n !== null) {
					t.blockedOn = n;
					break
				}
				e.shift()
			}
			t.blockedOn === null && St.shift()
		}
		cn !== null && Ma(cn) && (cn = null), dn !== null && Ma(dn) && (dn = null), mn !== null && Ma(mn) && (mn = null), Wo.forEach(Ph), Ko.forEach(Ph)
	}

	function Qo(t, e) {
		t.blockedOn === e && (t.blockedOn = null, Ju || (Ju = !0, pe.unstable_scheduleCallback(pe.unstable_NormalPriority, uK)))
	}

	function _h(t) {
		function e(o) {
			return Qo(o, t)
		}
		if (0 < St.length) {
			Qo(St[0], t);
			for (var n = 1; n < St.length; n++) {
				var i = St[n];
				i.blockedOn === t && (i.blockedOn = null)
			}
		}
		for (cn !== null && Qo(cn, t), dn !== null && Qo(dn, t), mn !== null && Qo(mn, t), Wo.forEach(e), Ko.forEach(e), n = 0; n < Jo.length; n++) i = Jo[n], i.blockedOn === t && (i.blockedOn = null);
		for (; 0 < Jo.length && (n = Jo[0], n.blockedOn === null);) lK(n), n.blockedOn === null && Jo.shift()
	}

	function Pa(t, e) {
		var n = {};
		return n[t.toLowerCase()] = e.toLowerCase(), n["Webkit" + t] = "webkit" + e, n["Moz" + t] = "moz" + e, n
	}
	var Oi = {
			animationend: Pa("Animation", "AnimationEnd"),
			animationiteration: Pa("Animation", "AnimationIteration"),
			animationstart: Pa("Animation", "AnimationStart"),
			transitionend: Pa("Transition", "TransitionEnd")
		},
		Qu = {},
		zh = {};
	It && (zh = document.createElement("div").style, "AnimationEvent" in window || (delete Oi.animationend.animation, delete Oi.animationiteration.animation, delete Oi.animationstart.animation), "TransitionEvent" in window || delete Oi.transitionend.transition);

	function _a(t) {
		if (Qu[t]) return Qu[t];
		if (!Oi[t]) return t;
		var e = Oi[t],
			n;
		for (n in e)
			if (e.hasOwnProperty(n) && n in zh) return Qu[t] = e[n];
		return t
	}
	var Oh = _a("animationend"),
		Dh = _a("animationiteration"),
		Ih = _a("animationstart"),
		Rh = _a("transitionend"),
		Yh = new Map,
		Xu = new Map,
		cK = ["abort", "abort", Oh, "animationEnd", Dh, "animationIteration", Ih, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Rh, "transitionEnd", "waiting", "waiting"];

	function Zu(t, e) {
		for (var n = 0; n < t.length; n += 2) {
			var i = t[n],
				o = t[n + 1];
			o = "on" + (o[0].toUpperCase() + o.slice(1)), Xu.set(i, e), Yh.set(i, o), qn(o, [i])
		}
	}
	var dK = pe.unstable_now;
	dK();
	var G = 8;

	function Di(t) {
		if (1 & t) return G = 15, 1;
		if (2 & t) return G = 14, 2;
		if (4 & t) return G = 13, 4;
		var e = 24 & t;
		return e !== 0 ? (G = 12, e) : t & 32 ? (G = 11, 32) : (e = 192 & t, e !== 0 ? (G = 10, e) : t & 256 ? (G = 9, 256) : (e = 3584 & t, e !== 0 ? (G = 8, e) : t & 4096 ? (G = 7, 4096) : (e = 4186112 & t, e !== 0 ? (G = 6, e) : (e = 62914560 & t, e !== 0 ? (G = 5, e) : t & 67108864 ? (G = 4, 67108864) : t & 134217728 ? (G = 3, 134217728) : (e = 805306368 & t, e !== 0 ? (G = 2, e) : 1073741824 & t ? (G = 1, 1073741824) : (G = 8, t))))))
	}

	function mK(t) {
		switch (t) {
			case 99:
				return 15;
			case 98:
				return 10;
			case 97:
			case 96:
				return 8;
			case 95:
				return 2;
			default:
				return 0
		}
	}

	function pK(t) {
		switch (t) {
			case 15:
			case 14:
				return 99;
			case 13:
			case 12:
			case 11:
			case 10:
				return 98;
			case 9:
			case 8:
			case 7:
			case 6:
			case 4:
			case 5:
				return 97;
			case 3:
			case 2:
			case 1:
				return 95;
			case 0:
				return 90;
			default:
				throw Error(A(358, t))
		}
	}

	function Xo(t, e) {
		var n = t.pendingLanes;
		if (n === 0) return G = 0;
		var i = 0,
			o = 0,
			r = t.expiredLanes,
			a = t.suspendedLanes,
			s = t.pingedLanes;
		if (r !== 0) i = r, o = G = 15;
		else if (r = n & 134217727, r !== 0) {
			var l = r & ~a;
			l !== 0 ? (i = Di(l), o = G) : (s &= r, s !== 0 && (i = Di(s), o = G))
		} else r = n & ~a, r !== 0 ? (i = Di(r), o = G) : s !== 0 && (i = Di(s), o = G);
		if (i === 0) return 0;
		if (i = 31 - pn(i), i = n & ((0 > i ? 0 : 1 << i) << 1) - 1, e !== 0 && e !== i && !(e & a)) {
			if (Di(e), o <= G) return e;
			G = o
		}
		if (e = t.entangledLanes, e !== 0)
			for (t = t.entanglements, e &= i; 0 < e;) n = 31 - pn(e), o = 1 << n, i |= t[n], e &= ~o;
		return i
	}

	function Lh(t) {
		return t = t.pendingLanes & -1073741825, t !== 0 ? t : t & 1073741824 ? 1073741824 : 0
	}

	function za(t, e) {
		switch (t) {
			case 15:
				return 1;
			case 14:
				return 2;
			case 12:
				return t = Ii(24 & ~e), t === 0 ? za(10, e) : t;
			case 10:
				return t = Ii(192 & ~e), t === 0 ? za(8, e) : t;
			case 8:
				return t = Ii(3584 & ~e), t === 0 && (t = Ii(4186112 & ~e), t === 0 && (t = 512)), t;
			case 2:
				return e = Ii(805306368 & ~e), e === 0 && (e = 268435456), e
		}
		throw Error(A(358, t))
	}

	function Ii(t) {
		return t & -t
	}

	function ec(t) {
		for (var e = [], n = 0; 31 > n; n++) e.push(t);
		return e
	}

	function Oa(t, e, n) {
		t.pendingLanes |= e;
		var i = e - 1;
		t.suspendedLanes &= i, t.pingedLanes &= i, t = t.eventTimes, e = 31 - pn(e), t[e] = n
	}
	var pn = Math.clz32 ? Math.clz32 : gK,
		fK = Math.log,
		hK = Math.LN2;

	function gK(t) {
		return t === 0 ? 32 : 31 - (fK(t) / hK | 0) | 0
	}
	var yK = pe.unstable_UserBlockingPriority,
		bK = pe.unstable_runWithPriority,
		Da = !0;

	function kK(t, e, n, i) {
		Jn || Uu();
		var o = tc,
			r = Jn;
		Jn = !0;
		try {
			wh(o, t, e, n, i)
		} finally {
			(Jn = r) || Hu()
		}
	}

	function vK(t, e, n, i) {
		bK(yK, tc.bind(null, t, e, n, i))
	}

	function tc(t, e, n, i) {
		if (Da) {
			var o;
			if ((o = (e & 4) === 0) && 0 < St.length && -1 < Nh.indexOf(t)) t = Gu(null, t, e, n, i), St.push(t);
			else {
				var r = nc(t, e, n, i);
				if (r === null) o && Mh(t, i);
				else {
					if (o) {
						if (-1 < Nh.indexOf(t)) {
							t = Gu(r, t, e, n, i), St.push(t);
							return
						}
						if (sK(r, t, e, n, i)) return;
						Mh(t, i)
					}
					gg(t, e, i, null, n)
				}
			}
		}
	}

	function nc(t, e, n, i) {
		var o = Lu(i);
		if (o = Qn(o), o !== null) {
			var r = Gn(o);
			if (r === null) o = null;
			else {
				var a = r.tag;
				if (a === 13) {
					if (o = Ch(r), o !== null) return o;
					o = null
				} else if (a === 3) {
					if (r.stateNode.hydrate) return r.tag === 3 ? r.stateNode.containerInfo : null;
					o = null
				} else r !== o && (o = null)
			}
		}
		return gg(t, e, i, o, n), null
	}
	var fn = null,
		ic = null,
		Ia = null;

	function Fh() {
		if (Ia) return Ia;
		var t, e = ic,
			n = e.length,
			i, o = "value" in fn ? fn.value : fn.textContent,
			r = o.length;
		for (t = 0; t < n && e[t] === o[t]; t++);
		var a = n - t;
		for (i = 1; i <= a && e[n - i] === o[r - i]; i++);
		return Ia = o.slice(t, 1 < i ? 1 - i : void 0)
	}

	function Ra(t) {
		var e = t.keyCode;
		return "charCode" in t ? (t = t.charCode, t === 0 && e === 13 && (t = 13)) : t = e, t === 10 && (t = 13), 32 <= t || t === 13 ? t : 0
	}

	function Ya() {
		return !0
	}

	function Bh() {
		return !1
	}

	function Ke(t) {
		function e(n, i, o, r, a) {
			this._reactName = n, this._targetInst = o, this.type = i, this.nativeEvent = r, this.target = a, this.currentTarget = null;
			for (var s in t) t.hasOwnProperty(s) && (n = t[s], this[s] = n ? n(r) : r[s]);
			return this.isDefaultPrevented = (r.defaultPrevented != null ? r.defaultPrevented : r.returnValue === !1) ? Ya : Bh, this.isPropagationStopped = Bh, this
		}
		return ee(e.prototype, {
			preventDefault: function() {
				this.defaultPrevented = !0;
				var n = this.nativeEvent;
				n && (n.preventDefault ? n.preventDefault() : typeof n.returnValue != "unknown" && (n.returnValue = !1), this.isDefaultPrevented = Ya)
			},
			stopPropagation: function() {
				var n = this.nativeEvent;
				n && (n.stopPropagation ? n.stopPropagation() : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0), this.isPropagationStopped = Ya)
			},
			persist: function() {},
			isPersistent: Ya
		}), e
	}
	var Ri = {
			eventPhase: 0,
			bubbles: 0,
			cancelable: 0,
			timeStamp: function(t) {
				return t.timeStamp || Date.now()
			},
			defaultPrevented: 0,
			isTrusted: 0
		},
		oc = Ke(Ri),
		Zo = ee({}, Ri, {
			view: 0,
			detail: 0
		}),
		wK = Ke(Zo),
		rc, ac, er, La = ee({}, Zo, {
			screenX: 0,
			screenY: 0,
			clientX: 0,
			clientY: 0,
			pageX: 0,
			pageY: 0,
			ctrlKey: 0,
			shiftKey: 0,
			altKey: 0,
			metaKey: 0,
			getModifierState: lc,
			button: 0,
			buttons: 0,
			relatedTarget: function(t) {
				return t.relatedTarget === void 0 ? t.fromElement === t.srcElement ? t.toElement : t.fromElement : t.relatedTarget
			},
			movementX: function(t) {
				return "movementX" in t ? t.movementX : (t !== er && (er && t.type === "mousemove" ? (rc = t.screenX - er.screenX, ac = t.screenY - er.screenY) : ac = rc = 0, er = t), rc)
			},
			movementY: function(t) {
				return "movementY" in t ? t.movementY : ac
			}
		}),
		Uh = Ke(La),
		SK = ee({}, La, {
			dataTransfer: 0
		}),
		CK = Ke(SK),
		xK = ee({}, Zo, {
			relatedTarget: 0
		}),
		sc = Ke(xK),
		EK = ee({}, Ri, {
			animationName: 0,
			elapsedTime: 0,
			pseudoElement: 0
		}),
		TK = Ke(EK),
		jK = ee({}, Ri, {
			clipboardData: function(t) {
				return "clipboardData" in t ? t.clipboardData : window.clipboardData
			}
		}),
		$K = Ke(jK),
		AK = ee({}, Ri, {
			data: 0
		}),
		Vh = Ke(AK),
		NK = {
			Esc: "Escape",
			Spacebar: " ",
			Left: "ArrowLeft",
			Up: "ArrowUp",
			Right: "ArrowRight",
			Down: "ArrowDown",
			Del: "Delete",
			Win: "OS",
			Menu: "ContextMenu",
			Apps: "ContextMenu",
			Scroll: "ScrollLock",
			MozPrintableKey: "Unidentified"
		},
		MK = {
			8: "Backspace",
			9: "Tab",
			12: "Clear",
			13: "Enter",
			16: "Shift",
			17: "Control",
			18: "Alt",
			19: "Pause",
			20: "CapsLock",
			27: "Escape",
			32: " ",
			33: "PageUp",
			34: "PageDown",
			35: "End",
			36: "Home",
			37: "ArrowLeft",
			38: "ArrowUp",
			39: "ArrowRight",
			40: "ArrowDown",
			45: "Insert",
			46: "Delete",
			112: "F1",
			113: "F2",
			114: "F3",
			115: "F4",
			116: "F5",
			117: "F6",
			118: "F7",
			119: "F8",
			120: "F9",
			121: "F10",
			122: "F11",
			123: "F12",
			144: "NumLock",
			145: "ScrollLock",
			224: "Meta"
		},
		PK = {
			Alt: "altKey",
			Control: "ctrlKey",
			Meta: "metaKey",
			Shift: "shiftKey"
		};

	function _K(t) {
		var e = this.nativeEvent;
		return e.getModifierState ? e.getModifierState(t) : (t = PK[t]) ? !!e[t] : !1
	}

	function lc() {
		return _K
	}
	var zK = ee({}, Zo, {
			key: function(t) {
				if (t.key) {
					var e = NK[t.key] || t.key;
					if (e !== "Unidentified") return e
				}
				return t.type === "keypress" ? (t = Ra(t), t === 13 ? "Enter" : String.fromCharCode(t)) : t.type === "keydown" || t.type === "keyup" ? MK[t.keyCode] || "Unidentified" : ""
			},
			code: 0,
			location: 0,
			ctrlKey: 0,
			shiftKey: 0,
			altKey: 0,
			metaKey: 0,
			repeat: 0,
			locale: 0,
			getModifierState: lc,
			charCode: function(t) {
				return t.type === "keypress" ? Ra(t) : 0
			},
			keyCode: function(t) {
				return t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0
			},
			which: function(t) {
				return t.type === "keypress" ? Ra(t) : t.type === "keydown" || t.type === "keyup" ? t.keyCode : 0
			}
		}),
		OK = Ke(zK),
		DK = ee({}, La, {
			pointerId: 0,
			width: 0,
			height: 0,
			pressure: 0,
			tangentialPressure: 0,
			tiltX: 0,
			tiltY: 0,
			twist: 0,
			pointerType: 0,
			isPrimary: 0
		}),
		Hh = Ke(DK),
		IK = ee({}, Zo, {
			touches: 0,
			targetTouches: 0,
			changedTouches: 0,
			altKey: 0,
			metaKey: 0,
			ctrlKey: 0,
			shiftKey: 0,
			getModifierState: lc
		}),
		RK = Ke(IK),
		YK = ee({}, Ri, {
			propertyName: 0,
			elapsedTime: 0,
			pseudoElement: 0
		}),
		LK = Ke(YK),
		FK = ee({}, La, {
			deltaX: function(t) {
				return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0
			},
			deltaY: function(t) {
				return "deltaY" in t ? t.deltaY : "wheelDeltaY" in t ? -t.wheelDeltaY : "wheelDelta" in t ? -t.wheelDelta : 0
			},
			deltaZ: 0,
			deltaMode: 0
		}),
		BK = Ke(FK),
		UK = [9, 13, 27, 32],
		uc = It && "CompositionEvent" in window,
		tr = null;
	It && "documentMode" in document && (tr = document.documentMode);
	var VK = It && "TextEvent" in window && !tr,
		qh = It && (!uc || tr && 8 < tr && 11 >= tr),
		Wh = String.fromCharCode(32),
		Kh = !1;

	function Jh(t, e) {
		switch (t) {
			case "keyup":
				return UK.indexOf(e.keyCode) !== -1;
			case "keydown":
				return e.keyCode !== 229;
			case "keypress":
			case "mousedown":
			case "focusout":
				return !0;
			default:
				return !1
		}
	}

	function Gh(t) {
		return t = t.detail, typeof t == "object" && "data" in t ? t.data : null
	}
	var Yi = !1;

	function HK(t, e) {
		switch (t) {
			case "compositionend":
				return Gh(e);
			case "keypress":
				return e.which !== 32 ? null : (Kh = !0, Wh);
			case "textInput":
				return t = e.data, t === Wh && Kh ? null : t;
			default:
				return null
		}
	}

	function qK(t, e) {
		if (Yi) return t === "compositionend" || !uc && Jh(t, e) ? (t = Fh(), Ia = ic = fn = null, Yi = !1, t) : null;
		switch (t) {
			case "paste":
				return null;
			case "keypress":
				if (!(e.ctrlKey || e.altKey || e.metaKey) || e.ctrlKey && e.altKey) {
					if (e.char && 1 < e.char.length) return e.char;
					if (e.which) return String.fromCharCode(e.which)
				}
				return null;
			case "compositionend":
				return qh && e.locale !== "ko" ? null : e.data;
			default:
				return null
		}
	}
	var WK = {
		color: !0,
		date: !0,
		datetime: !0,
		"datetime-local": !0,
		email: !0,
		month: !0,
		number: !0,
		password: !0,
		range: !0,
		search: !0,
		tel: !0,
		text: !0,
		time: !0,
		url: !0,
		week: !0
	};

	function Qh(t) {
		var e = t && t.nodeName && t.nodeName.toLowerCase();
		return e === "input" ? !!WK[t.type] : e === "textarea"
	}

	function Xh(t, e, n, i) {
		kh(i), e = Ba(e, "onChange"), 0 < e.length && (n = new oc("onChange", "change", null, n, i), t.push({
			event: n,
			listeners: e
		}))
	}
	var nr = null,
		ir = null;

	function KK(t) {
		dg(t, 0)
	}

	function Fa(t) {
		var e = Vi(t);
		if (sh(e)) return t
	}

	function JK(t, e) {
		if (t === "change") return e
	}
	var Zh = !1;
	if (It) {
		var cc;
		if (It) {
			var dc = "oninput" in document;
			if (!dc) {
				var eg = document.createElement("div");
				eg.setAttribute("oninput", "return;"), dc = typeof eg.oninput == "function"
			}
			cc = dc
		} else cc = !1;
		Zh = cc && (!document.documentMode || 9 < document.documentMode)
	}

	function tg() {
		nr && (nr.detachEvent("onpropertychange", ng), ir = nr = null)
	}

	function ng(t) {
		if (t.propertyName === "value" && Fa(ir)) {
			var e = [];
			if (Xh(e, ir, t, Lu(t)), t = KK, Jn) t(e);
			else {
				Jn = !0;
				try {
					Bu(t, e)
				} finally {
					Jn = !1, Hu()
				}
			}
		}
	}

	function GK(t, e, n) {
		t === "focusin" ? (tg(), nr = e, ir = n, nr.attachEvent("onpropertychange", ng)) : t === "focusout" && tg()
	}

	function QK(t) {
		if (t === "selectionchange" || t === "keyup" || t === "keydown") return Fa(ir)
	}

	function XK(t, e) {
		if (t === "click") return Fa(e)
	}

	function ZK(t, e) {
		if (t === "input" || t === "change") return Fa(e)
	}

	function eJ(t, e) {
		return t === e && (t !== 0 || 1 / t === 1 / e) || t !== t && e !== e
	}
	var nt = typeof Object.is == "function" ? Object.is : eJ,
		tJ = Object.prototype.hasOwnProperty;

	function or(t, e) {
		if (nt(t, e)) return !0;
		if (typeof t != "object" || t === null || typeof e != "object" || e === null) return !1;
		var n = Object.keys(t),
			i = Object.keys(e);
		if (n.length !== i.length) return !1;
		for (i = 0; i < n.length; i++)
			if (!tJ.call(e, n[i]) || !nt(t[n[i]], e[n[i]])) return !1;
		return !0
	}

	function ig(t) {
		for (; t && t.firstChild;) t = t.firstChild;
		return t
	}

	function og(t, e) {
		var n = ig(t);
		t = 0;
		for (var i; n;) {
			if (n.nodeType === 3) {
				if (i = t + n.textContent.length, t <= e && i >= e) return {
					node: n,
					offset: e - t
				};
				t = i
			}
			e: {
				for (; n;) {
					if (n.nextSibling) {
						n = n.nextSibling;
						break e
					}
					n = n.parentNode
				}
				n = void 0
			}
			n = ig(n)
		}
	}

	function rg(t, e) {
		return t && e ? t === e ? !0 : t && t.nodeType === 3 ? !1 : e && e.nodeType === 3 ? rg(t, e.parentNode) : "contains" in t ? t.contains(e) : t.compareDocumentPosition ? !!(t.compareDocumentPosition(e) & 16) : !1 : !1
	}

	function ag() {
		for (var t = window, e = ja(); e instanceof t.HTMLIFrameElement;) {
			try {
				var n = typeof e.contentWindow.location.href == "string"
			} catch {
				n = !1
			}
			if (n) t = e.contentWindow;
			else break;
			e = ja(t.document)
		}
		return e
	}

	function mc(t) {
		var e = t && t.nodeName && t.nodeName.toLowerCase();
		return e && (e === "input" && (t.type === "text" || t.type === "search" || t.type === "tel" || t.type === "url" || t.type === "password") || e === "textarea" || t.contentEditable === "true")
	}
	var nJ = It && "documentMode" in document && 11 >= document.documentMode,
		Li = null,
		pc = null,
		rr = null,
		fc = !1;

	function sg(t, e, n) {
		var i = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
		fc || Li == null || Li !== ja(i) || (i = Li, "selectionStart" in i && mc(i) ? i = {
			start: i.selectionStart,
			end: i.selectionEnd
		} : (i = (i.ownerDocument && i.ownerDocument.defaultView || window).getSelection(), i = {
			anchorNode: i.anchorNode,
			anchorOffset: i.anchorOffset,
			focusNode: i.focusNode,
			focusOffset: i.focusOffset
		}), rr && or(rr, i) || (rr = i, i = Ba(pc, "onSelect"), 0 < i.length && (e = new oc("onSelect", "select", null, e, n), t.push({
			event: e,
			listeners: i
		}), e.target = Li)))
	}
	Zu("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0), Zu("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1), Zu(cK, 2);
	for (var lg = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), hc = 0; hc < lg.length; hc++) Xu.set(lg[hc], 0);
	Ni("onMouseEnter", ["mouseout", "mouseover"]), Ni("onMouseLeave", ["mouseout", "mouseover"]), Ni("onPointerEnter", ["pointerout", "pointerover"]), Ni("onPointerLeave", ["pointerout", "pointerover"]), qn("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), qn("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), qn("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), qn("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), qn("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), qn("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
	var ar = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
		ug = new Set("cancel close invalid load scroll toggle".split(" ").concat(ar));

	function cg(t, e, n) {
		var i = t.type || "unknown-event";
		t.currentTarget = n, rK(i, e, void 0, t), t.currentTarget = null
	}

	function dg(t, e) {
		e = (e & 4) !== 0;
		for (var n = 0; n < t.length; n++) {
			var i = t[n],
				o = i.event;
			i = i.listeners;
			e: {
				var r = void 0;
				if (e)
					for (var a = i.length - 1; 0 <= a; a--) {
						var s = i[a],
							l = s.instance,
							u = s.currentTarget;
						if (s = s.listener, l !== r && o.isPropagationStopped()) break e;
						cg(o, s, u), r = l
					} else
						for (a = 0; a < i.length; a++) {
							if (s = i[a], l = s.instance, u = s.currentTarget, s = s.listener, l !== r && o.isPropagationStopped()) break e;
							cg(o, s, u), r = l
						}
			}
		}
		if (Na) throw t = Wu, Na = !1, Wu = null, t
	}

	function Q(t, e) {
		var n = Sg(e),
			i = t + "__bubble";
		n.has(i) || (hg(e, t, 2, !1), n.add(i))
	}
	var mg = "_reactListening" + Math.random().toString(36).slice(2);

	function pg(t) {
		t[mg] || (t[mg] = !0, eh.forEach(function(e) {
			ug.has(e) || fg(e, !1, t, null), fg(e, !0, t, null)
		}))
	}

	function fg(t, e, n, i) {
		var o = 4 < arguments.length && arguments[4] !== void 0 ? arguments[4] : 0,
			r = n;
		if (t === "selectionchange" && n.nodeType !== 9 && (r = n.ownerDocument), i !== null && !e && ug.has(t)) {
			if (t !== "scroll") return;
			o |= 2, r = i
		}
		var a = Sg(r),
			s = t + "__" + (e ? "capture" : "bubble");
		a.has(s) || (e && (o |= 4), hg(r, t, o, e), a.add(s))
	}

	function hg(t, e, n, i) {
		var o = Xu.get(e);
		switch (o === void 0 ? 2 : o) {
			case 0:
				o = kK;
				break;
			case 1:
				o = vK;
				break;
			default:
				o = tc
		}
		n = o.bind(null, e, n, t), o = void 0, !qu || e !== "touchstart" && e !== "touchmove" && e !== "wheel" || (o = !0), i ? o !== void 0 ? t.addEventListener(e, n, {
			capture: !0,
			passive: o
		}) : t.addEventListener(e, n, !0) : o !== void 0 ? t.addEventListener(e, n, {
			passive: o
		}) : t.addEventListener(e, n, !1)
	}

	function gg(t, e, n, i, o) {
		var r = i;
		if (!(e & 1) && !(e & 2) && i !== null) e: for (;;) {
			if (i === null) return;
			var a = i.tag;
			if (a === 3 || a === 4) {
				var s = i.stateNode.containerInfo;
				if (s === o || s.nodeType === 8 && s.parentNode === o) break;
				if (a === 4)
					for (a = i.return; a !== null;) {
						var l = a.tag;
						if ((l === 3 || l === 4) && (l = a.stateNode.containerInfo, l === o || l.nodeType === 8 && l.parentNode === o)) return;
						a = a.return
					}
				for (; s !== null;) {
					if (a = Qn(s), a === null) return;
					if (l = a.tag, l === 5 || l === 6) {
						i = r = a;
						continue e
					}
					s = s.parentNode
				}
			}
			i = i.return
		}
		tK(function() {
			var u = r,
				c = Lu(n),
				m = [];
			e: {
				var d = Yh.get(t);
				if (d !== void 0) {
					var p = oc,
						f = t;
					switch (t) {
						case "keypress":
							if (Ra(n) === 0) break e;
						case "keydown":
						case "keyup":
							p = OK;
							break;
						case "focusin":
							f = "focus", p = sc;
							break;
						case "focusout":
							f = "blur", p = sc;
							break;
						case "beforeblur":
						case "afterblur":
							p = sc;
							break;
						case "click":
							if (n.button === 2) break e;
						case "auxclick":
						case "dblclick":
						case "mousedown":
						case "mousemove":
						case "mouseup":
						case "mouseout":
						case "mouseover":
						case "contextmenu":
							p = Uh;
							break;
						case "drag":
						case "dragend":
						case "dragenter":
						case "dragexit":
						case "dragleave":
						case "dragover":
						case "dragstart":
						case "drop":
							p = CK;
							break;
						case "touchcancel":
						case "touchend":
						case "touchmove":
						case "touchstart":
							p = RK;
							break;
						case Oh:
						case Dh:
						case Ih:
							p = TK;
							break;
						case Rh:
							p = LK;
							break;
						case "scroll":
							p = wK;
							break;
						case "wheel":
							p = BK;
							break;
						case "copy":
						case "cut":
						case "paste":
							p = $K;
							break;
						case "gotpointercapture":
						case "lostpointercapture":
						case "pointercancel":
						case "pointerdown":
						case "pointermove":
						case "pointerout":
						case "pointerover":
						case "pointerup":
							p = Hh
					}
					var y = (e & 4) !== 0,
						h = !y && t === "scroll",
						g = y ? d !== null ? d + "Capture" : null : d;
					y = [];
					for (var b = u, v; b !== null;) {
						v = b;
						var w = v.stateNode;
						if (v.tag === 5 && w !== null && (v = w, g !== null && (w = Vo(b, g), w != null && y.push(sr(b, w, v)))), h) break;
						b = b.return
					}
					0 < y.length && (d = new p(d, f, null, n, c), m.push({
						event: d,
						listeners: y
					}))
				}
			}
			if (!(e & 7)) {
				e: {
					if (d = t === "mouseover" || t === "pointerover", p = t === "mouseout" || t === "pointerout", d && !(e & 16) && (f = n.relatedTarget || n.fromElement) && (Qn(f) || f[Ui])) break e;
					if ((p || d) && (d = c.window === c ? c : (d = c.ownerDocument) ? d.defaultView || d.parentWindow : window, p ? (f = n.relatedTarget || n.toElement, p = u, f = f ? Qn(f) : null, f !== null && (h = Gn(f), f !== h || f.tag !== 5 && f.tag !== 6) && (f = null)) : (p = null, f = u), p !== f)) {
						if (y = Uh, w = "onMouseLeave", g = "onMouseEnter", b = "mouse", (t === "pointerout" || t === "pointerover") && (y = Hh, w = "onPointerLeave", g = "onPointerEnter", b = "pointer"), h = p == null ? d : Vi(p), v = f == null ? d : Vi(f), d = new y(w, b + "leave", p, n, c), d.target = h, d.relatedTarget = v, w = null, Qn(c) === u && (y = new y(g, b + "enter", f, n, c), y.target = v, y.relatedTarget = h, w = y), h = w, p && f) t: {
							for (y = p, g = f, b = 0, v = y; v; v = Fi(v)) b++;
							for (v = 0, w = g; w; w = Fi(w)) v++;
							for (; 0 < b - v;) y = Fi(y),
							b--;
							for (; 0 < v - b;) g = Fi(g),
							v--;
							for (; b--;) {
								if (y === g || g !== null && y === g.alternate) break t;
								y = Fi(y), g = Fi(g)
							}
							y = null
						}
						else y = null;
						p !== null && yg(m, d, p, y, !1), f !== null && h !== null && yg(m, h, f, y, !0)
					}
				}
				e: {
					if (d = u ? Vi(u) : window, p = d.nodeName && d.nodeName.toLowerCase(), p === "select" || p === "input" && d.type === "file") var x = JK;
					else if (Qh(d))
						if (Zh) x = ZK;
						else {
							x = QK;
							var S = GK
						}
					else(p = d.nodeName) && p.toLowerCase() === "input" && (d.type === "checkbox" || d.type === "radio") && (x = XK);
					if (x && (x = x(t, u))) {
						Xh(m, x, n, c);
						break e
					}
					S && S(t, d, u),
					t === "focusout" && (S = d._wrapperState) && S.controlled && d.type === "number" && _u(d, "number", d.value)
				}
				switch (S = u ? Vi(u) : window, t) {
					case "focusin":
						(Qh(S) || S.contentEditable === "true") && (Li = S, pc = u, rr = null);
						break;
					case "focusout":
						rr = pc = Li = null;
						break;
					case "mousedown":
						fc = !0;
						break;
					case "contextmenu":
					case "mouseup":
					case "dragend":
						fc = !1, sg(m, n, c);
						break;
					case "selectionchange":
						if (nJ) break;
					case "keydown":
					case "keyup":
						sg(m, n, c)
				}
				var E;
				if (uc) e: {
					switch (t) {
						case "compositionstart":
							var T = "onCompositionStart";
							break e;
						case "compositionend":
							T = "onCompositionEnd";
							break e;
						case "compositionupdate":
							T = "onCompositionUpdate";
							break e
					}
					T = void 0
				}
				else Yi ? Jh(t, n) && (T = "onCompositionEnd") : t === "keydown" && n.keyCode === 229 && (T = "onCompositionStart");T && (qh && n.locale !== "ko" && (Yi || T !== "onCompositionStart" ? T === "onCompositionEnd" && Yi && (E = Fh()) : (fn = c, ic = "value" in fn ? fn.value : fn.textContent, Yi = !0)), S = Ba(u, T), 0 < S.length && (T = new Vh(T, t, null, n, c), m.push({
					event: T,
					listeners: S
				}), E ? T.data = E : (E = Gh(n), E !== null && (T.data = E)))),
				(E = VK ? HK(t, n) : qK(t, n)) && (u = Ba(u, "onBeforeInput"), 0 < u.length && (c = new Vh("onBeforeInput", "beforeinput", null, n, c), m.push({
					event: c,
					listeners: u
				}), c.data = E))
			}
			dg(m, e)
		})
	}

	function sr(t, e, n) {
		return {
			instance: t,
			listener: e,
			currentTarget: n
		}
	}

	function Ba(t, e) {
		for (var n = e + "Capture", i = []; t !== null;) {
			var o = t,
				r = o.stateNode;
			o.tag === 5 && r !== null && (o = r, r = Vo(t, n), r != null && i.unshift(sr(t, r, o)), r = Vo(t, e), r != null && i.push(sr(t, r, o))), t = t.return
		}
		return i
	}

	function Fi(t) {
		if (t === null) return null;
		do t = t.return; while (t && t.tag !== 5);
		return t || null
	}

	function yg(t, e, n, i, o) {
		for (var r = e._reactName, a = []; n !== null && n !== i;) {
			var s = n,
				l = s.alternate,
				u = s.stateNode;
			if (l !== null && l === i) break;
			s.tag === 5 && u !== null && (s = u, o ? (l = Vo(n, r), l != null && a.unshift(sr(n, l, s))) : o || (l = Vo(n, r), l != null && a.push(sr(n, l, s)))), n = n.return
		}
		a.length !== 0 && t.push({
			event: e,
			listeners: a
		})
	}

	function Ua() {}
	var gc = null,
		yc = null;

	function bg(t, e) {
		switch (t) {
			case "button":
			case "input":
			case "select":
			case "textarea":
				return !!e.autoFocus
		}
		return !1
	}

	function bc(t, e) {
		return t === "textarea" || t === "option" || t === "noscript" || typeof e.children == "string" || typeof e.children == "number" || typeof e.dangerouslySetInnerHTML == "object" && e.dangerouslySetInnerHTML !== null && e.dangerouslySetInnerHTML.__html != null
	}
	var kg = typeof setTimeout == "function" ? setTimeout : void 0,
		iJ = typeof clearTimeout == "function" ? clearTimeout : void 0;

	function kc(t) {
		t.nodeType === 1 ? t.textContent = "" : t.nodeType === 9 && (t = t.body, t != null && (t.textContent = ""))
	}

	function Bi(t) {
		for (; t != null; t = t.nextSibling) {
			var e = t.nodeType;
			if (e === 1 || e === 3) break
		}
		return t
	}

	function vg(t) {
		t = t.previousSibling;
		for (var e = 0; t;) {
			if (t.nodeType === 8) {
				var n = t.data;
				if (n === "$" || n === "$!" || n === "$?") {
					if (e === 0) return t;
					e--
				} else n === "/$" && e++
			}
			t = t.previousSibling
		}
		return null
	}
	var vc = 0;

	function oJ(t) {
		return {
			$$typeof: Tu,
			toString: t,
			valueOf: t
		}
	}
	var Va = Math.random().toString(36).slice(2),
		hn = "__reactFiber$" + Va,
		Ha = "__reactProps$" + Va,
		Ui = "__reactContainer$" + Va,
		wg = "__reactEvents$" + Va;

	function Qn(t) {
		var e = t[hn];
		if (e) return e;
		for (var n = t.parentNode; n;) {
			if (e = n[Ui] || n[hn]) {
				if (n = e.alternate, e.child !== null || n !== null && n.child !== null)
					for (t = vg(t); t !== null;) {
						if (n = t[hn]) return n;
						t = vg(t)
					}
				return e
			}
			t = n, n = t.parentNode
		}
		return null
	}

	function lr(t) {
		return t = t[hn] || t[Ui], !t || t.tag !== 5 && t.tag !== 6 && t.tag !== 13 && t.tag !== 3 ? null : t
	}

	function Vi(t) {
		if (t.tag === 5 || t.tag === 6) return t.stateNode;
		throw Error(A(33))
	}

	function qa(t) {
		return t[Ha] || null
	}

	function Sg(t) {
		var e = t[wg];
		return e === void 0 && (e = t[wg] = new Set), e
	}
	var wc = [],
		Hi = -1;

	function gn(t) {
		return {
			current: t
		}
	}

	function X(t) {
		0 > Hi || (t.current = wc[Hi], wc[Hi] = null, Hi--)
	}

	function ne(t, e) {
		Hi++, wc[Hi] = t.current, t.current = e
	}
	var yn = {},
		$e = gn(yn),
		Fe = gn(!1),
		Xn = yn;

	function qi(t, e) {
		var n = t.type.contextTypes;
		if (!n) return yn;
		var i = t.stateNode;
		if (i && i.__reactInternalMemoizedUnmaskedChildContext === e) return i.__reactInternalMemoizedMaskedChildContext;
		var o = {},
			r;
		for (r in n) o[r] = e[r];
		return i && (t = t.stateNode, t.__reactInternalMemoizedUnmaskedChildContext = e, t.__reactInternalMemoizedMaskedChildContext = o), o
	}

	function Be(t) {
		return t = t.childContextTypes, t != null
	}

	function Wa() {
		X(Fe), X($e)
	}

	function Cg(t, e, n) {
		if ($e.current !== yn) throw Error(A(168));
		ne($e, e), ne(Fe, n)
	}

	function xg(t, e, n) {
		var i = t.stateNode;
		if (t = e.childContextTypes, typeof i.getChildContext != "function") return n;
		i = i.getChildContext();
		for (var o in i)
			if (!(o in t)) throw Error(A(108, Mi(e) || "Unknown", o));
		return ee({}, n, i)
	}

	function Ka(t) {
		return t = (t = t.stateNode) && t.__reactInternalMemoizedMergedChildContext || yn, Xn = $e.current, ne($e, t), ne(Fe, Fe.current), !0
	}

	function Eg(t, e, n) {
		var i = t.stateNode;
		if (!i) throw Error(A(169));
		n ? (t = xg(t, e, Xn), i.__reactInternalMemoizedMergedChildContext = t, X(Fe), X($e), ne($e, t)) : X(Fe), ne(Fe, n)
	}
	var Sc = null,
		Zn = null,
		rJ = pe.unstable_runWithPriority,
		Cc = pe.unstable_scheduleCallback,
		xc = pe.unstable_cancelCallback,
		aJ = pe.unstable_shouldYield,
		Tg = pe.unstable_requestPaint,
		Ec = pe.unstable_now,
		sJ = pe.unstable_getCurrentPriorityLevel,
		Ja = pe.unstable_ImmediatePriority,
		jg = pe.unstable_UserBlockingPriority,
		$g = pe.unstable_NormalPriority,
		Ag = pe.unstable_LowPriority,
		Ng = pe.unstable_IdlePriority,
		Tc = {},
		lJ = Tg !== void 0 ? Tg : function() {},
		Rt = null,
		Ga = null,
		jc = !1,
		Mg = Ec(),
		Ae = 1e4 > Mg ? Ec : function() {
			return Ec() - Mg
		};

	function Wi() {
		switch (sJ()) {
			case Ja:
				return 99;
			case jg:
				return 98;
			case $g:
				return 97;
			case Ag:
				return 96;
			case Ng:
				return 95;
			default:
				throw Error(A(332))
		}
	}

	function Pg(t) {
		switch (t) {
			case 99:
				return Ja;
			case 98:
				return jg;
			case 97:
				return $g;
			case 96:
				return Ag;
			case 95:
				return Ng;
			default:
				throw Error(A(332))
		}
	}

	function ei(t, e) {
		return t = Pg(t), rJ(t, e)
	}

	function ur(t, e, n) {
		return t = Pg(t), Cc(t, e, n)
	}

	function Ct() {
		if (Ga !== null) {
			var t = Ga;
			Ga = null, xc(t)
		}
		_g()
	}

	function _g() {
		if (!jc && Rt !== null) {
			jc = !0;
			var t = 0;
			try {
				var e = Rt;
				ei(99, function() {
					for (; t < e.length; t++) {
						var n = e[t];
						do n = n(!0); while (n !== null)
					}
				}), Rt = null
			} catch (n) {
				throw Rt !== null && (Rt = Rt.slice(t + 1)), Cc(Ja, Ct), n
			} finally {
				jc = !1
			}
		}
	}
	var uJ = Wn.ReactCurrentBatchConfig;

	function pt(t, e) {
		if (t && t.defaultProps) {
			e = ee({}, e), t = t.defaultProps;
			for (var n in t) e[n] === void 0 && (e[n] = t[n]);
			return e
		}
		return e
	}
	var Qa = gn(null),
		Xa = null,
		Ki = null,
		Za = null;

	function $c() {
		Za = Ki = Xa = null
	}

	function Ac(t) {
		var e = Qa.current;
		X(Qa), t.type._context._currentValue = e
	}

	function zg(t, e) {
		for (; t !== null;) {
			var n = t.alternate;
			if ((t.childLanes & e) === e) {
				if (n === null || (n.childLanes & e) === e) break;
				n.childLanes |= e
			} else t.childLanes |= e, n !== null && (n.childLanes |= e);
			t = t.return
		}
	}

	function Ji(t, e) {
		Xa = t, Za = Ki = null, t = t.dependencies, t !== null && t.firstContext !== null && (t.lanes & e && (ft = !0), t.firstContext = null)
	}

	function it(t, e) {
		if (Za !== t && e !== !1 && e !== 0)
			if ((typeof e != "number" || e === 1073741823) && (Za = t, e = 1073741823), e = {
					context: t,
					observedBits: e,
					next: null
				}, Ki === null) {
				if (Xa === null) throw Error(A(308));
				Ki = e, Xa.dependencies = {
					lanes: 0,
					firstContext: e,
					responders: null
				}
			} else Ki = Ki.next = e;
		return t._currentValue
	}
	var bn = !1;

	function Nc(t) {
		t.updateQueue = {
			baseState: t.memoizedState,
			firstBaseUpdate: null,
			lastBaseUpdate: null,
			shared: {
				pending: null
			},
			effects: null
		}
	}

	function Og(t, e) {
		t = t.updateQueue, e.updateQueue === t && (e.updateQueue = {
			baseState: t.baseState,
			firstBaseUpdate: t.firstBaseUpdate,
			lastBaseUpdate: t.lastBaseUpdate,
			shared: t.shared,
			effects: t.effects
		})
	}

	function kn(t, e) {
		return {
			eventTime: t,
			lane: e,
			tag: 0,
			payload: null,
			callback: null,
			next: null
		}
	}

	function vn(t, e) {
		if (t = t.updateQueue, t !== null) {
			t = t.shared;
			var n = t.pending;
			n === null ? e.next = e : (e.next = n.next, n.next = e), t.pending = e
		}
	}

	function Dg(t, e) {
		var n = t.updateQueue,
			i = t.alternate;
		if (i !== null && (i = i.updateQueue, n === i)) {
			var o = null,
				r = null;
			if (n = n.firstBaseUpdate, n !== null) {
				do {
					var a = {
						eventTime: n.eventTime,
						lane: n.lane,
						tag: n.tag,
						payload: n.payload,
						callback: n.callback,
						next: null
					};
					r === null ? o = r = a : r = r.next = a, n = n.next
				} while (n !== null);
				r === null ? o = r = e : r = r.next = e
			} else o = r = e;
			n = {
				baseState: i.baseState,
				firstBaseUpdate: o,
				lastBaseUpdate: r,
				shared: i.shared,
				effects: i.effects
			}, t.updateQueue = n;
			return
		}
		t = n.lastBaseUpdate, t === null ? n.firstBaseUpdate = e : t.next = e, n.lastBaseUpdate = e
	}

	function cr(t, e, n, i) {
		var o = t.updateQueue;
		bn = !1;
		var r = o.firstBaseUpdate,
			a = o.lastBaseUpdate,
			s = o.shared.pending;
		if (s !== null) {
			o.shared.pending = null;
			var l = s,
				u = l.next;
			l.next = null, a === null ? r = u : a.next = u, a = l;
			var c = t.alternate;
			if (c !== null) {
				c = c.updateQueue;
				var m = c.lastBaseUpdate;
				m !== a && (m === null ? c.firstBaseUpdate = u : m.next = u, c.lastBaseUpdate = l)
			}
		}
		if (r !== null) {
			m = o.baseState, a = 0, c = u = l = null;
			do {
				s = r.lane;
				var d = r.eventTime;
				if ((i & s) === s) {
					c !== null && (c = c.next = {
						eventTime: d,
						lane: 0,
						tag: r.tag,
						payload: r.payload,
						callback: r.callback,
						next: null
					});
					e: {
						var p = t,
							f = r;
						switch (s = e, d = n, f.tag) {
							case 1:
								if (p = f.payload, typeof p == "function") {
									m = p.call(d, m, s);
									break e
								}
								m = p;
								break e;
							case 3:
								p.flags = p.flags & -4097 | 64;
							case 0:
								if (p = f.payload, s = typeof p == "function" ? p.call(d, m, s) : p, s == null) break e;
								m = ee({}, m, s);
								break e;
							case 2:
								bn = !0
						}
					}
					r.callback !== null && (t.flags |= 32, s = o.effects, s === null ? o.effects = [r] : s.push(r))
				} else d = {
					eventTime: d,
					lane: s,
					tag: r.tag,
					payload: r.payload,
					callback: r.callback,
					next: null
				}, c === null ? (u = c = d, l = m) : c = c.next = d, a |= s;
				if (r = r.next, r === null) {
					if (s = o.shared.pending, s === null) break;
					r = s.next, s.next = null, o.lastBaseUpdate = s, o.shared.pending = null
				}
			} while (1);
			c === null && (l = m), o.baseState = l, o.firstBaseUpdate = u, o.lastBaseUpdate = c, Sr |= a, t.lanes = a, t.memoizedState = m
		}
	}

	function Ig(t, e, n) {
		if (t = e.effects, e.effects = null, t !== null)
			for (e = 0; e < t.length; e++) {
				var i = t[e],
					o = i.callback;
				if (o !== null) {
					if (i.callback = null, i = n, typeof o != "function") throw Error(A(191, o));
					o.call(i)
				}
			}
	}
	var Rg = new wa.Component().refs;

	function es(t, e, n, i) {
		e = t.memoizedState, n = n(i, e), n = n == null ? e : ee({}, e, n), t.memoizedState = n, t.lanes === 0 && (t.updateQueue.baseState = n)
	}
	var ts = {
		isMounted: function(t) {
			return (t = t._reactInternals) ? Gn(t) === t : !1
		},
		enqueueSetState: function(t, e, n) {
			t = t._reactInternals;
			var i = Je(),
				o = Cn(t),
				r = kn(i, o);
			r.payload = e, n != null && (r.callback = n), vn(t, r), xn(t, o, i)
		},
		enqueueReplaceState: function(t, e, n) {
			t = t._reactInternals;
			var i = Je(),
				o = Cn(t),
				r = kn(i, o);
			r.tag = 1, r.payload = e, n != null && (r.callback = n), vn(t, r), xn(t, o, i)
		},
		enqueueForceUpdate: function(t, e) {
			t = t._reactInternals;
			var n = Je(),
				i = Cn(t),
				o = kn(n, i);
			o.tag = 2, e != null && (o.callback = e), vn(t, o), xn(t, i, n)
		}
	};

	function Yg(t, e, n, i, o, r, a) {
		return t = t.stateNode, typeof t.shouldComponentUpdate == "function" ? t.shouldComponentUpdate(i, r, a) : e.prototype && e.prototype.isPureReactComponent ? !or(n, i) || !or(o, r) : !0
	}

	function Lg(t, e, n) {
		var i = !1,
			o = yn,
			r = e.contextType;
		return typeof r == "object" && r !== null ? r = it(r) : (o = Be(e) ? Xn : $e.current, i = e.contextTypes, r = (i = i != null) ? qi(t, o) : yn), e = new e(n, r), t.memoizedState = e.state !== null && e.state !== void 0 ? e.state : null, e.updater = ts, t.stateNode = e, e._reactInternals = t, i && (t = t.stateNode, t.__reactInternalMemoizedUnmaskedChildContext = o, t.__reactInternalMemoizedMaskedChildContext = r), e
	}

	function Fg(t, e, n, i) {
		t = e.state, typeof e.componentWillReceiveProps == "function" && e.componentWillReceiveProps(n, i), typeof e.UNSAFE_componentWillReceiveProps == "function" && e.UNSAFE_componentWillReceiveProps(n, i), e.state !== t && ts.enqueueReplaceState(e, e.state, null)
	}

	function Mc(t, e, n, i) {
		var o = t.stateNode;
		o.props = n, o.state = t.memoizedState, o.refs = Rg, Nc(t);
		var r = e.contextType;
		typeof r == "object" && r !== null ? o.context = it(r) : (r = Be(e) ? Xn : $e.current, o.context = qi(t, r)), cr(t, n, o, i), o.state = t.memoizedState, r = e.getDerivedStateFromProps, typeof r == "function" && (es(t, e, r, n), o.state = t.memoizedState), typeof e.getDerivedStateFromProps == "function" || typeof o.getSnapshotBeforeUpdate == "function" || typeof o.UNSAFE_componentWillMount != "function" && typeof o.componentWillMount != "function" || (e = o.state, typeof o.componentWillMount == "function" && o.componentWillMount(), typeof o.UNSAFE_componentWillMount == "function" && o.UNSAFE_componentWillMount(), e !== o.state && ts.enqueueReplaceState(o, o.state, null), cr(t, n, o, i), o.state = t.memoizedState), typeof o.componentDidMount == "function" && (t.flags |= 4)
	}
	var ns = Array.isArray;

	function dr(t, e, n) {
		if (t = n.ref, t !== null && typeof t != "function" && typeof t != "object") {
			if (n._owner) {
				if (n = n._owner, n) {
					if (n.tag !== 1) throw Error(A(309));
					var i = n.stateNode
				}
				if (!i) throw Error(A(147, t));
				var o = "" + t;
				return e !== null && e.ref !== null && typeof e.ref == "function" && e.ref._stringRef === o ? e.ref : (e = function(r) {
					var a = i.refs;
					a === Rg && (a = i.refs = {}), r === null ? delete a[o] : a[o] = r
				}, e._stringRef = o, e)
			}
			if (typeof t != "string") throw Error(A(284));
			if (!n._owner) throw Error(A(290, t))
		}
		return t
	}

	function is(t, e) {
		if (t.type !== "textarea") throw Error(A(31, Object.prototype.toString.call(e) === "[object Object]" ? "object with keys {" + Object.keys(e).join(", ") + "}" : e))
	}

	function Bg(t) {
		function e(h, g) {
			if (t) {
				var b = h.lastEffect;
				b !== null ? (b.nextEffect = g, h.lastEffect = g) : h.firstEffect = h.lastEffect = g, g.nextEffect = null, g.flags = 8
			}
		}

		function n(h, g) {
			if (!t) return null;
			for (; g !== null;) e(h, g), g = g.sibling;
			return null
		}

		function i(h, g) {
			for (h = new Map; g !== null;) g.key !== null ? h.set(g.key, g) : h.set(g.index, g), g = g.sibling;
			return h
		}

		function o(h, g) {
			return h = jn(h, g), h.index = 0, h.sibling = null, h
		}

		function r(h, g, b) {
			return h.index = b, t ? (b = h.alternate, b !== null ? (b = b.index, b < g ? (h.flags = 2, g) : b) : (h.flags = 2, g)) : g
		}

		function a(h) {
			return t && h.alternate === null && (h.flags = 2), h
		}

		function s(h, g, b, v) {
			return g === null || g.tag !== 6 ? (g = pd(b, h.mode, v), g.return = h, g) : (g = o(g, b), g.return = h, g)
		}

		function l(h, g, b, v) {
			return g !== null && g.elementType === b.type ? (v = o(g, b.props), v.ref = dr(h, g, b), v.return = h, v) : (v = Ss(b.type, b.key, b.props, null, h.mode, v), v.ref = dr(h, g, b), v.return = h, v)
		}

		function u(h, g, b, v) {
			return g === null || g.tag !== 4 || g.stateNode.containerInfo !== b.containerInfo || g.stateNode.implementation !== b.implementation ? (g = fd(b, h.mode, v), g.return = h, g) : (g = o(g, b.children || []), g.return = h, g)
		}

		function c(h, g, b, v, w) {
			return g === null || g.tag !== 7 ? (g = io(b, h.mode, v, w), g.return = h, g) : (g = o(g, b), g.return = h, g)
		}

		function m(h, g, b) {
			if (typeof g == "string" || typeof g == "number") return g = pd("" + g, h.mode, b), g.return = h, g;
			if (typeof g == "object" && g !== null) {
				switch (g.$$typeof) {
					case Io:
						return b = Ss(g.type, g.key, g.props, null, h.mode, b), b.ref = dr(h, null, g), b.return = h, b;
					case Kn:
						return g = fd(g, h.mode, b), g.return = h, g
				}
				if (ns(g) || Lo(g)) return g = io(g, h.mode, b, null), g.return = h, g;
				is(h, g)
			}
			return null
		}

		function d(h, g, b, v) {
			var w = g !== null ? g.key : null;
			if (typeof b == "string" || typeof b == "number") return w !== null ? null : s(h, g, "" + b, v);
			if (typeof b == "object" && b !== null) {
				switch (b.$$typeof) {
					case Io:
						return b.key === w ? b.type === ln ? c(h, g, b.props.children, v, w) : l(h, g, b, v) : null;
					case Kn:
						return b.key === w ? u(h, g, b, v) : null
				}
				if (ns(b) || Lo(b)) return w !== null ? null : c(h, g, b, v, null);
				is(h, b)
			}
			return null
		}

		function p(h, g, b, v, w) {
			if (typeof v == "string" || typeof v == "number") return h = h.get(b) || null, s(g, h, "" + v, w);
			if (typeof v == "object" && v !== null) {
				switch (v.$$typeof) {
					case Io:
						return h = h.get(v.key === null ? b : v.key) || null, v.type === ln ? c(g, h, v.props.children, w, v.key) : l(g, h, v, w);
					case Kn:
						return h = h.get(v.key === null ? b : v.key) || null, u(g, h, v, w)
				}
				if (ns(v) || Lo(v)) return h = h.get(b) || null, c(g, h, v, w, null);
				is(g, v)
			}
			return null
		}

		function f(h, g, b, v) {
			for (var w = null, x = null, S = g, E = g = 0, T = null; S !== null && E < b.length; E++) {
				S.index > E ? (T = S, S = null) : T = S.sibling;
				var M = d(h, S, b[E], v);
				if (M === null) {
					S === null && (S = T);
					break
				}
				t && S && M.alternate === null && e(h, S), g = r(M, g, E), x === null ? w = M : x.sibling = M, x = M, S = T
			}
			if (E === b.length) return n(h, S), w;
			if (S === null) {
				for (; E < b.length; E++) S = m(h, b[E], v), S !== null && (g = r(S, g, E), x === null ? w = S : x.sibling = S, x = S);
				return w
			}
			for (S = i(h, S); E < b.length; E++) T = p(S, h, E, b[E], v), T !== null && (t && T.alternate !== null && S.delete(T.key === null ? E : T.key), g = r(T, g, E), x === null ? w = T : x.sibling = T, x = T);
			return t && S.forEach(function(U) {
				return e(h, U)
			}), w
		}

		function y(h, g, b, v) {
			var w = Lo(b);
			if (typeof w != "function") throw Error(A(150));
			if (b = w.call(b), b == null) throw Error(A(151));
			for (var x = w = null, S = g, E = g = 0, T = null, M = b.next(); S !== null && !M.done; E++, M = b.next()) {
				S.index > E ? (T = S, S = null) : T = S.sibling;
				var U = d(h, S, M.value, v);
				if (U === null) {
					S === null && (S = T);
					break
				}
				t && S && U.alternate === null && e(h, S), g = r(U, g, E), x === null ? w = U : x.sibling = U, x = U, S = T
			}
			if (M.done) return n(h, S), w;
			if (S === null) {
				for (; !M.done; E++, M = b.next()) M = m(h, M.value, v), M !== null && (g = r(M, g, E), x === null ? w = M : x.sibling = M, x = M);
				return w
			}
			for (S = i(h, S); !M.done; E++, M = b.next()) M = p(S, h, E, M.value, v), M !== null && (t && M.alternate !== null && S.delete(M.key === null ? E : M.key), g = r(M, g, E), x === null ? w = M : x.sibling = M, x = M);
			return t && S.forEach(function(qe) {
				return e(h, qe)
			}), w
		}
		return function(h, g, b, v) {
			var w = typeof b == "object" && b !== null && b.type === ln && b.key === null;
			w && (b = b.props.children);
			var x = typeof b == "object" && b !== null;
			if (x) switch (b.$$typeof) {
				case Io:
					e: {
						for (x = b.key, w = g; w !== null;) {
							if (w.key === x) {
								switch (w.tag) {
									case 7:
										if (b.type === ln) {
											n(h, w.sibling), g = o(w, b.props.children), g.return = h, h = g;
											break e
										}
										break;
									default:
										if (w.elementType === b.type) {
											n(h, w.sibling), g = o(w, b.props), g.ref = dr(h, w, b), g.return = h, h = g;
											break e
										}
								}
								n(h, w);
								break
							} else e(h, w);
							w = w.sibling
						}
						b.type === ln ? (g = io(b.props.children, h.mode, v, b.key), g.return = h, h = g) : (v = Ss(b.type, b.key, b.props, null, h.mode, v), v.ref = dr(h, g, b), v.return = h, h = v)
					}
					return a(h);
				case Kn:
					e: {
						for (w = b.key; g !== null;) {
							if (g.key === w)
								if (g.tag === 4 && g.stateNode.containerInfo === b.containerInfo && g.stateNode.implementation === b.implementation) {
									n(h, g.sibling), g = o(g, b.children || []), g.return = h, h = g;
									break e
								} else {
									n(h, g);
									break
								}
							else e(h, g);
							g = g.sibling
						}
						g = fd(b, h.mode, v),
						g.return = h,
						h = g
					}
					return a(h)
			}
			if (typeof b == "string" || typeof b == "number") return b = "" + b, g !== null && g.tag === 6 ? (n(h, g.sibling), g = o(g, b), g.return = h, h = g) : (n(h, g), g = pd(b, h.mode, v), g.return = h, h = g), a(h);
			if (ns(b)) return f(h, g, b, v);
			if (Lo(b)) return y(h, g, b, v);
			if (x && is(h, b), typeof b > "u" && !w) switch (h.tag) {
				case 1:
				case 22:
				case 0:
				case 11:
				case 15:
					throw Error(A(152, Mi(h.type) || "Component"))
			}
			return n(h, g)
		}
	}
	var rs = Bg(!0),
		Ug = Bg(!1),
		mr = {},
		xt = gn(mr),
		pr = gn(mr),
		fr = gn(mr);

	function ti(t) {
		if (t === mr) throw Error(A(174));
		return t
	}

	function Pc(t, e) {
		switch (ne(fr, e), ne(pr, t), ne(xt, mr), t = e.nodeType, t) {
			case 9:
			case 11:
				e = (e = e.documentElement) ? e.namespaceURI : Iu(null, "");
				break;
			default:
				t = t === 8 ? e.parentNode : e, e = t.namespaceURI || null, t = t.tagName, e = Iu(e, t)
		}
		X(xt), ne(xt, e)
	}

	function Gi() {
		X(xt), X(pr), X(fr)
	}

	function Vg(t) {
		ti(fr.current);
		var e = ti(xt.current),
			n = Iu(e, t.type);
		e !== n && (ne(pr, t), ne(xt, n))
	}

	function _c(t) {
		pr.current === t && (X(xt), X(pr))
	}
	var ie = gn(0);

	function as(t) {
		for (var e = t; e !== null;) {
			if (e.tag === 13) {
				var n = e.memoizedState;
				if (n !== null && (n = n.dehydrated, n === null || n.data === "$?" || n.data === "$!")) return e
			} else if (e.tag === 19 && e.memoizedProps.revealOrder !== void 0) {
				if (e.flags & 64) return e
			} else if (e.child !== null) {
				e.child.return = e, e = e.child;
				continue
			}
			if (e === t) break;
			for (; e.sibling === null;) {
				if (e.return === null || e.return === t) return null;
				e = e.return
			}
			e.sibling.return = e.return, e = e.sibling
		}
		return null
	}
	var Yt = null,
		wn = null,
		Et = !1;

	function Hg(t, e) {
		var n = at(5, null, null, 0);
		n.elementType = "DELETED", n.type = "DELETED", n.stateNode = e, n.return = t, n.flags = 8, t.lastEffect !== null ? (t.lastEffect.nextEffect = n, t.lastEffect = n) : t.firstEffect = t.lastEffect = n
	}

	function qg(t, e) {
		switch (t.tag) {
			case 5:
				var n = t.type;
				return e = e.nodeType !== 1 || n.toLowerCase() !== e.nodeName.toLowerCase() ? null : e, e !== null ? (t.stateNode = e, !0) : !1;
			case 6:
				return e = t.pendingProps === "" || e.nodeType !== 3 ? null : e, e !== null ? (t.stateNode = e, !0) : !1;
			case 13:
				return !1;
			default:
				return !1
		}
	}

	function zc(t) {
		if (Et) {
			var e = wn;
			if (e) {
				var n = e;
				if (!qg(t, e)) {
					if (e = Bi(n.nextSibling), !e || !qg(t, e)) {
						t.flags = t.flags & -1025 | 2, Et = !1, Yt = t;
						return
					}
					Hg(Yt, n)
				}
				Yt = t, wn = Bi(e.firstChild)
			} else t.flags = t.flags & -1025 | 2, Et = !1, Yt = t
		}
	}

	function Wg(t) {
		for (t = t.return; t !== null && t.tag !== 5 && t.tag !== 3 && t.tag !== 13;) t = t.return;
		Yt = t
	}

	function ss(t) {
		if (t !== Yt) return !1;
		if (!Et) return Wg(t), Et = !0, !1;
		var e = t.type;
		if (t.tag !== 5 || e !== "head" && e !== "body" && !bc(e, t.memoizedProps))
			for (e = wn; e;) Hg(t, e), e = Bi(e.nextSibling);
		if (Wg(t), t.tag === 13) {
			if (t = t.memoizedState, t = t !== null ? t.dehydrated : null, !t) throw Error(A(317));
			e: {
				for (t = t.nextSibling, e = 0; t;) {
					if (t.nodeType === 8) {
						var n = t.data;
						if (n === "/$") {
							if (e === 0) {
								wn = Bi(t.nextSibling);
								break e
							}
							e--
						} else n !== "$" && n !== "$!" && n !== "$?" || e++
					}
					t = t.nextSibling
				}
				wn = null
			}
		} else wn = Yt ? Bi(t.stateNode.nextSibling) : null;
		return !0
	}

	function Oc() {
		wn = Yt = null, Et = !1
	}
	var Qi = [];

	function Dc() {
		for (var t = 0; t < Qi.length; t++) Qi[t]._workInProgressVersionPrimary = null;
		Qi.length = 0
	}
	var hr = Wn.ReactCurrentDispatcher,
		ot = Wn.ReactCurrentBatchConfig,
		gr = 0,
		oe = null,
		Ne = null,
		ke = null,
		ls = !1,
		yr = !1;

	function Ue() {
		throw Error(A(321))
	}

	function Ic(t, e) {
		if (e === null) return !1;
		for (var n = 0; n < e.length && n < t.length; n++)
			if (!nt(t[n], e[n])) return !1;
		return !0
	}

	function Rc(t, e, n, i, o, r) {
		if (gr = r, oe = e, e.memoizedState = null, e.updateQueue = null, e.lanes = 0, hr.current = t === null || t.memoizedState === null ? dJ : mJ, t = n(i, o), yr) {
			r = 0;
			do {
				if (yr = !1, !(25 > r)) throw Error(A(301));
				r += 1, ke = Ne = null, e.updateQueue = null, hr.current = pJ, t = n(i, o)
			} while (yr)
		}
		if (hr.current = ms, e = Ne !== null && Ne.next !== null, gr = 0, ke = Ne = oe = null, ls = !1, e) throw Error(A(300));
		return t
	}

	function ni() {
		var t = {
			memoizedState: null,
			baseState: null,
			baseQueue: null,
			queue: null,
			next: null
		};
		return ke === null ? oe.memoizedState = ke = t : ke = ke.next = t, ke
	}

	function ii() {
		if (Ne === null) {
			var t = oe.alternate;
			t = t !== null ? t.memoizedState : null
		} else t = Ne.next;
		var e = ke === null ? oe.memoizedState : ke.next;
		if (e !== null) ke = e, Ne = t;
		else {
			if (t === null) throw Error(A(310));
			Ne = t, t = {
				memoizedState: Ne.memoizedState,
				baseState: Ne.baseState,
				baseQueue: Ne.baseQueue,
				queue: Ne.queue,
				next: null
			}, ke === null ? oe.memoizedState = ke = t : ke = ke.next = t
		}
		return ke
	}

	function Tt(t, e) {
		return typeof e == "function" ? e(t) : e
	}

	function br(t) {
		var e = ii(),
			n = e.queue;
		if (n === null) throw Error(A(311));
		n.lastRenderedReducer = t;
		var i = Ne,
			o = i.baseQueue,
			r = n.pending;
		if (r !== null) {
			if (o !== null) {
				var a = o.next;
				o.next = r.next, r.next = a
			}
			i.baseQueue = o = r, n.pending = null
		}
		if (o !== null) {
			o = o.next, i = i.baseState;
			var s = a = r = null,
				l = o;
			do {
				var u = l.lane;
				if ((gr & u) === u) s !== null && (s = s.next = {
					lane: 0,
					action: l.action,
					eagerReducer: l.eagerReducer,
					eagerState: l.eagerState,
					next: null
				}), i = l.eagerReducer === t ? l.eagerState : t(i, l.action);
				else {
					var c = {
						lane: u,
						action: l.action,
						eagerReducer: l.eagerReducer,
						eagerState: l.eagerState,
						next: null
					};
					s === null ? (a = s = c, r = i) : s = s.next = c, oe.lanes |= u, Sr |= u
				}
				l = l.next
			} while (l !== null && l !== o);
			s === null ? r = i : s.next = a, nt(i, e.memoizedState) || (ft = !0), e.memoizedState = i, e.baseState = r, e.baseQueue = s, n.lastRenderedState = i
		}
		return [e.memoizedState, n.dispatch]
	}

	function kr(t) {
		var e = ii(),
			n = e.queue;
		if (n === null) throw Error(A(311));
		n.lastRenderedReducer = t;
		var i = n.dispatch,
			o = n.pending,
			r = e.memoizedState;
		if (o !== null) {
			n.pending = null;
			var a = o = o.next;
			do r = t(r, a.action), a = a.next; while (a !== o);
			nt(r, e.memoizedState) || (ft = !0), e.memoizedState = r, e.baseQueue === null && (e.baseState = r), n.lastRenderedState = r
		}
		return [r, i]
	}

	function Kg(t, e, n) {
		var i = e._getVersion;
		i = i(e._source);
		var o = e._workInProgressVersionPrimary;
		if (o !== null ? t = o === i : (t = t.mutableReadLanes, (t = (gr & t) === t) && (e._workInProgressVersionPrimary = i, Qi.push(e))), t) return n(e._source);
		throw Qi.push(e), Error(A(350))
	}

	function Jg(t, e, n, i) {
		var o = Ie;
		if (o === null) throw Error(A(349));
		var r = e._getVersion,
			a = r(e._source),
			s = hr.current,
			l = s.useState(function() {
				return Kg(o, e, n)
			}),
			u = l[1],
			c = l[0];
		l = ke;
		var m = t.memoizedState,
			d = m.refs,
			p = d.getSnapshot,
			f = m.source;
		m = m.subscribe;
		var y = oe;
		return t.memoizedState = {
			refs: d,
			source: e,
			subscribe: i
		}, s.useEffect(function() {
			d.getSnapshot = n, d.setSnapshot = u;
			var h = r(e._source);
			if (!nt(a, h)) {
				h = n(e._source), nt(c, h) || (u(h), h = Cn(y), o.mutableReadLanes |= h & o.pendingLanes), h = o.mutableReadLanes, o.entangledLanes |= h;
				for (var g = o.entanglements, b = h; 0 < b;) {
					var v = 31 - pn(b),
						w = 1 << v;
					g[v] |= h, b &= ~w
				}
			}
		}, [n, e, i]), s.useEffect(function() {
			return i(e._source, function() {
				var h = d.getSnapshot,
					g = d.setSnapshot;
				try {
					g(h(e._source));
					var b = Cn(y);
					o.mutableReadLanes |= b & o.pendingLanes
				} catch (v) {
					g(function() {
						throw v
					})
				}
			})
		}, [e, i]), nt(p, n) && nt(f, e) && nt(m, i) || (t = {
			pending: null,
			dispatch: null,
			lastRenderedReducer: Tt,
			lastRenderedState: c
		}, t.dispatch = u = Bc.bind(null, oe, t), l.queue = t, l.baseQueue = null, c = Kg(o, e, n), l.memoizedState = l.baseState = c), c
	}

	function Gg(t, e, n) {
		var i = ii();
		return Jg(i, t, e, n)
	}

	function vr(t) {
		var e = ni();
		return typeof t == "function" && (t = t()), e.memoizedState = e.baseState = t, t = e.queue = {
			pending: null,
			dispatch: null,
			lastRenderedReducer: Tt,
			lastRenderedState: t
		}, t = t.dispatch = Bc.bind(null, oe, t), [e.memoizedState, t]
	}

	function us(t, e, n, i) {
		return t = {
			tag: t,
			create: e,
			destroy: n,
			deps: i,
			next: null
		}, e = oe.updateQueue, e === null ? (e = {
			lastEffect: null
		}, oe.updateQueue = e, e.lastEffect = t.next = t) : (n = e.lastEffect, n === null ? e.lastEffect = t.next = t : (i = n.next, n.next = t, t.next = i, e.lastEffect = t)), t
	}

	function Qg(t) {
		var e = ni();
		return t = {
			current: t
		}, e.memoizedState = t
	}

	function cs() {
		return ii().memoizedState
	}

	function Yc(t, e, n, i) {
		var o = ni();
		oe.flags |= t, o.memoizedState = us(1 | e, n, void 0, i === void 0 ? null : i)
	}

	function Lc(t, e, n, i) {
		var o = ii();
		i = i === void 0 ? null : i;
		var r = void 0;
		if (Ne !== null) {
			var a = Ne.memoizedState;
			if (r = a.destroy, i !== null && Ic(i, a.deps)) {
				us(e, n, r, i);
				return
			}
		}
		oe.flags |= t, o.memoizedState = us(1 | e, n, r, i)
	}

	function Xg(t, e) {
		return Yc(516, 4, t, e)
	}

	function ds(t, e) {
		return Lc(516, 4, t, e)
	}

	function Zg(t, e) {
		return Lc(4, 2, t, e)
	}

	function ey(t, e) {
		if (typeof e == "function") return t = t(), e(t),
			function() {
				e(null)
			};
		if (e != null) return t = t(), e.current = t,
			function() {
				e.current = null
			}
	}

	function ty(t, e, n) {
		return n = n != null ? n.concat([t]) : null, Lc(4, 2, ey.bind(null, e, t), n)
	}

	function Fc() {}

	function ny(t, e) {
		var n = ii();
		e = e === void 0 ? null : e;
		var i = n.memoizedState;
		return i !== null && e !== null && Ic(e, i[1]) ? i[0] : (n.memoizedState = [t, e], t)
	}

	function iy(t, e) {
		var n = ii();
		e = e === void 0 ? null : e;
		var i = n.memoizedState;
		return i !== null && e !== null && Ic(e, i[1]) ? i[0] : (t = t(), n.memoizedState = [t, e], t)
	}

	function cJ(t, e) {
		var n = Wi();
		ei(98 > n ? 98 : n, function() {
			t(!0)
		}), ei(97 < n ? 97 : n, function() {
			var i = ot.transition;
			ot.transition = 1;
			try {
				t(!1), e()
			} finally {
				ot.transition = i
			}
		})
	}

	function Bc(t, e, n) {
		var i = Je(),
			o = Cn(t),
			r = {
				lane: o,
				action: n,
				eagerReducer: null,
				eagerState: null,
				next: null
			},
			a = e.pending;
		if (a === null ? r.next = r : (r.next = a.next, a.next = r), e.pending = r, a = t.alternate, t === oe || a !== null && a === oe) yr = ls = !0;
		else {
			if (t.lanes === 0 && (a === null || a.lanes === 0) && (a = e.lastRenderedReducer, a !== null)) try {
				var s = e.lastRenderedState,
					l = a(s, n);
				if (r.eagerReducer = a, r.eagerState = l, nt(l, s)) return
			} catch {} finally {}
			xn(t, o, i)
		}
	}
	var ms = {
			readContext: it,
			useCallback: Ue,
			useContext: Ue,
			useEffect: Ue,
			useImperativeHandle: Ue,
			useLayoutEffect: Ue,
			useMemo: Ue,
			useReducer: Ue,
			useRef: Ue,
			useState: Ue,
			useDebugValue: Ue,
			useDeferredValue: Ue,
			useTransition: Ue,
			useMutableSource: Ue,
			useOpaqueIdentifier: Ue,
			unstable_isNewReconciler: !1
		},
		dJ = {
			readContext: it,
			useCallback: function(t, e) {
				return ni().memoizedState = [t, e === void 0 ? null : e], t
			},
			useContext: it,
			useEffect: Xg,
			useImperativeHandle: function(t, e, n) {
				return n = n != null ? n.concat([t]) : null, Yc(4, 2, ey.bind(null, e, t), n)
			},
			useLayoutEffect: function(t, e) {
				return Yc(4, 2, t, e)
			},
			useMemo: function(t, e) {
				var n = ni();
				return e = e === void 0 ? null : e, t = t(), n.memoizedState = [t, e], t
			},
			useReducer: function(t, e, n) {
				var i = ni();
				return e = n !== void 0 ? n(e) : e, i.memoizedState = i.baseState = e, t = i.queue = {
					pending: null,
					dispatch: null,
					lastRenderedReducer: t,
					lastRenderedState: e
				}, t = t.dispatch = Bc.bind(null, oe, t), [i.memoizedState, t]
			},
			useRef: Qg,
			useState: vr,
			useDebugValue: Fc,
			useDeferredValue: function(t) {
				var e = vr(t),
					n = e[0],
					i = e[1];
				return Xg(function() {
					var o = ot.transition;
					ot.transition = 1;
					try {
						i(t)
					} finally {
						ot.transition = o
					}
				}, [t]), n
			},
			useTransition: function() {
				var t = vr(!1),
					e = t[0];
				return t = cJ.bind(null, t[1]), Qg(t), [t, e]
			},
			useMutableSource: function(t, e, n) {
				var i = ni();
				return i.memoizedState = {
					refs: {
						getSnapshot: e,
						setSnapshot: null
					},
					source: t,
					subscribe: n
				}, Jg(i, t, e, n)
			},
			useOpaqueIdentifier: function() {
				if (Et) {
					var t = !1,
						e = oJ(function() {
							throw t || (t = !0, n("r:" + (vc++).toString(36))), Error(A(355))
						}),
						n = vr(e)[1];
					return !(oe.mode & 2) && (oe.flags |= 516, us(5, function() {
						n("r:" + (vc++).toString(36))
					}, void 0, null)), e
				}
				return e = "r:" + (vc++).toString(36), vr(e), e
			},
			unstable_isNewReconciler: !1
		},
		mJ = {
			readContext: it,
			useCallback: ny,
			useContext: it,
			useEffect: ds,
			useImperativeHandle: ty,
			useLayoutEffect: Zg,
			useMemo: iy,
			useReducer: br,
			useRef: cs,
			useState: function() {
				return br(Tt)
			},
			useDebugValue: Fc,
			useDeferredValue: function(t) {
				var e = br(Tt),
					n = e[0],
					i = e[1];
				return ds(function() {
					var o = ot.transition;
					ot.transition = 1;
					try {
						i(t)
					} finally {
						ot.transition = o
					}
				}, [t]), n
			},
			useTransition: function() {
				var t = br(Tt)[0];
				return [cs().current, t]
			},
			useMutableSource: Gg,
			useOpaqueIdentifier: function() {
				return br(Tt)[0]
			},
			unstable_isNewReconciler: !1
		},
		pJ = {
			readContext: it,
			useCallback: ny,
			useContext: it,
			useEffect: ds,
			useImperativeHandle: ty,
			useLayoutEffect: Zg,
			useMemo: iy,
			useReducer: kr,
			useRef: cs,
			useState: function() {
				return kr(Tt)
			},
			useDebugValue: Fc,
			useDeferredValue: function(t) {
				var e = kr(Tt),
					n = e[0],
					i = e[1];
				return ds(function() {
					var o = ot.transition;
					ot.transition = 1;
					try {
						i(t)
					} finally {
						ot.transition = o
					}
				}, [t]), n
			},
			useTransition: function() {
				var t = kr(Tt)[0];
				return [cs().current, t]
			},
			useMutableSource: Gg,
			useOpaqueIdentifier: function() {
				return kr(Tt)[0]
			},
			unstable_isNewReconciler: !1
		},
		fJ = Wn.ReactCurrentOwner,
		ft = !1;

	function Ve(t, e, n, i) {
		e.child = t === null ? Ug(e, null, n, i) : rs(e, t.child, n, i)
	}

	function oy(t, e, n, i, o) {
		n = n.render;
		var r = e.ref;
		return Ji(e, o), i = Rc(t, e, n, i, r, o), t !== null && !ft ? (e.updateQueue = t.updateQueue, e.flags &= -517, t.lanes &= ~o, Lt(t, e, o)) : (e.flags |= 1, Ve(t, e, i, o), e.child)
	}

	function ry(t, e, n, i, o, r) {
		if (t === null) {
			var a = n.type;
			return typeof a == "function" && !dd(a) && a.defaultProps === void 0 && n.compare === null && n.defaultProps === void 0 ? (e.tag = 15, e.type = a, ay(t, e, a, i, o, r)) : (t = Ss(n.type, null, i, e, e.mode, r), t.ref = e.ref, t.return = e, e.child = t)
		}
		return a = t.child, !(o & r) && (o = a.memoizedProps, n = n.compare, n = n !== null ? n : or, n(o, i) && t.ref === e.ref) ? Lt(t, e, r) : (e.flags |= 1, t = jn(a, i), t.ref = e.ref, t.return = e, e.child = t)
	}

	function ay(t, e, n, i, o, r) {
		if (t !== null && or(t.memoizedProps, i) && t.ref === e.ref)
			if (ft = !1, (r & o) !== 0) t.flags & 16384 && (ft = !0);
			else return e.lanes = t.lanes, Lt(t, e, r);
		return Vc(t, e, n, i, r)
	}

	function Uc(t, e, n) {
		var i = e.pendingProps,
			o = i.children,
			r = t !== null ? t.memoizedState : null;
		if (i.mode === "hidden" || i.mode === "unstable-defer-without-hiding")
			if (!(e.mode & 4)) e.memoizedState = {
				baseLanes: 0
			}, ws(e, n);
			else if (n & 1073741824) e.memoizedState = {
			baseLanes: 0
		}, ws(e, r !== null ? r.baseLanes : n);
		else return t = r !== null ? r.baseLanes | n : n, e.lanes = e.childLanes = 1073741824, e.memoizedState = {
			baseLanes: t
		}, ws(e, t), null;
		else r !== null ? (i = r.baseLanes | n, e.memoizedState = null) : i = n, ws(e, i);
		return Ve(t, e, o, n), e.child
	}

	function sy(t, e) {
		var n = e.ref;
		(t === null && n !== null || t !== null && t.ref !== n) && (e.flags |= 128)
	}

	function Vc(t, e, n, i, o) {
		var r = Be(n) ? Xn : $e.current;
		return r = qi(e, r), Ji(e, o), n = Rc(t, e, n, i, r, o), t !== null && !ft ? (e.updateQueue = t.updateQueue, e.flags &= -517, t.lanes &= ~o, Lt(t, e, o)) : (e.flags |= 1, Ve(t, e, n, o), e.child)
	}

	function ly(t, e, n, i, o) {
		if (Be(n)) {
			var r = !0;
			Ka(e)
		} else r = !1;
		if (Ji(e, o), e.stateNode === null) t !== null && (t.alternate = null, e.alternate = null, e.flags |= 2), Lg(e, n, i), Mc(e, n, i, o), i = !0;
		else if (t === null) {
			var a = e.stateNode,
				s = e.memoizedProps;
			a.props = s;
			var l = a.context,
				u = n.contextType;
			typeof u == "object" && u !== null ? u = it(u) : (u = Be(n) ? Xn : $e.current, u = qi(e, u));
			var c = n.getDerivedStateFromProps,
				m = typeof c == "function" || typeof a.getSnapshotBeforeUpdate == "function";
			m || typeof a.UNSAFE_componentWillReceiveProps != "function" && typeof a.componentWillReceiveProps != "function" || (s !== i || l !== u) && Fg(e, a, i, u), bn = !1;
			var d = e.memoizedState;
			a.state = d, cr(e, i, a, o), l = e.memoizedState, s !== i || d !== l || Fe.current || bn ? (typeof c == "function" && (es(e, n, c, i), l = e.memoizedState), (s = bn || Yg(e, n, s, i, d, l, u)) ? (m || typeof a.UNSAFE_componentWillMount != "function" && typeof a.componentWillMount != "function" || (typeof a.componentWillMount == "function" && a.componentWillMount(), typeof a.UNSAFE_componentWillMount == "function" && a.UNSAFE_componentWillMount()), typeof a.componentDidMount == "function" && (e.flags |= 4)) : (typeof a.componentDidMount == "function" && (e.flags |= 4), e.memoizedProps = i, e.memoizedState = l), a.props = i, a.state = l, a.context = u, i = s) : (typeof a.componentDidMount == "function" && (e.flags |= 4), i = !1)
		} else {
			a = e.stateNode, Og(t, e), s = e.memoizedProps, u = e.type === e.elementType ? s : pt(e.type, s), a.props = u, m = e.pendingProps, d = a.context, l = n.contextType, typeof l == "object" && l !== null ? l = it(l) : (l = Be(n) ? Xn : $e.current, l = qi(e, l));
			var p = n.getDerivedStateFromProps;
			(c = typeof p == "function" || typeof a.getSnapshotBeforeUpdate == "function") || typeof a.UNSAFE_componentWillReceiveProps != "function" && typeof a.componentWillReceiveProps != "function" || (s !== m || d !== l) && Fg(e, a, i, l), bn = !1, d = e.memoizedState, a.state = d, cr(e, i, a, o);
			var f = e.memoizedState;
			s !== m || d !== f || Fe.current || bn ? (typeof p == "function" && (es(e, n, p, i), f = e.memoizedState), (u = bn || Yg(e, n, u, i, d, f, l)) ? (c || typeof a.UNSAFE_componentWillUpdate != "function" && typeof a.componentWillUpdate != "function" || (typeof a.componentWillUpdate == "function" && a.componentWillUpdate(i, f, l), typeof a.UNSAFE_componentWillUpdate == "function" && a.UNSAFE_componentWillUpdate(i, f, l)), typeof a.componentDidUpdate == "function" && (e.flags |= 4), typeof a.getSnapshotBeforeUpdate == "function" && (e.flags |= 256)) : (typeof a.componentDidUpdate != "function" || s === t.memoizedProps && d === t.memoizedState || (e.flags |= 4), typeof a.getSnapshotBeforeUpdate != "function" || s === t.memoizedProps && d === t.memoizedState || (e.flags |= 256), e.memoizedProps = i, e.memoizedState = f), a.props = i, a.state = f, a.context = l, i = u) : (typeof a.componentDidUpdate != "function" || s === t.memoizedProps && d === t.memoizedState || (e.flags |= 4), typeof a.getSnapshotBeforeUpdate != "function" || s === t.memoizedProps && d === t.memoizedState || (e.flags |= 256), i = !1)
		}
		return Hc(t, e, n, i, r, o)
	}

	function Hc(t, e, n, i, o, r) {
		sy(t, e);
		var a = (e.flags & 64) !== 0;
		if (!i && !a) return o && Eg(e, n, !1), Lt(t, e, r);
		i = e.stateNode, fJ.current = e;
		var s = a && typeof n.getDerivedStateFromError != "function" ? null : i.render();
		return e.flags |= 1, t !== null && a ? (e.child = rs(e, t.child, null, r), e.child = rs(e, null, s, r)) : Ve(t, e, s, r), e.memoizedState = i.state, o && Eg(e, n, !0), e.child
	}

	function uy(t) {
		var e = t.stateNode;
		e.pendingContext ? Cg(t, e.pendingContext, e.pendingContext !== e.context) : e.context && Cg(t, e.context, !1), Pc(t, e.containerInfo)
	}
	var ps = {
		dehydrated: null,
		retryLane: 0
	};

	function cy(t, e, n) {
		var i = e.pendingProps,
			o = ie.current,
			r = !1,
			a;
		return (a = (e.flags & 64) !== 0) || (a = t !== null && t.memoizedState === null ? !1 : (o & 2) !== 0), a ? (r = !0, e.flags &= -65) : t !== null && t.memoizedState === null || i.fallback === void 0 || i.unstable_avoidThisFallback === !0 || (o |= 1), ne(ie, o & 1), t === null ? (i.fallback !== void 0 && zc(e), t = i.children, o = i.fallback, r ? (t = dy(e, t, o, n), e.child.memoizedState = {
			baseLanes: n
		}, e.memoizedState = ps, t) : typeof i.unstable_expectedLoadTime == "number" ? (t = dy(e, t, o, n), e.child.memoizedState = {
			baseLanes: n
		}, e.memoizedState = ps, e.lanes = 33554432, t) : (n = md({
			mode: "visible",
			children: t
		}, e.mode, n, null), n.return = e, e.child = n)) : t.memoizedState !== null ? r ? (i = py(t, e, i.children, i.fallback, n), r = e.child, o = t.child.memoizedState, r.memoizedState = o === null ? {
			baseLanes: n
		} : {
			baseLanes: o.baseLanes | n
		}, r.childLanes = t.childLanes & ~n, e.memoizedState = ps, i) : (n = my(t, e, i.children, n), e.memoizedState = null, n) : r ? (i = py(t, e, i.children, i.fallback, n), r = e.child, o = t.child.memoizedState, r.memoizedState = o === null ? {
			baseLanes: n
		} : {
			baseLanes: o.baseLanes | n
		}, r.childLanes = t.childLanes & ~n, e.memoizedState = ps, i) : (n = my(t, e, i.children, n), e.memoizedState = null, n)
	}

	function dy(t, e, n, i) {
		var o = t.mode,
			r = t.child;
		return e = {
			mode: "hidden",
			children: e
		}, !(o & 2) && r !== null ? (r.childLanes = 0, r.pendingProps = e) : r = md(e, o, 0, null), n = io(n, o, i, null), r.return = t, n.return = t, r.sibling = n, t.child = r, n
	}

	function my(t, e, n, i) {
		var o = t.child;
		return t = o.sibling, n = jn(o, {
			mode: "visible",
			children: n
		}), !(e.mode & 2) && (n.lanes = i), n.return = e, n.sibling = null, t !== null && (t.nextEffect = null, t.flags = 8, e.firstEffect = e.lastEffect = t), e.child = n
	}

	function py(t, e, n, i, o) {
		var r = e.mode,
			a = t.child;
		t = a.sibling;
		var s = {
			mode: "hidden",
			children: n
		};
		return !(r & 2) && e.child !== a ? (n = e.child, n.childLanes = 0, n.pendingProps = s, a = n.lastEffect, a !== null ? (e.firstEffect = n.firstEffect, e.lastEffect = a, a.nextEffect = null) : e.firstEffect = e.lastEffect = null) : n = jn(a, s), t !== null ? i = jn(t, i) : (i = io(i, r, o, null), i.flags |= 2), i.return = e, n.return = e, n.sibling = i, e.child = n, i
	}

	function fy(t, e) {
		t.lanes |= e;
		var n = t.alternate;
		n !== null && (n.lanes |= e), zg(t.return, e)
	}

	function qc(t, e, n, i, o, r) {
		var a = t.memoizedState;
		a === null ? t.memoizedState = {
			isBackwards: e,
			rendering: null,
			renderingStartTime: 0,
			last: i,
			tail: n,
			tailMode: o,
			lastEffect: r
		} : (a.isBackwards = e, a.rendering = null, a.renderingStartTime = 0, a.last = i, a.tail = n, a.tailMode = o, a.lastEffect = r)
	}

	function hy(t, e, n) {
		var i = e.pendingProps,
			o = i.revealOrder,
			r = i.tail;
		if (Ve(t, e, i.children, n), i = ie.current, i & 2) i = i & 1 | 2, e.flags |= 64;
		else {
			if (t !== null && t.flags & 64) e: for (t = e.child; t !== null;) {
				if (t.tag === 13) t.memoizedState !== null && fy(t, n);
				else if (t.tag === 19) fy(t, n);
				else if (t.child !== null) {
					t.child.return = t, t = t.child;
					continue
				}
				if (t === e) break e;
				for (; t.sibling === null;) {
					if (t.return === null || t.return === e) break e;
					t = t.return
				}
				t.sibling.return = t.return, t = t.sibling
			}
			i &= 1
		}
		if (ne(ie, i), !(e.mode & 2)) e.memoizedState = null;
		else switch (o) {
			case "forwards":
				for (n = e.child, o = null; n !== null;) t = n.alternate, t !== null && as(t) === null && (o = n), n = n.sibling;
				n = o, n === null ? (o = e.child, e.child = null) : (o = n.sibling, n.sibling = null), qc(e, !1, o, n, r, e.lastEffect);
				break;
			case "backwards":
				for (n = null, o = e.child, e.child = null; o !== null;) {
					if (t = o.alternate, t !== null && as(t) === null) {
						e.child = o;
						break
					}
					t = o.sibling, o.sibling = n, n = o, o = t
				}
				qc(e, !0, n, null, r, e.lastEffect);
				break;
			case "together":
				qc(e, !1, null, null, void 0, e.lastEffect);
				break;
			default:
				e.memoizedState = null
		}
		return e.child
	}

	function Lt(t, e, n) {
		if (t !== null && (e.dependencies = t.dependencies), Sr |= e.lanes, n & e.childLanes) {
			if (t !== null && e.child !== t.child) throw Error(A(153));
			if (e.child !== null) {
				for (t = e.child, n = jn(t, t.pendingProps), e.child = n, n.return = e; t.sibling !== null;) t = t.sibling, n = n.sibling = jn(t, t.pendingProps), n.return = e;
				n.sibling = null
			}
			return e.child
		}
		return null
	}
	var gy, Wc, yy, by;
	gy = function(t, e) {
		for (var n = e.child; n !== null;) {
			if (n.tag === 5 || n.tag === 6) t.appendChild(n.stateNode);
			else if (n.tag !== 4 && n.child !== null) {
				n.child.return = n, n = n.child;
				continue
			}
			if (n === e) break;
			for (; n.sibling === null;) {
				if (n.return === null || n.return === e) return;
				n = n.return
			}
			n.sibling.return = n.return, n = n.sibling
		}
	}, Wc = function() {}, yy = function(t, e, n, i) {
		var o = t.memoizedProps;
		if (o !== i) {
			t = e.stateNode, ti(xt.current);
			var r = null;
			switch (n) {
				case "input":
					o = Mu(t, o), i = Mu(t, i), r = [];
					break;
				case "option":
					o = zu(t, o), i = zu(t, i), r = [];
					break;
				case "select":
					o = ee({}, o, {
						value: void 0
					}), i = ee({}, i, {
						value: void 0
					}), r = [];
					break;
				case "textarea":
					o = Ou(t, o), i = Ou(t, i), r = [];
					break;
				default:
					typeof o.onClick != "function" && typeof i.onClick == "function" && (t.onclick = Ua)
			}
			Ru(n, i);
			var a;
			n = null;
			for (u in o)
				if (!i.hasOwnProperty(u) && o.hasOwnProperty(u) && o[u] != null)
					if (u === "style") {
						var s = o[u];
						for (a in s) s.hasOwnProperty(a) && (n || (n = {}), n[a] = "")
					} else u !== "dangerouslySetInnerHTML" && u !== "children" && u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && u !== "autoFocus" && (Do.hasOwnProperty(u) ? r || (r = []) : (r = r || []).push(u, null));
			for (u in i) {
				var l = i[u];
				if (s = o != null ? o[u] : void 0, i.hasOwnProperty(u) && l !== s && (l != null || s != null))
					if (u === "style")
						if (s) {
							for (a in s) !s.hasOwnProperty(a) || l && l.hasOwnProperty(a) || (n || (n = {}), n[a] = "");
							for (a in l) l.hasOwnProperty(a) && s[a] !== l[a] && (n || (n = {}), n[a] = l[a])
						} else n || (r || (r = []), r.push(u, n)), n = l;
				else u === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, s = s ? s.__html : void 0, l != null && s !== l && (r = r || []).push(u, l)) : u === "children" ? typeof l != "string" && typeof l != "number" || (r = r || []).push(u, "" + l) : u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && (Do.hasOwnProperty(u) ? (l != null && u === "onScroll" && Q("scroll", t), r || s === l || (r = [])) : typeof l == "object" && l !== null && l.$$typeof === Tu ? l.toString() : (r = r || []).push(u, l))
			}
			n && (r = r || []).push("style", n);
			var u = r;
			(e.updateQueue = u) && (e.flags |= 4)
		}
	}, by = function(t, e, n, i) {
		n !== i && (e.flags |= 4)
	};

	function wr(t, e) {
		if (!Et) switch (t.tailMode) {
			case "hidden":
				e = t.tail;
				for (var n = null; e !== null;) e.alternate !== null && (n = e), e = e.sibling;
				n === null ? t.tail = null : n.sibling = null;
				break;
			case "collapsed":
				n = t.tail;
				for (var i = null; n !== null;) n.alternate !== null && (i = n), n = n.sibling;
				i === null ? e || t.tail === null ? t.tail = null : t.tail.sibling = null : i.sibling = null
		}
	}

	function hJ(t, e, n) {
		var i = e.pendingProps;
		switch (e.tag) {
			case 2:
			case 16:
			case 15:
			case 0:
			case 11:
			case 7:
			case 8:
			case 12:
			case 9:
			case 14:
				return null;
			case 1:
				return Be(e.type) && Wa(), null;
			case 3:
				return Gi(), X(Fe), X($e), Dc(), i = e.stateNode, i.pendingContext && (i.context = i.pendingContext, i.pendingContext = null), (t === null || t.child === null) && (ss(e) ? e.flags |= 4 : i.hydrate || (e.flags |= 256)), Wc(e), null;
			case 5:
				_c(e);
				var o = ti(fr.current);
				if (n = e.type, t !== null && e.stateNode != null) yy(t, e, n, i, o), t.ref !== e.ref && (e.flags |= 128);
				else {
					if (!i) {
						if (e.stateNode === null) throw Error(A(166));
						return null
					}
					if (t = ti(xt.current), ss(e)) {
						i = e.stateNode, n = e.type;
						var r = e.memoizedProps;
						switch (i[hn] = e, i[Ha] = r, n) {
							case "dialog":
								Q("cancel", i), Q("close", i);
								break;
							case "iframe":
							case "object":
							case "embed":
								Q("load", i);
								break;
							case "video":
							case "audio":
								for (t = 0; t < ar.length; t++) Q(ar[t], i);
								break;
							case "source":
								Q("error", i);
								break;
							case "img":
							case "image":
							case "link":
								Q("error", i), Q("load", i);
								break;
							case "details":
								Q("toggle", i);
								break;
							case "input":
								lh(i, r), Q("invalid", i);
								break;
							case "select":
								i._wrapperState = {
									wasMultiple: !!r.multiple
								}, Q("invalid", i);
								break;
							case "textarea":
								dh(i, r), Q("invalid", i)
						}
						Ru(n, r), t = null;
						for (var a in r) r.hasOwnProperty(a) && (o = r[a], a === "children" ? typeof o == "string" ? i.textContent !== o && (t = ["children", o]) : typeof o == "number" && i.textContent !== "" + o && (t = ["children", "" + o]) : Do.hasOwnProperty(a) && o != null && a === "onScroll" && Q("scroll", i));
						switch (n) {
							case "input":
								Ta(i), ch(i, r, !0);
								break;
							case "textarea":
								Ta(i), ph(i);
								break;
							case "select":
							case "option":
								break;
							default:
								typeof r.onClick == "function" && (i.onclick = Ua)
						}
						i = t, e.updateQueue = i, i !== null && (e.flags |= 4)
					} else {
						switch (a = o.nodeType === 9 ? o : o.ownerDocument, t === Du.html && (t = fh(n)), t === Du.html ? n === "script" ? (t = a.createElement("div"), t.innerHTML = "<script><\/script>", t = t.removeChild(t.firstChild)) : typeof i.is == "string" ? t = a.createElement(n, {
								is: i.is
							}) : (t = a.createElement(n), n === "select" && (a = t, i.multiple ? a.multiple = !0 : i.size && (a.size = i.size))) : t = a.createElementNS(t, n), t[hn] = e, t[Ha] = i, gy(t, e, !1, !1), e.stateNode = t, a = Yu(n, i), n) {
							case "dialog":
								Q("cancel", t), Q("close", t), o = i;
								break;
							case "iframe":
							case "object":
							case "embed":
								Q("load", t), o = i;
								break;
							case "video":
							case "audio":
								for (o = 0; o < ar.length; o++) Q(ar[o], t);
								o = i;
								break;
							case "source":
								Q("error", t), o = i;
								break;
							case "img":
							case "image":
							case "link":
								Q("error", t), Q("load", t), o = i;
								break;
							case "details":
								Q("toggle", t), o = i;
								break;
							case "input":
								lh(t, i), o = Mu(t, i), Q("invalid", t);
								break;
							case "option":
								o = zu(t, i);
								break;
							case "select":
								t._wrapperState = {
									wasMultiple: !!i.multiple
								}, o = ee({}, i, {
									value: void 0
								}), Q("invalid", t);
								break;
							case "textarea":
								dh(t, i), o = Ou(t, i), Q("invalid", t);
								break;
							default:
								o = i
						}
						Ru(n, o);
						var s = o;
						for (r in s)
							if (s.hasOwnProperty(r)) {
								var l = s[r];
								r === "style" ? yh(t, l) : r === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, l != null && hh(t, l)) : r === "children" ? typeof l == "string" ? (n !== "textarea" || l !== "") && Bo(t, l) : typeof l == "number" && Bo(t, "" + l) : r !== "suppressContentEditableWarning" && r !== "suppressHydrationWarning" && r !== "autoFocus" && (Do.hasOwnProperty(r) ? l != null && r === "onScroll" && Q("scroll", t) : l != null && vu(t, r, l, a))
							} switch (n) {
							case "input":
								Ta(t), ch(t, i, !1);
								break;
							case "textarea":
								Ta(t), ph(t);
								break;
							case "option":
								i.value != null && t.setAttribute("value", "" + un(i.value));
								break;
							case "select":
								t.multiple = !!i.multiple, r = i.value, r != null ? Pi(t, !!i.multiple, r, !1) : i.defaultValue != null && Pi(t, !!i.multiple, i.defaultValue, !0);
								break;
							default:
								typeof o.onClick == "function" && (t.onclick = Ua)
						}
						bg(n, i) && (e.flags |= 4)
					}
					e.ref !== null && (e.flags |= 128)
				}
				return null;
			case 6:
				if (t && e.stateNode != null) by(t, e, t.memoizedProps, i);
				else {
					if (typeof i != "string" && e.stateNode === null) throw Error(A(166));
					n = ti(fr.current), ti(xt.current), ss(e) ? (i = e.stateNode, n = e.memoizedProps, i[hn] = e, i.nodeValue !== n && (e.flags |= 4)) : (i = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(i), i[hn] = e, e.stateNode = i)
				}
				return null;
			case 13:
				return X(ie), i = e.memoizedState, e.flags & 64 ? (e.lanes = n, e) : (i = i !== null, n = !1, t === null ? e.memoizedProps.fallback !== void 0 && ss(e) : n = t.memoizedState !== null, i && !n && e.mode & 2 && (t === null && e.memoizedProps.unstable_avoidThisFallback !== !0 || ie.current & 1 ? ve === 0 && (ve = 3) : ((ve === 0 || ve === 3) && (ve = 4), Ie === null || !(Sr & 134217727) && !(Zi & 134217727) || to(Ie, Me))), (i || n) && (e.flags |= 4), null);
			case 4:
				return Gi(), Wc(e), t === null && pg(e.stateNode.containerInfo), null;
			case 10:
				return Ac(e), null;
			case 17:
				return Be(e.type) && Wa(), null;
			case 19:
				if (X(ie), i = e.memoizedState, i === null) return null;
				if (r = (e.flags & 64) !== 0, a = i.rendering, a === null)
					if (r) wr(i, !1);
					else {
						if (ve !== 0 || t !== null && t.flags & 64)
							for (t = e.child; t !== null;) {
								if (a = as(t), a !== null) {
									for (e.flags |= 64, wr(i, !1), r = a.updateQueue, r !== null && (e.updateQueue = r, e.flags |= 4), i.lastEffect === null && (e.firstEffect = null), e.lastEffect = i.lastEffect, i = n, n = e.child; n !== null;) r = n, t = i, r.flags &= 2, r.nextEffect = null, r.firstEffect = null, r.lastEffect = null, a = r.alternate, a === null ? (r.childLanes = 0, r.lanes = t, r.child = null, r.memoizedProps = null, r.memoizedState = null, r.updateQueue = null, r.dependencies = null, r.stateNode = null) : (r.childLanes = a.childLanes, r.lanes = a.lanes, r.child = a.child, r.memoizedProps = a.memoizedProps, r.memoizedState = a.memoizedState, r.updateQueue = a.updateQueue, r.type = a.type, t = a.dependencies, r.dependencies = t === null ? null : {
										lanes: t.lanes,
										firstContext: t.firstContext
									}), n = n.sibling;
									return ne(ie, ie.current & 1 | 2), e.child
								}
								t = t.sibling
							}
						i.tail !== null && Ae() > od && (e.flags |= 64, r = !0, wr(i, !1), e.lanes = 33554432)
					}
				else {
					if (!r)
						if (t = as(a), t !== null) {
							if (e.flags |= 64, r = !0, n = t.updateQueue, n !== null && (e.updateQueue = n, e.flags |= 4), wr(i, !0), i.tail === null && i.tailMode === "hidden" && !a.alternate && !Et) return e = e.lastEffect = i.lastEffect, e !== null && (e.nextEffect = null), null
						} else 2 * Ae() - i.renderingStartTime > od && n !== 1073741824 && (e.flags |= 64, r = !0, wr(i, !1), e.lanes = 33554432);
					i.isBackwards ? (a.sibling = e.child, e.child = a) : (n = i.last, n !== null ? n.sibling = a : e.child = a, i.last = a)
				}
				return i.tail !== null ? (n = i.tail, i.rendering = n, i.tail = n.sibling, i.lastEffect = e.lastEffect, i.renderingStartTime = Ae(), n.sibling = null, e = ie.current, ne(ie, r ? e & 1 | 2 : e & 1), n) : null;
			case 23:
			case 24:
				return cd(), t !== null && t.memoizedState !== null != (e.memoizedState !== null) && i.mode !== "unstable-defer-without-hiding" && (e.flags |= 4), null
		}
		throw Error(A(156, e.tag))
	}

	function gJ(t) {
		switch (t.tag) {
			case 1:
				Be(t.type) && Wa();
				var e = t.flags;
				return e & 4096 ? (t.flags = e & -4097 | 64, t) : null;
			case 3:
				if (Gi(), X(Fe), X($e), Dc(), e = t.flags, e & 64) throw Error(A(285));
				return t.flags = e & -4097 | 64, t;
			case 5:
				return _c(t), null;
			case 13:
				return X(ie), e = t.flags, e & 4096 ? (t.flags = e & -4097 | 64, t) : null;
			case 19:
				return X(ie), null;
			case 4:
				return Gi(), null;
			case 10:
				return Ac(t), null;
			case 23:
			case 24:
				return cd(), null;
			default:
				return null
		}
	}

	function Kc(t, e) {
		try {
			var n = "",
				i = e;
			do n += G7(i), i = i.return; while (i);
			var o = n
		} catch (r) {
			o = `
Error generating stack: ` + r.message + `
` + r.stack
		}
		return {
			value: t,
			source: e,
			stack: o
		}
	}

	function Jc(t, e) {
		try {
			console.error(e.value)
		} catch (n) {
			setTimeout(function() {
				throw n
			})
		}
	}
	var yJ = typeof WeakMap == "function" ? WeakMap : Map;

	function ky(t, e, n) {
		n = kn(-1, n), n.tag = 3, n.payload = {
			element: null
		};
		var i = e.value;
		return n.callback = function() {
			gs || (gs = !0, rd = i), Jc(t, e)
		}, n
	}

	function vy(t, e, n) {
		n = kn(-1, n), n.tag = 3;
		var i = t.type.getDerivedStateFromError;
		if (typeof i == "function") {
			var o = e.value;
			n.payload = function() {
				return Jc(t, e), i(o)
			}
		}
		var r = t.stateNode;
		return r !== null && typeof r.componentDidCatch == "function" && (n.callback = function() {
			typeof i != "function" && (jt === null ? jt = new Set([this]) : jt.add(this), Jc(t, e));
			var a = e.stack;
			this.componentDidCatch(e.value, {
				componentStack: a !== null ? a : ""
			})
		}), n
	}
	var bJ = typeof WeakSet == "function" ? WeakSet : Set;

	function wy(t) {
		var e = t.ref;
		if (e !== null)
			if (typeof e == "function") try {
				e(null)
			} catch (n) {
				Tn(t, n)
			} else e.current = null
	}

	function kJ(t, e) {
		switch (e.tag) {
			case 0:
			case 11:
			case 15:
			case 22:
				return;
			case 1:
				if (e.flags & 256 && t !== null) {
					var n = t.memoizedProps,
						i = t.memoizedState;
					t = e.stateNode, e = t.getSnapshotBeforeUpdate(e.elementType === e.type ? n : pt(e.type, n), i), t.__reactInternalSnapshotBeforeUpdate = e
				}
				return;
			case 3:
				e.flags & 256 && kc(e.stateNode.containerInfo);
				return;
			case 5:
			case 6:
			case 4:
			case 17:
				return
		}
		throw Error(A(163))
	}

	function vJ(t, e, n) {
		switch (n.tag) {
			case 0:
			case 11:
			case 15:
			case 22:
				if (e = n.updateQueue, e = e !== null ? e.lastEffect : null, e !== null) {
					t = e = e.next;
					do {
						if ((t.tag & 3) === 3) {
							var i = t.create;
							t.destroy = i()
						}
						t = t.next
					} while (t !== e)
				}
				if (e = n.updateQueue, e = e !== null ? e.lastEffect : null, e !== null) {
					t = e = e.next;
					do {
						var o = t;
						i = o.next, o = o.tag, o & 4 && o & 1 && (Dy(n, t), $J(n, t)), t = i
					} while (t !== e)
				}
				return;
			case 1:
				t = n.stateNode, n.flags & 4 && (e === null ? t.componentDidMount() : (i = n.elementType === n.type ? e.memoizedProps : pt(n.type, e.memoizedProps), t.componentDidUpdate(i, e.memoizedState, t.__reactInternalSnapshotBeforeUpdate))), e = n.updateQueue, e !== null && Ig(n, e, t);
				return;
			case 3:
				if (e = n.updateQueue, e !== null) {
					if (t = null, n.child !== null) switch (n.child.tag) {
						case 5:
							t = n.child.stateNode;
							break;
						case 1:
							t = n.child.stateNode
					}
					Ig(n, e, t)
				}
				return;
			case 5:
				t = n.stateNode, e === null && n.flags & 4 && bg(n.type, n.memoizedProps) && t.focus();
				return;
			case 6:
				return;
			case 4:
				return;
			case 12:
				return;
			case 13:
				n.memoizedState === null && (n = n.alternate, n !== null && (n = n.memoizedState, n !== null && (n = n.dehydrated, n !== null && _h(n))));
				return;
			case 19:
			case 17:
			case 20:
			case 21:
			case 23:
			case 24:
				return
		}
		throw Error(A(163))
	}

	function Sy(t, e) {
		for (var n = t;;) {
			if (n.tag === 5) {
				var i = n.stateNode;
				if (e) i = i.style, typeof i.setProperty == "function" ? i.setProperty("display", "none", "important") : i.display = "none";
				else {
					i = n.stateNode;
					var o = n.memoizedProps.style;
					o = o != null && o.hasOwnProperty("display") ? o.display : null, i.style.display = gh("display", o)
				}
			} else if (n.tag === 6) n.stateNode.nodeValue = e ? "" : n.memoizedProps;
			else if ((n.tag !== 23 && n.tag !== 24 || n.memoizedState === null || n === t) && n.child !== null) {
				n.child.return = n, n = n.child;
				continue
			}
			if (n === t) break;
			for (; n.sibling === null;) {
				if (n.return === null || n.return === t) return;
				n = n.return
			}
			n.sibling.return = n.return, n = n.sibling
		}
	}

	function Cy(t, e) {
		if (Zn && typeof Zn.onCommitFiberUnmount == "function") try {
			Zn.onCommitFiberUnmount(Sc, e)
		} catch {}
		switch (e.tag) {
			case 0:
			case 11:
			case 14:
			case 15:
			case 22:
				if (t = e.updateQueue, t !== null && (t = t.lastEffect, t !== null)) {
					var n = t = t.next;
					do {
						var i = n,
							o = i.destroy;
						if (i = i.tag, o !== void 0)
							if (i & 4) Dy(e, n);
							else {
								i = e;
								try {
									o()
								} catch (r) {
									Tn(i, r)
								}
							} n = n.next
					} while (n !== t)
				}
				break;
			case 1:
				if (wy(e), t = e.stateNode, typeof t.componentWillUnmount == "function") try {
					t.props = e.memoizedProps, t.state = e.memoizedState, t.componentWillUnmount()
				} catch (r) {
					Tn(e, r)
				}
				break;
			case 5:
				wy(e);
				break;
			case 4:
				jy(t, e)
		}
	}

	function xy(t) {
		t.alternate = null, t.child = null, t.dependencies = null, t.firstEffect = null, t.lastEffect = null, t.memoizedProps = null, t.memoizedState = null, t.pendingProps = null, t.return = null, t.updateQueue = null
	}

	function Ey(t) {
		return t.tag === 5 || t.tag === 3 || t.tag === 4
	}

	function Ty(t) {
		e: {
			for (var e = t.return; e !== null;) {
				if (Ey(e)) break e;
				e = e.return
			}
			throw Error(A(160))
		}
		var n = e;
		switch (e = n.stateNode, n.tag) {
			case 5:
				var i = !1;
				break;
			case 3:
				e = e.containerInfo, i = !0;
				break;
			case 4:
				e = e.containerInfo, i = !0;
				break;
			default:
				throw Error(A(161))
		}
		n.flags & 16 && (Bo(e, ""), n.flags &= -17);e: t: for (n = t;;) {
			for (; n.sibling === null;) {
				if (n.return === null || Ey(n.return)) {
					n = null;
					break e
				}
				n = n.return
			}
			for (n.sibling.return = n.return, n = n.sibling; n.tag !== 5 && n.tag !== 6 && n.tag !== 18;) {
				if (n.flags & 2 || n.child === null || n.tag === 4) continue t;
				n.child.return = n, n = n.child
			}
			if (!(n.flags & 2)) {
				n = n.stateNode;
				break e
			}
		}
		i ? Gc(t, n, e) : Qc(t, n, e)
	}

	function Gc(t, e, n) {
		var i = t.tag,
			o = i === 5 || i === 6;
		if (o) t = o ? t.stateNode : t.stateNode.instance, e ? n.nodeType === 8 ? n.parentNode.insertBefore(t, e) : n.insertBefore(t, e) : (n.nodeType === 8 ? (e = n.parentNode, e.insertBefore(t, n)) : (e = n, e.appendChild(t)), n = n._reactRootContainer, n != null || e.onclick !== null || (e.onclick = Ua));
		else if (i !== 4 && (t = t.child, t !== null))
			for (Gc(t, e, n), t = t.sibling; t !== null;) Gc(t, e, n), t = t.sibling
	}

	function Qc(t, e, n) {
		var i = t.tag,
			o = i === 5 || i === 6;
		if (o) t = o ? t.stateNode : t.stateNode.instance, e ? n.insertBefore(t, e) : n.appendChild(t);
		else if (i !== 4 && (t = t.child, t !== null))
			for (Qc(t, e, n), t = t.sibling; t !== null;) Qc(t, e, n), t = t.sibling
	}

	function jy(t, e) {
		for (var n = e, i = !1, o, r;;) {
			if (!i) {
				i = n.return;
				e: for (;;) {
					if (i === null) throw Error(A(160));
					switch (o = i.stateNode, i.tag) {
						case 5:
							r = !1;
							break e;
						case 3:
							o = o.containerInfo, r = !0;
							break e;
						case 4:
							o = o.containerInfo, r = !0;
							break e
					}
					i = i.return
				}
				i = !0
			}
			if (n.tag === 5 || n.tag === 6) {
				e: for (var a = t, s = n, l = s;;)
					if (Cy(a, l), l.child !== null && l.tag !== 4) l.child.return = l, l = l.child;
					else {
						if (l === s) break e;
						for (; l.sibling === null;) {
							if (l.return === null || l.return === s) break e;
							l = l.return
						}
						l.sibling.return = l.return, l = l.sibling
					}r ? (a = o, s = n.stateNode, a.nodeType === 8 ? a.parentNode.removeChild(s) : a.removeChild(s)) : o.removeChild(n.stateNode)
			}
			else if (n.tag === 4) {
				if (n.child !== null) {
					o = n.stateNode.containerInfo, r = !0, n.child.return = n, n = n.child;
					continue
				}
			} else if (Cy(t, n), n.child !== null) {
				n.child.return = n, n = n.child;
				continue
			}
			if (n === e) break;
			for (; n.sibling === null;) {
				if (n.return === null || n.return === e) return;
				n = n.return, n.tag === 4 && (i = !1)
			}
			n.sibling.return = n.return, n = n.sibling
		}
	}

	function Xc(t, e) {
		switch (e.tag) {
			case 0:
			case 11:
			case 14:
			case 15:
			case 22:
				var n = e.updateQueue;
				if (n = n !== null ? n.lastEffect : null, n !== null) {
					var i = n = n.next;
					do(i.tag & 3) === 3 && (t = i.destroy, i.destroy = void 0, t !== void 0 && t()), i = i.next; while (i !== n)
				}
				return;
			case 1:
				return;
			case 5:
				if (n = e.stateNode, n != null) {
					i = e.memoizedProps;
					var o = t !== null ? t.memoizedProps : i;
					t = e.type;
					var r = e.updateQueue;
					if (e.updateQueue = null, r !== null) {
						for (n[Ha] = i, t === "input" && i.type === "radio" && i.name != null && uh(n, i), Yu(t, o), e = Yu(t, i), o = 0; o < r.length; o += 2) {
							var a = r[o],
								s = r[o + 1];
							a === "style" ? yh(n, s) : a === "dangerouslySetInnerHTML" ? hh(n, s) : a === "children" ? Bo(n, s) : vu(n, a, s, e)
						}
						switch (t) {
							case "input":
								Pu(n, i);
								break;
							case "textarea":
								mh(n, i);
								break;
							case "select":
								t = n._wrapperState.wasMultiple, n._wrapperState.wasMultiple = !!i.multiple, r = i.value, r != null ? Pi(n, !!i.multiple, r, !1) : t !== !!i.multiple && (i.defaultValue != null ? Pi(n, !!i.multiple, i.defaultValue, !0) : Pi(n, !!i.multiple, i.multiple ? [] : "", !1))
						}
					}
				}
				return;
			case 6:
				if (e.stateNode === null) throw Error(A(162));
				e.stateNode.nodeValue = e.memoizedProps;
				return;
			case 3:
				n = e.stateNode, n.hydrate && (n.hydrate = !1, _h(n.containerInfo));
				return;
			case 12:
				return;
			case 13:
				e.memoizedState !== null && (id = Ae(), Sy(e.child, !0)), $y(e);
				return;
			case 19:
				$y(e);
				return;
			case 17:
				return;
			case 23:
			case 24:
				Sy(e, e.memoizedState !== null);
				return
		}
		throw Error(A(163))
	}

	function $y(t) {
		var e = t.updateQueue;
		if (e !== null) {
			t.updateQueue = null;
			var n = t.stateNode;
			n === null && (n = t.stateNode = new bJ), e.forEach(function(i) {
				var o = MJ.bind(null, t, i);
				n.has(i) || (n.add(i), i.then(o, o))
			})
		}
	}

	function wJ(t, e) {
		return t !== null && (t = t.memoizedState, t === null || t.dehydrated !== null) ? (e = e.memoizedState, e !== null && e.dehydrated === null) : !1
	}
	var SJ = Math.ceil,
		fs = Wn.ReactCurrentDispatcher,
		Zc = Wn.ReactCurrentOwner,
		Y = 0,
		Ie = null,
		ce = null,
		Me = 0,
		oi = 0,
		ed = gn(0),
		ve = 0,
		hs = null,
		Xi = 0,
		Sr = 0,
		Zi = 0,
		td = 0,
		nd = null,
		id = 0,
		od = 1 / 0;

	function eo() {
		od = Ae() + 500
	}
	var _ = null,
		gs = !1,
		rd = null,
		jt = null,
		Sn = !1,
		Cr = null,
		xr = 90,
		ad = [],
		sd = [],
		Ft = null,
		Er = 0,
		ld = null,
		ys = -1,
		Bt = 0,
		bs = 0,
		Tr = null,
		ks = !1;

	function Je() {
		return Y & 48 ? Ae() : ys !== -1 ? ys : ys = Ae()
	}

	function Cn(t) {
		if (t = t.mode, !(t & 2)) return 1;
		if (!(t & 4)) return Wi() === 99 ? 1 : 2;
		if (Bt === 0 && (Bt = Xi), uJ.transition !== 0) {
			bs !== 0 && (bs = nd !== null ? nd.pendingLanes : 0), t = Bt;
			var e = 4186112 & ~bs;
			return e &= -e, e === 0 && (t = 4186112 & ~t, e = t & -t, e === 0 && (e = 8192)), e
		}
		return t = Wi(), Y & 4 && t === 98 ? t = za(12, Bt) : (t = mK(t), t = za(t, Bt)), t
	}

	function xn(t, e, n) {
		if (50 < Er) throw Er = 0, ld = null, Error(A(185));
		if (t = vs(t, e), t === null) return null;
		Oa(t, e, n), t === Ie && (Zi |= e, ve === 4 && to(t, Me));
		var i = Wi();
		e === 1 ? Y & 8 && !(Y & 48) ? ud(t) : (rt(t, n), Y === 0 && (eo(), Ct())) : (!(Y & 4) || i !== 98 && i !== 99 || (Ft === null ? Ft = new Set([t]) : Ft.add(t)), rt(t, n)), nd = t
	}

	function vs(t, e) {
		t.lanes |= e;
		var n = t.alternate;
		for (n !== null && (n.lanes |= e), n = t, t = t.return; t !== null;) t.childLanes |= e, n = t.alternate, n !== null && (n.childLanes |= e), n = t, t = t.return;
		return n.tag === 3 ? n.stateNode : null
	}

	function rt(t, e) {
		for (var n = t.callbackNode, i = t.suspendedLanes, o = t.pingedLanes, r = t.expirationTimes, a = t.pendingLanes; 0 < a;) {
			var s = 31 - pn(a),
				l = 1 << s,
				u = r[s];
			if (u === -1) {
				if (!(l & i) || l & o) {
					u = e, Di(l);
					var c = G;
					r[s] = 10 <= c ? u + 250 : 6 <= c ? u + 5e3 : -1
				}
			} else u <= e && (t.expiredLanes |= l);
			a &= ~l
		}
		if (i = Xo(t, t === Ie ? Me : 0), e = G, i === 0) n !== null && (n !== Tc && xc(n), t.callbackNode = null, t.callbackPriority = 0);
		else {
			if (n !== null) {
				if (t.callbackPriority === e) return;
				n !== Tc && xc(n)
			}
			e === 15 ? (n = ud.bind(null, t), Rt === null ? (Rt = [n], Ga = Cc(Ja, _g)) : Rt.push(n), n = Tc) : e === 14 ? n = ur(99, ud.bind(null, t)) : (n = pK(e), n = ur(n, Ay.bind(null, t))), t.callbackPriority = e, t.callbackNode = n
		}
	}

	function Ay(t) {
		if (ys = -1, bs = Bt = 0, Y & 48) throw Error(A(327));
		var e = t.callbackNode;
		if (En() && t.callbackNode !== e) return null;
		var n = Xo(t, t === Ie ? Me : 0);
		if (n === 0) return null;
		var i = n,
			o = Y;
		Y |= 16;
		var r = _y();
		(Ie !== t || Me !== i) && (eo(), no(t, i));
		do try {
			EJ();
			break
		} catch (s) {
			Py(t, s)
		}
		while (1);
		if ($c(), fs.current = r, Y = o, ce !== null ? i = 0 : (Ie = null, Me = 0, i = ve), Xi & Zi) no(t, 0);
		else if (i !== 0) {
			if (i === 2 && (Y |= 64, t.hydrate && (t.hydrate = !1, kc(t.containerInfo)), n = Lh(t), n !== 0 && (i = jr(t, n))), i === 1) throw e = hs, no(t, 0), to(t, n), rt(t, Ae()), e;
			switch (t.finishedWork = t.current.alternate, t.finishedLanes = n, i) {
				case 0:
				case 1:
					throw Error(A(345));
				case 2:
					ri(t);
					break;
				case 3:
					if (to(t, n), (n & 62914560) === n && (i = id + 500 - Ae(), 10 < i)) {
						if (Xo(t, 0) !== 0) break;
						if (o = t.suspendedLanes, (o & n) !== n) {
							Je(), t.pingedLanes |= t.suspendedLanes & o;
							break
						}
						t.timeoutHandle = kg(ri.bind(null, t), i);
						break
					}
					ri(t);
					break;
				case 4:
					if (to(t, n), (n & 4186112) === n) break;
					for (i = t.eventTimes, o = -1; 0 < n;) {
						var a = 31 - pn(n);
						r = 1 << a, a = i[a], a > o && (o = a), n &= ~r
					}
					if (n = o, n = Ae() - n, n = (120 > n ? 120 : 480 > n ? 480 : 1080 > n ? 1080 : 1920 > n ? 1920 : 3e3 > n ? 3e3 : 4320 > n ? 4320 : 1960 * SJ(n / 1960)) - n, 10 < n) {
						t.timeoutHandle = kg(ri.bind(null, t), n);
						break
					}
					ri(t);
					break;
				case 5:
					ri(t);
					break;
				default:
					throw Error(A(329))
			}
		}
		return rt(t, Ae()), t.callbackNode === e ? Ay.bind(null, t) : null
	}

	function to(t, e) {
		for (e &= ~td, e &= ~Zi, t.suspendedLanes |= e, t.pingedLanes &= ~e, t = t.expirationTimes; 0 < e;) {
			var n = 31 - pn(e),
				i = 1 << n;
			t[n] = -1, e &= ~i
		}
	}

	function ud(t) {
		if (Y & 48) throw Error(A(327));
		if (En(), t === Ie && t.expiredLanes & Me) {
			var e = Me,
				n = jr(t, e);
			Xi & Zi && (e = Xo(t, e), n = jr(t, e))
		} else e = Xo(t, 0), n = jr(t, e);
		if (t.tag !== 0 && n === 2 && (Y |= 64, t.hydrate && (t.hydrate = !1, kc(t.containerInfo)), e = Lh(t), e !== 0 && (n = jr(t, e))), n === 1) throw n = hs, no(t, 0), to(t, e), rt(t, Ae()), n;
		return t.finishedWork = t.current.alternate, t.finishedLanes = e, ri(t), rt(t, Ae()), null
	}

	function CJ() {
		if (Ft !== null) {
			var t = Ft;
			Ft = null, t.forEach(function(e) {
				e.expiredLanes |= 24 & e.pendingLanes, rt(e, Ae())
			})
		}
		Ct()
	}

	function Ny(t, e) {
		var n = Y;
		Y |= 1;
		try {
			return t(e)
		} finally {
			Y = n, Y === 0 && (eo(), Ct())
		}
	}

	function My(t, e) {
		var n = Y;
		Y &= -2, Y |= 8;
		try {
			return t(e)
		} finally {
			Y = n, Y === 0 && (eo(), Ct())
		}
	}

	function ws(t, e) {
		ne(ed, oi), oi |= e, Xi |= e
	}

	function cd() {
		oi = ed.current, X(ed)
	}

	function no(t, e) {
		t.finishedWork = null, t.finishedLanes = 0;
		var n = t.timeoutHandle;
		if (n !== -1 && (t.timeoutHandle = -1, iJ(n)), ce !== null)
			for (n = ce.return; n !== null;) {
				var i = n;
				switch (i.tag) {
					case 1:
						i = i.type.childContextTypes, i != null && Wa();
						break;
					case 3:
						Gi(), X(Fe), X($e), Dc();
						break;
					case 5:
						_c(i);
						break;
					case 4:
						Gi();
						break;
					case 13:
						X(ie);
						break;
					case 19:
						X(ie);
						break;
					case 10:
						Ac(i);
						break;
					case 23:
					case 24:
						cd()
				}
				n = n.return
			}
		Ie = t, ce = jn(t.current, null), Me = oi = Xi = e, ve = 0, hs = null, td = Zi = Sr = 0
	}

	function Py(t, e) {
		do {
			var n = ce;
			try {
				if ($c(), hr.current = ms, ls) {
					for (var i = oe.memoizedState; i !== null;) {
						var o = i.queue;
						o !== null && (o.pending = null), i = i.next
					}
					ls = !1
				}
				if (gr = 0, ke = Ne = oe = null, yr = !1, Zc.current = null, n === null || n.return === null) {
					ve = 1, hs = e, ce = null;
					break
				}
				e: {
					var r = t,
						a = n.return,
						s = n,
						l = e;
					if (e = Me, s.flags |= 2048, s.firstEffect = s.lastEffect = null, l !== null && typeof l == "object" && typeof l.then == "function") {
						var u = l;
						if (!(s.mode & 2)) {
							var c = s.alternate;
							c ? (s.updateQueue = c.updateQueue, s.memoizedState = c.memoizedState, s.lanes = c.lanes) : (s.updateQueue = null, s.memoizedState = null)
						}
						var m = (ie.current & 1) !== 0,
							d = a;
						do {
							var p;
							if (p = d.tag === 13) {
								var f = d.memoizedState;
								if (f !== null) p = f.dehydrated !== null;
								else {
									var y = d.memoizedProps;
									p = y.fallback === void 0 ? !1 : y.unstable_avoidThisFallback !== !0 ? !0 : !m
								}
							}
							if (p) {
								var h = d.updateQueue;
								if (h === null) {
									var g = new Set;
									g.add(u), d.updateQueue = g
								} else h.add(u);
								if (!(d.mode & 2)) {
									if (d.flags |= 64, s.flags |= 16384, s.flags &= -2981, s.tag === 1)
										if (s.alternate === null) s.tag = 17;
										else {
											var b = kn(-1, 1);
											b.tag = 2, vn(s, b)
										} s.lanes |= 1;
									break e
								}
								l = void 0, s = e;
								var v = r.pingCache;
								if (v === null ? (v = r.pingCache = new yJ, l = new Set, v.set(u, l)) : (l = v.get(u), l === void 0 && (l = new Set, v.set(u, l))), !l.has(s)) {
									l.add(s);
									var w = NJ.bind(null, r, u, s);
									u.then(w, w)
								}
								d.flags |= 4096, d.lanes = e;
								break e
							}
							d = d.return
						} while (d !== null);
						l = Error((Mi(s.type) || "A React component") + ` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`)
					}
					ve !== 5 && (ve = 2),
					l = Kc(l, s),
					d = a;do {
						switch (d.tag) {
							case 3:
								r = l, d.flags |= 4096, e &= -e, d.lanes |= e;
								var x = ky(d, r, e);
								Dg(d, x);
								break e;
							case 1:
								r = l;
								var S = d.type,
									E = d.stateNode;
								if (!(d.flags & 64) && (typeof S.getDerivedStateFromError == "function" || E !== null && typeof E.componentDidCatch == "function" && (jt === null || !jt.has(E)))) {
									d.flags |= 4096, e &= -e, d.lanes |= e;
									var T = vy(d, r, e);
									Dg(d, T);
									break e
								}
						}
						d = d.return
					} while (d !== null)
				}
				Oy(n)
			} catch (M) {
				e = M, ce === n && n !== null && (ce = n = n.return);
				continue
			}
			break
		} while (1)
	}

	function _y() {
		var t = fs.current;
		return fs.current = ms, t === null ? ms : t
	}

	function jr(t, e) {
		var n = Y;
		Y |= 16;
		var i = _y();
		Ie === t && Me === e || no(t, e);
		do try {
			xJ();
			break
		} catch (o) {
			Py(t, o)
		}
		while (1);
		if ($c(), Y = n, fs.current = i, ce !== null) throw Error(A(261));
		return Ie = null, Me = 0, ve
	}

	function xJ() {
		for (; ce !== null;) zy(ce)
	}

	function EJ() {
		for (; ce !== null && !aJ();) zy(ce)
	}

	function zy(t) {
		var e = Ry(t.alternate, t, oi);
		t.memoizedProps = t.pendingProps, e === null ? Oy(t) : ce = e, Zc.current = null
	}

	function Oy(t) {
		var e = t;
		do {
			var n = e.alternate;
			if (t = e.return, e.flags & 2048) {
				if (n = gJ(e), n !== null) {
					n.flags &= 2047, ce = n;
					return
				}
				t !== null && (t.firstEffect = t.lastEffect = null, t.flags |= 2048)
			} else {
				if (n = hJ(n, e, oi), n !== null) {
					ce = n;
					return
				}
				if (n = e, n.tag !== 24 && n.tag !== 23 || n.memoizedState === null || oi & 1073741824 || !(n.mode & 4)) {
					for (var i = 0, o = n.child; o !== null;) i |= o.lanes | o.childLanes, o = o.sibling;
					n.childLanes = i
				}
				t !== null && !(t.flags & 2048) && (t.firstEffect === null && (t.firstEffect = e.firstEffect), e.lastEffect !== null && (t.lastEffect !== null && (t.lastEffect.nextEffect = e.firstEffect), t.lastEffect = e.lastEffect), 1 < e.flags && (t.lastEffect !== null ? t.lastEffect.nextEffect = e : t.firstEffect = e, t.lastEffect = e))
			}
			if (e = e.sibling, e !== null) {
				ce = e;
				return
			}
			ce = e = t
		} while (e !== null);
		ve === 0 && (ve = 5)
	}

	function ri(t) {
		var e = Wi();
		return ei(99, TJ.bind(null, t, e)), null
	}

	function TJ(t, e) {
		do En(); while (Cr !== null);
		if (Y & 48) throw Error(A(327));
		var n = t.finishedWork;
		if (n === null) return null;
		if (t.finishedWork = null, t.finishedLanes = 0, n === t.current) throw Error(A(177));
		t.callbackNode = null;
		var i = n.lanes | n.childLanes,
			o = i,
			r = t.pendingLanes & ~o;
		t.pendingLanes = o, t.suspendedLanes = 0, t.pingedLanes = 0, t.expiredLanes &= o, t.mutableReadLanes &= o, t.entangledLanes &= o, o = t.entanglements;
		for (var a = t.eventTimes, s = t.expirationTimes; 0 < r;) {
			var l = 31 - pn(r),
				u = 1 << l;
			o[l] = 0, a[l] = -1, s[l] = -1, r &= ~u
		}
		if (Ft !== null && !(i & 24) && Ft.has(t) && Ft.delete(t), t === Ie && (ce = Ie = null, Me = 0), 1 < n.flags ? n.lastEffect !== null ? (n.lastEffect.nextEffect = n, i = n.firstEffect) : i = n : i = n.firstEffect, i !== null) {
			if (o = Y, Y |= 32, Zc.current = null, gc = Da, a = ag(), mc(a)) {
				if ("selectionStart" in a) s = {
					start: a.selectionStart,
					end: a.selectionEnd
				};
				else e: if (s = (s = a.ownerDocument) && s.defaultView || window, (u = s.getSelection && s.getSelection()) && u.rangeCount !== 0) {
					s = u.anchorNode, r = u.anchorOffset, l = u.focusNode, u = u.focusOffset;
					try {
						s.nodeType, l.nodeType
					} catch {
						s = null;
						break e
					}
					var c = 0,
						m = -1,
						d = -1,
						p = 0,
						f = 0,
						y = a,
						h = null;
					t: for (;;) {
						for (var g; y !== s || r !== 0 && y.nodeType !== 3 || (m = c + r), y !== l || u !== 0 && y.nodeType !== 3 || (d = c + u), y.nodeType === 3 && (c += y.nodeValue.length), (g = y.firstChild) !== null;) h = y, y = g;
						for (;;) {
							if (y === a) break t;
							if (h === s && ++p === r && (m = c), h === l && ++f === u && (d = c), (g = y.nextSibling) !== null) break;
							y = h, h = y.parentNode
						}
						y = g
					}
					s = m === -1 || d === -1 ? null : {
						start: m,
						end: d
					}
				} else s = null;
				s = s || {
					start: 0,
					end: 0
				}
			} else s = null;
			yc = {
				focusedElem: a,
				selectionRange: s
			}, Da = !1, Tr = null, ks = !1, _ = i;
			do try {
				jJ()
			} catch (M) {
				if (_ === null) throw Error(A(330));
				Tn(_, M), _ = _.nextEffect
			}
			while (_ !== null);
			Tr = null, _ = i;
			do try {
				for (a = t; _ !== null;) {
					var b = _.flags;
					if (b & 16 && Bo(_.stateNode, ""), b & 128) {
						var v = _.alternate;
						if (v !== null) {
							var w = v.ref;
							w !== null && (typeof w == "function" ? w(null) : w.current = null)
						}
					}
					switch (b & 1038) {
						case 2:
							Ty(_), _.flags &= -3;
							break;
						case 6:
							Ty(_), _.flags &= -3, Xc(_.alternate, _);
							break;
						case 1024:
							_.flags &= -1025;
							break;
						case 1028:
							_.flags &= -1025, Xc(_.alternate, _);
							break;
						case 4:
							Xc(_.alternate, _);
							break;
						case 8:
							s = _, jy(a, s);
							var x = s.alternate;
							xy(s), x !== null && xy(x)
					}
					_ = _.nextEffect
				}
			} catch (M) {
				if (_ === null) throw Error(A(330));
				Tn(_, M), _ = _.nextEffect
			}
			while (_ !== null);
			if (w = yc, v = ag(), b = w.focusedElem, a = w.selectionRange, v !== b && b && b.ownerDocument && rg(b.ownerDocument.documentElement, b)) {
				for (a !== null && mc(b) && (v = a.start, w = a.end, w === void 0 && (w = v), "selectionStart" in b ? (b.selectionStart = v, b.selectionEnd = Math.min(w, b.value.length)) : (w = (v = b.ownerDocument || document) && v.defaultView || window, w.getSelection && (w = w.getSelection(), s = b.textContent.length, x = Math.min(a.start, s), a = a.end === void 0 ? x : Math.min(a.end, s), !w.extend && x > a && (s = a, a = x, x = s), s = og(b, x), r = og(b, a), s && r && (w.rangeCount !== 1 || w.anchorNode !== s.node || w.anchorOffset !== s.offset || w.focusNode !== r.node || w.focusOffset !== r.offset) && (v = v.createRange(), v.setStart(s.node, s.offset), w.removeAllRanges(), x > a ? (w.addRange(v), w.extend(r.node, r.offset)) : (v.setEnd(r.node, r.offset), w.addRange(v)))))), v = [], w = b; w = w.parentNode;) w.nodeType === 1 && v.push({
					element: w,
					left: w.scrollLeft,
					top: w.scrollTop
				});
				for (typeof b.focus == "function" && b.focus(), b = 0; b < v.length; b++) w = v[b], w.element.scrollLeft = w.left, w.element.scrollTop = w.top
			}
			Da = !!gc, yc = gc = null, t.current = n, _ = i;
			do try {
				for (b = t; _ !== null;) {
					var S = _.flags;
					if (S & 36 && vJ(b, _.alternate, _), S & 128) {
						v = void 0;
						var E = _.ref;
						if (E !== null) {
							var T = _.stateNode;
							switch (_.tag) {
								case 5:
									v = T;
									break;
								default:
									v = T
							}
							typeof E == "function" ? E(v) : E.current = v
						}
					}
					_ = _.nextEffect
				}
			} catch (M) {
				if (_ === null) throw Error(A(330));
				Tn(_, M), _ = _.nextEffect
			}
			while (_ !== null);
			_ = null, lJ(), Y = o
		} else t.current = n;
		if (Sn) Sn = !1, Cr = t, xr = e;
		else
			for (_ = i; _ !== null;) e = _.nextEffect, _.nextEffect = null, _.flags & 8 && (S = _, S.sibling = null, S.stateNode = null), _ = e;
		if (i = t.pendingLanes, i === 0 && (jt = null), i === 1 ? t === ld ? Er++ : (Er = 0, ld = t) : Er = 0, n = n.stateNode, Zn && typeof Zn.onCommitFiberRoot == "function") try {
			Zn.onCommitFiberRoot(Sc, n, void 0, (n.current.flags & 64) === 64)
		} catch {}
		if (rt(t, Ae()), gs) throw gs = !1, t = rd, rd = null, t;
		return Y & 8 || Ct(), null
	}

	function jJ() {
		for (; _ !== null;) {
			var t = _.alternate;
			ks || Tr === null || (_.flags & 8 ? Th(_, Tr) && (ks = !0) : _.tag === 13 && wJ(t, _) && Th(_, Tr) && (ks = !0));
			var e = _.flags;
			e & 256 && kJ(t, _), !(e & 512) || Sn || (Sn = !0, ur(97, function() {
				return En(), null
			})), _ = _.nextEffect
		}
	}

	function En() {
		if (xr !== 90) {
			var t = 97 < xr ? 97 : xr;
			return xr = 90, ei(t, AJ)
		}
		return !1
	}

	function $J(t, e) {
		ad.push(e, t), Sn || (Sn = !0, ur(97, function() {
			return En(), null
		}))
	}

	function Dy(t, e) {
		sd.push(e, t), Sn || (Sn = !0, ur(97, function() {
			return En(), null
		}))
	}

	function AJ() {
		if (Cr === null) return !1;
		var t = Cr;
		if (Cr = null, Y & 48) throw Error(A(331));
		var e = Y;
		Y |= 32;
		var n = sd;
		sd = [];
		for (var i = 0; i < n.length; i += 2) {
			var o = n[i],
				r = n[i + 1],
				a = o.destroy;
			if (o.destroy = void 0, typeof a == "function") try {
				a()
			} catch (l) {
				if (r === null) throw Error(A(330));
				Tn(r, l)
			}
		}
		for (n = ad, ad = [], i = 0; i < n.length; i += 2) {
			o = n[i], r = n[i + 1];
			try {
				var s = o.create;
				o.destroy = s()
			} catch (l) {
				if (r === null) throw Error(A(330));
				Tn(r, l)
			}
		}
		for (s = t.current.firstEffect; s !== null;) t = s.nextEffect, s.nextEffect = null, s.flags & 8 && (s.sibling = null, s.stateNode = null), s = t;
		return Y = e, Ct(), !0
	}

	function Iy(t, e, n) {
		e = Kc(n, e), e = ky(t, e, 1), vn(t, e), e = Je(), t = vs(t, 1), t !== null && (Oa(t, 1, e), rt(t, e))
	}

	function Tn(t, e) {
		if (t.tag === 3) Iy(t, t, e);
		else
			for (var n = t.return; n !== null;) {
				if (n.tag === 3) {
					Iy(n, t, e);
					break
				} else if (n.tag === 1) {
					var i = n.stateNode;
					if (typeof n.type.getDerivedStateFromError == "function" || typeof i.componentDidCatch == "function" && (jt === null || !jt.has(i))) {
						t = Kc(e, t);
						var o = vy(n, t, 1);
						if (vn(n, o), o = Je(), n = vs(n, 1), n !== null) Oa(n, 1, o), rt(n, o);
						else if (typeof i.componentDidCatch == "function" && (jt === null || !jt.has(i))) try {
							i.componentDidCatch(e, t)
						} catch {}
						break
					}
				}
				n = n.return
			}
	}

	function NJ(t, e, n) {
		var i = t.pingCache;
		i !== null && i.delete(e), e = Je(), t.pingedLanes |= t.suspendedLanes & n, Ie === t && (Me & n) === n && (ve === 4 || ve === 3 && (Me & 62914560) === Me && 500 > Ae() - id ? no(t, 0) : td |= n), rt(t, e)
	}

	function MJ(t, e) {
		var n = t.stateNode;
		n !== null && n.delete(e), e = 0, e === 0 && (e = t.mode, e & 2 ? e & 4 ? (Bt === 0 && (Bt = Xi), e = Ii(62914560 & ~Bt), e === 0 && (e = 4194304)) : e = Wi() === 99 ? 1 : 2 : e = 1), n = Je(), t = vs(t, e), t !== null && (Oa(t, e, n), rt(t, n))
	}
	var Ry;
	Ry = function(t, e, n) {
		var i = e.lanes;
		if (t !== null)
			if (t.memoizedProps !== e.pendingProps || Fe.current) ft = !0;
			else if (n & i) ft = !!(t.flags & 16384);
		else {
			switch (ft = !1, e.tag) {
				case 3:
					uy(e), Oc();
					break;
				case 5:
					Vg(e);
					break;
				case 1:
					Be(e.type) && Ka(e);
					break;
				case 4:
					Pc(e, e.stateNode.containerInfo);
					break;
				case 10:
					i = e.memoizedProps.value;
					var o = e.type._context;
					ne(Qa, o._currentValue), o._currentValue = i;
					break;
				case 13:
					if (e.memoizedState !== null) return n & e.child.childLanes ? cy(t, e, n) : (ne(ie, ie.current & 1), e = Lt(t, e, n), e !== null ? e.sibling : null);
					ne(ie, ie.current & 1);
					break;
				case 19:
					if (i = (n & e.childLanes) !== 0, t.flags & 64) {
						if (i) return hy(t, e, n);
						e.flags |= 64
					}
					if (o = e.memoizedState, o !== null && (o.rendering = null, o.tail = null, o.lastEffect = null), ne(ie, ie.current), i) break;
					return null;
				case 23:
				case 24:
					return e.lanes = 0, Uc(t, e, n)
			}
			return Lt(t, e, n)
		} else ft = !1;
		switch (e.lanes = 0, e.tag) {
			case 2:
				if (i = e.type, t !== null && (t.alternate = null, e.alternate = null, e.flags |= 2), t = e.pendingProps, o = qi(e, $e.current), Ji(e, n), o = Rc(null, e, i, t, o, n), e.flags |= 1, typeof o == "object" && o !== null && typeof o.render == "function" && o.$$typeof === void 0) {
					if (e.tag = 1, e.memoizedState = null, e.updateQueue = null, Be(i)) {
						var r = !0;
						Ka(e)
					} else r = !1;
					e.memoizedState = o.state !== null && o.state !== void 0 ? o.state : null, Nc(e);
					var a = i.getDerivedStateFromProps;
					typeof a == "function" && es(e, i, a, t), o.updater = ts, e.stateNode = o, o._reactInternals = e, Mc(e, i, t, n), e = Hc(null, e, i, !0, r, n)
				} else e.tag = 0, Ve(null, e, o, n), e = e.child;
				return e;
			case 16:
				o = e.elementType;
				e: {
					switch (t !== null && (t.alternate = null, e.alternate = null, e.flags |= 2), t = e.pendingProps, r = o._init, o = r(o._payload), e.type = o, r = e.tag = _J(o), t = pt(o, t), r) {
						case 0:
							e = Vc(null, e, o, t, n);
							break e;
						case 1:
							e = ly(null, e, o, t, n);
							break e;
						case 11:
							e = oy(null, e, o, t, n);
							break e;
						case 14:
							e = ry(null, e, o, pt(o.type, t), i, n);
							break e
					}
					throw Error(A(306, o, ""))
				}
				return e;
			case 0:
				return i = e.type, o = e.pendingProps, o = e.elementType === i ? o : pt(i, o), Vc(t, e, i, o, n);
			case 1:
				return i = e.type, o = e.pendingProps, o = e.elementType === i ? o : pt(i, o), ly(t, e, i, o, n);
			case 3:
				if (uy(e), i = e.updateQueue, t === null || i === null) throw Error(A(282));
				if (i = e.pendingProps, o = e.memoizedState, o = o !== null ? o.element : null, Og(t, e), cr(e, i, null, n), i = e.memoizedState.element, i === o) Oc(), e = Lt(t, e, n);
				else {
					if (o = e.stateNode, (r = o.hydrate) && (wn = Bi(e.stateNode.containerInfo.firstChild), Yt = e, r = Et = !0), r) {
						if (t = o.mutableSourceEagerHydrationData, t != null)
							for (o = 0; o < t.length; o += 2) r = t[o], r._workInProgressVersionPrimary = t[o + 1], Qi.push(r);
						for (n = Ug(e, null, i, n), e.child = n; n;) n.flags = n.flags & -3 | 1024, n = n.sibling
					} else Ve(t, e, i, n), Oc();
					e = e.child
				}
				return e;
			case 5:
				return Vg(e), t === null && zc(e), i = e.type, o = e.pendingProps, r = t !== null ? t.memoizedProps : null, a = o.children, bc(i, o) ? a = null : r !== null && bc(i, r) && (e.flags |= 16), sy(t, e), Ve(t, e, a, n), e.child;
			case 6:
				return t === null && zc(e), null;
			case 13:
				return cy(t, e, n);
			case 4:
				return Pc(e, e.stateNode.containerInfo), i = e.pendingProps, t === null ? e.child = rs(e, null, i, n) : Ve(t, e, i, n), e.child;
			case 11:
				return i = e.type, o = e.pendingProps, o = e.elementType === i ? o : pt(i, o), oy(t, e, i, o, n);
			case 7:
				return Ve(t, e, e.pendingProps, n), e.child;
			case 8:
				return Ve(t, e, e.pendingProps.children, n), e.child;
			case 12:
				return Ve(t, e, e.pendingProps.children, n), e.child;
			case 10:
				e: {
					i = e.type._context,
					o = e.pendingProps,
					a = e.memoizedProps,
					r = o.value;
					var s = e.type._context;
					if (ne(Qa, s._currentValue), s._currentValue = r, a !== null)
						if (s = a.value, r = nt(s, r) ? 0 : (typeof i._calculateChangedBits == "function" ? i._calculateChangedBits(s, r) : 1073741823) | 0, r === 0) {
							if (a.children === o.children && !Fe.current) {
								e = Lt(t, e, n);
								break e
							}
						} else
							for (s = e.child, s !== null && (s.return = e); s !== null;) {
								var l = s.dependencies;
								if (l !== null) {
									a = s.child;
									for (var u = l.firstContext; u !== null;) {
										if (u.context === i && u.observedBits & r) {
											s.tag === 1 && (u = kn(-1, n & -n), u.tag = 2, vn(s, u)), s.lanes |= n, u = s.alternate, u !== null && (u.lanes |= n), zg(s.return, n), l.lanes |= n;
											break
										}
										u = u.next
									}
								} else a = s.tag === 10 && s.type === e.type ? null : s.child;
								if (a !== null) a.return = s;
								else
									for (a = s; a !== null;) {
										if (a === e) {
											a = null;
											break
										}
										if (s = a.sibling, s !== null) {
											s.return = a.return, a = s;
											break
										}
										a = a.return
									}
								s = a
							}
					Ve(t, e, o.children, n),
					e = e.child
				}
				return e;
			case 9:
				return o = e.type, r = e.pendingProps, i = r.children, Ji(e, n), o = it(o, r.unstable_observedBits), i = i(o), e.flags |= 1, Ve(t, e, i, n), e.child;
			case 14:
				return o = e.type, r = pt(o, e.pendingProps), r = pt(o.type, r), ry(t, e, o, r, i, n);
			case 15:
				return ay(t, e, e.type, e.pendingProps, i, n);
			case 17:
				return i = e.type, o = e.pendingProps, o = e.elementType === i ? o : pt(i, o), t !== null && (t.alternate = null, e.alternate = null, e.flags |= 2), e.tag = 1, Be(i) ? (t = !0, Ka(e)) : t = !1, Ji(e, n), Lg(e, i, o), Mc(e, i, o, n), Hc(null, e, i, !0, t, n);
			case 19:
				return hy(t, e, n);
			case 23:
				return Uc(t, e, n);
			case 24:
				return Uc(t, e, n)
		}
		throw Error(A(156, e.tag))
	};

	function PJ(t, e, n, i) {
		this.tag = t, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = e, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = i, this.flags = 0, this.lastEffect = this.firstEffect = this.nextEffect = null, this.childLanes = this.lanes = 0, this.alternate = null
	}

	function at(t, e, n, i) {
		return new PJ(t, e, n, i)
	}

	function dd(t) {
		return t = t.prototype, !(!t || !t.isReactComponent)
	}

	function _J(t) {
		if (typeof t == "function") return dd(t) ? 1 : 0;
		if (t != null) {
			if (t = t.$$typeof, t === Sa) return 11;
			if (t === xa) return 14
		}
		return 2
	}

	function jn(t, e) {
		var n = t.alternate;
		return n === null ? (n = at(t.tag, e, t.key, t.mode), n.elementType = t.elementType, n.type = t.type, n.stateNode = t.stateNode, n.alternate = t, t.alternate = n) : (n.pendingProps = e, n.type = t.type, n.flags = 0, n.nextEffect = null, n.firstEffect = null, n.lastEffect = null), n.childLanes = t.childLanes, n.lanes = t.lanes, n.child = t.child, n.memoizedProps = t.memoizedProps, n.memoizedState = t.memoizedState, n.updateQueue = t.updateQueue, e = t.dependencies, n.dependencies = e === null ? null : {
			lanes: e.lanes,
			firstContext: e.firstContext
		}, n.sibling = t.sibling, n.index = t.index, n.ref = t.ref, n
	}

	function Ss(t, e, n, i, o, r) {
		var a = 2;
		if (i = t, typeof t == "function") dd(t) && (a = 1);
		else if (typeof t == "string") a = 5;
		else e: switch (t) {
			case ln:
				return io(n.children, o, r, e);
			case oh:
				a = 8, o |= 16;
				break;
			case wu:
				a = 8, o |= 1;
				break;
			case Ro:
				return t = at(12, n, e, o | 8), t.elementType = Ro, t.type = Ro, t.lanes = r, t;
			case Yo:
				return t = at(13, n, e, o), t.type = Yo, t.elementType = Yo, t.lanes = r, t;
			case Ca:
				return t = at(19, n, e, o), t.elementType = Ca, t.lanes = r, t;
			case ju:
				return md(n, o, r, e);
			case $u:
				return t = at(24, n, e, o), t.elementType = $u, t.lanes = r, t;
			default:
				if (typeof t == "object" && t !== null) switch (t.$$typeof) {
					case Su:
						a = 10;
						break e;
					case Cu:
						a = 9;
						break e;
					case Sa:
						a = 11;
						break e;
					case xa:
						a = 14;
						break e;
					case xu:
						a = 16, i = null;
						break e;
					case Eu:
						a = 22;
						break e
				}
				throw Error(A(130, t == null ? t : typeof t, ""))
		}
		return e = at(a, n, e, o), e.elementType = t, e.type = i, e.lanes = r, e
	}

	function io(t, e, n, i) {
		return t = at(7, t, i, e), t.lanes = n, t
	}

	function md(t, e, n, i) {
		return t = at(23, t, i, e), t.elementType = ju, t.lanes = n, t
	}

	function pd(t, e, n) {
		return t = at(6, t, null, e), t.lanes = n, t
	}

	function fd(t, e, n) {
		return e = at(4, t.children !== null ? t.children : [], t.key, e), e.lanes = n, e.stateNode = {
			containerInfo: t.containerInfo,
			pendingChildren: null,
			implementation: t.implementation
		}, e
	}

	function zJ(t, e, n) {
		this.tag = e, this.containerInfo = t, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.pendingContext = this.context = null, this.hydrate = n, this.callbackNode = null, this.callbackPriority = 0, this.eventTimes = ec(0), this.expirationTimes = ec(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = ec(0), this.mutableSourceEagerHydrationData = null
	}

	function OJ(t, e, n) {
		var i = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
		return {
			$$typeof: Kn,
			key: i == null ? null : "" + i,
			children: t,
			containerInfo: e,
			implementation: n
		}
	}

	function Cs(t, e, n, i) {
		var o = e.current,
			r = Je(),
			a = Cn(o);
		e: if (n) {
			n = n._reactInternals;
			t: {
				if (Gn(n) !== n || n.tag !== 1) throw Error(A(170));
				var s = n;do {
					switch (s.tag) {
						case 3:
							s = s.stateNode.context;
							break t;
						case 1:
							if (Be(s.type)) {
								s = s.stateNode.__reactInternalMemoizedMergedChildContext;
								break t
							}
					}
					s = s.return
				} while (s !== null);
				throw Error(A(171))
			}
			if (n.tag === 1) {
				var l = n.type;
				if (Be(l)) {
					n = xg(n, l, s);
					break e
				}
			}
			n = s
		} else n = yn;
		return e.context === null ? e.context = n : e.pendingContext = n, e = kn(r, a), e.payload = {
			element: t
		}, i = i === void 0 ? null : i, i !== null && (e.callback = i), vn(o, e), xn(o, a, r), a
	}

	function hd(t) {
		if (t = t.current, !t.child) return null;
		switch (t.child.tag) {
			case 5:
				return t.child.stateNode;
			default:
				return t.child.stateNode
		}
	}

	function Yy(t, e) {
		if (t = t.memoizedState, t !== null && t.dehydrated !== null) {
			var n = t.retryLane;
			t.retryLane = n !== 0 && n < e ? n : e
		}
	}

	function gd(t, e) {
		Yy(t, e), (t = t.alternate) && Yy(t, e)
	}

	function DJ() {
		return null
	}

	function yd(t, e, n) {
		var i = n != null && n.hydrationOptions != null && n.hydrationOptions.mutableSources || null;
		if (n = new zJ(t, e, n != null && n.hydrate === !0), e = at(3, null, null, e === 2 ? 7 : e === 1 ? 3 : 0), n.current = e, e.stateNode = n, Nc(e), t[Ui] = n.current, pg(t.nodeType === 8 ? t.parentNode : t), i)
			for (t = 0; t < i.length; t++) {
				e = i[t];
				var o = e._getVersion;
				o = o(e._source), n.mutableSourceEagerHydrationData == null ? n.mutableSourceEagerHydrationData = [e, o] : n.mutableSourceEagerHydrationData.push(e, o)
			}
		this._internalRoot = n
	}
	yd.prototype.render = function(t) {
		Cs(t, this._internalRoot, null, null)
	}, yd.prototype.unmount = function() {
		var t = this._internalRoot,
			e = t.containerInfo;
		Cs(null, t, null, function() {
			e[Ui] = null
		})
	};

	function $r(t) {
		return !(!t || t.nodeType !== 1 && t.nodeType !== 9 && t.nodeType !== 11 && (t.nodeType !== 8 || t.nodeValue !== " react-mount-point-unstable "))
	}

	function IJ(t, e) {
		if (e || (e = t ? t.nodeType === 9 ? t.documentElement : t.firstChild : null, e = !(!e || e.nodeType !== 1 || !e.hasAttribute("data-reactroot"))), !e)
			for (var n; n = t.lastChild;) t.removeChild(n);
		return new yd(t, 0, e ? {
			hydrate: !0
		} : void 0)
	}

	function xs(t, e, n, i, o) {
		var r = n._reactRootContainer;
		if (r) {
			var a = r._internalRoot;
			if (typeof o == "function") {
				var s = o;
				o = function() {
					var u = hd(a);
					s.call(u)
				}
			}
			Cs(e, a, t, o)
		} else {
			if (r = n._reactRootContainer = IJ(n, i), a = r._internalRoot, typeof o == "function") {
				var l = o;
				o = function() {
					var u = hd(a);
					l.call(u)
				}
			}
			My(function() {
				Cs(e, a, t, o)
			})
		}
		return hd(a)
	}
	jh = function(t) {
		if (t.tag === 13) {
			var e = Je();
			xn(t, 4, e), gd(t, 4)
		}
	}, Ku = function(t) {
		if (t.tag === 13) {
			var e = Je();
			xn(t, 67108864, e), gd(t, 67108864)
		}
	}, $h = function(t) {
		if (t.tag === 13) {
			var e = Je(),
				n = Cn(t);
			xn(t, n, e), gd(t, n)
		}
	}, Ah = function(t, e) {
		return e()
	}, Fu = function(t, e, n) {
		switch (e) {
			case "input":
				if (Pu(t, n), e = n.name, n.type === "radio" && e != null) {
					for (n = t; n.parentNode;) n = n.parentNode;
					for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + e) + '][type="radio"]'), e = 0; e < n.length; e++) {
						var i = n[e];
						if (i !== t && i.form === t.form) {
							var o = qa(i);
							if (!o) throw Error(A(90));
							sh(i), Pu(i, o)
						}
					}
				}
				break;
			case "textarea":
				mh(t, n);
				break;
			case "select":
				e = n.value, e != null && Pi(t, !!n.multiple, e, !1)
		}
	}, Bu = Ny, wh = function(t, e, n, i, o) {
		var r = Y;
		Y |= 4;
		try {
			return ei(98, t.bind(null, e, n, i, o))
		} finally {
			Y = r, Y === 0 && (eo(), Ct())
		}
	}, Uu = function() {
		!(Y & 49) && (CJ(), En())
	}, Sh = function(t, e) {
		var n = Y;
		Y |= 2;
		try {
			return t(e)
		} finally {
			Y = n, Y === 0 && (eo(), Ct())
		}
	};

	function Ly(t, e) {
		var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
		if (!$r(e)) throw Error(A(200));
		return OJ(t, e, null, n)
	}
	var RJ = {
			Events: [lr, Vi, qa, kh, vh, En, {
				current: !1
			}]
		},
		Ar = {
			findFiberByHostInstance: Qn,
			bundleType: 0,
			version: "17.0.2",
			rendererPackageName: "react-dom"
		},
		YJ = {
			bundleType: Ar.bundleType,
			version: Ar.version,
			rendererPackageName: Ar.rendererPackageName,
			rendererConfig: Ar.rendererConfig,
			overrideHookState: null,
			overrideHookStateDeletePath: null,
			overrideHookStateRenamePath: null,
			overrideProps: null,
			overridePropsDeletePath: null,
			overridePropsRenamePath: null,
			setSuspenseHandler: null,
			scheduleUpdate: null,
			currentDispatcherRef: Wn.ReactCurrentDispatcher,
			findHostInstanceByFiber: function(t) {
				return t = Eh(t), t === null ? null : t.stateNode
			},
			findFiberByHostInstance: Ar.findFiberByHostInstance || DJ,
			findHostInstancesForRefresh: null,
			scheduleRefresh: null,
			scheduleRoot: null,
			setRefreshHandler: null,
			getCurrentFiber: null
		};
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
		var Es = __REACT_DEVTOOLS_GLOBAL_HOOK__;
		if (!Es.isDisabled && Es.supportsFiber) try {
			Sc = Es.inject(YJ), Zn = Es
		} catch {}
	}
	tt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = RJ, tt.createPortal = Ly, tt.findDOMNode = function(t) {
		if (t == null) return null;
		if (t.nodeType === 1) return t;
		var e = t._reactInternals;
		if (e === void 0) throw typeof t.render == "function" ? Error(A(188)) : Error(A(268, Object.keys(t)));
		return t = Eh(e), t = t === null ? null : t.stateNode, t
	}, tt.flushSync = function(t, e) {
		var n = Y;
		if (n & 48) return t(e);
		Y |= 1;
		try {
			if (t) return ei(99, t.bind(null, e))
		} finally {
			Y = n, Ct()
		}
	}, tt.hydrate = function(t, e, n) {
		if (!$r(e)) throw Error(A(200));
		return xs(null, t, e, !0, n)
	}, tt.render = function(t, e, n) {
		if (!$r(e)) throw Error(A(200));
		return xs(null, t, e, !1, n)
	}, tt.unmountComponentAtNode = function(t) {
		if (!$r(t)) throw Error(A(40));
		return t._reactRootContainer ? (My(function() {
			xs(null, null, t, !1, function() {
				t._reactRootContainer = null, t[Ui] = null
			})
		}), !0) : !1
	}, tt.unstable_batchedUpdates = Ny, tt.unstable_createPortal = function(t, e) {
		return Ly(t, e, 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null)
	}, tt.unstable_renderSubtreeIntoContainer = function(t, e, n, i) {
		if (!$r(n)) throw Error(A(200));
		if (t == null || t._reactInternals === void 0) throw Error(A(38));
		return xs(t, e, n, !1, i)
	}, tt.version = "17.0.2";

	function Fy() {
		if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
			__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Fy)
		} catch (t) {
			console.error(t)
		}
	}
	Fy(), Qf.exports = tt;
	var Ts = Qf.exports;
	const By = lt(Ts),
		LJ = ({
			renderers: t
		}) => q.createElement(q.Fragment, null, Object.entries(t).map(([e, n]) => By.createPortal(n.reactElement, n.element, e)));
	class FJ extends q.Component {
		constructor(e) {
			super(e), this.editorContentRef = q.createRef(), this.initialized = !1, this.state = {
				renderers: {}
			}
		}
		componentDidMount() {
			this.init()
		}
		componentDidUpdate() {
			this.init()
		}
		init() {
			const {
				editor: e
			} = this.props;
			if (e && e.options.element) {
				if (e.contentComponent) return;
				const n = this.editorContentRef.current;
				n.append(...e.options.element.childNodes), e.setOptions({
					element: n
				}), e.contentComponent = this, e.createNodeViews(), this.initialized = !0
			}
		}
		maybeFlushSync(e) {
			this.initialized ? Ts.flushSync(e) : e()
		}
		setRenderer(e, n) {
			this.maybeFlushSync(() => {
				this.setState(({
					renderers: i
				}) => ({
					renderers: {
						...i,
						[e]: n
					}
				}))
			})
		}
		removeRenderer(e) {
			this.maybeFlushSync(() => {
				this.setState(({
					renderers: n
				}) => {
					const i = {
						...n
					};
					return delete i[e], {
						renderers: i
					}
				})
			})
		}
		componentWillUnmount() {
			const {
				editor: e
			} = this.props;
			if (!e || (this.initialized = !1, e.isDestroyed || e.view.setProps({
					nodeViews: {}
				}), e.contentComponent = null, !e.options.element.firstChild)) return;
			const n = document.createElement("div");
			n.append(...e.options.element.childNodes), e.setOptions({
				element: n
			})
		}
		render() {
			const {
				editor: e,
				...n
			} = this.props;
			return q.createElement(q.Fragment, null, q.createElement("div", {
				ref: this.editorContentRef,
				...n
			}), q.createElement(LJ, {
				renderers: this.state.renderers
			}))
		}
	}
	const BJ = t => {
			const e = q.useMemo(() => Math.floor(Math.random() * 4294967295).toString(), [t.editor]);
			return q.createElement(FJ, {
				key: e,
				...t
			})
		},
		UJ = q.memo(BJ);
	class VJ extends U7 {
		constructor() {
			super(...arguments), this.contentComponent = null
		}
	}

	function HJ() {
		const [, t] = C.useState(0);
		return () => t(e => e + 1)
	}
	const bd = (t = {}, e = []) => {
		const [n, i] = C.useState(null), o = HJ(), {
			onBeforeCreate: r,
			onBlur: a,
			onCreate: s,
			onDestroy: l,
			onFocus: u,
			onSelectionUpdate: c,
			onTransaction: m,
			onUpdate: d
		} = t, p = C.useRef(r), f = C.useRef(a), y = C.useRef(s), h = C.useRef(l), g = C.useRef(u), b = C.useRef(c), v = C.useRef(m), w = C.useRef(d);
		return C.useEffect(() => {
			n && (r && (n.off("beforeCreate", p.current), n.on("beforeCreate", r), p.current = r), a && (n.off("blur", f.current), n.on("blur", a), f.current = a), s && (n.off("create", y.current), n.on("create", s), y.current = s), l && (n.off("destroy", h.current), n.on("destroy", l), h.current = l), u && (n.off("focus", g.current), n.on("focus", u), g.current = u), c && (n.off("selectionUpdate", b.current), n.on("selectionUpdate", c), b.current = c), m && (n.off("transaction", v.current), n.on("transaction", m), v.current = m), d && (n.off("update", w.current), n.on("update", d), w.current = d))
		}, [r, a, s, l, u, c, m, d, n]), C.useEffect(() => {
			let x = !0;
			const S = new VJ(t);
			return i(S), S.on("transaction", () => {
				requestAnimationFrame(() => {
					requestAnimationFrame(() => {
						x && o()
					})
				})
			}), () => {
				x = !1
			}
		}, e), C.useEffect(() => () => {
			n == null || n.destroy()
		}, [n]), n
	};
	C.createContext({
		editor: null
	}).Consumer;
	const qJ = C.createContext({
			onDragStart: void 0
		}),
		WJ = () => C.useContext(qJ);
	q.forwardRef((t, e) => {
		const {
			onDragStart: n
		} = WJ(), i = t.as || "div";
		return q.createElement(i, {
			...t,
			ref: e,
			"data-node-view-wrapper": "",
			onDragStart: n,
			style: {
				whiteSpace: "normal",
				...t.style
			}
		})
	});
	const kd = t => C.createElement("svg", {
		id: "loader-1",
		xmlns: "http://www.w3.org/2000/svg",
		xmlnsXlink: "http://www.w3.org/1999/xlink",
		x: "0px",
		y: "0px",
		width: "40px",
		height: "40px",
		viewBox: "0 0 50 50",
		style: {
			enableBackground: "new 0 0 50 50"
		},
		xmlSpace: "preserve",
		...t
	}, C.createElement("path", {
		d: "M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z"
	}, C.createElement("animateTransform", {
		attributeType: "xml",
		attributeName: "transform",
		type: "rotate",
		from: "0 25 25",
		to: "360 25 25",
		dur: "0.6s",
		repeatCount: "indefinite"
	})));
	var KJ = Object.defineProperty,
		JJ = (t, e, n) => e in t ? KJ(t, e, {
			enumerable: !0,
			configurable: !0,
			writable: !0,
			value: n
		}) : t[e] = n,
		vd = (t, e, n) => (JJ(t, typeof e != "symbol" ? e + "" : e, n), n);
	let GJ = class {
			constructor() {
				vd(this, "current", this.detect()), vd(this, "handoffState", "pending"), vd(this, "currentId", 0)
			}
			set(e) {
				this.current !== e && (this.handoffState = "pending", this.currentId = 0, this.current = e)
			}
			reset() {
				this.set(this.detect())
			}
			nextId() {
				return ++this.currentId
			}
			get isServer() {
				return this.current === "server"
			}
			get isClient() {
				return this.current === "client"
			}
			detect() {
				return typeof window > "u" || typeof document > "u" ? "server" : "client"
			}
			handoff() {
				this.handoffState === "pending" && (this.handoffState = "complete")
			}
			get isHandoffComplete() {
				return this.handoffState === "complete"
			}
		},
		js = new GJ,
		Nr = (t, e) => {
			js.isServer ? C.useEffect(t, e) : C.useLayoutEffect(t, e)
		};

	function oo(t) {
		let e = C.useRef(t);
		return Nr(() => {
			e.current = t
		}, [t]), e
	}

	function QJ(t) {
		typeof queueMicrotask == "function" ? queueMicrotask(t) : Promise.resolve().then(t).catch(e => setTimeout(() => {
			throw e
		}))
	}

	function Mr() {
		let t = [],
			e = {
				addEventListener(n, i, o, r) {
					return n.addEventListener(i, o, r), e.add(() => n.removeEventListener(i, o, r))
				},
				requestAnimationFrame(...n) {
					let i = requestAnimationFrame(...n);
					return e.add(() => cancelAnimationFrame(i))
				},
				nextFrame(...n) {
					return e.requestAnimationFrame(() => e.requestAnimationFrame(...n))
				},
				setTimeout(...n) {
					let i = setTimeout(...n);
					return e.add(() => clearTimeout(i))
				},
				microTask(...n) {
					let i = {
						current: !0
					};
					return QJ(() => {
						i.current && n[0]()
					}), e.add(() => {
						i.current = !1
					})
				},
				style(n, i, o) {
					let r = n.style.getPropertyValue(i);
					return Object.assign(n.style, {
						[i]: o
					}), this.add(() => {
						Object.assign(n.style, {
							[i]: r
						})
					})
				},
				group(n) {
					let i = Mr();
					return n(i), this.add(() => i.dispose())
				},
				add(n) {
					return t.push(n), () => {
						let i = t.indexOf(n);
						if (i >= 0)
							for (let o of t.splice(i, 1)) o()
					}
				},
				dispose() {
					for (let n of t.splice(0)) n()
				}
			};
		return e
	}

	function Uy() {
		let [t] = C.useState(Mr);
		return C.useEffect(() => () => t.dispose(), [t]), t
	}
	let Ut = function(t) {
		let e = oo(t);
		return q.useCallback((...n) => e.current(...n), [e])
	};

	function XJ() {
		let t = typeof document > "u";
		return "useSyncExternalStore" in gm ? (e => e.useSyncExternalStore)(gm)(() => () => {}, () => !1, () => !t) : !1
	}

	function Vy() {
		let t = XJ(),
			[e, n] = C.useState(js.isHandoffComplete);
		return e && js.isHandoffComplete === !1 && n(!1), C.useEffect(() => {
			e !== !0 && n(!0)
		}, [e]), C.useEffect(() => js.handoff(), []), t ? !1 : e
	}

	function $t(t, e, ...n) {
		if (t in e) {
			let o = e[t];
			return typeof o == "function" ? o(...n) : o
		}
		let i = new Error(`Tried to handle "${t}" but there is no handler defined. Only defined handlers are: ${Object.keys(e).map(o=>`"${o}"`).join(", ")}.`);
		throw Error.captureStackTrace && Error.captureStackTrace(i, $t), i
	}
	let ZJ = Symbol();

	function Hy(...t) {
		let e = C.useRef(t);
		C.useEffect(() => {
			e.current = t
		}, [t]);
		let n = Ut(i => {
			for (let o of e.current) o != null && (typeof o == "function" ? o(i) : o.current = i)
		});
		return t.every(i => i == null || (i == null ? void 0 : i[ZJ])) ? void 0 : n
	}

	function $s(...t) {
		return Array.from(new Set(t.flatMap(e => typeof e == "string" ? e.split(" ") : []))).filter(Boolean).join(" ")
	}
	var qy = (t => (t[t.None = 0] = "None", t[t.RenderStrategy = 1] = "RenderStrategy", t[t.Static = 2] = "Static", t))(qy || {}),
		$n = (t => (t[t.Unmount = 0] = "Unmount", t[t.Hidden = 1] = "Hidden", t))($n || {});

	function Wy({
		ourProps: t,
		theirProps: e,
		slot: n,
		defaultTag: i,
		features: o,
		visible: r = !0,
		name: a
	}) {
		let s = Ky(e, t);
		if (r) return As(s, n, i, a);
		let l = o ?? 0;
		if (l & 2) {
			let {
				static: u = !1,
				...c
			} = s;
			if (u) return As(c, n, i, a)
		}
		if (l & 1) {
			let {
				unmount: u = !0,
				...c
			} = s;
			return $t(u ? 0 : 1, {
				0() {
					return null
				},
				1() {
					return As({
						...c,
						hidden: !0,
						style: {
							display: "none"
						}
					}, n, i, a)
				}
			})
		}
		return As(s, n, i, a)
	}

	function As(t, e = {}, n, i) {
		let {
			as: o = n,
			children: r,
			refName: a = "ref",
			...s
		} = Sd(t, ["unmount", "static"]), l = t.ref !== void 0 ? {
			[a]: t.ref
		} : {}, u = typeof r == "function" ? r(e) : r;
		"className" in s && s.className && typeof s.className == "function" && (s.className = s.className(e));
		let c = {};
		if (e) {
			let m = !1,
				d = [];
			for (let [p, f] of Object.entries(e)) typeof f == "boolean" && (m = !0), f === !0 && d.push(p);
			m && (c["data-headlessui-state"] = d.join(" "))
		}
		if (o === C.Fragment && Object.keys(Jy(s)).length > 0) {
			if (!C.isValidElement(u) || Array.isArray(u) && u.length > 1) throw new Error(['Passing props on "Fragment"!', "", `The current component <${i} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(s).map(f => `  - ${f}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map(f => `  - ${f}`).join(`
`)].join(`
`));
			let m = u.props,
				d = typeof(m == null ? void 0 : m.className) == "function" ? (...f) => $s(m == null ? void 0 : m.className(...f), s.className) : $s(m == null ? void 0 : m.className, s.className),
				p = d ? {
					className: d
				} : {};
			return C.cloneElement(u, Object.assign({}, Ky(u.props, Jy(Sd(s, ["ref"]))), c, l, eG(u.ref, l.ref), p))
		}
		return C.createElement(o, Object.assign({}, Sd(s, ["ref"]), o !== C.Fragment && l, o !== C.Fragment && c), u)
	}

	function eG(...t) {
		return {
			ref: t.every(e => e == null) ? void 0 : e => {
				for (let n of t) n != null && (typeof n == "function" ? n(e) : n.current = e)
			}
		}
	}

	function Ky(...t) {
		if (t.length === 0) return {};
		if (t.length === 1) return t[0];
		let e = {},
			n = {};
		for (let i of t)
			for (let o in i) o.startsWith("on") && typeof i[o] == "function" ? (n[o] != null || (n[o] = []), n[o].push(i[o])) : e[o] = i[o];
		if (e.disabled || e["aria-disabled"]) return Object.assign(e, Object.fromEntries(Object.keys(n).map(i => [i, void 0])));
		for (let i in n) Object.assign(e, {
			[i](o, ...r) {
				let a = n[i];
				for (let s of a) {
					if ((o instanceof Event || (o == null ? void 0 : o.nativeEvent) instanceof Event) && o.defaultPrevented) return;
					s(o, ...r)
				}
			}
		});
		return e
	}

	function wd(t) {
		var e;
		return Object.assign(C.forwardRef(t), {
			displayName: (e = t.displayName) != null ? e : t.name
		})
	}

	function Jy(t) {
		let e = Object.assign({}, t);
		for (let n in e) e[n] === void 0 && delete e[n];
		return e
	}

	function Sd(t, e = []) {
		let n = Object.assign({}, t);
		for (let i of e) i in n && delete n[i];
		return n
	}
	let Cd = C.createContext(null);
	Cd.displayName = "OpenClosedContext";
	var Vt = (t => (t[t.Open = 1] = "Open", t[t.Closed = 2] = "Closed", t[t.Closing = 4] = "Closing", t[t.Opening = 8] = "Opening", t))(Vt || {});

	function Gy() {
		return C.useContext(Cd)
	}

	function tG({
		value: t,
		children: e
	}) {
		return q.createElement(Cd.Provider, {
			value: t
		}, e)
	}

	function xd() {
		let t = C.useRef(!1);
		return Nr(() => (t.current = !0, () => {
			t.current = !1
		}), []), t
	}

	function nG(t = 0) {
		let [e, n] = C.useState(t), i = xd(), o = C.useCallback(l => {
			i.current && n(u => u | l)
		}, [e, i]), r = C.useCallback(l => !!(e & l), [e]), a = C.useCallback(l => {
			i.current && n(u => u & ~l)
		}, [n, i]), s = C.useCallback(l => {
			i.current && n(u => u ^ l)
		}, [n]);
		return {
			flags: e,
			addFlag: o,
			hasFlag: r,
			removeFlag: a,
			toggleFlag: s
		}
	}

	function iG(t) {
		let e = {
			called: !1
		};
		return (...n) => {
			if (!e.called) return e.called = !0, t(...n)
		}
	}

	function Ed(t, ...e) {
		t && e.length > 0 && t.classList.add(...e)
	}

	function Td(t, ...e) {
		t && e.length > 0 && t.classList.remove(...e)
	}

	function oG(t, e) {
		let n = Mr();
		if (!t) return n.dispose;
		let {
			transitionDuration: i,
			transitionDelay: o
		} = getComputedStyle(t), [r, a] = [i, o].map(l => {
			let [u = 0] = l.split(",").filter(Boolean).map(c => c.includes("ms") ? parseFloat(c) : parseFloat(c) * 1e3).sort((c, m) => m - c);
			return u
		}), s = r + a;
		if (s !== 0) {
			n.group(u => {
				u.setTimeout(() => {
					e(), u.dispose()
				}, s), u.addEventListener(t, "transitionrun", c => {
					c.target === c.currentTarget && u.dispose()
				})
			});
			let l = n.addEventListener(t, "transitionend", u => {
				u.target === u.currentTarget && (e(), l())
			})
		} else e();
		return n.add(() => e()), n.dispose
	}

	function rG(t, e, n, i) {
		let o = n ? "enter" : "leave",
			r = Mr(),
			a = i !== void 0 ? iG(i) : () => {};
		o === "enter" && (t.removeAttribute("hidden"), t.style.display = "");
		let s = $t(o, {
				enter: () => e.enter,
				leave: () => e.leave
			}),
			l = $t(o, {
				enter: () => e.enterTo,
				leave: () => e.leaveTo
			}),
			u = $t(o, {
				enter: () => e.enterFrom,
				leave: () => e.leaveFrom
			});
		return Td(t, ...e.base, ...e.enter, ...e.enterTo, ...e.enterFrom, ...e.leave, ...e.leaveFrom, ...e.leaveTo, ...e.entered), Ed(t, ...e.base, ...s, ...u), r.nextFrame(() => {
			Td(t, ...e.base, ...s, ...u), Ed(t, ...e.base, ...s, ...l), oG(t, () => (Td(t, ...e.base, ...s), Ed(t, ...e.base, ...e.entered), a()))
		}), r.dispose
	}

	function aG({
		immediate: t,
		container: e,
		direction: n,
		classes: i,
		onStart: o,
		onStop: r
	}) {
		let a = xd(),
			s = Uy(),
			l = oo(n);
		Nr(() => {
			t && (l.current = "enter")
		}, [t]), Nr(() => {
			let u = Mr();
			s.add(u.dispose);
			let c = e.current;
			if (c && l.current !== "idle" && a.current) return u.dispose(), o.current(l.current), u.add(rG(c, i.current, l.current === "enter", () => {
				u.dispose(), r.current(l.current)
			})), u.dispose
		}, [n])
	}

	function An(t = "") {
		return t.split(" ").filter(e => e.trim().length > 1)
	}
	let Ns = C.createContext(null);
	Ns.displayName = "TransitionContext";
	var sG = (t => (t.Visible = "visible", t.Hidden = "hidden", t))(sG || {});

	function lG() {
		let t = C.useContext(Ns);
		if (t === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
		return t
	}

	function uG() {
		let t = C.useContext(Ms);
		if (t === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
		return t
	}
	let Ms = C.createContext(null);
	Ms.displayName = "NestingContext";

	function Ps(t) {
		return "children" in t ? Ps(t.children) : t.current.filter(({
			el: e
		}) => e.current !== null).filter(({
			state: e
		}) => e === "visible").length > 0
	}

	function Qy(t, e) {
		let n = oo(t),
			i = C.useRef([]),
			o = xd(),
			r = Uy(),
			a = Ut((p, f = $n.Hidden) => {
				let y = i.current.findIndex(({
					el: h
				}) => h === p);
				y !== -1 && ($t(f, {
					[$n.Unmount]() {
						i.current.splice(y, 1)
					},
					[$n.Hidden]() {
						i.current[y].state = "hidden"
					}
				}), r.microTask(() => {
					var h;
					!Ps(i) && o.current && ((h = n.current) == null || h.call(n))
				}))
			}),
			s = Ut(p => {
				let f = i.current.find(({
					el: y
				}) => y === p);
				return f ? f.state !== "visible" && (f.state = "visible") : i.current.push({
					el: p,
					state: "visible"
				}), () => a(p, $n.Unmount)
			}),
			l = C.useRef([]),
			u = C.useRef(Promise.resolve()),
			c = C.useRef({
				enter: [],
				leave: [],
				idle: []
			}),
			m = Ut((p, f, y) => {
				l.current.splice(0), e && (e.chains.current[f] = e.chains.current[f].filter(([h]) => h !== p)), e == null || e.chains.current[f].push([p, new Promise(h => {
					l.current.push(h)
				})]), e == null || e.chains.current[f].push([p, new Promise(h => {
					Promise.all(c.current[f].map(([g, b]) => b)).then(() => h())
				})]), f === "enter" ? u.current = u.current.then(() => e == null ? void 0 : e.wait.current).then(() => y(f)) : y(f)
			}),
			d = Ut((p, f, y) => {
				Promise.all(c.current[f].splice(0).map(([h, g]) => g)).then(() => {
					var h;
					(h = l.current.shift()) == null || h()
				}).then(() => y(f))
			});
		return C.useMemo(() => ({
			children: i,
			register: s,
			unregister: a,
			onStart: m,
			onStop: d,
			wait: u,
			chains: c
		}), [s, a, i, m, d, c, u])
	}

	function cG() {}
	let dG = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];

	function Xy(t) {
		var e;
		let n = {};
		for (let i of dG) n[i] = (e = t[i]) != null ? e : cG;
		return n
	}

	function mG(t) {
		let e = C.useRef(Xy(t));
		return C.useEffect(() => {
			e.current = Xy(t)
		}, [t]), e
	}
	let pG = "div",
		Zy = qy.RenderStrategy;

	function fG(t, e) {
		var n, i;
		let {
			beforeEnter: o,
			afterEnter: r,
			beforeLeave: a,
			afterLeave: s,
			enter: l,
			enterFrom: u,
			enterTo: c,
			entered: m,
			leave: d,
			leaveFrom: p,
			leaveTo: f,
			...y
		} = t, h = C.useRef(null), g = Hy(h, e), b = (n = y.unmount) == null || n ? $n.Unmount : $n.Hidden, {
			show: v,
			appear: w,
			initial: x
		} = lG(), [S, E] = C.useState(v ? "visible" : "hidden"), T = uG(), {
			register: M,
			unregister: U
		} = T;
		C.useEffect(() => M(h), [M, h]), C.useEffect(() => {
			if (b === $n.Hidden && h.current) {
				if (v && S !== "visible") {
					E("visible");
					return
				}
				return $t(S, {
					hidden: () => U(h),
					visible: () => M(h)
				})
			}
		}, [S, h, M, U, v, b]);
		let qe = oo({
				base: An(y.className),
				enter: An(l),
				enterFrom: An(u),
				enterTo: An(c),
				entered: An(m),
				leave: An(d),
				leaveFrom: An(p),
				leaveTo: An(f)
			}),
			Z = mG({
				beforeEnter: o,
				afterEnter: r,
				beforeLeave: a,
				afterLeave: s
			}),
			W = Vy();
		C.useEffect(() => {
			if (W && S === "visible" && h.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?")
		}, [h, S, W]);
		let Se = x && !w,
			ae = w && v && x,
			Ce = (() => !W || Se ? "idle" : v ? "enter" : "leave")(),
			K = nG(0),
			se = Ut(I => $t(I, {
				enter: () => {
					K.addFlag(Vt.Opening), Z.current.beforeEnter()
				},
				leave: () => {
					K.addFlag(Vt.Closing), Z.current.beforeLeave()
				},
				idle: () => {}
			})),
			Pe = Ut(I => $t(I, {
				enter: () => {
					K.removeFlag(Vt.Opening), Z.current.afterEnter()
				},
				leave: () => {
					K.removeFlag(Vt.Closing), Z.current.afterLeave()
				},
				idle: () => {}
			})),
			Re = Qy(() => {
				E("hidden"), U(h)
			}, T);
		aG({
			immediate: ae,
			container: h,
			classes: qe,
			direction: Ce,
			onStart: oo(I => {
				Re.onStart(h, I, se)
			}),
			onStop: oo(I => {
				Re.onStop(h, I, Pe), I === "leave" && !Ps(Re) && (E("hidden"), U(h))
			})
		});
		let N = y,
			D = {
				ref: g
			};
		return ae ? N = {
			...N,
			className: $s(y.className, ...qe.current.enter, ...qe.current.enterFrom)
		} : (N.className = $s(y.className, (i = h.current) == null ? void 0 : i.className), N.className === "" && delete N.className), q.createElement(Ms.Provider, {
			value: Re
		}, q.createElement(tG, {
			value: $t(S, {
				visible: Vt.Open,
				hidden: Vt.Closed
			}) | K.flags
		}, Wy({
			ourProps: D,
			theirProps: N,
			defaultTag: pG,
			features: Zy,
			visible: S === "visible",
			name: "Transition.Child"
		})))
	}

	function hG(t, e) {
		let {
			show: n,
			appear: i = !1,
			unmount: o = !0,
			...r
		} = t, a = C.useRef(null), s = Hy(a, e);
		Vy();
		let l = Gy();
		if (n === void 0 && l !== null && (n = (l & Vt.Open) === Vt.Open), ![!0, !1].includes(n)) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
		let [u, c] = C.useState(n ? "visible" : "hidden"), m = Qy(() => {
			c("hidden")
		}), [d, p] = C.useState(!0), f = C.useRef([n]);
		Nr(() => {
			d !== !1 && f.current[f.current.length - 1] !== n && (f.current.push(n), p(!1))
		}, [f, n]);
		let y = C.useMemo(() => ({
			show: n,
			appear: i,
			initial: d
		}), [n, i, d]);
		C.useEffect(() => {
			if (n) c("visible");
			else if (!Ps(m)) c("hidden");
			else {
				let v = a.current;
				if (!v) return;
				let w = v.getBoundingClientRect();
				w.x === 0 && w.y === 0 && w.width === 0 && w.height === 0 && c("hidden")
			}
		}, [n, m]);
		let h = {
				unmount: o
			},
			g = Ut(() => {
				var v;
				d && p(!1), (v = t.beforeEnter) == null || v.call(t)
			}),
			b = Ut(() => {
				var v;
				d && p(!1), (v = t.beforeLeave) == null || v.call(t)
			});
		return q.createElement(Ms.Provider, {
			value: m
		}, q.createElement(Ns.Provider, {
			value: y
		}, Wy({
			ourProps: {
				...h,
				as: C.Fragment,
				children: q.createElement(eb, {
					ref: s,
					...h,
					...r,
					beforeEnter: g,
					beforeLeave: b
				})
			},
			theirProps: {},
			defaultTag: C.Fragment,
			features: Zy,
			visible: u === "visible",
			name: "Transition"
		})))
	}

	function gG(t, e) {
		let n = C.useContext(Ns) !== null,
			i = Gy() !== null;
		return q.createElement(q.Fragment, null, !n && i ? q.createElement(jd, {
			ref: e,
			...t
		}) : q.createElement(eb, {
			ref: e,
			...t
		}))
	}
	let jd = wd(hG),
		eb = wd(fG),
		yG = wd(gG),
		ai = Object.assign(jd, {
			Child: yG,
			Root: jd
		});

	function bG(t, e) {
		const n = C.useRef(null),
			i = C.useCallback(o => {
				n.current && e && e(n.current), o && t && t(o), n.current = o
			}, [t, e]);
		return [n, i]
	}

	function kG(t, e) {
		const n = C.useRef(0);
		C.useEffect(() => {
			if (n.current >= 2) return t();
			n.current += 1
		}, e)
	}

	function vG(t) {
		const {
			popup: e
		} = V();
		return (e == null ? void 0 : e.type) === t
	}

	function wG(t) {
		const {
			t: e
		} = V();
		return C.useMemo(() => t6(t, e), [t])
	}
	const SG = ({
			submit: t,
			progress: e,
			setProgress: n,
			close: i,
			reduced: o,
			isOpen: r,
			editor: a,
			submitText: s,
			submitSize: l
		}) => {
			const {
				t: u
			} = V();
			let c = null;
			e === "sending" && (s = null, c = k.jsx(kd, {
				className: "h-[24px] w-[24px] fill-white dark:fill-black"
			}));
			const m = C.useCallback(p => {
					if (a != null && a.isFocused) {
						p.stopPropagation();
						return
					}
				}, [a]),
				d = C.useCallback(async () => {
					if (!(!a || a.isEmpty)) {
						n("sending");
						try {
							await t({
								html: a.getHTML()
							})
						} catch {
							n("error");
							return
						}
						return i ? i() : (n("sent"), a.chain().clearContent().blur().run()), !1
					}
				}, [n, a, t, i]);
			return C.useEffect(() => {
				const p = f => {
					if (f.metaKey || f.ctrlKey) {
						f.key === "Enter" && (a != null && a.isFocused) && (d(), a == null || a.commands.blur());
						return
					}
					if (f.key === "Escape") {
						a != null && a.isFocused && (i ? i() : a == null || a.commands.blur());
						return
					}
				};
				return window.addEventListener("keydown", p, {
					passive: !0
				}), () => {
					window.removeEventListener("keydown", p, {
						passive: !0
					})
				}
			}, [a, i, d]), k.jsxs("div", {
				className: `relative w-full pl-[52px] transition-[padding] delay-100 duration-150 ${o&&"pl-0"} ${r&&"pl-[1px] pt-[64px] sm:pl-[52px]"}`,
				children: [k.jsx("div", {
					className: `shadow-form hover:shadow-formxl w-full rounded-md border border-none border-slate-50 bg-[rgba(255,255,255,0.9)] px-3 py-4 font-sans text-[16.5px] leading-normal transition-all delay-100 duration-150 focus:outline-0 dark:border-none dark:bg-[rgba(255,255,255,0.08)] dark:text-neutral-300 dark:shadow-transparent ${r?"min-h-[144px] cursor-text pb-[68px] pt-2":"min-h-[48px] cursor-pointer overflow-hidden hover:border-slate-300"}
            `,
					"data-testid": "form-editor",
					children: k.jsx(UJ, {
						editor: a,
						onMouseDown: m,
						onTouchStart: m
					})
				}), k.jsxs("div", {
					className: "absolute bottom-[9px] right-[9px] flex space-x-4 transition-[opacity] duration-150",
					children: [i && k.jsx("button", {
						className: "ml-2.5 font-sans text-sm font-medium text-neutral-500 outline-0 dark:text-neutral-400",
						type: "button",
						onClick: i,
						children: u("Cancel")
					}), k.jsxs("button", {
						className: `flex w-auto items-center justify-center sm:min-w-[128px] ${l==="medium"&&"sm:min-w-[100px]"} ${l==="small"&&"sm:min-w-[64px]"} h-[39px] rounded-[6px] border bg-neutral-900 px-3 py-2 text-center font-sans text-sm font-semibold text-white outline-0 transition-[opacity] duration-150 dark:bg-[rgba(255,255,255,0.9)] dark:text-neutral-800`,
						"data-testid": "submit-form-button",
						type: "button",
						onClick: d,
						children: [k.jsx("span", {
							children: c
						}), s && k.jsx("span", {
							children: s
						})]
					})]
				})]
			})
		},
		CG = ({
			show: t,
			name: e,
			expertise: n,
			editName: i,
			editExpertise: o
		}) => k.jsxs(ai, {
			enter: "transition duration-500 delay-100 ease-in-out",
			enterFrom: "opacity-0 -translate-x-2",
			enterTo: "opacity-100 translate-x-0",
			leave: "transition-none duration-0",
			leaveFrom: "opacity-100",
			leaveTo: "opacity-0",
			show: t,
			children: [k.jsx("div", {
				className: "font-sans text-[17px] font-bold tracking-tight text-[rgb(23,23,23)] dark:text-[rgba(255,255,255,0.85)]",
				"data-testid": "member-name",
				onClick: i,
				children: e || "Anonymous"
			}), k.jsx("div", {
				className: "flex items-baseline justify-start",
				children: k.jsxs("button", {
					className: `group flex max-w-[80%] items-center justify-start whitespace-nowrap text-left font-sans text-[14px] tracking-tight text-[rgba(0,0,0,0.5)] transition duration-150 hover:text-[rgba(0,0,0,0.75)] dark:text-[rgba(255,255,255,0.5)] dark:hover:text-[rgba(255,255,255,0.4)] sm:max-w-[90%] ${!n&&"text-[rgba(0,0,0,0.3)] hover:text-[rgba(0,0,0,0.5)] dark:text-[rgba(255,255,255,0.3)]"}`,
					type: "button",
					onClick: o,
					children: [k.jsx("span", {
						className: "... overflow-hidden text-ellipsis",
						children: n || "Add your expertise"
					}), n && k.jsx(a6, {
						className: "ml-1 h-[12px] w-[12px] translate-x-[-6px] stroke-[rgba(0,0,0,0.5)] opacity-0 transition-all duration-100 ease-out group-hover:translate-x-0 group-hover:stroke-[rgba(0,0,0,0.75)] group-hover:opacity-100 dark:stroke-[rgba(255,255,255,0.5)] dark:group-hover:stroke-[rgba(255,255,255,0.3)]"
					})]
				})
			})]
		}),
		tb = ({
			comment: t,
			submit: e,
			submitText: n,
			submitSize: i,
			close: o,
			editor: r,
			reduced: a,
			isOpen: s
		}) => {
			var x, S;
			const {
				member: l,
				dispatchAction: u
			} = V(), c = vG("addDetailsPopup"), [m, d] = C.useState("default"), p = C.useRef(null), f = (l == null ? void 0 : l.name) ?? ((x = t == null ? void 0 : t.member) == null ? void 0 : x.name), y = (l == null ? void 0 : l.expertise) ?? ((S = t == null ? void 0 : t.member) == null ? void 0 : S.expertise);
			(m === "sending" || f && c) && (s = !0);
			const h = E => {
					if (r != null && r.isFocused) {
						E.preventDefault();
						return
					}
				},
				g = C.useCallback(E => {
					var T;
					(T = r == null ? void 0 : r.commands) == null || T.blur(), u("openPopup", {
						type: "addDetailsPopup",
						expertiseAutofocus: E.expertiseAutofocus ?? !1,
						callback: function(M) {
							!r || !p.current || M && (r.setEditable(!0), r.commands.focus())
						}
					})
				}, [r, u, p]),
				b = C.useCallback(() => {
					g({
						expertiseAutofocus: !1
					})
				}, [g]),
				v = C.useCallback(() => {
					g({
						expertiseAutofocus: !0
					})
				}, [g]),
				w = C.useCallback(() => {
					if (r && !r.isFocused) {
						if (!f) {
							b();
							return
						}
						r.commands.focus()
					}
				}, [r, b, f]);
			return C.useEffect(() => {
				r && r.setEditable(!!f && m !== "sending")
			}, [r, f, m]), k.jsx("form", {
				ref: p,
				className: `-mx-3 mb-10 mt-[-10px] rounded-md px-3 pb-2 pt-3 transition duration-200 ${s?"cursor-default":"cursor-pointer"} ${a&&"pl-1"}`,
				"data-testid": "form",
				onClick: w,
				onMouseDown: h,
				onTouchStart: h,
				children: k.jsxs("div", {
					className: "relative w-full",
					children: [k.jsx("div", {
						className: "pr-[1px] font-sans leading-normal dark:text-neutral-300",
						children: k.jsx(SG, {
							close: o,
							editor: r,
							isOpen: s,
							progress: m,
							reduced: a,
							setProgress: d,
							submit: e,
							submitSize: i,
							submitText: n
						})
					}), k.jsxs("div", {
						className: "absolute left-0 top-1 flex h-12 w-full items-center justify-start",
						children: [k.jsx("div", {
							className: "pointer-events-none mr-3 grow-0",
							children: k.jsx(Tm, {
								comment: t
							})
						}), k.jsx("div", {
							className: "grow-1 w-full",
							children: k.jsx(CG, {
								editExpertise: v,
								editName: b,
								expertise: y,
								name: f,
								show: s
							})
						})]
					})]
				})
			})
		},
		nb = ({
			editor: t,
			submit: e,
			close: n,
			closeIfNotChanged: i,
			submitText: o,
			submitSize: r
		}) => {
			const {
				dispatchAction: a,
				secundaryFormCount: s
			} = V();
			C.useEffect(() => (a("increaseSecundaryFormCount", {}), () => {
				a("decreaseSecundaryFormCount", {})
			}), [a]), kG(() => {
				s > 1 && i()
			}, [s]);
			const l = Vr();
			return k.jsx("div", {
				className: "mt-[-20px]",
				children: k.jsx(tb, {
					close: n,
					editor: t,
					isOpen: !0,
					reduced: l,
					submit: e,
					submitSize: r,
					submitText: o
				})
			})
		},
		xG = /^\s*>\s$/,
		EG = sn.create({
			name: "blockquote",
			addOptions() {
				return {
					HTMLAttributes: {}
				}
			},
			content: "block+",
			group: "block",
			defining: !0,
			parseHTML() {
				return [{
					tag: "blockquote"
				}]
			},
			renderHTML({
				HTMLAttributes: t
			}) {
				return ["blockquote", _o(this.options.HTMLAttributes, t), 0]
			},
			addCommands() {
				return {
					setBlockquote: () => ({
						commands: t
					}) => t.wrapIn(this.name),
					toggleBlockquote: () => ({
						commands: t
					}) => t.toggleWrap(this.name),
					unsetBlockquote: () => ({
						commands: t
					}) => t.lift(this.name)
				}
			},
			addKeyboardShortcuts() {
				return {
					"Mod-Shift-b": () => this.editor.commands.toggleBlockquote()
				}
			},
			addInputRules() {
				return [V7({
					find: xG,
					type: this.type
				})]
			}
		}),
		TG = sn.create({
			name: "doc",
			topNode: !0,
			content: "block+"
		}),
		jG = sn.create({
			name: "hardBreak",
			addOptions() {
				return {
					keepMarks: !0,
					HTMLAttributes: {}
				}
			},
			inline: !0,
			group: "inline",
			selectable: !1,
			parseHTML() {
				return [{
					tag: "br"
				}]
			},
			renderHTML({
				HTMLAttributes: t
			}) {
				return ["br", _o(this.options.HTMLAttributes, t)]
			},
			renderText() {
				return `
`
			},
			addCommands() {
				return {
					setHardBreak: () => ({
						commands: t,
						chain: e,
						state: n,
						editor: i
					}) => t.first([() => t.exitCode(), () => t.command(() => {
						const {
							selection: o,
							storedMarks: r
						} = n;
						if (o.$from.parent.type.spec.isolating) return !1;
						const {
							keepMarks: a
						} = this.options, {
							splittableMarks: s
						} = i.extensionManager, l = r || o.$to.parentOffset && o.$from.marks();
						return e().insertContent({
							type: this.name
						}).command(({
							tr: u,
							dispatch: c
						}) => {
							if (c && l && a) {
								const m = l.filter(d => s.includes(d.type.name));
								u.ensureMarks(m)
							}
							return !0
						}).run()
					})])
				}
			},
			addKeyboardShortcuts() {
				return {
					"Mod-Enter": () => this.editor.commands.setHardBreak(),
					"Shift-Enter": () => this.editor.commands.setHardBreak()
				}
			}
		}),
		$G = "aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2",
		AG = "ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2",
		ro = (t, e) => {
			for (const n in e) t[n] = e[n];
			return t
		},
		$d = "numeric",
		Ad = "ascii",
		Nd = "alpha",
		_s = "asciinumeric",
		zs = "alphanumeric",
		Md = "domain",
		ib = "emoji",
		NG = "scheme",
		MG = "slashscheme",
		ob = "whitespace";

	function PG(t, e) {
		return t in e || (e[t] = []), e[t]
	}

	function si(t, e, n) {
		e[$d] && (e[_s] = !0, e[zs] = !0), e[Ad] && (e[_s] = !0, e[Nd] = !0), e[_s] && (e[zs] = !0), e[Nd] && (e[zs] = !0), e[zs] && (e[Md] = !0), e[ib] && (e[Md] = !0);
		for (const i in e) {
			const o = PG(i, n);
			o.indexOf(t) < 0 && o.push(t)
		}
	}

	function _G(t, e) {
		const n = {};
		for (const i in e) e[i].indexOf(t) >= 0 && (n[i] = !0);
		return n
	}

	function He(t) {
		t === void 0 && (t = null), this.j = {}, this.jr = [], this.jd = null, this.t = t
	}
	He.groups = {}, He.prototype = {
		accepts() {
			return !!this.t
		},
		go(t) {
			const e = this,
				n = e.j[t];
			if (n) return n;
			for (let i = 0; i < e.jr.length; i++) {
				const o = e.jr[i][0],
					r = e.jr[i][1];
				if (r && o.test(t)) return r
			}
			return e.jd
		},
		has(t, e) {
			return e === void 0 && (e = !1), e ? t in this.j : !!this.go(t)
		},
		ta(t, e, n, i) {
			for (let o = 0; o < t.length; o++) this.tt(t[o], e, n, i)
		},
		tr(t, e, n, i) {
			i = i || He.groups;
			let o;
			return e && e.j ? o = e : (o = new He(e), n && i && si(e, n, i)), this.jr.push([t, o]), o
		},
		ts(t, e, n, i) {
			let o = this;
			const r = t.length;
			if (!r) return o;
			for (let a = 0; a < r - 1; a++) o = o.tt(t[a]);
			return o.tt(t[r - 1], e, n, i)
		},
		tt(t, e, n, i) {
			i = i || He.groups;
			const o = this;
			if (e && e.j) return o.j[t] = e, e;
			const r = e;
			let a, s = o.go(t);
			if (s ? (a = new He, ro(a.j, s.j), a.jr.push.apply(a.jr, s.jr), a.jd = s.jd, a.t = s.t) : a = new He, r) {
				if (i)
					if (a.t && typeof a.t == "string") {
						const l = ro(_G(a.t, i), n);
						si(r, l, i)
					} else n && si(r, n, i);
				a.t = r
			}
			return o.j[t] = a, a
		}
	};
	const O = (t, e, n, i, o) => t.ta(e, n, i, o),
		st = (t, e, n, i, o) => t.tr(e, n, i, o),
		rb = (t, e, n, i, o) => t.ts(e, n, i, o),
		$ = (t, e, n, i, o) => t.tt(e, n, i, o),
		Ht = "WORD",
		Pd = "UWORD",
		Pr = "LOCALHOST",
		_d = "TLD",
		zd = "UTLD",
		Os = "SCHEME",
		ao = "SLASH_SCHEME",
		Od = "NUM",
		ab = "WS",
		Dd = "NL",
		so = "OPENBRACE",
		_r = "OPENBRACKET",
		zr = "OPENANGLEBRACKET",
		Or = "OPENPAREN",
		li = "CLOSEBRACE",
		lo = "CLOSEBRACKET",
		uo = "CLOSEANGLEBRACKET",
		ui = "CLOSEPAREN",
		Ds = "AMPERSAND",
		Is = "APOSTROPHE",
		Rs = "ASTERISK",
		Nn = "AT",
		Ys = "BACKSLASH",
		Ls = "BACKTICK",
		Fs = "CARET",
		Mn = "COLON",
		Id = "COMMA",
		Bs = "DOLLAR",
		At = "DOT",
		Us = "EQUALS",
		Rd = "EXCLAMATION",
		Nt = "HYPHEN",
		Vs = "PERCENT",
		Hs = "PIPE",
		qs = "PLUS",
		Ws = "POUND",
		Ks = "QUERY",
		Yd = "QUOTE",
		Ld = "SEMI",
		Mt = "SLASH",
		Dr = "TILDE",
		Js = "UNDERSCORE",
		sb = "EMOJI",
		Gs = "SYM";
	var lb = Object.freeze({
		__proto__: null,
		WORD: Ht,
		UWORD: Pd,
		LOCALHOST: Pr,
		TLD: _d,
		UTLD: zd,
		SCHEME: Os,
		SLASH_SCHEME: ao,
		NUM: Od,
		WS: ab,
		NL: Dd,
		OPENBRACE: so,
		OPENBRACKET: _r,
		OPENANGLEBRACKET: zr,
		OPENPAREN: Or,
		CLOSEBRACE: li,
		CLOSEBRACKET: lo,
		CLOSEANGLEBRACKET: uo,
		CLOSEPAREN: ui,
		AMPERSAND: Ds,
		APOSTROPHE: Is,
		ASTERISK: Rs,
		AT: Nn,
		BACKSLASH: Ys,
		BACKTICK: Ls,
		CARET: Fs,
		COLON: Mn,
		COMMA: Id,
		DOLLAR: Bs,
		DOT: At,
		EQUALS: Us,
		EXCLAMATION: Rd,
		HYPHEN: Nt,
		PERCENT: Vs,
		PIPE: Hs,
		PLUS: qs,
		POUND: Ws,
		QUERY: Ks,
		QUOTE: Yd,
		SEMI: Ld,
		SLASH: Mt,
		TILDE: Dr,
		UNDERSCORE: Js,
		EMOJI: sb,
		SYM: Gs
	});
	const co = /[a-z]/,
		Fd = /\p{L}/u,
		Bd = /\p{Emoji}/u,
		Ud = /\d/,
		ub = /\s/,
		cb = `
`,
		zG = "️",
		OG = "‍";
	let Qs = null,
		Xs = null;

	function DG(t) {
		t === void 0 && (t = []);
		const e = {};
		He.groups = e;
		const n = new He;
		Qs == null && (Qs = db($G)), Xs == null && (Xs = db(AG)), $(n, "'", Is), $(n, "{", so), $(n, "[", _r), $(n, "<", zr), $(n, "(", Or), $(n, "}", li), $(n, "]", lo), $(n, ">", uo), $(n, ")", ui), $(n, "&", Ds), $(n, "*", Rs), $(n, "@", Nn), $(n, "`", Ls), $(n, "^", Fs), $(n, ":", Mn), $(n, ",", Id), $(n, "$", Bs), $(n, ".", At), $(n, "=", Us), $(n, "!", Rd), $(n, "-", Nt), $(n, "%", Vs), $(n, "|", Hs), $(n, "+", qs), $(n, "#", Ws), $(n, "?", Ks), $(n, '"', Yd), $(n, "/", Mt), $(n, ";", Ld), $(n, "~", Dr), $(n, "_", Js), $(n, "\\", Ys);
		const i = st(n, Ud, Od, {
			[$d]: !0
		});
		st(i, Ud, i);
		const o = st(n, co, Ht, {
			[Ad]: !0
		});
		st(o, co, o);
		const r = st(n, Fd, Pd, {
			[Nd]: !0
		});
		st(r, co), st(r, Fd, r);
		const a = st(n, ub, ab, {
			[ob]: !0
		});
		$(n, cb, Dd, {
			[ob]: !0
		}), $(a, cb), st(a, ub, a);
		const s = st(n, Bd, sb, {
			[ib]: !0
		});
		st(s, Bd, s), $(s, zG, s);
		const l = $(s, OG);
		st(l, Bd, s);
		const u = [
				[co, o]
			],
			c = [
				[co, null],
				[Fd, r]
			];
		for (let m = 0; m < Qs.length; m++) Pn(n, Qs[m], _d, Ht, u);
		for (let m = 0; m < Xs.length; m++) Pn(n, Xs[m], zd, Pd, c);
		si(_d, {
			tld: !0,
			ascii: !0
		}, e), si(zd, {
			utld: !0,
			alpha: !0
		}, e), Pn(n, "file", Os, Ht, u), Pn(n, "mailto", Os, Ht, u), Pn(n, "http", ao, Ht, u), Pn(n, "https", ao, Ht, u), Pn(n, "ftp", ao, Ht, u), Pn(n, "ftps", ao, Ht, u), si(Os, {
			scheme: !0,
			ascii: !0
		}, e), si(ao, {
			slashscheme: !0,
			ascii: !0
		}, e), t = t.sort((m, d) => m[0] > d[0] ? 1 : -1);
		for (let m = 0; m < t.length; m++) {
			const d = t[m][0],
				f = t[m][1] ? {
					[NG]: !0
				} : {
					[MG]: !0
				};
			d.indexOf("-") >= 0 ? f[Md] = !0 : co.test(d) ? Ud.test(d) ? f[_s] = !0 : f[Ad] = !0 : f[$d] = !0, rb(n, d, d, f)
		}
		return rb(n, "localhost", Pr, {
			ascii: !0
		}), n.jd = new He(Gs), {
			start: n,
			tokens: ro({
				groups: e
			}, lb)
		}
	}

	function IG(t, e) {
		const n = RG(e.replace(/[A-Z]/g, s => s.toLowerCase())),
			i = n.length,
			o = [];
		let r = 0,
			a = 0;
		for (; a < i;) {
			let s = t,
				l = null,
				u = 0,
				c = null,
				m = -1,
				d = -1;
			for (; a < i && (l = s.go(n[a]));) s = l, s.accepts() ? (m = 0, d = 0, c = s) : m >= 0 && (m += n[a].length, d++), u += n[a].length, r += n[a].length, a++;
			r -= m, a -= d, u -= m, o.push({
				t: c.t,
				v: e.slice(r - u, r),
				s: r - u,
				e: r
			})
		}
		return o
	}

	function RG(t) {
		const e = [],
			n = t.length;
		let i = 0;
		for (; i < n;) {
			let o = t.charCodeAt(i),
				r, a = o < 55296 || o > 56319 || i + 1 === n || (r = t.charCodeAt(i + 1)) < 56320 || r > 57343 ? t[i] : t.slice(i, i + 2);
			e.push(a), i += a.length
		}
		return e
	}

	function Pn(t, e, n, i, o) {
		let r;
		const a = e.length;
		for (let s = 0; s < a - 1; s++) {
			const l = e[s];
			t.j[l] ? r = t.j[l] : (r = new He(i), r.jr = o.slice(), t.j[l] = r), t = r
		}
		return r = new He(n), r.jr = o.slice(), t.j[e[a - 1]] = r, r
	}

	function db(t) {
		const e = [],
			n = [];
		let i = 0,
			o = "0123456789";
		for (; i < t.length;) {
			let r = 0;
			for (; o.indexOf(t[i + r]) >= 0;) r++;
			if (r > 0) {
				e.push(n.join(""));
				for (let a = parseInt(t.substring(i, i + r), 10); a > 0; a--) n.pop();
				i += r
			} else n.push(t[i]), i++
		}
		return e
	}
	const Ir = {
		defaultProtocol: "http",
		events: null,
		format: mb,
		formatHref: mb,
		nl2br: !1,
		tagName: "a",
		target: null,
		rel: null,
		validate: !0,
		truncate: 1 / 0,
		className: null,
		attributes: null,
		ignoreTags: [],
		render: null
	};

	function Vd(t, e) {
		e === void 0 && (e = null);
		let n = ro({}, Ir);
		t && (n = ro(n, t instanceof Vd ? t.o : t));
		const i = n.ignoreTags,
			o = [];
		for (let r = 0; r < i.length; r++) o.push(i[r].toUpperCase());
		this.o = n, e && (this.defaultRender = e), this.ignoreTags = o
	}
	Vd.prototype = {
		o: Ir,
		ignoreTags: [],
		defaultRender(t) {
			return t
		},
		check(t) {
			return this.get("validate", t.toString(), t)
		},
		get(t, e, n) {
			const i = e != null;
			let o = this.o[t];
			return o && (typeof o == "object" ? (o = n.t in o ? o[n.t] : Ir[t], typeof o == "function" && i && (o = o(e, n))) : typeof o == "function" && i && (o = o(e, n.t, n)), o)
		},
		getObj(t, e, n) {
			let i = this.o[t];
			return typeof i == "function" && e != null && (i = i(e, n.t, n)), i
		},
		render(t) {
			const e = t.render(this);
			return (this.get("render", null, t) || this.defaultRender)(e, t.t, t)
		}
	};

	function mb(t) {
		return t
	}

	function pb(t, e) {
		this.t = "token", this.v = t, this.tk = e
	}
	pb.prototype = {
		isLink: !1,
		toString() {
			return this.v
		},
		toHref(t) {
			return this.toString()
		},
		toFormattedString(t) {
			const e = this.toString(),
				n = t.get("truncate", e, this),
				i = t.get("format", e, this);
			return n && i.length > n ? i.substring(0, n) + "…" : i
		},
		toFormattedHref(t) {
			return t.get("formatHref", this.toHref(t.get("defaultProtocol")), this)
		},
		startIndex() {
			return this.tk[0].s
		},
		endIndex() {
			return this.tk[this.tk.length - 1].e
		},
		toObject(t) {
			return t === void 0 && (t = Ir.defaultProtocol), {
				type: this.t,
				value: this.toString(),
				isLink: this.isLink,
				href: this.toHref(t),
				start: this.startIndex(),
				end: this.endIndex()
			}
		},
		toFormattedObject(t) {
			return {
				type: this.t,
				value: this.toFormattedString(t),
				isLink: this.isLink,
				href: this.toFormattedHref(t),
				start: this.startIndex(),
				end: this.endIndex()
			}
		},
		validate(t) {
			return t.get("validate", this.toString(), this)
		},
		render(t) {
			const e = this,
				n = this.toHref(t.get("defaultProtocol")),
				i = t.get("formatHref", n, this),
				o = t.get("tagName", n, e),
				r = this.toFormattedString(t),
				a = {},
				s = t.get("className", n, e),
				l = t.get("target", n, e),
				u = t.get("rel", n, e),
				c = t.getObj("attributes", n, e),
				m = t.getObj("events", n, e);
			return a.href = i, s && (a.class = s), l && (a.target = l), u && (a.rel = u), c && ro(a, c), {
				tagName: o,
				attributes: a,
				content: r,
				eventListeners: m
			}
		}
	};

	function Zs(t, e) {
		class n extends pb {
			constructor(o, r) {
				super(o, r), this.t = t
			}
		}
		for (const i in e) n.prototype[i] = e[i];
		return n.t = t, n
	}
	const fb = Zs("email", {
			isLink: !0,
			toHref() {
				return "mailto:" + this.toString()
			}
		}),
		hb = Zs("text"),
		YG = Zs("nl"),
		ci = Zs("url", {
			isLink: !0,
			toHref(t) {
				return t === void 0 && (t = Ir.defaultProtocol), this.hasProtocol() ? this.v : `${t}://${this.v}`
			},
			hasProtocol() {
				const t = this.tk;
				return t.length >= 2 && t[0].t !== Pr && t[1].t === Mn
			}
		}),
		he = t => new He(t);

	function LG(t) {
		let {
			groups: e
		} = t;
		const n = e.domain.concat([Ds, Rs, Nn, Ys, Ls, Fs, Bs, Us, Nt, Od, Vs, Hs, qs, Ws, Mt, Gs, Dr, Js]),
			i = [Is, uo, li, lo, ui, Mn, Id, At, Rd, zr, so, _r, Or, Ks, Yd, Ld],
			o = [Ds, Is, Rs, Ys, Ls, Fs, li, Bs, Us, Nt, so, Vs, Hs, qs, Ws, Ks, Mt, Gs, Dr, Js],
			r = he(),
			a = $(r, Dr);
		O(a, o, a), O(a, e.domain, a);
		const s = he(),
			l = he(),
			u = he();
		O(r, e.domain, s), O(r, e.scheme, l), O(r, e.slashscheme, u), O(s, o, a), O(s, e.domain, s);
		const c = $(s, Nn);
		$(a, Nn, c), $(l, Nn, c), $(u, Nn, c);
		const m = $(a, At);
		O(m, o, a), O(m, e.domain, a);
		const d = he();
		O(c, e.domain, d), O(d, e.domain, d);
		const p = $(d, At);
		O(p, e.domain, d);
		const f = he(fb);
		O(p, e.tld, f), O(p, e.utld, f), $(c, Pr, f);
		const y = $(d, Nt);
		O(y, e.domain, d), O(f, e.domain, d), $(f, At, p), $(f, Nt, y);
		const h = $(f, Mn);
		O(h, e.numeric, fb);
		const g = $(s, Nt),
			b = $(s, At);
		O(g, e.domain, s), O(b, o, a), O(b, e.domain, s);
		const v = he(ci);
		O(b, e.tld, v), O(b, e.utld, v), O(v, e.domain, s), O(v, o, a), $(v, At, b), $(v, Nt, g), $(v, Nn, c);
		const w = $(v, Mn),
			x = he(ci);
		O(w, e.numeric, x);
		const S = he(ci),
			E = he();
		O(S, n, S), O(S, i, E), O(E, n, S), O(E, i, E), $(v, Mt, S), $(x, Mt, S);
		const T = $(l, Mn),
			M = $(u, Mn),
			U = $(M, Mt),
			qe = $(U, Mt);
		O(l, e.domain, s), $(l, At, b), $(l, Nt, g), O(u, e.domain, s), $(u, At, b), $(u, Nt, g), O(T, e.domain, S), $(T, Mt, S), O(qe, e.domain, S), O(qe, n, S), $(qe, Mt, S);
		const Z = $(S, so),
			W = $(S, _r),
			Se = $(S, zr),
			ae = $(S, Or);
		$(E, so, Z), $(E, _r, W), $(E, zr, Se), $(E, Or, ae), $(Z, li, S), $(W, lo, S), $(Se, uo, S), $(ae, ui, S), $(Z, li, S);
		const Ce = he(ci),
			K = he(ci),
			se = he(ci),
			Pe = he(ci);
		O(Z, n, Ce), O(W, n, K), O(Se, n, se), O(ae, n, Pe);
		const Re = he(),
			N = he(),
			D = he(),
			I = he();
		return O(Z, i), O(W, i), O(Se, i), O(ae, i), O(Ce, n, Ce), O(K, n, K), O(se, n, se), O(Pe, n, Pe), O(Ce, i, Ce), O(K, i, K), O(se, i, se), O(Pe, i, Pe), O(Re, n, Re), O(N, n, K), O(D, n, se), O(I, n, Pe), O(Re, i, Re), O(N, i, N), O(D, i, D), O(I, i, I), $(K, lo, S), $(se, uo, S), $(Pe, ui, S), $(Ce, li, S), $(N, lo, S), $(D, uo, S), $(I, ui, S), $(Re, ui, S), $(r, Pr, v), $(r, Dd, YG), {
			start: r,
			tokens: lb
		}
	}

	function FG(t, e, n) {
		let i = n.length,
			o = 0,
			r = [],
			a = [];
		for (; o < i;) {
			let s = t,
				l = null,
				u = null,
				c = 0,
				m = null,
				d = -1;
			for (; o < i && !(l = s.go(n[o].t));) a.push(n[o++]);
			for (; o < i && (u = l || s.go(n[o].t));) l = null, s = u, s.accepts() ? (d = 0, m = s) : d >= 0 && d++, o++, c++;
			if (d < 0) o -= c, o < i && (a.push(n[o]), o++);
			else {
				a.length > 0 && (r.push(Hd(hb, e, a)), a = []), o -= d, c -= d;
				const p = m.t,
					f = n.slice(o - c, o);
				r.push(Hd(p, e, f))
			}
		}
		return a.length > 0 && r.push(Hd(hb, e, a)), r
	}

	function Hd(t, e, n) {
		const i = n[0].s,
			o = n[n.length - 1].e,
			r = e.slice(i, o);
		return new t(r, n)
	}
	const BG = typeof console < "u" && console && console.warn || (() => {}),
		UG = "until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.",
		te = {
			scanner: null,
			parser: null,
			tokenQueue: [],
			pluginQueue: [],
			customSchemes: [],
			initialized: !1
		};

	function VG() {
		He.groups = {}, te.scanner = null, te.parser = null, te.tokenQueue = [], te.pluginQueue = [], te.customSchemes = [], te.initialized = !1
	}

	function gb(t, e) {
		if (e === void 0 && (e = !1), te.initialized && BG(`linkifyjs: already initialized - will not register custom scheme "${t}" ${UG}`), !/^[0-9a-z]+(-[0-9a-z]+)*$/.test(t)) throw new Error(`linkifyjs: incorrect scheme format.
 1. Must only contain digits, lowercase ASCII letters or "-"
 2. Cannot start or end with "-"
 3. "-" cannot repeat`);
		te.customSchemes.push([t, e])
	}

	function HG() {
		te.scanner = DG(te.customSchemes);
		for (let t = 0; t < te.tokenQueue.length; t++) te.tokenQueue[t][1]({
			scanner: te.scanner
		});
		te.parser = LG(te.scanner.tokens);
		for (let t = 0; t < te.pluginQueue.length; t++) te.pluginQueue[t][1]({
			scanner: te.scanner,
			parser: te.parser
		});
		te.initialized = !0
	}

	function qG(t) {
		return te.initialized || HG(), FG(te.parser.start, t, IG(te.scanner.start, t))
	}

	function qd(t, e, n) {
		if (e === void 0 && (e = null), n === void 0 && (n = null), e && typeof e == "object") {
			if (n) throw Error(`linkifyjs: Invalid link type ${e}; must be a string`);
			n = e, e = null
		}
		const i = new Vd(n),
			o = qG(t),
			r = [];
		for (let a = 0; a < o.length; a++) {
			const s = o[a];
			s.isLink && (!e || s.t === e) && r.push(s.toFormattedObject(i))
		}
		return r
	}

	function WG(t) {
		return new Qe({
			key: new zt("autolink"),
			appendTransaction: (e, n, i) => {
				const o = e.some(u => u.docChanged) && !n.doc.eq(i.doc),
					r = e.some(u => u.getMeta("preventAutolink"));
				if (!o || r) return;
				const {
					tr: a
				} = i, s = m7(n.doc, [...e]);
				if (w7(s).forEach(({
						newRange: u
					}) => {
						const c = f7(i.doc, u, p => p.isTextblock);
						let m, d;
						if (c.length > 1 ? (m = c[0], d = i.doc.textBetween(m.pos, m.pos + m.node.nodeSize, void 0, " ")) : c.length && i.doc.textBetween(u.from, u.to, " ", " ").endsWith(" ") && (m = c[0], d = i.doc.textBetween(m.pos, u.to, void 0, " ")), m && d) {
							const p = d.split(" ").filter(h => h !== "");
							if (p.length <= 0) return !1;
							const f = p[p.length - 1],
								y = m.pos + d.lastIndexOf(f);
							if (!f) return !1;
							qd(f).filter(h => h.isLink).map(h => ({
								...h,
								from: y + h.start + 1,
								to: y + h.end + 1
							})).filter(h => i.schema.marks.code ? !i.doc.rangeHasMark(h.from, h.to, i.schema.marks.code) : !0).filter(h => t.validate ? t.validate(h.value) : !0).forEach(h => {
								S7(h.from, h.to, i.doc).some(g => g.mark.type === t.type) || a.addMark(h.from, h.to, t.type.create({
									href: h.href
								}))
							})
						}
					}), !!a.steps.length) return a
			}
		})
	}

	function KG(t) {
		return new Qe({
			key: new zt("handleClickLink"),
			props: {
				handleClick: (e, n, i) => {
					var o, r;
					if (i.button !== 0 || i.target.nodeName !== "A") return !1;
					const s = Kf(e.state, t.type.name),
						l = i.target,
						u = (o = l == null ? void 0 : l.href) !== null && o !== void 0 ? o : s.href,
						c = (r = l == null ? void 0 : l.target) !== null && r !== void 0 ? r : s.target;
					return l && u ? (e.editable && window.open(u, c), !0) : !1
				}
			}
		})
	}

	function JG(t) {
		return new Qe({
			key: new zt("handlePasteLink"),
			props: {
				handlePaste: (e, n, i) => {
					var o, r;
					const {
						state: a
					} = e, {
						selection: s
					} = a;
					if (a.doc.resolve(s.from).parent.type.spec.code) return !1;
					let l = "";
					i.content.forEach(b => {
						l += b.textContent
					});
					let u = !1;
					if (i.content.descendants(b => {
							b.marks.some(v => v.type.name === t.type.name) && (u = !0)
						}), u) return;
					const c = qd(l).find(b => b.isLink && b.value === l);
					if (!s.empty && t.linkOnPaste) {
						const b = (c == null ? void 0 : c.href) || null;
						if (b) return t.editor.commands.setMark(t.type, {
							href: b
						}), !0
					}
					const m = ((o = i.content.firstChild) === null || o === void 0 ? void 0 : o.type.name) === "text",
						d = (r = i.content.firstChild) === null || r === void 0 ? void 0 : r.marks.some(b => b.type.name === t.type.name);
					if (m && d || !t.linkOnPaste) return !1;
					if (c && s.empty) return t.editor.commands.insertContent(`<a href="${c.href}">${c.href}</a>`), !0;
					const {
						tr: p
					} = a;
					let f = !1;
					s.empty || (f = !0, p.delete(s.from, s.to));
					let y = s.from,
						h = [];
					i.content.forEach(b => {
						h = qd(b.textContent), p.insert(y - 1, b), h.length > 0 && (f = !1, h.forEach(v => {
							const w = y + v.start,
								x = y + v.end;
							p.doc.rangeHasMark(w, x, t.type) || p.addMark(w, x, t.type.create({
								href: v.href
							}))
						})), y += b.nodeSize
					});
					const g = h.length > 0;
					return p.docChanged && !f && g ? (t.editor.view.dispatch(p), !0) : !1
				}
			}
		})
	}
	const GG = Oo.create({
			name: "link",
			priority: 1e3,
			keepOnSplit: !1,
			onCreate() {
				this.options.protocols.forEach(t => {
					if (typeof t == "string") {
						gb(t);
						return
					}
					gb(t.scheme, t.optionalSlashes)
				})
			},
			onDestroy() {
				VG()
			},
			inclusive() {
				return this.options.autolink
			},
			addOptions() {
				return {
					openOnClick: !0,
					linkOnPaste: !0,
					autolink: !0,
					protocols: [],
					HTMLAttributes: {
						target: "_blank",
						rel: "noopener noreferrer nofollow",
						class: null
					},
					validate: void 0
				}
			},
			addAttributes() {
				return {
					href: {
						default: null
					},
					target: {
						default: this.options.HTMLAttributes.target
					},
					rel: {
						default: this.options.HTMLAttributes.rel
					},
					class: {
						default: this.options.HTMLAttributes.class
					}
				}
			},
			parseHTML() {
				return [{
					tag: 'a[href]:not([href *= "javascript:" i])'
				}]
			},
			renderHTML({
				HTMLAttributes: t
			}) {
				return ["a", _o(this.options.HTMLAttributes, t), 0]
			},
			addCommands() {
				return {
					setLink: t => ({
						chain: e
					}) => e().setMark(this.name, t).setMeta("preventAutolink", !0).run(),
					toggleLink: t => ({
						chain: e
					}) => e().toggleMark(this.name, t, {
						extendEmptyMarkRange: !0
					}).setMeta("preventAutolink", !0).run(),
					unsetLink: () => ({
						chain: t
					}) => t().unsetMark(this.name, {
						extendEmptyMarkRange: !0
					}).setMeta("preventAutolink", !0).run()
				}
			},
			addProseMirrorPlugins() {
				const t = [];
				return this.options.autolink && t.push(WG({
					type: this.type,
					validate: this.options.validate
				})), this.options.openOnClick && t.push(KG({
					type: this.type
				})), t.push(JG({
					editor: this.editor,
					type: this.type,
					linkOnPaste: this.options.linkOnPaste
				})), t
			}
		}),
		QG = sn.create({
			name: "paragraph",
			priority: 1e3,
			addOptions() {
				return {
					HTMLAttributes: {}
				}
			},
			group: "block",
			content: "inline*",
			parseHTML() {
				return [{
					tag: "p"
				}]
			},
			renderHTML({
				HTMLAttributes: t
			}) {
				return ["p", _o(this.options.HTMLAttributes, t), 0]
			},
			addCommands() {
				return {
					setParagraph: () => ({
						commands: t
					}) => t.setNode(this.name)
				}
			},
			addKeyboardShortcuts() {
				return {
					"Mod-Alt-0": () => this.editor.commands.setParagraph()
				}
			}
		}),
		XG = wt.create({
			name: "placeholder",
			addOptions() {
				return {
					emptyEditorClass: "is-editor-empty",
					emptyNodeClass: "is-empty",
					placeholder: "Write something …",
					showOnlyWhenEditable: !0,
					showOnlyCurrent: !0,
					includeChildren: !1
				}
			},
			addProseMirrorPlugins() {
				return [new Qe({
					key: new zt("placeholder"),
					props: {
						decorations: ({
							doc: t,
							selection: e
						}) => {
							const n = this.editor.isEditable || !this.options.showOnlyWhenEditable,
								{
									anchor: i
								} = e,
								o = [];
							if (!n) return null;
							const r = t.type.createAndFill(),
								a = (r == null ? void 0 : r.sameMarkup(t)) && r.content.findDiffStart(t.content) === null;
							return t.descendants((s, l) => {
								const u = i >= l && i <= l + s.nodeSize,
									c = !s.isLeaf && !s.childCount;
								if ((u || !this.options.showOnlyCurrent) && c) {
									const m = [this.options.emptyNodeClass];
									a && m.push(this.options.emptyEditorClass);
									const d = et.node(l, l + s.nodeSize, {
										class: m.join(" "),
										"data-placeholder": typeof this.options.placeholder == "function" ? this.options.placeholder({
											editor: this.editor,
											node: s,
											pos: l,
											hasAnchor: u
										}) : this.options.placeholder
									});
									o.push(d)
								}
								return this.options.includeChildren
							}), ue.create(t, o)
						}
					}
				})]
			}
		}),
		ZG = sn.create({
			name: "text",
			group: "inline"
		});

	function Wd({
		placeholder: t,
		autofocus: e = !1,
		content: n = ""
	}) {
		return {
			extensions: [TG, ZG, QG, GG.configure({
				openOnClick: !1
			}), XG.configure({
				placeholder: t,
				showOnlyWhenEditable: !1
			}), EG.configure({}), jG.configure({})],
			content: n,
			autofocus: e,
			editorProps: {
				attributes: {
					class: "gh-comment-content focus:outline-0",
					"data-testid": "editor"
				}
			},
			parseOptions: {
				preserveWhitespace: "full"
			}
		}
	}
	const eQ = ({
			comment: t,
			parent: e,
			close: n
		}) => {
			const {
				dispatchAction: i,
				t: o
			} = V(), r = {
				placeholder: o("Edit this comment"),
				autofocus: !1,
				content: t.html
			}, a = bd({
				...Wd(r)
			});
			C.useEffect(() => {
				a && a.chain().focus().command(({
					tr: c,
					commands: m
				}) => m.setTextSelection({
					from: c.doc.content.size,
					to: c.doc.content.size
				})).run()
			}, [a]);
			const s = C.useCallback(async ({
					html: c
				}) => {
					await i("editComment", {
						comment: {
							id: t.id,
							html: c
						},
						parent: e
					})
				}, [e, t, i]),
				l = {
					submitText: o("Save"),
					submitSize: "small",
					submit: s
				},
				u = C.useCallback(() => {
					(a == null ? void 0 : a.getHTML()) === t.html && n()
				}, [a, n, t.html]);
			return k.jsx(nb, {
				close: n,
				closeIfNotChanged: u,
				editor: a,
				...l
			})
		},
		tQ = t => C.createElement("svg", {
			width: 16,
			height: 16,
			viewBox: "0 0 16 16",
			fill: "none",
			xmlns: "http://www.w3.org/2000/svg",
			stroke: "black",
			...t
		}, C.createElement("path", {
			d: "M8.00025 13.8739L2.46073 8.09636C1.97388 7.60989 1.65255 6.98248 1.54231 6.30312C1.43208 5.62376 1.53853 4.92694 1.84658 4.31148V4.31148C2.07887 3.84703 2.41819 3.44443 2.83659 3.13684C3.25499 2.82925 3.74049 2.62547 4.25308 2.54231C4.76567 2.45914 5.29069 2.49896 5.78488 2.65849C6.27906 2.81802 6.72827 3.09269 7.09549 3.45987L8.00025 4.36406L8.90502 3.45987C9.27224 3.09269 9.72145 2.81802 10.2156 2.65849C10.7098 2.49896 11.2348 2.45914 11.7474 2.54231C12.26 2.62547 12.7455 2.82925 13.1639 3.13684C13.5823 3.44443 13.9216 3.84703 14.1539 4.31148C14.4616 4.9267 14.5678 5.62311 14.4577 6.30208C14.3476 6.98105 14.0267 7.60817 13.5404 8.09462L8.00025 13.8739Z",
			strokeWidth: 1.3,
			strokeLinecap: "round",
			strokeLinejoin: "round"
		})),
		nQ = ({
			comment: t
		}) => {
			const {
				dispatchAction: e,
				member: n,
				commentsEnabled: i
			} = V(), [o, r] = C.useState(""), a = i === "paid", s = n && !!n.paid, l = n && (s || !a), u = () => {
				l && (t.liked ? e("unlikeComment", t) : (e("likeComment", t), r("animate-heartbeat"), setTimeout(() => {
					r("")
				}, 400)))
			}, c = l ? "button" : "span";
			let m = "cursor-pointer";
			return l || (m = "cursor-text"), k.jsxs(c, {
				className: `duration-50 group flex items-center font-sans text-sm outline-0 transition-all ease-linear ${t.liked?"text-[rgba(0,0,0,0.9)] dark:text-[rgba(255,255,255,0.9)]":"text-[rgba(0,0,0,0.5)] dark:text-[rgba(255,255,255,0.5)]"} ${!t.liked&&l&&"hover:text-[rgba(0,0,0,0.75)] hover:dark:text-[rgba(255,255,255,0.25)]"} ${m}`,
				"data-testid": "like-button",
				type: "button",
				onClick: u,
				children: [k.jsx(tQ, {
					className: o + ` mr-[6px] ${t.liked?"fill-[rgba(0,0,0,0.9)] stroke-[rgba(0,0,0,0.9)] dark:fill-[rgba(255,255,255,0.9)] dark:stroke-[rgba(255,255,255,0.9)]":"stroke-[rgba(0,0,0,0.5)] dark:stroke-[rgba(255,255,255,0.5)]"} ${!t.liked&&l&&"group-hover:stroke-[rgba(0,0,0,0.75)] dark:group-hover:stroke-[rgba(255,255,255,0.25)]"} transition duration-50 ease-linear`
				}), t.count.likes]
			})
		},
		yb = ({
			comment: t,
			close: e
		}) => {
			const {
				dispatchAction: n,
				t: i
			} = V(), o = () => {
				n("hideComment", t), e()
			}, r = () => {
				n("showComment", t), e()
			}, a = t.status !== "published";
			return k.jsx("div", {
				className: "flex flex-col",
				children: a ? k.jsxs("button", {
					className: "w-full text-left text-[14px]",
					type: "button",
					onClick: r,
					children: [k.jsx("span", {
						className: "hidden sm:inline",
						children: i("Show comment")
					}), k.jsx("span", {
						className: "sm:hidden",
						children: i("Show")
					})]
				}) : k.jsxs("button", {
					className: "w-full text-left text-[14px]",
					type: "button",
					onClick: o,
					children: [k.jsx("span", {
						className: "hidden sm:inline",
						children: i("Hide comment")
					}), k.jsx("span", {
						className: "sm:hidden",
						children: i("Hide")
					})]
				})
			})
		},
		iQ = ({
			comment: t,
			close: e,
			toggleEdit: n
		}) => {
			const {
				dispatchAction: i,
				t: o
			} = V(), r = () => {
				i("deleteComment", t), e()
			};
			return k.jsxs("div", {
				className: "flex flex-col",
				children: [k.jsx("button", {
					className: "mb-3 w-full text-left text-[14px]",
					"data-testid": "edit",
					type: "button",
					onClick: n,
					children: o("Edit")
				}), k.jsx("button", {
					className: "w-full text-left text-[14px] text-red-600",
					type: "button",
					onClick: r,
					children: o("Delete")
				})]
			})
		},
		oQ = ({
			comment: t,
			close: e
		}) => {
			const {
				dispatchAction: n,
				t: i
			} = V(), o = () => {
				n("openPopup", {
					type: "reportPopup",
					comment: t
				}), e()
			};
			return k.jsx("div", {
				className: "flex flex-col",
				children: k.jsxs("button", {
					className: "w-full text-left text-[14px]",
					type: "button",
					onClick: o,
					children: [k.jsx("span", {
						className: "hidden sm:inline",
						children: i("Report comment")
					}), k.jsx("span", {
						className: "sm:hidden",
						children: i("Report")
					})]
				})
			})
		},
		rQ = ({
			comment: t,
			close: e,
			toggleEdit: n
		}) => {
			var c;
			const {
				member: i,
				admin: o
			} = V(), r = i && ((c = t.member) == null ? void 0 : c.uuid) === (i == null ? void 0 : i.uuid), a = !!o, s = C.useRef(null);
			C.useEffect(() => {
				var p, f;
				const m = () => {
					e()
				};
				window.addEventListener("click", m, {
					passive: !0
				});
				const d = (f = (p = s.current) == null ? void 0 : p.ownerDocument) == null ? void 0 : f.defaultView;
				return d && d !== window && d.addEventListener("click", m, {
					passive: !0
				}), () => {
					window.removeEventListener("click", m, {
						passive: !0
					}), d && d !== window && d.removeEventListener("click", m, {
						passive: !0
					})
				}
			}, [e]), C.useEffect(() => {
				const m = d => {
					d.key === "Escape" && e()
				};
				return window.addEventListener("keydown", m, {
					passive: !0
				}), () => {
					window.removeEventListener("keydown", m, {
						passive: !0
					})
				}
			}, [e]);
			const l = m => {
				m.stopPropagation()
			};
			let u = null;
			if (t.status === "published") r ? u = k.jsx(iQ, {
				close: e,
				comment: t,
				toggleEdit: n
			}) : a ? u = k.jsx(yb, {
				close: e,
				comment: t
			}) : u = k.jsx(oQ, {
				close: e,
				comment: t
			});
			else if (a) u = k.jsx(yb, {
				close: e,
				comment: t
			});
			else return null;
			return k.jsx("div", {
				ref: s,
				onClick: l,
				children: k.jsx("div", {
					className: "absolute z-10 min-w-min whitespace-nowrap rounded bg-white py-3 pl-4 pr-8 font-sans text-sm shadow-lg outline-0 dark:bg-zinc-900 dark:text-white sm:min-w-[150px]",
					children: u
				})
			})
		},
		aQ = t => C.createElement("svg", {
			width: 16,
			height: 16,
			viewBox: "0 0 16 16",
			fill: "black",
			xmlns: "http://www.w3.org/2000/svg",
			...t
		}, C.createElement("path", {
			d: "M3 12C3.82843 12 4.5 11.3284 4.5 10.5C4.5 9.67157 3.82843 9 3 9C2.17157 9 1.5 9.67157 1.5 10.5C1.5 11.3284 2.17157 12 3 12Z"
		}), C.createElement("path", {
			d: "M8 12C8.82843 12 9.5 11.3284 9.5 10.5C9.5 9.67157 8.82843 9 8 9C7.17157 9 6.5 9.67157 6.5 10.5C6.5 11.3284 7.17157 12 8 12Z"
		}), C.createElement("path", {
			d: "M13 12C13.8284 12 14.5 11.3284 14.5 10.5C14.5 9.67157 13.8284 9 13 9C12.1716 9 11.5 9.67157 11.5 10.5C11.5 11.3284 12.1716 12 13 12Z"
		})),
		bb = ({
			comment: t,
			toggleEdit: e
		}) => {
			const [n, i] = C.useState(!1), {
				member: o,
				admin: r
			} = V(), a = !!r, s = () => {
				i(c => !c)
			}, l = () => {
				i(!1)
			};
			return !!o && t.status === "published" || a ? k.jsxs("div", {
				className: "relative",
				"data-testid": "more-button",
				children: [k.jsx("button", {
					className: "outline-0",
					type: "button",
					onClick: s,
					children: k.jsx(aQ, {
						className: "duration-50 gh-comments-icon gh-comments-icon-more fill-[rgba(0,0,0,0.5)] outline-0 transition ease-linear hover:fill-[rgba(0,0,0,0.75)] dark:fill-[rgba(255,255,255,0.5)] dark:hover:fill-[rgba(255,255,255,0.25)]"
					})
				}), n ? k.jsx(rQ, {
					close: l,
					comment: t,
					toggleEdit: e
				}) : null]
			}) : null
		},
		sQ = ({
			loadMore: t,
			count: e
		}) => {
			const {
				t: n
			} = V(), i = e === 1 ? n("Show 1 more reply") : n("Show {{amount}} more replies", {
				amount: gl(e)
			});
			return k.jsx("div", {
				className: "flex w-full items-center justify-start",
				children: k.jsx("button", {
					className: "text-md group mb-10 ml-[48px] flex w-auto items-center px-0 pb-2 pt-0 text-left font-sans font-semibold text-neutral-700 dark:text-white sm:mb-12 ",
					"data-testid": "reply-pagination-button",
					type: "button",
					onClick: t,
					children: k.jsxs("span", {
						className: "flex h-[39px] w-auto items-center justify-center whitespace-nowrap rounded-[6px] bg-[rgba(0,0,0,0.05)] px-4 py-2 text-center font-sans text-sm font-semibold text-neutral-700 outline-0 transition-[opacity,background] duration-150 hover:bg-[rgba(0,0,0,0.1)] dark:bg-[rgba(255,255,255,0.08)] dark:text-neutral-100 dark:hover:bg-[rgba(255,255,255,0.1)]",
						children: ["↓ ", i]
					})
				})
			})
		},
		lQ = ({
			comment: t
		}) => {
			const {
				dispatchAction: e
			} = V(), n = t.count.replies - t.replies.length, i = () => {
				e("loadMoreReplies", {
					comment: t
				})
			};
			return k.jsxs("div", {
				children: [t.replies.map(o => k.jsx(kb, {
					comment: o,
					parent: t
				}, o.id)), n > 0 && k.jsx(sQ, {
					count: n,
					loadMore: i
				})]
			})
		},
		uQ = t => C.createElement("svg", {
			width: 16,
			height: 16,
			viewBox: "0 0 16 16",
			fill: "none",
			stroke: "black",
			xmlns: "http://www.w3.org/2000/svg",
			...t
		}, C.createElement("path", {
			d: "M7.17463 2.98741C7.17439 2.7888 7.11434 2.59487 7.00229 2.43088C6.89025 2.26689 6.73141 2.14046 6.54647 2.06805C6.36153 1.99564 6.15907 1.98061 5.96546 2.02492C5.77186 2.06923 5.5961 2.17083 5.46107 2.31648L1.86192 6.21418C1.69351 6.39677 1.60001 6.63606 1.60001 6.88445C1.60001 7.13284 1.69351 7.37213 1.86192 7.55472L5.45909 11.4524C5.59412 11.5981 5.76988 11.6997 5.96349 11.744C6.15709 11.7883 6.35955 11.7733 6.54449 11.7009C6.72943 11.6284 6.88827 11.502 7.00032 11.338C7.11236 11.174 7.17242 10.9801 7.17265 10.7815V8.86164H9.12703C10.438 8.86164 11.6953 9.38241 12.6222 10.3094C13.5492 11.2364 14.07 12.4937 14.07 13.8046V9.85023C14.07 8.53927 13.5492 7.28201 12.6222 6.35502C11.6953 5.42803 10.438 4.90726 9.12703 4.90726H7.17265L7.17463 2.98741Z",
			strokeWidth: 1.3,
			strokeLinecap: "round",
			strokeLinejoin: "round"
		})),
		cQ = ({
			disabled: t,
			isReplying: e,
			toggleReply: n
		}) => {
			const {
				member: i,
				t: o
			} = V();
			return i ? k.jsxs("button", {
				className: `duration-50 group flex items-center font-sans text-sm outline-0 transition-all ease-linear ${e?"text-[rgba(0,0,0,0.9)] dark:text-[rgba(255,255,255,0.9)]":"text-[rgba(0,0,0,0.5)] hover:text-[rgba(0,0,0,0.75)] dark:text-[rgba(255,255,255,0.5)] dark:hover:text-[rgba(255,255,255,0.25)]"}`,
				"data-testid": "reply-button",
				disabled: !!t,
				type: "button",
				onClick: n,
				children: [k.jsx(uQ, {
					className: `mr-[6px] ${e?"fill-[rgba(0,0,0,0.9)] stroke-[rgba(0,0,0,0.9)] dark:fill-[rgba(255,255,255,0.9)] dark:stroke-[rgba(255,255,255,0.9)]":"stroke-[rgba(0,0,0,0.5)] group-hover:stroke-[rgba(0,0,0,0.75)] dark:stroke-[rgba(255,255,255,0.5)] dark:group-hover:stroke-[rgba(255,255,255,0.25)]"} duration-50 transition ease-linear`
				}), o("Reply")]
			}) : null
		},
		dQ = ({
			parent: t,
			close: e
		}) => {
			const {
				postId: n,
				dispatchAction: i,
				t: o
			} = V(), [, r] = bG(xm), a = {
				placeholder: o("Reply to comment"),
				autofocus: !0
			}, s = bd({
				...Wd(a)
			}), l = C.useCallback(async ({
				html: m
			}) => {
				await i("addReply", {
					parent: t,
					reply: {
						post_id: n,
						status: "published",
						html: m
					}
				})
			}, [t, n, i]), u = {
				submitText: k.jsxs(k.Fragment, {
					children: [k.jsx("span", {
						className: "hidden sm:inline",
						children: o("Add reply")
					}), k.jsx("span", {
						className: "sm:hidden",
						children: o("Reply")
					})]
				}),
				submitSize: "medium",
				submit: l
			}, c = C.useCallback(() => {
				s != null && s.isEmpty && e()
			}, [s, e]);
			return k.jsx("div", {
				ref: r,
				children: k.jsx(nb, {
					close: e,
					closeIfNotChanged: c,
					editor: s,
					...u
				})
			})
		},
		kb = ({
			comment: t,
			parent: e
		}) => k.jsx(ai, {
			enter: "transition-opacity duration-300 ease-out",
			enterFrom: "opacity-0",
			enterTo: "opacity-100",
			leave: "transition-opacity duration-100",
			leaveFrom: "opacity-100",
			leaveTo: "opacity-0",
			show: !0,
			appear: !0,
			children: k.jsx(mQ, {
				comment: t,
				parent: e
			})
		}),
		mQ = ({
			comment: t,
			parent: e
		}) => {
			const [n, i] = C.useState(!1), o = () => {
				i(!1)
			}, r = () => {
				i(!0)
			};
			return n ? k.jsx(eQ, {
				close: o,
				comment: t,
				parent: e
			}) : k.jsx(pQ, {
				comment: t,
				openEditMode: r,
				parent: e
			})
		},
		pQ = ({
			comment: t,
			parent: e,
			openEditMode: n
		}) => i6(t) ? k.jsx(fQ, {
			comment: t,
			openEditMode: n,
			parent: e
		}) : k.jsx(hQ, {
			comment: t,
			openEditMode: n
		}),
		fQ = ({
			comment: t,
			parent: e,
			openEditMode: n
		}) => {
			const [i, o] = C.useState(!1), {
				dispatchAction: r
			} = V(), a = async () => {
				i || await r("loadMoreReplies", {
					comment: t,
					limit: "all"
				}), o(c => !c)
			}, s = () => {
				o(!1)
			}, l = i || t.replies && t.replies.length > 0, u = k.jsx(Tm, {
				comment: t
			});
			return k.jsxs(wb, {
				avatar: u,
				hasReplies: l,
				children: [k.jsx(vQ, {
					comment: t
				}), k.jsx(wQ, {
					html: t.html
				}), k.jsx(SQ, {
					comment: t,
					isInReplyMode: i,
					openEditMode: n,
					parent: e,
					toggleReplyMode: a
				}), k.jsx(vb, {
					comment: t
				}), k.jsx(bQ, {
					closeReplyMode: s,
					comment: t,
					isInReplyMode: i
				})]
			})
		},
		hQ = ({
			comment: t,
			openEditMode: e
		}) => {
			const {
				admin: n,
				t: i
			} = V();
			let o;
			n && t.status === "hidden" ? o = i("This comment has been hidden.") : o = i("This comment has been removed.");
			const r = k.jsx(r6, {}),
				a = t.replies && t.replies.length > 0;
			return k.jsxs(wb, {
				avatar: r,
				hasReplies: a,
				children: [k.jsx("div", {
					className: "mb-2 mt-[-3px] flex items-start",
					children: k.jsxs("div", {
						className: "flex h-12 flex-row items-center gap-4 pb-[8px] pr-4",
						children: [k.jsx("p", {
							className: "mt-[4px] font-sans text-[16px] italic leading-normal text-[rgba(0,0,0,0.2)] dark:text-[rgba(255,255,255,0.35)]",
							children: o
						}), k.jsx("div", {
							className: "mt-[4px]",
							children: k.jsx(bb, {
								comment: t,
								toggleEdit: e
							})
						})]
					})
				}), k.jsx(vb, {
					comment: t
				})]
			})
		},
		gQ = ({
			comment: t
		}) => {
			var i;
			const {
				member: e
			} = V(), n = e && t.member && t.member.uuid === e.uuid ? e.expertise : (i = t == null ? void 0 : t.member) == null ? void 0 : i.expertise;
			return n ? k.jsxs("span", {
				children: [n, k.jsx("span", {
					className: "mx-[0.3em]",
					children: "·"
				})]
			}) : null
		},
		yQ = ({
			comment: t
		}) => {
			const {
				t: e
			} = V();
			return t.edited_at ? k.jsxs("span", {
				children: [k.jsx("span", {
					className: "mx-[0.3em]",
					children: "·"
				}), e("Edited")]
			}) : null
		},
		vb = ({
			comment: t
		}) => t.replies && t.replies.length > 0 ? k.jsx("div", {
			className: "mb-4 mt-10 sm:mb-0",
			children: k.jsx(lQ, {
				comment: t
			})
		}) : null,
		bQ = ({
			comment: t,
			isInReplyMode: e,
			closeReplyMode: n
		}) => e ? k.jsx("div", {
			className: "my-10",
			children: k.jsx(dQ, {
				close: n,
				parent: t
			})
		}) : null,
		kQ = ({
			comment: t
		}) => {
			const {
				t: e
			} = V(), n = t.member ? t.member.name ? t.member.name : e("Anonymous") : e("Deleted member");
			return k.jsx("h4", {
				className: "text-[rgb(23,23,23] font-sans text-[17px] font-bold tracking-tight dark:text-[rgba(255,255,255,0.85)]",
				children: n
			})
		},
		vQ = ({
			comment: t
		}) => {
			const e = wG(t.created_at);
			return k.jsx("div", {
				className: "mb-2 mt-[-3px] flex items-start",
				children: k.jsxs("div", {
					children: [k.jsx(kQ, {
						comment: t
					}), k.jsx("div", {
						className: "flex items-baseline pr-4 font-sans text-[14px] tracking-tight text-[rgba(0,0,0,0.5)] dark:text-[rgba(255,255,255,0.5)]",
						children: k.jsxs("span", {
							children: [k.jsx(gQ, {
								comment: t
							}), k.jsx("span", {
								title: n6(t.created_at),
								children: e
							}), k.jsx(yQ, {
								comment: t
							})]
						})
					})]
				})
			})
		},
		wQ = ({
			html: t
		}) => {
			const e = {
				__html: t
			};
			return k.jsx("div", {
				className: "mt mb-2 flex flex-row items-center gap-4 pr-4",
				children: k.jsx("p", {
					dangerouslySetInnerHTML: e,
					className: "gh-comment-content font-sans text-[16px] leading-normal text-neutral-900 dark:text-[rgba(255,255,255,0.85)]",
					"data-testid": "comment-content"
				})
			})
		},
		SQ = ({
			comment: t,
			toggleReplyMode: e,
			isInReplyMode: n,
			openEditMode: i,
			parent: o
		}) => {
			const {
				member: r,
				commentsEnabled: a
			} = V(), s = a === "paid", l = r && !!r.paid, u = r && (l || !s) && !o;
			return k.jsxs("div", {
				className: "flex items-center gap-5",
				children: [k.jsx(nQ, {
					comment: t
				}), u && k.jsx(cQ, {
					isReplying: n,
					toggleReply: e
				}), k.jsx(bb, {
					comment: t,
					toggleEdit: i
				})]
			})
		},
		CQ = ({
			hasReplies: t
		}) => t ? k.jsx("div", {
			className: "mb-2 h-full w-[3px] grow rounded bg-gradient-to-b from-[rgba(0,0,0,0.05)] via-[rgba(0,0,0,0.05)] to-transparent dark:from-[rgba(255,255,255,0.08)] dark:via-[rgba(255,255,255,0.08)]"
		}) : null,
		wb = ({
			children: t,
			avatar: e,
			hasReplies: n
		}) => k.jsxs("div", {
			className: `flex w-full flex-row ${n===!0?"mb-0":"mb-10"}`,
			"data-testid": "comment-component",
			children: [k.jsxs("div", {
				className: "mr-3 flex flex-col items-center justify-start",
				children: [k.jsx("div", {
					className: "flex-0 mb-4",
					children: e
				}), k.jsx(CQ, {
					hasReplies: n
				})]
			}), k.jsx("div", {
				className: "grow",
				children: t
			})]
		}),
		xQ = ({
			showCount: t,
			count: e
		}) => {
			const {
				t: n
			} = V();
			return t ? e === 1 ? k.jsx("div", {
				className: "text-[1.6rem] text-[rgba(0,0,0,0.5)] dark:text-[rgba(255,255,255,0.5)]",
				"data-testid": "count",
				children: n("1 comment")
			}) : k.jsx("div", {
				className: "text-[1.6rem] text-[rgba(0,0,0,0.5)] dark:text-[rgba(255,255,255,0.5)]",
				"data-testid": "count",
				children: n("{{amount}} comments", {
					amount: gl(e)
				})
			}) : null
		},
		EQ = ({
			title: t
		}) => {
			const {
				t: e
			} = V();
			return t === null ? k.jsxs(k.Fragment, {
				children: [k.jsx("span", {
					className: "sm:hidden",
					children: e("Discussion")
				}), k.jsx("span", {
					className: "hidden sm:inline",
					children: e("Member discussion")
				})]
			}) : k.jsx(k.Fragment, {
				children: t
			})
		},
		TQ = ({
			title: t,
			showCount: e,
			count: n
		}) => !t && !e && t !== null ? null : k.jsxs("div", {
			className: "mb-8 flex w-full items-baseline justify-between font-sans",
			children: [k.jsx("h2", {
				className: "text-[2.8rem] font-bold tracking-tight dark:text-[rgba(255,255,255,0.85)]",
				"data-testid": "title",
				children: k.jsx(EQ, {
					title: t
				})
			}), k.jsx(xQ, {
				count: n,
				showCount: e
			})]
		}),
		jQ = ({
			commentsCount: t
		}) => {
			const {
				postId: e,
				dispatchAction: n,
				t: i
			} = V(), o = {
				placeholder: i(t === 0 ? "Start the conversation" : "Join the discussion"),
				autofocus: !1
			}, r = bd({
				...Wd(o)
			}), a = C.useCallback(async ({
				html: c
			}) => {
				await n("addComment", {
					post_id: e,
					status: "published",
					html: c
				})
			}, [e, n]), s = C.useRef(null);
			C.useEffect(() => {
				if (!r) return;
				const c = m => {
					var f;
					if (!r || m.metaKey || m.ctrlKey) return;
					let d = document.activeElement;
					for (; d && d.tagName === "IFRAME" && d.contentDocument;) d = ((f = d.contentDocument) == null ? void 0 : f.activeElement) ?? null;
					const p = d && (d.tagName === "INPUT" || d.tagName === "TEXTAREA" || d.tagName === "IFRAME" || d.contentEditable === "true");
					if (m.key === "c" && !(r != null && r.isFocused) && !p) {
						r == null || r.commands.focus(), s.current && xm(s.current);
						return
					}
				};
				return window.addEventListener("keydown", c, {
					passive: !0
				}), () => {
					window.removeEventListener("keydown", c, {
						passive: !0
					})
				}
			}, [r]);
			const l = {
					submitText: k.jsxs(k.Fragment, {
						children: [k.jsxs("span", {
							className: "hidden sm:inline",
							children: [i("Add comment"), " "]
						}), k.jsx("span", {
							className: "sm:hidden",
							children: i("Comment")
						})]
					}),
					submitSize: "large",
					submit: a
				},
				u = (r == null ? void 0 : r.isFocused) ?? !1;
			return k.jsx("div", {
				ref: s,
				className: "mt-[-4px]",
				"data-testid": "main-form",
				children: k.jsx(tb, {
					editor: r,
					isOpen: u,
					reduced: !1,
					...l
				})
			})
		},
		$Q = () => {
			const {
				pagination: t,
				dispatchAction: e,
				t: n
			} = V(), i = () => {
				e("loadMoreComments", {})
			};
			if (!t) return null;
			const o = t.total - t.page * t.limit;
			if (o <= 0) return null;
			const r = o === 1 ? n("Show 1 previous comment") : n("Show {{amount}} previous comments", {
				amount: gl(o)
			});
			return k.jsx("button", {
				className: "text-md group mb-10 flex w-full items-center px-0 pb-2 pt-0 text-left font-sans font-semibold text-neutral-700 dark:text-white",
				"data-testid": "pagination-component",
				type: "button",
				onClick: i,
				children: k.jsxs("span", {
					className: "flex h-[39px] w-full items-center justify-center whitespace-nowrap rounded-[6px] bg-[rgba(0,0,0,0.05)] px-3 py-2 text-center font-sans text-sm font-semibold text-neutral-700 outline-0 transition-[opacity,background] duration-150 hover:bg-[rgba(0,0,0,0.1)] dark:bg-[rgba(255,255,255,0.08)] dark:text-neutral-100 dark:hover:bg-[rgba(255,255,255,0.1)]",
					children: ["↑ ", r]
				})
			})
		},
		el = "ghost-comments-root",
		AQ = () => {
			const {
				pagination: t,
				member: e,
				comments: n,
				commentCount: i,
				commentsEnabled: o,
				title: r,
				showCount: a,
				secundaryFormCount: s
			} = V(), l = n.slice().reverse().map(d => k.jsx(kb, {
				comment: d
			}, d.id)), u = o === "paid", c = e && !!e.paid;
			C.useEffect(() => {
				const d = document.getElementById(el);
				d && window.location.hash === "#ghost-comments" && window.scrollY === 0 && requestAnimationFrame(() => {
					requestAnimationFrame(() => {
						d.scrollIntoView()
					})
				})
			}, []);
			const m = s > 0;
			return k.jsxs(k.Fragment, {
				children: [k.jsx(TQ, {
					count: i,
					showCount: a,
					title: r
				}), k.jsx($Q, {}), k.jsx("div", {
					className: t ? "" : "mt-4",
					"data-test": "comment-elements",
					children: l
				}), k.jsx("div", {
					children: m ? null : e ? c || !u ? k.jsx(jQ, {
						commentsCount: i
					}) : k.jsx(Sm, {
						isFirst: (t == null ? void 0 : t.total) === 0,
						isPaid: u
					}) : k.jsx(Sm, {
						isFirst: (t == null ? void 0 : t.total) === 0,
						isPaid: u
					})
				})]
			})
		};

	function NQ() {
		return k.jsx("div", {
			className: "flex h-32 w-full items-center justify-center",
			children: k.jsx(kd, {
				className: "mb-6 h-12 w-12 fill-[rgb(225,225,225,0.9)] dark:fill-[rgba(255,255,255,0.6)]"
			})
		})
	}
	const MQ = ({
		done: t
	}) => {
		const e = (l, u, c) => {
				const m = [l, u, c].map(function(d) {
					return d /= 255, d <= .03928 ? d / 12.92 : Math.pow((d + .055) / 1.055, 2.4)
				});
				return m[0] * .2126 + m[1] * .7152 + m[2] * .0722
			},
			n = (l, u) => {
				const c = e(l[0], l[1], l[2]),
					m = e(u[0], u[1], u[2]),
					d = Math.max(c, m),
					p = Math.min(c, m);
				return (d + .05) / (p + .05)
			},
			{
				accentColor: i,
				colorScheme: o
			} = V(),
			a = (() => {
				if (o === "light") return !1;
				if (o === "dark") return !0;
				{
					const l = document.getElementById(el);
					if (!l || !l.parentElement) return !1;
					const u = getComputedStyle(l.parentElement).getPropertyValue("color"),
						c = u.substring(u.indexOf("(") + 1, u.lastIndexOf(")")).split(/,\s*/),
						m = parseInt(c[0]),
						d = parseInt(c[1]),
						p = parseInt(c[2]);
					return n([255, 255, 255], [m, d, p]) < 5
				}
			})() ? "dark" : "",
			s = {
				"--gh-accent-color": i ?? "blue",
				paddingTop: 0,
				paddingBottom: 24
			};
		return k.jsx("section", {
			className: "ghost-display " + a,
			"data-testid": "content-box",
			style: s,
			children: t ? k.jsx(AQ, {}) : k.jsx(NQ, {})
		})
	};
	class PQ extends C.Component {
		constructor(n) {
			super(n);
			ho(this, "node");
			ho(this, "iframeHtml");
			ho(this, "iframeHead");
			ho(this, "iframeRoot");
			ho(this, "handleLoad", () => {
				this.setupFrameBaseStyle()
			});
			this.setNode = this.setNode.bind(this), this.node = null
		}
		componentDidMount() {
			this.node.addEventListener("load", this.handleLoad)
		}
		componentWillUnmount() {
			this.node.removeEventListener("load", this.handleLoad)
		}
		setupFrameBaseStyle() {
			var n, i;
			this.node.contentDocument && (this.iframeHtml = this.node.contentDocument.documentElement, this.iframeHead = this.node.contentDocument.head, this.iframeRoot = this.node.contentDocument.body, this.forceUpdate(), this.props.onResize && ((i = (n = new ResizeObserver(o => {
				window.requestAnimationFrame(() => {
					this.props.onResize(this.iframeRoot)
				})
			})) == null ? void 0 : n.observe) == null || i.call(n, this.iframeRoot)), this.node.contentWindow.addEventListener("keydown", o => {
				window.dispatchEvent(new KeyboardEvent("keydown", o))
			}))
		}
		setNode(n) {
			this.node = n
		}
		render() {
			const {
				children: n,
				head: i,
				title: o = "",
				style: r = {},
				...a
			} = this.props;
			return k.jsxs("iframe", {
				srcDoc: "<!DOCTYPE html>",
				...a,
				ref: this.setNode,
				frameBorder: "0",
				style: r,
				title: o,
				children: [this.iframeHead && Ts.createPortal(i, this.iframeHead), this.iframeRoot && Ts.createPortal(n, this.iframeRoot)]
			})
		}
	}
	const _Q = `*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}:before,:after{--tw-content: ""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";-webkit-font-feature-settings:normal;font-feature-settings:normal;font-variation-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;-webkit-font-feature-settings:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*,:before,:after{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x: 0;--tw-border-spacing-y: 0;--tw-translate-x: 0;--tw-translate-y: 0;--tw-rotate: 0;--tw-skew-x: 0;--tw-skew-y: 0;--tw-scale-x: 1;--tw-scale-y: 1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness: proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width: 0px;--tw-ring-offset-color: #fff;--tw-ring-color: rgb(59 130 246 / .5);--tw-ring-offset-shadow: 0 0 #0000;--tw-ring-shadow: 0 0 #0000;--tw-shadow: 0 0 #0000;--tw-shadow-colored: 0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.pointer-events-none{pointer-events:none}.visible{visibility:visible}.invisible{visibility:hidden}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.bottom-\\[9px\\]{bottom:9px}.left-0{left:0px}.right-6{right:2.4rem}.right-\\[9px\\]{right:9px}.top-0{top:0px}.top-1{top:.4rem}.top-6{top:2.4rem}.z-10{z-index:10}.-mx-3{margin-left:-1.2rem;margin-right:-1.2rem}.mx-\\[0\\.3em\\]{margin-left:.3em;margin-right:.3em}.my-10{margin-top:4rem;margin-bottom:4rem}.mb-0{margin-bottom:0}.mb-1{margin-bottom:.4rem}.mb-10{margin-bottom:4rem}.mb-2{margin-bottom:.8rem}.mb-3{margin-bottom:1.2rem}.mb-4{margin-bottom:1.6rem}.mb-6{margin-bottom:2.4rem}.mb-8{margin-bottom:3.2rem}.mb-\\[12px\\]{margin-bottom:12px}.mb-\\[28px\\]{margin-bottom:28px}.mb-\\[8px\\]{margin-bottom:8px}.ml-1{margin-left:.4rem}.ml-2{margin-left:.8rem}.ml-2\\.5{margin-left:1rem}.ml-\\[48px\\]{margin-left:48px}.mr-1{margin-right:.4rem}.mr-2{margin-right:.8rem}.mr-3{margin-right:1.2rem}.mr-\\[6px\\]{margin-right:6px}.mt-10{margin-top:4rem}.mt-4{margin-top:1.6rem}.mt-6{margin-top:2.4rem}.mt-8{margin-top:3.2rem}.mt-\\[-10px\\]{margin-top:-10px}.mt-\\[-1px\\]{margin-top:-1px}.mt-\\[-20px\\]{margin-top:-20px}.mt-\\[-3px\\]{margin-top:-3px}.mt-\\[-4px\\]{margin-top:-4px}.mt-\\[4px\\]{margin-top:4px}.inline-block{display:inline-block}.flex{display:flex}.contents{display:contents}.hidden{display:none}.h-10{height:4rem}.h-12{height:4.8rem}.h-32{height:12.8rem}.h-9{height:3.6rem}.h-\\[12px\\]{height:12px}.h-\\[16px\\]{height:16px}.h-\\[20px\\]{height:20px}.h-\\[24px\\]{height:24px}.h-\\[39px\\]{height:39px}.h-\\[42px\\]{height:42px}.h-\\[44px\\]{height:44px}.h-full{height:100%}.h-screen{height:100vh}.min-h-\\[144px\\]{min-height:144px}.min-h-\\[48px\\]{min-height:48px}.w-10{width:4rem}.w-12{width:4.8rem}.w-9{width:3.6rem}.w-\\[12px\\]{width:12px}.w-\\[16px\\]{width:16px}.w-\\[20px\\]{width:20px}.w-\\[24px\\]{width:24px}.w-\\[3px\\]{width:3px}.w-\\[40\\%\\]{width:40%}.w-\\[60\\%\\]{width:60%}.w-auto{width:auto}.w-full{width:100%}.w-screen{width:100vw}.min-w-min{min-width:-webkit-min-content;min-width:min-content}.max-w-\\[80\\%\\]{max-width:80%}.grow{flex-grow:1}.grow-0{flex-grow:0}.-translate-x-2{--tw-translate-x: -.8rem;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-x-0{--tw-translate-x: 0px;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-x-\\[-6px\\]{--tw-translate-x: -6px;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-0{--tw-translate-y: 0px;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-2{--tw-translate-y: .8rem;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-4{--tw-translate-y: 1.6rem;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}@-webkit-keyframes heartbeat{0%,to{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.3);transform:scale(1.3)}}@keyframes heartbeat{0%,to{-webkit-transform:scale(1);transform:scale(1)}50%{-webkit-transform:scale(1.3);transform:scale(1.3)}}.animate-heartbeat{-webkit-animation:heartbeat .35s ease-in-out forwards;animation:heartbeat .35s ease-in-out forwards}.cursor-default{cursor:default}.cursor-pointer{cursor:pointer}.cursor-text{cursor:text}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.items-start{align-items:flex-start}.items-center{align-items:center}.items-baseline{align-items:baseline}.justify-start{justify-content:flex-start}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.gap-3{gap:1.2rem}.gap-4{gap:1.6rem}.gap-5{gap:2rem}.gap-9{gap:3.6rem}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse: 0;margin-right:calc(1.6rem * var(--tw-space-x-reverse));margin-left:calc(1.6rem * calc(1 - var(--tw-space-x-reverse)))}.overflow-hidden{overflow:hidden}.text-ellipsis{text-overflow:ellipsis}.whitespace-nowrap{white-space:nowrap}.rounded{border-radius:.4rem}.rounded-\\[6px\\]{border-radius:6px}.rounded-full{border-radius:9999px}.rounded-md{border-radius:.6rem}.border{border-width:1px}.border-2{border-width:2px}.border-y{border-top-width:1px;border-bottom-width:1px}.border-none{border-style:none}.border-\\[rgba\\(0\\,0\\,0\\,0\\.075\\)\\]{border-color:#00000013}.border-neutral-200{--tw-border-opacity: 1;border-color:rgb(229 229 229 / var(--tw-border-opacity))}.border-red-500{--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity))}.border-slate-50{--tw-border-opacity: 1;border-color:rgb(248 250 252 / var(--tw-border-opacity))}.border-white{--tw-border-opacity: 1;border-color:rgb(255 255 255 / var(--tw-border-opacity))}.bg-\\[\\#1C1C1C\\]{--tw-bg-opacity: 1;background-color:rgb(28 28 28 / var(--tw-bg-opacity))}.bg-\\[rgba\\(0\\,0\\,0\\,0\\.05\\)\\]{background-color:#0000000d}.bg-\\[rgba\\(0\\,0\\,0\\,0\\.085\\)\\]{background-color:#00000016}.bg-\\[rgba\\(255\\,255\\,255\\,0\\.9\\)\\]{background-color:#ffffffe6}.bg-green-600{--tw-bg-opacity: 1;background-color:rgb(22 163 74 / var(--tw-bg-opacity))}.bg-neutral-900{--tw-bg-opacity: 1;background-color:rgb(23 23 23 / var(--tw-bg-opacity))}.bg-red-600{--tw-bg-opacity: 1;background-color:rgb(220 38 38 / var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity: 1;background-color:rgb(255 255 255 / var(--tw-bg-opacity))}.bg-gradient-to-b{background-image:linear-gradient(to bottom,var(--tw-gradient-stops))}.from-\\[rgba\\(0\\,0\\,0\\,0\\.05\\)\\]{--tw-gradient-from: rgba(0,0,0,.05) var(--tw-gradient-from-position);--tw-gradient-to: rgba(0, 0, 0, 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.from-\\[rgba\\(0\\,0\\,0\\,0\\.2\\)\\]{--tw-gradient-from: rgba(0,0,0,.2) var(--tw-gradient-from-position);--tw-gradient-to: rgba(0, 0, 0, 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}.via-\\[rgba\\(0\\,0\\,0\\,0\\.05\\)\\]{--tw-gradient-to: rgba(0, 0, 0, 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), rgba(0,0,0,.05) var(--tw-gradient-via-position), var(--tw-gradient-to)}.to-transparent{--tw-gradient-to: transparent var(--tw-gradient-to-position)}.bg-cover{background-size:cover}.bg-no-repeat{background-repeat:no-repeat}.fill-\\[rgb\\(225\\,225\\,225\\,0\\.9\\)\\]{fill:#e1e1e1e6}.fill-\\[rgba\\(0\\,0\\,0\\,0\\.5\\)\\]{fill:#00000080}.fill-\\[rgba\\(0\\,0\\,0\\,0\\.9\\)\\]{fill:#000000e6}.fill-white{fill:#fff}.stroke-\\[rgba\\(0\\,0\\,0\\,0\\.5\\)\\]{stroke:#00000080}.stroke-\\[rgba\\(0\\,0\\,0\\,0\\.9\\)\\]{stroke:#000000e6}.stroke-white{stroke:#fff}.p-0{padding:0}.p-\\[28px\\]{padding:28px}.px-0{padding-left:0;padding-right:0}.px-3{padding-left:1.2rem;padding-right:1.2rem}.px-4{padding-left:1.6rem;padding-right:1.6rem}.px-5{padding-left:2rem;padding-right:2rem}.px-8{padding-left:3.2rem;padding-right:3.2rem}.py-2{padding-top:.8rem;padding-bottom:.8rem}.py-3{padding-top:1.2rem;padding-bottom:1.2rem}.py-4{padding-top:1.6rem;padding-bottom:1.6rem}.py-\\[14px\\]{padding-top:14px;padding-bottom:14px}.pb-2{padding-bottom:.8rem}.pb-\\[32px\\]{padding-bottom:32px}.pb-\\[48px\\]{padding-bottom:48px}.pb-\\[68px\\]{padding-bottom:68px}.pb-\\[8px\\]{padding-bottom:8px}.pl-0{padding-left:0}.pl-1{padding-left:.4rem}.pl-4{padding-left:1.6rem}.pl-\\[1px\\]{padding-left:1px}.pl-\\[52px\\]{padding-left:52px}.pr-0{padding-right:0}.pr-4{padding-right:1.6rem}.pr-8{padding-right:3.2rem}.pr-\\[1px\\]{padding-right:1px}.pt-0{padding-top:0}.pt-2{padding-top:.8rem}.pt-3{padding-top:1.2rem}.pt-\\[40px\\]{padding-top:40px}.pt-\\[64px\\]{padding-top:64px}.text-left{text-align:left}.text-center{text-align:center}.font-sans{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji"}.text-\\[1\\.3rem\\]{font-size:1.3rem}.text-\\[1\\.6rem\\]{font-size:1.6rem}.text-\\[14px\\]{font-size:14px}.text-\\[15px\\]{font-size:15px}.text-\\[16\\.5px\\]{font-size:16.5px}.text-\\[16px\\]{font-size:16px}.text-\\[17px\\]{font-size:17px}.text-\\[2\\.8rem\\]{font-size:2.8rem}.text-\\[24px\\]{font-size:24px}.text-lg{font-size:1.8rem}.text-md{font-size:1.5rem}.text-sm{font-size:1.4rem}.font-bold{font-weight:700}.font-medium{font-weight:500}.font-semibold{font-weight:600}.italic{font-style:italic}.leading-9{line-height:2.25rem}.leading-none{line-height:1}.leading-normal{line-height:1.5}.tracking-tight{letter-spacing:-.018em}.text-\\[rgb\\(23\\,23\\,23\\)\\]{--tw-text-opacity: 1;color:rgb(23 23 23 / var(--tw-text-opacity))}.text-\\[rgba\\(0\\,0\\,0\\,0\\.2\\)\\]{color:#0003}.text-\\[rgba\\(0\\,0\\,0\\,0\\.3\\)\\]{color:#0000004d}.text-\\[rgba\\(0\\,0\\,0\\,0\\.4\\)\\]{color:#0006}.text-\\[rgba\\(0\\,0\\,0\\,0\\.5\\)\\]{color:#00000080}.text-\\[rgba\\(0\\,0\\,0\\,0\\.9\\)\\]{color:#000000e6}.text-black{--tw-text-opacity: 1;color:rgb(0 0 0 / var(--tw-text-opacity))}.text-neutral-400{--tw-text-opacity: 1;color:rgb(163 163 163 / var(--tw-text-opacity))}.text-neutral-500{--tw-text-opacity: 1;color:rgb(115 115 115 / var(--tw-text-opacity))}.text-neutral-600{--tw-text-opacity: 1;color:rgb(82 82 82 / var(--tw-text-opacity))}.text-neutral-700{--tw-text-opacity: 1;color:rgb(64 64 64 / var(--tw-text-opacity))}.text-neutral-900{--tw-text-opacity: 1;color:rgb(23 23 23 / var(--tw-text-opacity))}.text-red-500{--tw-text-opacity: 1;color:rgb(239 68 68 / var(--tw-text-opacity))}.text-red-600{--tw-text-opacity: 1;color:rgb(220 38 38 / var(--tw-text-opacity))}.text-white{--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}.opacity-0{opacity:0}.opacity-100{opacity:1}.opacity-20{opacity:.2}.opacity-80{opacity:.8}.shadow-form{--tw-shadow: 0px 78px 57px -57px rgba(0, 0, 0, .1), 0px 15px 20px -8px rgba(0, 0, 0, .08), 0px 0px 1px 0px rgba(0,0,0,.32);--tw-shadow-colored: 0px 78px 57px -57px var(--tw-shadow-color), 0px 15px 20px -8px var(--tw-shadow-color), 0px 0px 1px 0px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow: 0px 0px 1px rgba(0, 0, 0, .12), 0px 4px 8px rgba(0, 0, 0, .04), 0px 8px 48px rgba(0, 0, 0, .05);--tw-shadow-colored: 0px 0px 1px var(--tw-shadow-color), 0px 4px 8px var(--tw-shadow-color), 0px 8px 48px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.shadow-modal{--tw-shadow: 0 3.8px 2.2px rgba(0, 0, 0, .028), 0 9.2px 5.3px rgba(0, 0, 0, .04), 0 17.3px 10px rgba(0, 0, 0, .05), 0 30.8px 17.9px rgba(0, 0, 0, .06), 0 57.7px 33.4px rgba(0, 0, 0, .072), 0 138px 80px rgba(0, 0, 0, .1);--tw-shadow-colored: 0 3.8px 2.2px var(--tw-shadow-color), 0 9.2px 5.3px var(--tw-shadow-color), 0 17.3px 10px var(--tw-shadow-color), 0 30.8px 17.9px var(--tw-shadow-color), 0 57.7px 33.4px var(--tw-shadow-color), 0 138px 80px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.outline-0{outline-width:0px}.blur{--tw-blur: blur(8px);-webkit-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.filter{-webkit-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-\\[2px\\]{--tw-backdrop-blur: blur(2px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,fill,stroke,opacity,box-shadow,-webkit-text-decoration-color,-webkit-transform,-webkit-filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-text-decoration-color,-webkit-transform,-webkit-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\\[border-color\\]{transition-property:border-color;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\\[opacity\\,background\\]{transition-property:opacity,background;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\\[opacity\\]{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\\[padding\\]{transition-property:padding;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-none{transition-property:none}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.delay-100{transition-delay:.1s}.delay-150{transition-delay:.15s}.delay-\\[400ms\\]{transition-delay:.4s}.duration-0{transition-duration:0s}.duration-100{transition-duration:.1s}.duration-150{transition-duration:.15s}.duration-200{transition-duration:.2s}.duration-300{transition-duration:.3s}.duration-500{transition-duration:.5s}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}.ease-linear{transition-timing-function:linear}.ease-out{transition-timing-function:cubic-bezier(0,0,.2,1)}body,html{overflow:hidden}:host{all:initial!important}html{font-size:62.5%}body{font-size:1.5rem}.gh-comment-content p:empty:after{content:" "}.gh-comment-content a{word-break:break-word;text-decoration:underline;color:var(--gh-accent-color)}.gh-comment-content blockquote{border-left:3px solid rgba(13,13,13,.1);padding-left:1rem;margin:0 0 1.2rem}.gh-comment-content p{margin:0 0 1.2rem}.gh-comment-content p:last-child,.gh-comment-content blockquote:last-child{margin:0}.ProseMirror p.is-editor-empty:first-child:before{content:attr(data-placeholder);float:left;height:0;pointer-events:none;--tw-text-opacity: 1;color:rgb(212 212 212 / var(--tw-text-opacity))}.ProseMirror *{white-space:pre-wrap;word-wrap:break-word}[contenteditable]:focus{outline:0px solid transparent}.ghost-display{display:block!important}.hover\\:border-slate-300:hover{--tw-border-opacity: 1;border-color:rgb(203 213 225 / var(--tw-border-opacity))}.hover\\:bg-\\[rgba\\(0\\,0\\,0\\,0\\.1\\)\\]:hover{background-color:#0000001a}.hover\\:fill-\\[rgba\\(0\\,0\\,0\\,0\\.75\\)\\]:hover{fill:#000000bf}.hover\\:text-\\[rgba\\(0\\,0\\,0\\,0\\.5\\)\\]:hover{color:#00000080}.hover\\:text-\\[rgba\\(0\\,0\\,0\\,0\\.75\\)\\]:hover{color:#000000bf}.hover\\:opacity-40:hover{opacity:.4}.hover\\:opacity-90:hover{opacity:.9}.hover\\:shadow-formxl:hover{--tw-shadow: 0px 78px 57px -57px rgba(0, 0, 0, .125), 0px 15px 20px -8px rgba(0, 0, 0, .1), 0px 0px 1px 0px rgba(0, 0, 0, .32);--tw-shadow-colored: 0px 78px 57px -57px var(--tw-shadow-color), 0px 15px 20px -8px var(--tw-shadow-color), 0px 0px 1px 0px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow)}.focus\\:border-neutral-300:focus{--tw-border-opacity: 1;border-color:rgb(212 212 212 / var(--tw-border-opacity))}.focus\\:border-red-500:focus{--tw-border-opacity: 1;border-color:rgb(239 68 68 / var(--tw-border-opacity))}.focus\\:outline-0:focus{outline-width:0px}.group:hover .group-hover\\:translate-x-0{--tw-translate-x: 0px;-webkit-transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group:hover .group-hover\\:stroke-\\[rgba\\(0\\,0\\,0\\,0\\.75\\)\\]{stroke:#000000bf}.group:hover .group-hover\\:opacity-100{opacity:1}:is(.dark .dark\\:border-none){border-style:none}:is(.dark .dark\\:border-\\[rgba\\(255\\,255\\,255\\,0\\.1\\)\\]){border-color:#ffffff1a}:is(.dark .dark\\:bg-\\[rgba\\(255\\,255\\,255\\,0\\.08\\)\\]){background-color:#ffffff14}:is(.dark .dark\\:bg-\\[rgba\\(255\\,255\\,255\\,0\\.15\\)\\]){background-color:#ffffff26}:is(.dark .dark\\:bg-\\[rgba\\(255\\,255\\,255\\,0\\.7\\)\\]){background-color:#ffffffb3}:is(.dark .dark\\:bg-\\[rgba\\(255\\,255\\,255\\,0\\.9\\)\\]){background-color:#ffffffe6}:is(.dark .dark\\:bg-zinc-900){--tw-bg-opacity: 1;background-color:rgb(24 24 27 / var(--tw-bg-opacity))}:is(.dark .dark\\:from-\\[rgba\\(255\\,255\\,255\\,0\\.08\\)\\]){--tw-gradient-from: rgba(255,255,255,.08) var(--tw-gradient-from-position);--tw-gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)}:is(.dark .dark\\:via-\\[rgba\\(255\\,255\\,255\\,0\\.08\\)\\]){--tw-gradient-to: rgba(255, 255, 255, 0) var(--tw-gradient-to-position);--tw-gradient-stops: var(--tw-gradient-from), rgba(255,255,255,.08) var(--tw-gradient-via-position), var(--tw-gradient-to)}:is(.dark .dark\\:fill-\\[rgba\\(255\\,255\\,255\\,0\\.5\\)\\]){fill:#ffffff80}:is(.dark .dark\\:fill-\\[rgba\\(255\\,255\\,255\\,0\\.6\\)\\]){fill:#fff9}:is(.dark .dark\\:fill-\\[rgba\\(255\\,255\\,255\\,0\\.9\\)\\]){fill:#ffffffe6}:is(.dark .dark\\:fill-black){fill:#000}:is(.dark .dark\\:stroke-\\[rgba\\(0\\,0\\,0\\,0\\.6\\)\\]){stroke:#0009}:is(.dark .dark\\:stroke-\\[rgba\\(255\\,255\\,255\\,0\\.5\\)\\]){stroke:#ffffff80}:is(.dark .dark\\:stroke-\\[rgba\\(255\\,255\\,255\\,0\\.9\\)\\]){stroke:#ffffffe6}:is(.dark .dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.3\\)\\]){color:#ffffff4d}:is(.dark .dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.35\\)\\]){color:#ffffff59}:is(.dark .dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.5\\)\\]){color:#ffffff80}:is(.dark .dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.85\\)\\]){color:#ffffffd9}:is(.dark .dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.9\\)\\]){color:#ffffffe6}:is(.dark .dark\\:text-neutral-100){--tw-text-opacity: 1;color:rgb(245 245 245 / var(--tw-text-opacity))}:is(.dark .dark\\:text-neutral-300){--tw-text-opacity: 1;color:rgb(212 212 212 / var(--tw-text-opacity))}:is(.dark .dark\\:text-neutral-400){--tw-text-opacity: 1;color:rgb(163 163 163 / var(--tw-text-opacity))}:is(.dark .dark\\:text-neutral-800){--tw-text-opacity: 1;color:rgb(38 38 38 / var(--tw-text-opacity))}:is(.dark .dark\\:text-white){--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}:is(.dark .dark\\:shadow-transparent){--tw-shadow-color: transparent;--tw-shadow: var(--tw-shadow-colored)}:is(.dark .dark\\:hover\\:bg-\\[rgba\\(255\\,255\\,255\\,0\\.1\\)\\]:hover){background-color:#ffffff1a}:is(.dark .dark\\:hover\\:fill-\\[rgba\\(255\\,255\\,255\\,0\\.25\\)\\]:hover){fill:#ffffff40}:is(.dark .dark\\:hover\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.25\\)\\]:hover){color:#ffffff40}:is(.dark .dark\\:hover\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.4\\)\\]:hover){color:#fff6}:is(.dark .hover\\:dark\\:text-\\[rgba\\(255\\,255\\,255\\,0\\.25\\)\\]):hover{color:#ffffff40}:is(.dark .group:hover .dark\\:group-hover\\:stroke-\\[rgba\\(255\\,255\\,255\\,0\\.25\\)\\]){stroke:#ffffff40}:is(.dark .group:hover .dark\\:group-hover\\:stroke-\\[rgba\\(255\\,255\\,255\\,0\\.3\\)\\]){stroke:#ffffff4d}@media (min-width: 481px){.sm\\:right-8{right:3.2rem}.sm\\:top-10{top:4rem}.sm\\:mb-0{margin-bottom:0}.sm\\:mb-12{margin-bottom:4.8rem}.sm\\:inline{display:inline}.sm\\:hidden{display:none}.sm\\:h-\\[40px\\]{height:40px}.sm\\:h-auto{height:auto}.sm\\:w-\\[40px\\]{width:40px}.sm\\:w-\\[500px\\]{width:500px}.sm\\:w-\\[720px\\]{width:720px}.sm\\:min-w-\\[100px\\]{min-width:100px}.sm\\:min-w-\\[128px\\]{min-width:128px}.sm\\:min-w-\\[150px\\]{min-width:150px}.sm\\:min-w-\\[64px\\]{min-width:64px}.sm\\:max-w-\\[90\\%\\]{max-width:90%}.sm\\:flex-row{flex-direction:row}.sm\\:rounded-xl{border-radius:1.2rem}.sm\\:p-0{padding:0}.sm\\:p-8{padding:3.2rem}.sm\\:px-8{padding-left:3.2rem;padding-right:3.2rem}.sm\\:pl-0{padding-left:0}.sm\\:pl-\\[52px\\]{padding-left:52px}.sm\\:pr-10{padding-right:4rem}.sm\\:pr-4{padding-right:1.6rem}.sm\\:pt-12{padding-top:4.8rem}.sm\\:text-left{text-align:left}}
`,
		Sb = ({
			children: t,
			onResize: e,
			style: n,
			title: i
		}) => {
			const o = k.jsxs(k.Fragment, {
				children: [k.jsx("style", {
					dangerouslySetInnerHTML: {
						__html: _Q
					}
				}), k.jsx("meta", {
					content: "width=device-width, initial-scale=1.0, maximum-scale=1.0",
					name: "viewport"
				})]
			});
			return k.jsx(PQ, {
				head: o,
				style: n,
				title: i,
				onResize: e,
				children: t
			})
		},
		zQ = ({
			children: t,
			style: e,
			title: n
		}) => {
			const [i, o] = C.useState(e), r = C.useCallback(a => {
				o(s => ({
					...s,
					height: `${a.scrollHeight}px`
				}))
			}, []);
			return k.jsx(Sb, {
				style: i,
				title: n,
				onResize: r,
				children: t
			})
		},
		OQ = ({
			children: t
		}) => {
			const e = {
				width: "100%",
				height: "400px"
			};
			return k.jsx(zQ, {
				style: e,
				title: "comments-frame",
				children: t
			})
		},
		DQ = ({
			children: t,
			title: e
		}) => {
			const n = {
				zIndex: "3999999",
				position: "fixed",
				left: "0",
				top: "0",
				width: "100%",
				height: "100%",
				overflow: "hidden"
			};
			return k.jsx(Sb, {
				style: n,
				title: e,
				children: t
			})
		},
		IQ = ({
			show: t,
			children: e,
			title: n,
			callback: i
		}) => {
			const {
				dispatchAction: o
			} = V(), r = () => {
				o("closePopup", {}), i && i(!1)
			};
			return C.useEffect(() => {
				const a = s => {
					s.key === "Escape" && r()
				};
				return window.addEventListener("keydown", a, {
					passive: !0
				}), () => {
					window.removeEventListener("keydown", a, {
						passive: !0
					})
				}
			}), k.jsx(ai, {
				appear: !0,
				show: t,
				children: k.jsx(DQ, {
					title: n,
					children: k.jsx("div", {
						children: k.jsx(ai.Child, {
							enter: "transition duration-200 linear",
							enterFrom: "opacity-0",
							enterTo: "opacity-100",
							leave: "transition duration-200 linear",
							leaveFrom: "opacity-100",
							leaveTo: "opacity-0",
							children: k.jsx("div", {
								className: "to-rgba(0,0,0,0.1) fixed left-0 top-0 flex h-screen w-screen justify-center overflow-hidden bg-gradient-to-b from-[rgba(0,0,0,0.2)] pt-0 backdrop-blur-[2px] sm:pt-12",
								onMouseDown: r,
								children: k.jsx(ai.Child, {
									enter: "transition duration-200 delay-150 linear",
									enterFrom: "translate-y-4 opacity-0",
									enterTo: "translate-y-0 opacity-100",
									leave: "transition duration-200 linear",
									leaveFrom: "translate-y-0 opacity-100",
									leaveTo: "translate-y-4 opacity-0",
									children: e
								})
							})
						})
					})
				})
			})
		},
		RQ = t => C.createElement("svg", {
			xmlns: "http://www.w3.org/2000/svg",
			viewBox: "0 0 24 24",
			className: "gh-portal-closeicon",
			alt: "Close",
			...t
		}, C.createElement("defs", null, C.createElement("style", null, ".a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.2px !important;}")), C.createElement("path", {
			className: "a",
			d: "M.75 23.249l22.5-22.5M23.25 23.249L.75.749"
		})),
		Cb = ({
			close: t
		}) => k.jsx("button", {
			className: "absolute right-6 top-6 opacity-20 transition-opacity duration-100 ease-out hover:opacity-40 sm:right-8 sm:top-10",
			type: "button",
			onClick: t,
			children: k.jsx(RQ, {
				className: "h-[20px] w-[20px]"
			})
		}),
		YQ = t => {
			const e = C.useRef(null),
				n = C.useRef(null),
				{
					dispatchAction: i,
					member: o,
					accentColor: r,
					t: a
				} = V(),
				[s, l] = C.useState(o.name ?? ""),
				[u, c] = C.useState(o.expertise ?? ""),
				m = 50;
			let d = m;
			o.expertise && (d -= o.expertise.length);
			const [p, f] = C.useState(d), [y, h] = C.useState({
				name: "",
				expertise: ""
			}), g = S => {
				S.stopPropagation()
			}, b = S => {
				i("closePopup", {}), t.callback(S)
			}, v = async () => {
				var S;
				s.trim() !== "" ? (await i("updateMember", {
					name: s,
					expertise: u
				}), b(!0)) : (h({
					name: a("Enter your name"),
					expertise: ""
				}), l(""), (S = e.current) == null || S.focus())
			};
			C.useEffect(() => {
				if (!Vr()) {
					const S = setTimeout(() => {
						var E, T;
						t.expertiseAutofocus ? (E = n.current) == null || E.focus() : (T = e.current) == null || T.focus()
					}, 200);
					return () => {
						clearTimeout(S)
					}
				}
			}, [e, n, t.expertiseAutofocus]);
			const w = () => {
					const S = M => k.jsx(ai, {
							enter: "transition duration-200 delay-[400ms] ease-out",
							enterFrom: "opacity-0 translate-y-2",
							enterTo: "opacity-100 translate-y-0",
							leave: "transition duration-200 ease-in",
							leaveFrom: "opacity-100 translate-y-0",
							leaveTo: "opacity-0 translate-y-2",
							appear: !0,
							children: k.jsxs("div", {
								className: "flex flex-row items-center justify-start gap-3 pr-4",
								children: [k.jsx("div", {
									className: "h-10 w-10 rounded-full border-2 border-white bg-cover bg-no-repeat",
									style: {
										backgroundImage: `url(${M.avatar})`
									}
								}), k.jsxs("div", {
									className: "flex flex-col items-start justify-center",
									children: [k.jsx("div", {
										className: "font-sans text-base font-semibold tracking-tight text-white",
										children: M.name
									}), k.jsx("div", {
										className: "font-sans text-[14px] tracking-tight text-neutral-400",
										children: M.expertise
									})]
								})]
							})
						}, M.name),
						E = [],
						T = [{
							avatar: "https://randomuser.me/api/portraits/men/32.jpg",
							name: "James Fletcher",
							expertise: a("Full-time parent")
						}, {
							avatar: "https://randomuser.me/api/portraits/women/30.jpg",
							name: "Naomi Schiff",
							expertise: a("Founder @ Acme Inc")
						}, {
							avatar: "https://randomuser.me/api/portraits/men/4.jpg",
							name: "Franz Tost",
							expertise: a("Neurosurgeon")
						}, {
							avatar: "https://randomuser.me/api/portraits/women/51.jpg",
							name: "Katrina Klosp",
							expertise: a("Local resident")
						}];
					for (let M = 0; M < T.length; M++) E.push(S(T[M]));
					return E
				},
				x = wm(a("{{amount}} characters left"), "{{amount}}", () => k.jsx("b", {
					children: p
				}));
			return k.jsx("div", {
				className: "shadow-modal relative h-screen w-screen overflow-hidden rounded-none bg-white p-[28px] text-center sm:h-auto sm:w-[720px] sm:rounded-xl sm:p-0",
				onMouseDown: g,
				children: k.jsxs("div", {
					className: "flex",
					children: [!Vr() && k.jsx("div", {
						className: "flex w-[40%] flex-col items-center justify-center bg-[#1C1C1C]",
						children: k.jsx("div", {
							className: "mt-[-1px] flex flex-col gap-9",
							children: w()
						})
					}), k.jsxs("div", {
						className: `${Vr()?"w-full":"w-[60%]"} p-0 sm:p-8`,
						children: [k.jsxs("h1", {
							className: "mb-1 text-center font-sans text-[24px] font-bold tracking-tight text-black sm:text-left",
							children: [a("Complete your profile"), k.jsx("span", {
								className: "hidden sm:inline",
								children: "."
							})]
						}), k.jsx("p", {
							className: "pr-0 text-center font-sans text-base leading-9 text-neutral-500 sm:pr-10 sm:text-left",
							children: a("Add context to your comment, share your name and expertise to foster a healthy discussion.")
						}), k.jsxs("section", {
							className: "mt-8 text-left",
							children: [k.jsxs("div", {
								className: "mb-2 flex flex-row justify-between",
								children: [k.jsx("label", {
									className: "font-sans text-[1.3rem] font-semibold",
									htmlFor: "comments-name",
									children: a("Name")
								}), k.jsx(ai, {
									enter: "transition duration-300 ease-out",
									enterFrom: "opacity-0",
									enterTo: "opacity-100",
									leave: "transition duration-100 ease-out",
									leaveFrom: "opacity-100",
									leaveTo: "opacity-0",
									show: !!y.name,
									children: k.jsx("div", {
										className: "font-sans text-sm text-red-500",
										children: y.name
									})
								})]
							}), k.jsx("input", {
								ref: e,
								className: `flex h-[42px] w-full items-center rounded border border-neutral-200 px-3 font-sans text-[16px] outline-0 transition-[border-color] duration-200 focus:border-neutral-300 ${y.name&&"border-red-500 focus:border-red-500"}`,
								id: "comments-name",
								maxLength: 64,
								name: "name",
								placeholder: a("Jamie Larson"),
								type: "text",
								value: s,
								onChange: S => {
									l(S.currentTarget.value)
								},
								onKeyDown: S => {
									S.key === "Enter" && (l(S.currentTarget.value), v().catch(console.error))
								}
							}), k.jsxs("div", {
								className: "mb-2 mt-6 flex flex-row justify-between",
								children: [k.jsx("label", {
									className: "font-sans text-[1.3rem] font-semibold",
									htmlFor: "comments-name",
									children: a("Expertise")
								}), k.jsx("div", {
									className: `font-sans text-[1.3rem] text-neutral-400 ${p===0&&"text-red-500"}`,
									children: x
								})]
							}), k.jsx("input", {
								ref: n,
								className: `flex h-[42px] w-full items-center rounded border border-neutral-200 px-3 font-sans text-[16px] outline-0 transition-[border-color] duration-200 focus:border-neutral-300 ${p===0&&"border-red-500 focus:border-red-500"}`,
								id: "comments-expertise",
								maxLength: m,
								name: "expertise",
								placeholder: a("Head of Marketing at Acme, Inc"),
								type: "text",
								value: u,
								onChange: S => {
									const E = S.currentTarget.value;
									f(m - E.length), c(E)
								},
								onKeyDown: S => {
									S.key === "Enter" && (c(S.currentTarget.value), v().catch(console.error))
								}
							}), k.jsx("button", {
								className: "mt-10 flex h-[42px] w-full items-center justify-center rounded-md px-8 font-sans text-[15px] font-semibold text-white opacity-100 transition-opacity duration-200 ease-linear hover:opacity-90",
								style: {
									backgroundColor: r ?? "#000000"
								},
								type: "button",
								onClick: () => {
									v().catch(console.error)
								},
								children: a("Save")
							})]
						})]
					}), k.jsx(Cb, {
						close: () => b(!1)
					})]
				})
			})
		},
		LQ = t => C.createElement("svg", {
			width: "26px",
			height: "26px",
			viewBox: "-1 -1 26 26",
			xmlns: "http://www.w3.org/2000/svg",
			xmlnsXlink: "http://www.w3.org/1999/xlink",
			...t
		}, C.createElement("g", {
			id: "check-circle",
			stroke: "none",
			strokeWidth: 1,
			fill: "none",
			fillRule: "evenodd"
		}, C.createElement("path", {
			className: "animated-check-circle",
			d: "M19.6004116,2.71490714 C17.5353801,1.0196018 14.8927356,0 12,0 C5.38938053,0 0,5.38938053 0,12 C0,18.6106195 5.38938053,24 12,24 C18.6106195,24 24,18.6106195 24,12 C24,9.71681416 23.3628319,7.59292035 22.2743363,5.78761062 L11.0442478,17.0442478 L5.49557522,11.4955752",
			id: "Shape",
			stroke: "#FFFFFF",
			strokeWidth: 2
		}))),
		FQ = {
			addDetailsPopup: YQ,
			reportPopup: ({
				comment: t
			}) => {
				const {
					dispatchAction: e,
					t: n
				} = V(), [i, o] = C.useState("default");
				let r = "bg-red-600";
				i === "sent" && (r = "bg-green-600");
				let a = n("Report this comment");
				const s = a;
				i === "sending" ? a = n("Sending") : i === "sent" && (a = n("Sent"));
				const l = k.jsx(kd, {
						className: "mr-2 h-[24px] w-[24px] fill-white"
					}),
					u = k.jsx(LQ, {
						className: "mr-2 h-[16px] w-[16px]"
					});
				let c = null;
				i === "sending" ? c = l : i === "sent" && (c = u);
				const m = f => {
						f.stopPropagation()
					},
					d = () => {
						e("closePopup", {})
					},
					p = f => {
						f.stopPropagation(), o("sending"), setTimeout(() => {
							o("sent"), e("reportComment", t), setTimeout(() => {
								d()
							}, 750)
						}, 1e3)
					};
				return k.jsxs("div", {
					className: "shadow-modal relative h-screen w-screen rounded-none bg-white p-[28px] text-center sm:h-auto sm:w-[500px] sm:rounded-xl sm:p-8 sm:text-left",
					onMouseDown: m,
					children: [k.jsxs("h1", {
						className: "mb-1 font-sans text-[24px] font-bold tracking-tight text-black",
						children: [k.jsx("span", {
							className: "sm:hidden",
							children: n("Report this comment?")
						}), k.jsx("span", {
							className: "hidden sm:inline",
							children: n("You want to report this comment?")
						})]
					}), k.jsx("p", {
						className: "px-4 font-sans text-base leading-9 text-neutral-500 sm:pl-0 sm:pr-4",
						children: n("Your request will be sent to the owner of this site.")
					}), k.jsxs("div", {
						className: "mt-10 flex flex-col items-center justify-start gap-4 sm:flex-row",
						children: [k.jsxs("button", {
							className: `flex h-[44px] items-center justify-center rounded-md px-4 font-sans text-[15px] font-semibold text-white transition duration-200 ease-linear ${r} opacity-100 hover:opacity-90`,
							style: {
								backgroundColor: r ?? "#000000"
							},
							type: "button",
							onClick: p,
							children: [k.jsxs("span", {
								className: "invisible whitespace-nowrap",
								children: [s, k.jsx("br", {}), k.jsxs("span", {
									className: "flex h-[44px] items-center justify-center whitespace-nowrap",
									children: [l, n("Sending")]
								}), k.jsx("br", {}), k.jsxs("span", {
									className: "flex h-[44px] items-center justify-center whitespace-nowrap",
									children: [u, n("Sent")]
								})]
							}), k.jsxs("span", {
								className: "absolute flex h-[44px] items-center justify-center whitespace-nowrap",
								children: [c, a]
							})]
						}), k.jsx("button", {
							className: "font-sans text-sm font-medium text-neutral-500 dark:text-neutral-400",
							type: "button",
							onClick: d,
							children: n("Cancel")
						})]
					}), k.jsx(Cb, {
						close: d
					})]
				})
			}
		},
		BQ = () => {
			const {
				popup: t
			} = V(), [e, n] = C.useState(t);
			if (C.useEffect(() => {
					if (t !== null && n(t), t === null) {
						const s = setTimeout(() => {
							n(null)
						}, 250);
						return () => {
							clearTimeout(s)
						}
					}
				}, [t, n]), !e || !e.type) return null;
			const {
				type: i,
				...o
			} = t ?? e, r = FQ[i];
			if (!r) return console.warn("Unknown popup of type ", i), null;
			const a = t === e;
			return k.jsx(k.Fragment, {
				children: k.jsx(IQ, {
					callback: o.callback,
					show: a,
					title: i,
					children: k.jsx(r, {
						...o
					})
				})
			})
		},
		xb = "Anoniem",
		Eb = "Kanselleer",
		Tb = "Kommentaar",
		jb = "Skrap",
		$b = "Bespreking",
		Ab = "Redigeer",
		Nb = "Geredigeer",
		Mb = "Kundigheid",
		Pb = "Versteek",
		_b = "Naam",
		zb = "Neurochirurg",
		Ob = "Antwoord",
		Db = "Rapporteer",
		Ib = "Stoor",
		Rb = "Besig om te stuur",
		Yb = "Gestuur",
		Lb = "Wys",
		Fb = "Gister",
		UQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: xb,
			Cancel: Eb,
			Comment: Tb,
			Delete: jb,
			Discussion: $b,
			Edit: Ab,
			Edited: Nb,
			Expertise: Mb,
			Hide: Pb,
			Name: _b,
			Neurosurgeon: zb,
			Reply: Ob,
			Report: Db,
			Save: Ib,
			Sending: Rb,
			Sent: Yb,
			Show: Lb,
			Yesterday: Fb,
			default: {
				"{{amount}} characters left": "{{amount}} karakters oor",
				"{{amount}} comments": "{{amount}} kommentaar",
				"{{amount}} days ago": "{{amount}} dae gelede",
				"{{amount}} hours ago": "{{amount}} ure gelede",
				"{{amount}} minutes ago": "{{amount}} minute gelede",
				"{{amount}} months ago": "{{amount}} maande gelede",
				"{{amount}} seconds ago": "{{amount}} sekondes gelede",
				"{{amount}} weeks ago": "{{amount}} weke gelede",
				"{{amount}} years ago": "{{amount}} jaar gelede",
				"1 comment": "1 kommentaar",
				"Add comment": "Voeg kommentaar by",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Voeg konteks by jou kommentaar, deel jou naam en kundigheid om 'n gesonde bespreking te bevorder.",
				"Add reply": "Voeg antwoord by",
				"Already a member?": "Reeds 'n lid?",
				Anonymous: xb,
				"Become a member of {{publication}} to start commenting.": "Word 'n lid van {{publication}} om kommentaar te lewer.",
				"Become a paid member of {{publication}} to start commenting.": "Word 'n betaalde lid van {{publication}} om kommentaar te lewer.",
				Cancel: Eb,
				Comment: Tb,
				"Complete your profile": "Voltooi jou profiel",
				Delete: jb,
				"Deleted member": "Geskrapte lid",
				Discussion: $b,
				Edit: Ab,
				"Edit this comment": "Redigeer hierdie kommentaar",
				Edited: Nb,
				"Enter your name": "Voer jou naam in",
				Expertise: Mb,
				"Founder @ Acme Inc": "Stigter @ Acme Inc",
				"Full-time parent": "Voltydse ouer",
				"Head of Marketing at Acme, Inc": "Hoof van Bemarking by Acme, Inc",
				Hide: Pb,
				"Hide comment": "Versteek kommentaar",
				"Jamie Larson": "Jamie Larson",
				"Join the discussion": "Sluit aan by die bespreking",
				"Just now": "Sopas",
				"Local resident": "Plaaslike inwoner",
				"Member discussion": "Lidmaat bespreking",
				Name: _b,
				Neurosurgeon: zb,
				"One day ago": "Eendag gelede",
				"One hour ago": "Een uur gelede",
				"One minute ago": "Een minuut gelede",
				"One month ago": "Een maand gelede",
				"One week ago": "'n Week gelede",
				"One year ago": "Een jaar gelede",
				Reply: Ob,
				"Reply to comment": "Antwoord op kommentaar",
				Report: Db,
				"Report comment": "Rapporteer kommentaar",
				"Report this comment": "Rapporteer hierdie kommentaar",
				"Report this comment?": "Rapporteer hierdie kommentaar?",
				Save: Ib,
				Sending: Rb,
				Sent: Yb,
				Show: Lb,
				"Show {{amount}} more replies": "Wys {{amount}} meer antwoorde",
				"Show {{amount}} previous comments": "Wys {{amount}} vorige kommentaar",
				"Show 1 more reply": "Wys nog 1 antwoord",
				"Show 1 previous comment": "Wys 1 vorige kommentaar",
				"Show comment": "Wys kommentaar",
				"Sign in": "Teken in",
				"Sign up now": "Sluit nou aan",
				"Start the conversation": "Begin die gesprek",
				"This comment has been hidden.": "Hierdie kommentaar is weggesteek.",
				"This comment has been removed.": "Hierdie kommentaar is verwyder.",
				"Upgrade now": "Gradeer nou op",
				Yesterday: Fb,
				"You want to report this comment?": "Wil jy hierdie kommentaar rapporteer?",
				"Your request will be sent to the owner of this site.": "Jou versoek sal aan die eienaar van hierdie webwerf gestuur word."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		VQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Alles van die beste!",
				"Complete signup for {{siteTitle}}!": "Voltooi u registrasie vir {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Voltooi u registrasie by {{siteTitle}}!",
				"Confirm email address": "Bevestig e-posadres",
				"Confirm signup": "Bevestig registrasie",
				"Confirm your email address": "Bevestig u e-posadres",
				"Confirm your email update for {{siteTitle}}!": "Bevestig u e-pos opdatering vir {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bevestig u inskrywing by {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Vir u veiligheid, sal die skakel binne 24 uur verval.",
				"Hey there,": "Hallo daar,",
				"Hey there!": "Hallo daar!",
				"If you did not make this request, you can safely ignore this email.": "Indien u nie hierdie versoek gemaak het nie, kan u hierdie e-pos veilig ignoreer.",
				"If you did not make this request, you can simply delete this message.": "Indien u nie hierdie versoek gemaak het nie, kan u hierdie boodskap eenvoudig verwyder.",
				"Please confirm your email address with this link:": "Bevestig asseblief u e-posadres met hierdie skakel:",
				"Secure sign in link for {{siteTitle}}": "Veilige aanmeldskakel vir {{siteTitle}}",
				"See you soon!": "Sien u binnekort weer!",
				"Sent to {{email}}": "Gestuur na {{email}}",
				"Sign in": "Meld aan",
				"Sign in to {{siteTitle}}": "Meld aan by {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Kliek op die skakel hieronder om die aanmeldproses vir {{siteTitle}} te voltooi, en om outomaties in te teken:",
				"Thank you for signing up to {{siteTitle}}!": "Dankie dat u aangemeld het by {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Dankie dat u ingeskryf het by {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Dankie dat u ingeskryf het by {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Dankie dat u ingeskryf het by {{siteTitle}}. Kliek op die skakel hieronder om outomaties aan te meld:",
				"This email address will not be used.": "Hierdie e-posadres sal nie gebruik word nie.",
				"Welcome back to {{siteTitle}}!": "Welkom terug by {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Welkom terug! Gebruik hierdie skakel om veilig aan te meld by u {{siteTitle}}-rekening:",
				"You can also copy & paste this URL into your browser:": "U kan hierdie URL ook kopieer en in u blaaier plak:",
				"You will not be signed up, and no account will be created for you.": "U sal nie aangemeld word nie, en geen rekening sal vir u geskep word nie.",
				"You will not be subscribed.": "U sal nie ingeskryf word nie.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "U is een kliek weg van inskrywing by {{siteTitle}} — bevestig asseblief u e-posadres met hierdie skakel:",
				"You're one tap away from subscribing to {{siteTitle}}!": "U is een kliek weg van inskrywing by {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Bb = "Rekening",
		Ub = "Terug",
		Vb = "Verander",
		Hb = "Kies",
		qb = "Sluit",
		Wb = "Kommentaar",
		Kb = "Komplimentêr",
		Jb = "Bevestig",
		Gb = "Gaan voort",
		Qb = "Wysig",
		Xb = "E-pos",
		Zb = "E-posse",
		ek = "Verewig",
		tk = "Bestuur",
		nk = "Maandeliks",
		ik = "Naam",
		ok = "Plan",
		rk = "Prys",
		ak = "",
		sk = "Probeer weer",
		lk = "Stoor",
		uk = "Teken in",
		ck = "Ingeteken",
		dk = "Sukses",
		mk = "Afgemeld",
		pk = "Opdateer",
		fk = "",
		hk = "Jaarliks",
		HQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: Bb,
			Back: Ub,
			Change: Vb,
			Choose: Hb,
			Close: qb,
			Comments: Wb,
			Complimentary: Kb,
			Confirm: Jb,
			Continue: Gb,
			Edit: Qb,
			Email: Xb,
			Emails: Zb,
			Forever: ek,
			Manage: tk,
			Monthly: nk,
			Name: ik,
			Plan: ok,
			Price: rk,
			Recommendations: ak,
			Retry: sk,
			Save: lk,
			Subscribe: uk,
			Subscribed: ck,
			Success: dk,
			Unsubscribed: mk,
			Update: pk,
			Visit: fk,
			Yearly: hk,
			default: {
				"{{amount}} days free": "{{amount}} dae gratis",
				"{{amount}} off": "{{amount}} afslag",
				"{{amount}} off for first {{number}} months.": "{{amount}} afslag vir die eerste {{number}} maande.",
				"{{amount}} off for first {{period}}.": "{{amount}} afslag vir die eerste {{period}}.",
				"{{amount}} off forever.": "{{amount}} afslag vir altyd.",
				"{{discount}}% discount": "{{discount}}% afslag",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} sal nie meer die {{newsletterName}} nuusbrief ontvang nie.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} sal nie meer e-posse ontvang wanneer iemand op u kommentaar reageer nie.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} sal nie meer hierdie nuusbrief ontvang nie.",
				"{{trialDays}} days free": "{{trialDays}} dae gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "'n Aanmeldskakel is na u epos gestuur. As dit nie binne 3 minute aankom nie, moet u asseblief u spam-vouer nagaan.",
				Account: Bb,
				"Account settings": "Rekening instellings",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Na afloop van die gratis proeftydperk sal u die vasgestelde pry vir die vlak wat u gekies het, betaal. U kan altyd voor die tyd kanselleer.",
				"Already a member?": "Is u reeds 'n lid?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "'n Onverwagte fout het voorgekom. Probeer asseblief weer of <a>kontak kliëntediens</a> as die fout voortduur.",
				Back: Ub,
				"Back to Log in": "Terug na aanmelding",
				"Billing info": "Rekening inligting",
				"Black Friday": "Swart Vrydag",
				"Cancel anytime.": "Kanselleer enige tyd.",
				"Cancel subscription": "Kanselleer inskrywing",
				"Cancellation reason": "Kansellasie rede",
				Change: Vb,
				"Check spam & promotions folders": "Kyk in spam & promosie vouers",
				"Check with your mail provider": "Kyk by u e-posverskaffer",
				Choose: Hb,
				"Choose a different plan": "Kies 'n ander plan",
				"Choose your newsletters": "Kies u nuusbriefs",
				"Click here to retry": "Kliek hier om weer te probeer",
				Close: qb,
				Comments: Wb,
				Complimentary: Kb,
				Confirm: Jb,
				"Confirm cancellation": "Bevestig kansellasie",
				"Confirm subscription": "Bevestig inskrywing",
				"Contact support": "Kontak kliëntediens",
				Continue: Gb,
				"Continue subscription": "Gaan voort met inskrywing",
				"Could not sign in. Login link expired.": "Kon nie aanmeld nie. Aanmeldskakel het verval.",
				"Could not update email! Invalid link.": "Kon nie e-pos opdateer nie! Ongeldige skakel.",
				"Create a new contact": "Skep 'n nuwe kontak",
				"Current plan": "Huidige plan",
				"Delete account": "Verwyder rekening",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Het dit nie bedoel om te doen nie? Bestuur jou voorkeure <button>hier</button>.",
				"Don't have an account?": "Het u nie 'n rekening nie?",
				Edit: Qb,
				Email: Xb,
				"Email newsletter": "Epos nuusbrief",
				"Email preference updated.": "E-pos instellings opgedateer.",
				"Email preferences": "E-pos instellings",
				Emails: Zb,
				"Emails disabled": "E-posse afgeskakel",
				"Ends {{offerEndDate}}": "Eindig {{offerEndDate}}",
				Error: "Fout",
				"Expires {{expiryDate}}": "Verval {{expiryDate}}",
				Forever: ek,
				"Free Trial – Ends {{trialEnd}}": "Gratis proeftydperk – Eindig {{trialEnd}}",
				"Get help": "Kry hulp",
				"Get in touch for help": "Kontak vir hulp",
				"Get notified when someone replies to your comment": "Ontvang 'n kennisgewing wanneer iemand op u kommentaar reageer",
				"Give feedback on this post": "Gee terugvoering oor hierdie pos",
				"Help! I'm not receiving emails": "Help! Ek ontvang nie e-posse nie",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "As 'n nuusbrief as spam geïdentifiseer word, word e-posse outomaties vir daardie adres afgeskakel om seker te maak dat u geen ongewenste boodskappe meer ontvang nie.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "As die spam klag per ongeluk was, of as u weer e-posse wil begin ontvang, kan u weer inskryf vir e-posse deur op die knoppie op die vorige skerm te klik.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "As u nou kanselleer, sal u toegang hê tot {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "As u 'n korporatiewe of regerings e-posrekening het, kontak u IT-afdeling en vra hulle om e-posse van {{senderEmail}} te ontvang",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "As u weer e-posse wil begin ontvang, is die beste volgende stap om u e-posadres op rekord te kontroleer vir enige probleme en dan weer in te skryf op die vorige skerm.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "As u nie die e-pos nuusbrief ontvang wat u op ingeteken het nie, is hier 'n paar goed om te kontroleer.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "As u al hierdie kontroles voltooi het en u steeds nie e-posse ontvang nie, kan u hulp kry deur {{supportAddress}} te kontak.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "In die geval dat 'n permanente fout ontvang word wanneer 'n nuusbrief gestuur word, sal e-posse op die rekening afgeskakel word.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "In u e-pos program, voeg {{senderEmail}} by u kontaklys. Dit dui aan u e-posverskaffer aan dat e-posse wat van hierdie adres gestuur word, vertrou moet word.",
				"Less like this": "Minder soos hierdie",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Maak seker dat e-posse nie per ongeluk in die Spam of Promosies vouers van u posbus beland nie. As dit wel is, kliek op "Mark as not spam" en/of "Move to inbox".',
				Manage: tk,
				"Memberships unavailable, contact the owner for access.": "Lidmaatskap nie beskikbaar nie, kontak die eienaar vir toegang.",
				Monthly: nk,
				"More like this": "Meer soos hierdie",
				Name: ik,
				"Need more help? Contact support": "Benodig meer hulp? Kontak kliëntediens",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Nuusbriewe kan op u rekening afgeskakel word vir twee redes: 'n Vorige e-pos is as spam gemerk, of 'n poging om 'n e-pos te stuur het tot 'n permanente fout gelei (bounce).",
				"Not receiving emails?": "Ontvang u nie e-posse nie?",
				"Now check your email!": "Kyk nou u e-pos!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "As u weer ingeskryf is, en u sien steeds nie e-posse in u posbus nie, kontroleer u spam vouer. Sommige posbusverskaffers hou 'n rekord van vorige spam klagtes en sal steeds e-posse merk. As dit gebeur, merk die nuutste nuusbrief as 'Not spam' om dit terug te skuif na u primêre posbus.",
				"Permanent failure (bounce)": "Permanente fout (bounce)",
				Plan: ok,
				"Plan checkout was cancelled.": "Plan afreken is gekanselleer.",
				"Plan upgrade was cancelled.": "Plan opgradering is gekanselleer.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "Kontak {{supportAddress}} om jou komplimentêre intekening aan te pas.",
				"Please fill in required fields": "Vul asseblief die verpligte velde in",
				Price: rk,
				"Re-enable emails": "Her-aktiveer eposse",
				Recommendations: ak,
				"Renews at {{price}}.": "Hernu teen {{price}}.",
				Retry: sk,
				Save: lk,
				"Send an email and say hi!": "Stuur 'n epos en sê hallo!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Stuur 'n e-pos na {{senderEmail}} en sê hallo. Dit kan ook help om aan u e-posverskaffer aan te dui dat e-posse na en van hierdie adres vertrou moet word.",
				"Sending login link...": "Stuur aanmeldskakel...",
				"Sending...": "Stuur...",
				"Show all": "",
				"Sign in": "Meld aan",
				"Sign out": "Teken uit",
				"Sign up": "Registreer",
				"Signup error: Invalid link": "Aanmelding fout: Ongeldige skakel",
				"Sorry, that didn’t work.": "Jammer, dit het nie gewerk nie.",
				"Spam complaints": "Spam klagtes",
				"Start {{amount}}-day free trial": "Begin {{amount}}-dag gratis proeftydperk",
				"Starting {{startDate}}": "Begin {{startDate}}",
				"Starting today": "Begin vandag",
				"Submit feedback": "Stuur terugvoering",
				Subscribe: uk,
				Subscribed: ck,
				Success: dk,
				"Success! Check your email for magic link to sign-in.": "Sukses! Kyk in jou e-pos vir 'n magiese skakel om aan te meld.",
				"Success! Your account is fully activated, you now have access to all content.": "Sukses! U rekening is ten volle geaktiveer, u het nou toegang tot alle inhoud.",
				"Success! Your email is updated.": "Sukses! U e-pos is opgedateer.",
				"Successfully unsubscribed": "Suksesvol afgemeld",
				"Thanks for the feedback!": "Dankie vir die terugvoering!",
				"That didn't go to plan": "Dit het nie volgens plan verloop nie",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Die epos addres wat ons vir u het is {{memberEmail}} — as dit nie korrek is nie, kan u dit opdateer in u <button>rekeninginstellings area</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Daar was 'n probleem om u terugvoering in te dien. Probeer asseblief later weer.",
				"This site is invite-only, contact the owner for access.": "Hierdie webwerf is slegs op uitnodiging, kontak die eienaar vir toegang.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Om die registrasie te voltooi, kliek op die bevestigingskakel in jou inboks. As dit nie binne 3 minute aankom nie, kontroleer asseblief jou spam-vouer!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Probeer gratis vir {{amount}} dae, dan {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Ontsluit toegang tot alle nuusbriewe deur 'n betaalde intekenaar te word.",
				"Unsubscribe from all emails": "Meld af van alle e-posse",
				Unsubscribed: mk,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Deur van eposse af te skakel, sal nie u betaalde subskripsie van {{title}} kanselleer nie",
				Update: pk,
				"Update your preferences": "Opdateer u voorkeure",
				"Verify your email address is correct": "Bevestig dat u e-posadres korrek is",
				"View plans": "Kyk na planne",
				Visit: fk,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Ons kon u nie afskakel nie, omdat die e-pos adres nie gevind is nie. Kontak asseblief die webwerf eienaar.",
				"Welcome back, {{name}}!": "Welkom terug, {{name}}!",
				"Welcome back!": "Welkom terug!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "As 'n inboks nie 'n e-pos aanvaar nie, word dit algemeen 'n 'bounce' genoem. In baie gevalle kan dit tydelik wees. In sommige gevalle kan 'n gebotsde e-pos egter as 'n permanente fout teruggekeer word wanneer 'n e-posadres ongeldig of nie-bestaande is nie.",
				"Why has my email been disabled?": "Waarom is my e-pos gedeaktiveer?",
				Yearly: hk,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "U het tans 'n gratis lidmaatskap, opgradeer na 'n betaalde intekening vir volle toegang.",
				"You have been successfully resubscribed": "U is suksesvol heringeskryf",
				"You're currently not receiving emails": "U ontvang tans nie e-posse nie",
				"You're not receiving emails": "U ontvang nie e-posse nie",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "U ontvang nie e-posse nie, omdat u onlangs 'n boodskap as spam gemerk het, of omdat boodskappe nie na die e-pos adres wat u verskaf het gestuur kon word nie.",
				"You're subscribed!": "",
				"You've successfully signed in.": "U het suksesvol aangemeld.",
				"You've successfully subscribed to": "Jy het suksesvol ingeteken op",
				"Your account": "U rekening",
				"Your input helps shape what gets published.": "U insette help om te bepaal wat gepubliseer word.",
				"Your subscription will expire on {{expiryDate}}": "U intekening sal verval op {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "U intekening sal hernu op {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "U intekening sal begin op {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		gk = "Teken in",
		qQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: gk,
			default: {
				"Email sent": "E-pos is gestuur",
				"Now check your email!": "Kyk nou in jou e-pos!",
				"Please enter a valid email address": "Vul 'n geldige e-posadres in",
				"Something went wrong, please try again.": "Iets is fout, probeer asseblief weer.",
				Subscribe: gk,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Om die registrasie te voltooi, kliek op die bevestigingskak in jou posbus. As dit nie binne 3 minute aankom nie, kyk in jou spam vouer!",
				"Your email address": "Jou e-posadres"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		yk = "",
		bk = "",
		kk = "",
		vk = "",
		wk = "",
		Sk = "",
		Ck = "",
		xk = "",
		Ek = "",
		Tk = "",
		jk = "",
		$k = "",
		Ak = "",
		Nk = "",
		Mk = "",
		Pk = "",
		_k = "",
		zk = "",
		WQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: yk,
			Cancel: bk,
			Comment: kk,
			Delete: vk,
			Discussion: wk,
			Edit: Sk,
			Edited: Ck,
			Expertise: xk,
			Hide: Ek,
			Name: Tk,
			Neurosurgeon: jk,
			Reply: $k,
			Report: Ak,
			Save: Nk,
			Sending: Mk,
			Sent: Pk,
			Show: _k,
			Yesterday: zk,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: yk,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: bk,
				Comment: kk,
				"Complete your profile": "",
				Delete: vk,
				"Deleted member": "",
				Discussion: wk,
				Edit: Sk,
				"Edit this comment": "",
				Edited: Ck,
				"Enter your name": "",
				Expertise: xk,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: Ek,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: Tk,
				Neurosurgeon: jk,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: $k,
				"Reply to comment": "",
				Report: Ak,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: Nk,
				Sending: Mk,
				Sent: Pk,
				Show: _k,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: zk,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		KQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "На добър час!",
				"Complete signup for {{siteTitle}}!": "Завършете регистрацията си в {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Завършете регистрацията си в {{siteTitle}}!",
				"Confirm email address": "Потвърдете имейл адрес",
				"Confirm signup": "Потвърдете регистрация",
				"Confirm your email address": "Потвърдете вашия имейл адрес",
				"Confirm your email update for {{siteTitle}}!": "Потвърдете промяна на имейл адрес за {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Потвърдете абонамента си за {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "За ваша сигурност връзката ще бъде валидна само 24 часа.",
				"Hey there,": "Здравейте,",
				"Hey there!": "Здравейте!",
				"If you did not make this request, you can safely ignore this email.": "Ако не сте направили тази заявка, можете да игноритрате това писмо.",
				"If you did not make this request, you can simply delete this message.": "Ако не сте направили тази заявка, можете просто да изтриете това писмо.",
				"Please confirm your email address with this link:": "Моля, потвърдете Вашия имейл адрес чрез тази връзка:",
				"Secure sign in link for {{siteTitle}}": "Връзка за сигурно влизане в сайта {{siteTitle}}",
				"See you soon!": "До скоро!",
				"Sent to {{email}}": "Изпратено до {{email}}",
				"Sign in": "Вход",
				"Sign in to {{siteTitle}}": "Влизане в {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Използвайте връзката за да финализирате процеса по създаване на акаунт за {{siteTitle}} и да влезете автоматично в сайта:",
				"Thank you for signing up to {{siteTitle}}!": "Благодарим Ви за регистрацията в {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Благодарим Ви за направения абонамент за {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Благодарим Ви за направения абонамент за {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Благодарим Ви за направения абонамент за {{siteTitle}}. Използвайте тази връзка за автоматично влизане:",
				"This email address will not be used.": "Този пощенски адрес няма да бъде използван.",
				"Welcome back to {{siteTitle}}!": "Добре дошли отново в {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Добре дошли отново! Използвайте тази връзка за влизане във Вашият акаунт за сайта {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Можете да копирате този адрес във вашият браузър:",
				"You will not be signed up, and no account will be created for you.": "Няма да бъде направена регистрация и няма да бъде създаван акаунт за вас.",
				"You will not be subscribed.": "Няма да бъдете абониран.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Вие сте на стъпка от това да се абонирате за {{siteTitle}} - моля, потвърдете имейла си като ползвате тази връзка:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Вие сте на една стъпка от това да се абонирате за {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Ok = "Профил",
		Dk = "Обратно",
		Ik = "Промени",
		Rk = "Избери",
		Yk = "Затвори",
		Lk = "Коментари",
		Fk = "Подарък",
		Bk = "Потвърди",
		Uk = "Продължи",
		Vk = "Редакция",
		Hk = "Имейл адрес",
		qk = "Имейли",
		Wk = "Завинаги",
		Kk = "Управлявай",
		Jk = "Месечно",
		Gk = "Име",
		Qk = "План",
		Xk = "Цена",
		Zk = "",
		ev = "Отново",
		tv = "Запиши",
		nv = "Абонамент",
		iv = "Абониран",
		ov = "Чудесно",
		rv = "Неабониран",
		av = "Обнови",
		sv = "",
		lv = "Годишно",
		JQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: Ok,
			Back: Dk,
			Change: Ik,
			Choose: Rk,
			Close: Yk,
			Comments: Lk,
			Complimentary: Fk,
			Confirm: Bk,
			Continue: Uk,
			Edit: Vk,
			Email: Hk,
			Emails: qk,
			Forever: Wk,
			Manage: Kk,
			Monthly: Jk,
			Name: Gk,
			Plan: Qk,
			Price: Xk,
			Recommendations: Zk,
			Retry: ev,
			Save: tv,
			Subscribe: nv,
			Subscribed: iv,
			Success: ov,
			Unsubscribed: rv,
			Update: av,
			Visit: sv,
			Yearly: lv,
			default: {
				"{{amount}} days free": "{{amount}} дни безплатно",
				"{{amount}} off": "{{amount}} отстъпка",
				"{{amount}} off for first {{number}} months.": "{{amount}} отстъпка за първите {{number}} месеца.",
				"{{amount}} off for first {{period}}.": "{{amount}} отстъпка за първия {{period}}.",
				"{{amount}} off forever.": "{{amount}} отстъпка завинаги.",
				"{{discount}}% discount": "{{discount}}% отстъпка",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} повече няма да получава бюлетина {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} повече няма да получава имейли, когато някой отговаря на ваш коментар.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} повече няма да получава този бюлетин.",
				"{{trialDays}} days free": "{{trialDays}} дни безплатен достъп",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Връзка за влизане беше изпратена към пощенската Ви кутия. Ако писмото не пристигне до 3 минути, провете дали не е категоризирана като нежелано писмо.",
				Account: Ok,
				"Account settings": "Настройки на профила Ви",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "След прикючване на безплатния достъп ще бъдете таксувани според обявените цени. Можете да се откажете преди изтичането на безплатния достъп.",
				"Already a member?": "Вече сте абонат на сайта?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Възникна неочаквана грешка. Моля, опитайте отново или <a>потърсете поддръжката</a> ако това се повтаря.",
				Back: Dk,
				"Back to Log in": "Обратно към формата за влизане",
				"Billing info": "Платежна информация",
				"Black Friday": "Черен петък",
				"Cancel anytime.": "Отказване по всяко време.",
				"Cancel subscription": "Откажи абонамент",
				"Cancellation reason": "Причина за отказ",
				Change: Ik,
				"Check spam & promotions folders": "Провери папките за спам и промоции",
				"Check with your mail provider": "Уведомете доставчика ви на ел. поща",
				Choose: Rk,
				"Choose a different plan": "Избеи различен план",
				"Choose your newsletters": "Избери твоят бюлетин",
				"Click here to retry": "Щракнете за нов опит",
				Close: Yk,
				Comments: Lk,
				Complimentary: Fk,
				Confirm: Bk,
				"Confirm cancellation": "Потвърдете прекратяването",
				"Confirm subscription": "Потвърдете абонамента",
				"Contact support": "Връзка с поддръжката",
				Continue: Uk,
				"Continue subscription": "Продължете абонамента",
				"Could not sign in. Login link expired.": "Не можете да влезете. Връзката за вход е изветряла.",
				"Could not update email! Invalid link.": "Не успяхме да обновим имейла! Невалиден линк.",
				"Create a new contact": "Създайте нов контакт",
				"Current plan": "Текущ план",
				"Delete account": "Изтрий профил",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Нямахте това предвид? Управлявайте предпочитанията си <button>тук</button>.",
				"Don't have an account?": "Нямате личен профил?",
				Edit: Vk,
				Email: Hk,
				"Email newsletter": "Имейл бюлетин",
				"Email preference updated.": "Имейл настройките са обновени.",
				"Email preferences": "Имейл настройки ",
				Emails: qk,
				"Emails disabled": "Писмата са преустновени",
				"Ends {{offerEndDate}}": "До {{offerEndDate}}",
				Error: "Грешка",
				"Expires {{expiryDate}}": "Изтича {{expiryDate}}",
				Forever: Wk,
				"Free Trial – Ends {{trialEnd}}": "Безплатен тест – до {{trialEnd}}",
				"Get help": "Получете помощ",
				"Get in touch for help": "Свържете се за помощ",
				"Get notified when someone replies to your comment": "Бъдете уведомявани, ако някой отговори на Ваш коментар",
				"Give feedback on this post": "Вашият отзив за публикацията",
				"Help! I'm not receiving emails": "Помощ! Не получавам имейли",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Ако даден информационен бюлетин бъде отбелязан като спам, имейлите за този адрес се деактивират автоматично, за да е сигурно, че няма да получавате нежелани съобщения.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Ако оплакването за спам е било случайно или искате отново да започнете да получавате имейли, можете да активирате това, като кликнете върху бутона на предишния екран.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Ако отмените абонамента си сега, ще продължите да имате достъп до {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Ако имате корпоративен или правителствен имейл акаунт, обърнете се към ИТ отдела си и ги помолете да разрешат получаването на имейли от {{senderEmail}}.",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Ако искате отново да започнете да получавате имейли, най-добре е да проверите дали имейл адреса ви няма някакви проблеми и след това да кликнете върху повторно абониране на предишния екран.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Ако не получавате имейл бюлетина, за който сте се абонирали, ето няколко неща, които трябва да проверите",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Ако сте извършили всички тези проверки и все още не получавате имейли, можете да се свържете с поддръжката на {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "В случай че при опит за изпращане на бюлетин се получава някакъв постоянен проблем, имейлите ще бъдат деактивирани в акаунта.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Добавете {{senderEmail}} в списъка си с контакти. Това сигнализира на вашия доставчик, че имейлите, изпратени от този адрес са надеждни.",
				"Less like this": "По-малко такива",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Уверете се, че имейлите не попадат случайно в папките Спам или Промоции на входящата ви поща. Ако това е така, щракнете върху "Не е спам" и/или "Премести във входяща поща".',
				Manage: Kk,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: Jk,
				"More like this": "Повече такива",
				Name: Gk,
				"Need more help? Contact support": "Още имате нужда от помощ? Потърсете поддръжката",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Информационните бюлетини могат да бъдат деактивирани в профила ви по две причини: Предишен имейл е бил маркиран като спам или опитът за изпращане на имейл е довел до траен неуспех (отказ).",
				"Not receiving emails?": "Не получавате поща?",
				"Now check your email!": "Провете си пощенската кутия!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "След като се абонирате отново, ако все още не виждате имейли във входящата си поща, проверете папката за спам. Някои доставчици пазят история с предишни оплаквания за спам и ще продължат да маркират имейлите. Ако вашият случай е такъв, маркирайте последния бюлетин като 'Не е спам', за да го преместите обратно в основната си пощенска кутия.",
				"Permanent failure (bounce)": "Постоянен проблем (отскок)",
				Plan: Qk,
				"Plan checkout was cancelled.": "Плащането на плана е прекъснато.",
				"Plan upgrade was cancelled.": "Надграждането на плана е прекъснато.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Моля, попълнете задължителните полета",
				Price: Xk,
				"Re-enable emails": "Позволете отново изпращането на писма",
				Recommendations: Zk,
				"Renews at {{price}}.": "Подновяване за {{price}}.",
				Retry: ev,
				Save: tv,
				"Send an email and say hi!": "Изпратете имейл за здрасти!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Изпратете имейл до {{senderEmail}} за здрасти. Това също може да сигнализира на вашия доставчик на ел. поща, че на имейлите до и от този адрес може да се има доверие.",
				"Sending login link...": "Изпращане на връзка за влизане...",
				"Sending...": "Изпращане...",
				"Show all": "",
				"Sign in": "Вход",
				"Sign out": "Изход",
				"Sign up": "Регистриране",
				"Signup error: Invalid link": "Грешка при влизане: Невалиден линк",
				"Sorry, that didn’t work.": "Жалко, така не става.",
				"Spam complaints": "Оплаквания от спам",
				"Start {{amount}}-day free trial": "Започване на {{amount}}-дневен безплатен достъп.",
				"Starting {{startDate}}": "Започва на {{startDate}}",
				"Starting today": "Стартира днес",
				"Submit feedback": "Изпрати отзив",
				Subscribe: nv,
				Subscribed: iv,
				Success: ov,
				"Success! Check your email for magic link to sign-in.": "Чудесно! Проверете имейла си за вашия магически линк за влизане.",
				"Success! Your account is fully activated, you now have access to all content.": "Чудесно! Вашият акаунт е активиран и вече имате достъп до цялото съдържание.",
				"Success! Your email is updated.": "Чудесно! Вашият имейл е актуализиран.",
				"Successfully unsubscribed": "Успешно разабониране",
				"Thanks for the feedback!": "Благодарим за изпратеният отзив!",
				"That didn't go to plan": "Нещо се обърка и не се случи както трябваше",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Имейлът, който имаме за вас, е {{memberEmail}} - ако не е верен, можете да го актуализирате в областта за <button>настройки на профила си</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Имаше проблем при изпращането на обратната връзка. Моля, опитайте отново малко по-късно.",
				"This site is invite-only, contact the owner for access.": "Сайтът е само с покани. Свържете се със собственика за да получите достъп.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "За да прикючите вашата регистрация беше изпратена връзка за влизане към пощенската Ви кутия. Ако писмото не пристигне до 3 минути, провете дали не е категоризирана като нежелано писмо.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Тествайте безплатно за {{amount}} дни, след това {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Отключете достъпа до всички бюлетини, като станете платен абонат.",
				"Unsubscribe from all emails": "Прекрати изпращането на всякакви писма",
				Unsubscribed: rv,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Спирането на изпращането на писма, няма да ти прекрати абонамента и регистрацията в {{title}}",
				Update: av,
				"Update your preferences": "Обнови твоите предпочитания/настройки",
				"Verify your email address is correct": "Проверете дали имейл адресът ви е верен",
				"View plans": "Вижте плановете",
				Visit: sv,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Този пощенски адрес който опитвате да разабонирате, изглежда невалиден. Моля, свържете се със собственика на сайта.",
				"Welcome back, {{name}}!": "Добре дошли отново, {{name}}!",
				"Welcome back!": "Добре дошли отново!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Когато дадена пощенска кутия не успее да приеме даден имейл, това обикновено се нарича отказ. В много случаи това е временно. В някои случаи обаче, имейлът може да се отхвърля постоянно, например когато имейл адресът е невалиден или не съществува.",
				"Why has my email been disabled?": "Защо имейлът ми е деактивиран?",
				Yearly: lv,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "В момента имате безплатно членство, преминете към платен абонамент за пълен достъп.",
				"You have been successfully resubscribed": "Успешно беше подновен абонаментът",
				"You're currently not receiving emails": "Понастоящем не получавате имейли",
				"You're not receiving emails": "Не получавате имейли",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Не получавате писма защото или пощенският адрес е невалиден, или писмата се класифицират като нежелана поща.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Влязохте успешно.",
				"You've successfully subscribed to": "",
				"Your account": "Твоят профил",
				"Your input helps shape what gets published.": "Вашият принос помага да се оформи това, което се публикува.",
				"Your subscription will expire on {{expiryDate}}": "Абонаментът ви ще изтече на {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Абонаментът ви ще се поднови на {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Абонаментът ви ще започне на {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		uv = "Абонамент",
		GQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: uv,
			default: {
				"Email sent": "Имейлът е изпратен",
				"Now check your email!": "Сега проверете имейла си",
				"Please enter a valid email address": "Моля, въведете валиден имейл адрес",
				"Something went wrong, please try again.": "Нещо се обърка. Моля, опитайте отново.",
				Subscribe: uv,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "За да завършите регистрацията, щракнете върху линка, който ще получите по имейл. Ако не получите такъв до 3 минути, проверете в спам папката!",
				"Your email address": "Вашият имейл адрес"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		cv = "",
		dv = "",
		mv = "",
		pv = "",
		fv = "",
		hv = "",
		gv = "",
		yv = "",
		bv = "",
		kv = "",
		vv = "",
		wv = "",
		Sv = "",
		Cv = "",
		xv = "",
		Ev = "",
		Tv = "",
		jv = "",
		QQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: cv,
			Cancel: dv,
			Comment: mv,
			Delete: pv,
			Discussion: fv,
			Edit: hv,
			Edited: gv,
			Expertise: yv,
			Hide: bv,
			Name: kv,
			Neurosurgeon: vv,
			Reply: wv,
			Report: Sv,
			Save: Cv,
			Sending: xv,
			Sent: Ev,
			Show: Tv,
			Yesterday: jv,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: cv,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: dv,
				Comment: mv,
				"Complete your profile": "",
				Delete: pv,
				"Deleted member": "",
				Discussion: fv,
				Edit: hv,
				"Edit this comment": "",
				Edited: gv,
				"Enter your name": "",
				Expertise: yv,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: bv,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: kv,
				Neurosurgeon: vv,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: wv,
				"Reply to comment": "",
				Report: Sv,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: Cv,
				Sending: xv,
				Sent: Ev,
				Show: Tv,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: jv,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		XQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Tot el millor!",
				"Complete signup for {{siteTitle}}!": "Completa el registre a {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Completa el teu registre a {{siteTitle}}!",
				"Confirm email address": "Confirma la direcció de correu electrònic",
				"Confirm signup": "Confirma el registre",
				"Confirm your email address": "Confirma la teva direcció de correu electrònic",
				"Confirm your email update for {{siteTitle}}!": "Confirma l'actualització del teu correu electrònic per {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Confirma la teva subscripció a {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Per seguretat, l'enllaç expirarà en 24 hores",
				"Hey there,": "Hola,",
				"Hey there!": "Hola!",
				"If you did not make this request, you can safely ignore this email.": "Si no has rebut aquesta sol·licitud, pots ignorar aquest correu electrònic sense problemes",
				"If you did not make this request, you can simply delete this message.": "Si no has fet aquesta sol·licitud, simplement pots esborrar aquest missatge.",
				"Please confirm your email address with this link:": "Si us plau, confirma la teva direcció de correu electrònic amb aquest enllaç:",
				"Secure sign in link for {{siteTitle}}": "Enllaç seguro d'inici de sessió per {{siteTitle}}",
				"See you soon!": "A reveure!",
				"Sent to {{email}}": "Enviat a {{email}}",
				"Sign in": "Iniciar la sessió",
				"Sign in to {{siteTitle}}": "Inicia la sessió a {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Fes clic sobre l'enllaç per completar el procés de registre a {{siteTitle}} i inicia sessió automàticament:",
				"Thank you for signing up to {{siteTitle}}!": "Gràcies per registrar-te a {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Gràcies per subscribir-te a {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Gràcies per subscribir-te a {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Gràcies per subscribir-te a {{siteTitle}}. Fes clic a l'enllaç a continuació per iniciar sessió automàticament:",
				"This email address will not be used.": "Aquesta direcció de correu electrònic no s'utilitzarà.",
				"Welcome back to {{siteTitle}}!": "Benvingut de nou a {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Benvingut de nou! Utilitza aquest enllaç per iniciar sessió de manera segura al teu compte de {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "També pots copiar i enganxar aquesta URL al teu navegador:",
				"You will not be signed up, and no account will be created for you.": "No et registraràs i no es crearà cap compte per a tu.",
				"You will not be subscribed.": "No estaràs subscrit.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Estàs a un sol pas de subscribir-te a {{siteTitle}} — si us plau confirma la teva direcció de correu electrònic amb aquest enllaç:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Estàs a un sol pas de subscribir-te a {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		$v = "Compte",
		Av = "Tornar enrere",
		Nv = "Canvia",
		Mv = "Tria",
		Pv = "Tancar",
		_v = "Comentaris",
		zv = "Complementari",
		Ov = "Confirmar",
		Dv = "Continuar",
		Iv = "Editar",
		Rv = "Correu electrònic",
		Yv = "Correus electrònics",
		Lv = "per sempre",
		Fv = "Gestionar",
		Bv = "Mensual",
		Uv = "Nom",
		Vv = "Pla",
		Hv = "Preu",
		qv = "",
		Wv = "Torna-ho a provar",
		Kv = "Desa",
		Jv = "Subscriu-te",
		Gv = "Subscrit",
		Qv = "Amb èxit",
		Xv = "S'ha cancel·lat la subscripció",
		Zv = "Actualitza",
		ew = "",
		tw = "Anual",
		ZQ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: $v,
			Back: Av,
			Change: Nv,
			Choose: Mv,
			Close: Pv,
			Comments: _v,
			Complimentary: zv,
			Confirm: Ov,
			Continue: Dv,
			Edit: Iv,
			Email: Rv,
			Emails: Yv,
			Forever: Lv,
			Manage: Fv,
			Monthly: Bv,
			Name: Uv,
			Plan: Vv,
			Price: Hv,
			Recommendations: qv,
			Retry: Wv,
			Save: Kv,
			Subscribe: Jv,
			Subscribed: Gv,
			Success: Qv,
			Unsubscribed: Xv,
			Update: Zv,
			Visit: ew,
			Yearly: tw,
			default: {
				"{{amount}} days free": "{{amount}} dies gratuïts",
				"{{amount}} off": "{{amount}} de descompte",
				"{{amount}} off for first {{number}} months.": "{{amount}} de descompte pels primers {{number}} mesos",
				"{{amount}} off for first {{period}}.": "{{amount}} de descompte pels primers {{period}}.",
				"{{amount}} off forever.": "{{amount}} de descompte per sempre.",
				"{{discount}}% discount": "{{discount}}% de descompte",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} ja no rebràs cap butlletí de {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} no rebrà cap correu electrònic quan algú respongui els teus comentaris.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} ja no rebrà aquest butlletí.",
				"{{trialDays}} days free": "{{trialDays}} dies de franc",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "S'ha enviat un enllaç d'inici de sessió al teu correu electrònic. Si no t'arriba en 3 minuts, reivsa la teva carpeta de correu brossa.",
				Account: $v,
				"Account settings": "Configuració del compte",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Després que finalitzi el període de prova gratuït, se't cobrarà el preu regular del nivell que hagis triat. Sempre pots cancel·lar abans d'això.",
				"Already a member?": "Ja ets membre?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Un error inesperat ha passat. Si us plau, torneu a provar o <a>contacti amb suport tècnic</a> si l'error persisteix.",
				Back: Av,
				"Back to Log in": "Tornar al inici de sessió",
				"Billing info": "Dades de facturació",
				"Black Friday": "Divendres negre",
				"Cancel anytime.": "Cancel·la en qualsevol moment.",
				"Cancel subscription": "Cancel·la la subscripció",
				"Cancellation reason": "Motiu de la cancel·lació",
				Change: Nv,
				"Check spam & promotions folders": "Comproveu les carpetes de correu brossa i promocions",
				"Check with your mail provider": "Consulteu amb el vostre proveïdor de correu",
				Choose: Mv,
				"Choose a different plan": "Seleccioneu un pla diferent",
				"Choose your newsletters": "Selecciona els teus butlletins",
				"Click here to retry": "Fes clic aquí per tornar a intentar",
				Close: Pv,
				Comments: _v,
				Complimentary: zv,
				Confirm: Ov,
				"Confirm cancellation": "Confirmar cancel·lació",
				"Confirm subscription": "Confirmar subscripció",
				"Contact support": "Contactar amb suport tècnic",
				Continue: Dv,
				"Continue subscription": "Continuar subscripció",
				"Could not sign in. Login link expired.": "No s'ha pogut iniciar sessió. L'enllaç d'inici de sessió ha expirat.",
				"Could not update email! Invalid link.": "No s'ha pogut actualitzar el correu electrònic! Enllaç no vàlid.",
				"Create a new contact": "Crear un nou contacte",
				"Current plan": "Pla actual",
				"Delete account": "Esborra compte",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "No volia fer això? Gestioneu les vostres preferències <button>aquí</button>.",
				"Don't have an account?": "No tens un compte?",
				Edit: Iv,
				Email: Rv,
				"Email newsletter": "Butlletí informatiu per correu electrònic",
				"Email preference updated.": "Preferència del correu electrònic actualitzada",
				"Email preferences": "Preferència del correu electrònic",
				Emails: Yv,
				"Emails disabled": "Correus electrònics desactivats",
				"Ends {{offerEndDate}}": "Finalitza el {{offerEndDate}}",
				Error: "Error",
				"Expires {{expiryDate}}": "Expira el {{expiryDate}}",
				Forever: Lv,
				"Free Trial – Ends {{trialEnd}}": "Prova gratuita - Finalitza el {{trialEnd}}",
				"Get help": "Demanar ajuda",
				"Get in touch for help": "Poseu-vos en contacte per obtenir ajuda",
				"Get notified when someone replies to your comment": "Rep notificacions quan algú et respongui al teu comentari",
				"Give feedback on this post": "Enviar comentaris sobre aquesta publicació",
				"Help! I'm not receiving emails": "Ajuda! No rebo correus electrònics",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Si un butlletí es marca com a correu brossa, els correus electrònics es desactivaran automàticament per a aquesta adreça per assegurar-vos que ja no rebeu cap missatge no desitjat.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Si la queixa de correu brossa va ser accidental, o si voleu començar a rebre correus electrònics de nou, podeu tornar a subscriure's als correus electrònics fent clic al botó de la pantalla anterior.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Si cancel·leu la vostra subscripció ara, continuareu tenint accés fins al {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Si teniu un compte de correu electrònic corporatiu o governamental, poseu-vos en contacte amb el vostre departament de TI i demaneu-los que permetin rebre correus electrònics de {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Si voleu començar a rebre correus electrònics de nou, els millors passos següents són comprovar si hi ha cap problema a la vostra adreça de correu electrònic al fitxer i, a continuació, feu clic a tornar a subscriure's a la pantalla anterior.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Si no rebeu el butlletí electrònic al qual us heu subscrit, aquí teniu algunes coses per comprovar.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Si heu completat totes aquestes comprovacions i encara no rebeu correus electrònics, podeu contactar amb {{supportAddress}} per obtenir assistència.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "En cas que es rebi un error permanent en intentar enviar un butlletí, els correus electrònics es desactivaran al compte.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Afegiu {{senderEmail}} al vostre client de correu electrònic a la vostra llista de contactes. Això indica al vostre proveïdor de correu que els correus electrònics enviats des d'aquesta adreça haurien de ser de confiança.",
				"Less like this": "Menys com aquesta",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': `Assegureu-vos que els correus electrònics no acabin accidentalment a les carpetes Correu brossa o Promocions de la vostra safata d'entrada. Si ho són, feu clic a "Marca com a correu brossa" i/o a "Mou a la safata d'entrada".`,
				Manage: Fv,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: Bv,
				"More like this": "Més com aquesta",
				Name: Uv,
				"Need more help? Contact support": "Necessites més ajuda? Contacte de suport",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Els butlletins de notícies es poden desactivar al vostre compte per dos motius: un correu electrònic anterior s'ha marcat com a correu brossa o si s'ha intentat enviar un correu electrònic ha provocat un error permanent (rebot).",
				"Not receiving emails?": "No reps els correus electrònics?",
				"Now check your email!": "Revisar ara el teu correu electrònic!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": `Un cop us torneu a subscriure, si encara no veieu correus electrònics a la vostra safata d'entrada, comproveu la vostra carpeta de correu brossa. Alguns proveïdors de safates d'entrada mantenen un registre de les queixes de correu brossa anteriors i continuaran marcant els correus electrònics. Si això passa, marqueu el darrer butlletí com a "No és correu brossa". ' per tornar-lo a moure a la safata d'entrada principal.`,
				"Permanent failure (bounce)": "Falla permanent (rebot)",
				Plan: Vv,
				"Plan checkout was cancelled.": "S'ha cancel·lat el pagament del pla.",
				"Plan upgrade was cancelled.": "S'ha cancel·lat l'actualització del pla.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Si us plau, ompliu els camps obligatoris",
				Price: Hv,
				"Re-enable emails": "Torna a activar els correus electrònics",
				Recommendations: qv,
				"Renews at {{price}}.": "Es renova a {{price}}",
				Retry: Wv,
				Save: Kv,
				"Send an email and say hi!": "Envia un correu electrònic i saluda!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Envieu un correu electrònic a {{senderEmail}} i saludeu. Això també pot ajudar a indicar al vostre proveïdor de correu que els correus electrònics d'anada i des d'aquesta adreça haurien de ser de confiança.",
				"Sending login link...": "Enviant enllaç d'inici de sessió...",
				"Sending...": "Enviant",
				"Show all": "",
				"Sign in": "Inici de sessió",
				"Sign out": "Finalitza la sessió",
				"Sign up": "Registrar-se",
				"Signup error: Invalid link": "Error de registre: Enllaç no vàlid",
				"Sorry, that didn’t work.": "Em sap greu, pero no ha funcionat.",
				"Spam complaints": "Queixes de correu brossa",
				"Start {{amount}}-day free trial": "Comença el període de proves de {{amount}} dies",
				"Starting {{startDate}}": "A partir de {{startDate}}",
				"Starting today": "Comença avui",
				"Submit feedback": "Enviar comentaris",
				Subscribe: Jv,
				Subscribed: Gv,
				Success: Qv,
				"Success! Check your email for magic link to sign-in.": "Amb èxit! Comproveu el vostre correu electrònic per trobar l'enllaç màgic per iniciar la sessió.",
				"Success! Your account is fully activated, you now have access to all content.": "Amb èxit! El vostre compte està totalment activat, ara teniu accés a tot el contingut.",
				"Success! Your email is updated.": "Amb èxit! El teu correu electrònic està actualitzat.",
				"Successfully unsubscribed": "T'has donat de baixa correctament",
				"Thanks for the feedback!": "Gràcies pels teus comentaris!",
				"That didn't go to plan": "Això no ha anat com estava previst",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "'adreça electrònica que tenim per a vostè és {{memberEmail}}; si no és correcta, podeu actualitzar-la a l'<button>àrea de configuració del vostre compte</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Hi ha hagut un problema en enviar els vostres comentaris. Torneu-ho a provar una mica més tard.",
				"This site is invite-only, contact the owner for access.": "Aquest llog és només per invitació, contacta amb el propietari per obtenir accés.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Per completar el registre, fes clic sobre l'enllaç de confirmació al teu correu electrònic. Si no t'arria en 3 minuts, revisa la teva carpeta de correu brossa!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prova gratis durant {{amount}} dies i després {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Desbloqueja l'accés a tots els butlletins de notícies fent-te un subscriptor de pagament.",
				"Unsubscribe from all emails": "Cancel·la les subscripcions a tots els correus electrònics",
				Unsubscribed: Xv,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Cancel·lar la subscripció al teu correu electrònic no cancel·larà la teva subscripció de pagament a {{title}}",
				Update: Zv,
				"Update your preferences": "Actualitza les preferències",
				"Verify your email address is correct": "Verifica que la teva adreça de correu electrònic és correcta",
				"View plans": "Mostrar plans",
				Visit: ew,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "No hem pogut cancel·lar la teva subscripció ja que no s'ha trobar la direcció de correu electrònic. Si us plau, contacta amb el propietari del lloc web.",
				"Welcome back, {{name}}!": "Benvingut/da de nou, {{name}}!",
				"Welcome back!": "Benvingut/da de noi!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Quan una safata d'entrada no accepta un correu electrònic s'anomena habitualment un rebot. En molts casos, això pot ser temporal. Tanmateix, en alguns casos, un correu electrònic rebutjat es pot retornar com a error permanent quan una adreça de correu electrònic no és vàlida o no és vàlida. existent.",
				"Why has my email been disabled?": "Per què s'ha desactivat el meu correu electrònic?",
				Yearly: tw,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Actualment teniu una subscripció gratuïta, actualitzeu a una subscripció de pagament per accedir-hi.",
				"You have been successfully resubscribed": "T'has tornat a subscribir amb èxit",
				"You're currently not receiving emails": "Actualment no rebeu correus electrònics",
				"You're not receiving emails": "No estàs rebent correus electrònics",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "No estas reben correus electrònics perquè has marcat recentment com SPAM o perque no s'han pogut entregar els missatges a la direcció de correu electrònic proporcionada.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Heu iniciat la sessió correctament.",
				"You've successfully subscribed to": "",
				"Your account": "El teu copte",
				"Your input helps shape what gets published.": "La teva opinió ajuda a definir el que es publica.",
				"Your subscription will expire on {{expiryDate}}": "La vostra subscripció caducarà el {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "La vostra subscripció es renovarà el {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "La vostra subscripció començarà el {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		nw = "Subscriu-te",
		eX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: nw,
			default: {
				"Email sent": "Correu electrònic enviat",
				"Now check your email!": "Ara comproveu el vostre correu electrònic!",
				"Please enter a valid email address": "Siusplau, introdueixi una adreça de correu electrònic vàlida",
				"Something went wrong, please try again.": "S'ha produït un error, torna-ho a provar.",
				Subscribe: nw,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Per completar el registre, feu clic a l'enllaç de confirmació de la vostra safata d'entrada. Si no arriba en 3 minuts, comproveu la vostra carpeta de correu brossa!",
				"Your email address": "La teva adreça de correu electrònic"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		iw = "",
		ow = "",
		rw = "",
		aw = "",
		sw = "",
		lw = "",
		uw = "",
		cw = "",
		dw = "",
		mw = "",
		pw = "",
		fw = "",
		hw = "",
		gw = "",
		yw = "",
		bw = "",
		kw = "",
		vw = "",
		tX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: iw,
			Cancel: ow,
			Comment: rw,
			Delete: aw,
			Discussion: sw,
			Edit: lw,
			Edited: uw,
			Expertise: cw,
			Hide: dw,
			Name: mw,
			Neurosurgeon: pw,
			Reply: fw,
			Report: hw,
			Save: gw,
			Sending: yw,
			Sent: bw,
			Show: kw,
			Yesterday: vw,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: iw,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: ow,
				Comment: rw,
				"Complete your profile": "",
				Delete: aw,
				"Deleted member": "",
				Discussion: sw,
				Edit: lw,
				"Edit this comment": "",
				Edited: uw,
				"Enter your name": "",
				Expertise: cw,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: dw,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: mw,
				Neurosurgeon: pw,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: fw,
				"Reply to comment": "",
				Report: hw,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: gw,
				Sending: yw,
				Sent: bw,
				Show: kw,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: vw,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		nX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Ať se daří!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Dokončete registraci k {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Potvrďte změnu e-mailu pro {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Potvrďte odběr na {{siteTitle}}!",
				"For your security, the link will expire in 24 hours time.": "Pro vaši bezpečnost bude odkaz platný 24 hodin.",
				"Hey there,": "Ahoj,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Pokud jste tuto žádost nezaslali, můžete tento e-mail bezpečně ignorovat.",
				"If you did not make this request, you can simply delete this message.": "Pokud jste tuto žádost nezaslali, můžete tento e-mail jednoduše smazat.",
				"Please confirm your email address with this link:": "Prosím, potvrďte svou e-mailovou adresu kliknutím na následující odkaz:",
				"Secure sign in link for {{siteTitle}}": "Bezpečný přihlašovací odkaz pro {{siteTitle}}",
				"See you soon!": "Na viděnou!",
				"Sent to {{email}}": "Odesláno na {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Přihlásit se k {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klikněte na následující odkaz pro dokončení registrace u {{siteTitle}} a automatické přihlášení:",
				"Thank you for signing up to {{siteTitle}}!": "Děkujeme za registraci u {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Děkujeme za odběr na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Děkujeme za odběr na {{siteTitle}}. Klikněte na následující odkaz pro automatické přihlášení:",
				"This email address will not be used.": "Tato e-mailová adresa nebude použita.",
				"Welcome back to {{siteTitle}}!": "Vítejte zpět na {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Vítejte zpět! Použijte tento bezpečný odkaz pro přihlášení do svého účtu {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Můžete také zkopírovat a vložit tuto adresu URL do svého prohlížeče:",
				"You will not be signed up, and no account will be created for you.": "Nebudete registrováni a nebudou pro vás vytvořeny žádné účty.",
				"You will not be subscribed.": "Nebudete odebírat.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Stačí jedno kliknutí a odebíráte {{siteTitle}}. Potvrďte prosím svou e-mailovou adresu kliknutím na následující odkaz:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		ww = "Účet",
		Sw = "Zpět",
		Cw = "",
		xw = "",
		Ew = "Zavřít",
		Tw = "Komentáře",
		jw = "",
		$w = "Potvrdit",
		Aw = "Pokračovat",
		Nw = "",
		Mw = "E-mail",
		Pw = "E-maily",
		_w = "",
		zw = "Spravovat",
		Ow = "Měsíčně",
		Dw = "Jméno",
		Iw = "",
		Rw = "Cena",
		Yw = "",
		Lw = "Zkusit znovu",
		Fw = "Uložit",
		Bw = "",
		Uw = "",
		Vw = "",
		Hw = "",
		qw = "",
		Ww = "",
		Kw = "Ročně",
		iX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: ww,
			Back: Sw,
			Change: Cw,
			Choose: xw,
			Close: Ew,
			Comments: Tw,
			Complimentary: jw,
			Confirm: $w,
			Continue: Aw,
			Edit: Nw,
			Email: Mw,
			Emails: Pw,
			Forever: _w,
			Manage: zw,
			Monthly: Ow,
			Name: Dw,
			Plan: Iw,
			Price: Rw,
			Recommendations: Yw,
			Retry: Lw,
			Save: Fw,
			Subscribe: Bw,
			Subscribed: Uw,
			Success: Vw,
			Unsubscribed: Hw,
			Update: qw,
			Visit: Ww,
			Yearly: Kw,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% sleva",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dní zdarma",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Odkaz pro přihlášení byl odeslán do vaší e-mailové schránky. Pokud nepřijde do 3 minut, zkontrolujte prosím svou složku nevyžádaných zpráv (spam).",
				Account: ww,
				"Account settings": "Nastavení účtu",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Po skončení zkušební doby vám bude účtována běžná cena pro vybranou úroveň. Vždy můžete předtím zrušit odběr.",
				"Already a member?": "Již jste členem?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: Sw,
				"Back to Log in": "Zpět na přihlášení",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Zrušit odběr",
				"Cancellation reason": "Důvod zrušení",
				Change: Cw,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: xw,
				"Choose a different plan": "Vybrat jiný plán",
				"Choose your newsletters": "Vyberte si newsletter",
				"Click here to retry": "",
				Close: Ew,
				Comments: Tw,
				Complimentary: jw,
				Confirm: $w,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: Aw,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Smazat účet",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Nemáte účet?",
				Edit: Nw,
				Email: Mw,
				"Email newsletter": "",
				"Email preference updated.": "Předvolby e-mailu byly aktualizovány.",
				"Email preferences": "Předvolby e-mailu",
				Emails: Pw,
				"Emails disabled": "E-maily vypnuty",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: _w,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Získat pomoc",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Dostávat upozornění, když někdo odpoví na váš komentář",
				"Give feedback on this post": "Dát zpětnou vazbu k tomuto příspěvku",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Méně podobných",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: zw,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: Ow,
				"More like this": "Víc podobných",
				Name: Dw,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Nepřicházejí vám e-maily?",
				"Now check your email!": "Zkontrolujte svou e-mailovou schránku!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: Iw,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: Rw,
				"Re-enable emails": "Znovu povolit e-maily",
				Recommendations: Yw,
				"Renews at {{price}}.": "",
				Retry: Lw,
				Save: Fw,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Odesílání přihlašovacího odkazu...",
				"Sending...": "Odesílání...",
				"Show all": "",
				"Sign in": "Přihlásit se",
				"Sign out": "",
				"Sign up": "Registrovat se",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Začít {{amount}}denní zkušební verzi zdarma",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Odeslat zpětnou vazbu",
				Subscribe: Bw,
				Subscribed: Uw,
				Success: Vw,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Úspěšné odhlášení",
				"Thanks for the feedback!": "Děkujeme za zpětnou vazbu!",
				"That didn't go to plan": "Něco se nepovedlo",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Tento web je pouze pro pozvané, kontaktujte provozovatele pro přístup.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Pro dokončení registrace klikněte na potvrzovací odkaz ve vaší e-mailové schránce. Pokud nepřijde do 3 minut, zkontrolujte prosím složku nevyžádaných zpráv (spam)!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Odhlásit se od všech e-mailů",
				Unsubscribed: Hw,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Odhlášení ze newsletterů nezruší váš placený odběr {{title}}",
				Update: qw,
				"Update your preferences": "Aktualizovat předvolby",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: Ww,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nemohli jsme vás odhlásit, protože e-mailová adresa nebyla nalezena. Kontaktujte prosím provozovatele webu.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: Kw,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Úspěšně jste se opět přihlásili k odběru",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Nepřicházejí vám e-maily, protože jste buď označili nedávnou zprávu jako spam, nebo doručování zpráv na vámi zadaný e-mail nefunguje.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Váš účet",
				"Your input helps shape what gets published.": "Vaše připomínky pomáhají spoluvytvářet obsah webu.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Jw = "",
		oX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: Jw,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: Jw,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Gw = "",
		Qw = "",
		Xw = "",
		Zw = "",
		eS = "",
		tS = "",
		nS = "",
		iS = "",
		oS = "",
		rS = "",
		aS = "",
		sS = "",
		lS = "",
		uS = "",
		cS = "",
		dS = "",
		mS = "",
		pS = "",
		rX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: Gw,
			Cancel: Qw,
			Comment: Xw,
			Delete: Zw,
			Discussion: eS,
			Edit: tS,
			Edited: nS,
			Expertise: iS,
			Hide: oS,
			Name: rS,
			Neurosurgeon: aS,
			Reply: sS,
			Report: lS,
			Save: uS,
			Sending: cS,
			Sent: dS,
			Show: mS,
			Yesterday: pS,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: Gw,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: Qw,
				Comment: Xw,
				"Complete your profile": "",
				Delete: Zw,
				"Deleted member": "",
				Discussion: eS,
				Edit: tS,
				"Edit this comment": "",
				Edited: nS,
				"Enter your name": "",
				Expertise: iS,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: oS,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: rS,
				Neurosurgeon: aS,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: sS,
				"Reply to comment": "",
				Report: lS,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: uS,
				Sending: cS,
				Sent: dS,
				Show: mS,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: pS,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		aX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Alt det bedste!",
				"Complete signup for {{siteTitle}}!": "Gennemfør din oprettelse på {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Gennemfør oprettelsen af din konto hos {{siteTitle}}!",
				"Confirm email address": "Bekræft e-mailadresse",
				"Confirm signup": "Bekræft tilmelding",
				"Confirm your email address": "Bekræft din e-mailadresse",
				"Confirm your email update for {{siteTitle}}!": "Bekræft din e-mail opdatering hos {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Annuller dit abonnement hos {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Af sikkerhedsmæssige årsager, vil linket udløbe om 24 timer.",
				"Hey there,": "Hejsa",
				"Hey there!": "Hejsa!",
				"If you did not make this request, you can safely ignore this email.": "Hvis du ikke lavede denne anmoding, kan du blot ignorere denne e-mail.",
				"If you did not make this request, you can simply delete this message.": "Hvis du ikke lavede denne anmodning, kan du blot slette denne besked.",
				"Please confirm your email address with this link:": "Bekræft venligst din e-mail med dette link:",
				"Secure sign in link for {{siteTitle}}": "Sikker log ind link til {{siteTitle}}",
				"See you soon!": "Vi ses om lidt!",
				"Sent to {{email}}": "Sendt til {{email}}",
				"Sign in": "Log ind",
				"Sign in to {{siteTitle}}": "Log ind hos {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klik på linked nedenfor for at gennemføre oprettelsen af din konto hos {{siteTitle}}. Du bliver automatisk logget ind:",
				"Thank you for signing up to {{siteTitle}}!": "Tak fordi du oprettede en konto hos {{siteTitle}}",
				"Thank you for subscribing to {{siteTitle}}!": "Tak fordi du abonnerer hos {{siteTitle}}",
				"Thank you for subscribing to {{siteTitle}}.": "Tak fordi du abonnerer hos {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Tak fordi du abonnerer hos {{siteTitle}}. Klik på linket nedenfor for at blive logget automatisk ind:",
				"This email address will not be used.": "Denne e-mailaddresse vil ikke blive brugt.",
				"Welcome back to {{siteTitle}}!": "Velkommen tilbage til {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Velkommen tilbage! Brug dette link for at logge sikkert ind på din konto hos {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Du kan også kopiere & indsætte URL'en i din browser:",
				"You will not be signed up, and no account will be created for you.": "Du vil ikke blive oprettet og der vil ikke eksistere nogen konto for dig.",
				"You will not be subscribed.": "Du bliver ikke tilmeldt noget.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Du er kun et klik væk fra at abonnere på {{siteTitle}} - bekræft venligst din e-mail med dette link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Du er kun et klik væk fra at abonnere på {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		fS = "Konto",
		hS = "Tilbage",
		gS = "Skift",
		yS = "Vælg",
		bS = "Luk",
		kS = "Kommentarer",
		vS = "Gratis",
		wS = "Bekræft",
		SS = "Fortsæt",
		CS = "Rediger",
		xS = "E-mail",
		ES = "E-mails",
		TS = "For evigt",
		jS = "Administrer",
		$S = "Månedlig",
		AS = "Navn",
		NS = "Abonnement",
		MS = "Pris",
		PS = "",
		_S = "Prøv igen",
		zS = "Gem",
		OS = "Tilmeld",
		DS = "Tilmeldt",
		IS = "Succes",
		RS = "Afmeldt",
		YS = "Opdater",
		LS = "",
		FS = "Årlig",
		sX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: fS,
			Back: hS,
			Change: gS,
			Choose: yS,
			Close: bS,
			Comments: kS,
			Complimentary: vS,
			Confirm: wS,
			Continue: SS,
			Edit: CS,
			Email: xS,
			Emails: ES,
			Forever: TS,
			Manage: jS,
			Monthly: $S,
			Name: AS,
			Plan: NS,
			Price: MS,
			Recommendations: PS,
			Retry: _S,
			Save: zS,
			Subscribe: OS,
			Subscribed: DS,
			Success: IS,
			Unsubscribed: RS,
			Update: YS,
			Visit: LS,
			Yearly: FS,
			default: {
				"{{amount}} days free": "{{amount}} dage gratis",
				"{{amount}} off": "{{amount}} rabat",
				"{{amount}} off for first {{number}} months.": "{{amount}} rabat for de første {{number}} måneder.",
				"{{amount}} off for first {{period}}.": "{{amount}} rabat for den/det første {{period}}.",
				"{{amount}} off forever.": "{{amount}} rabat for evigt",
				"{{discount}}% discount": "{{discount}}% rabat",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} vil ikke længere modtage {{newsletterName}} nyhedsbrev.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} vil ikke længere modtage e-mails når nogen svarer på dine kommentarer.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} vil ikke længere modtage dette nyhedsbrev.",
				"{{trialDays}} days free": "{{trialDays}} dage gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Der er blevet sendt en link til din email, du kan bruge til at logge ind med. Hvis det ikke kommer frem indenfor 3 minutter, så tjek din spam mappe.",
				Account: fS,
				"Account settings": "Kontoindstillinger",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Når din gratis prøveperiode udløber, vil du blive opkrævet den normale pris for det abonnement du har valgt. Du kan selvfølgelig altid annullere dit abonnement inden.",
				"Already a member?": "Er du allerede medlem?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Der opstod en uventet fejl. Prøv venligst igen eller <a>kontakt support</a> hvis fejlen fortsætter.",
				Back: hS,
				"Back to Log in": "Tilbage til log ind",
				"Billing info": "Faktureringsoplysninger",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Annuller når som helst.",
				"Cancel subscription": "Annuller abonnement",
				"Cancellation reason": "Årsag til annullering",
				Change: gS,
				"Check spam & promotions folders": "Tjek spam og kampagner mapper",
				"Check with your mail provider": "Tjek med din e-mailudbyder",
				Choose: yS,
				"Choose a different plan": "Vælg et andet abonnement",
				"Choose your newsletters": "Hvilke nyhedsbreve ønsker du",
				"Click here to retry": "Klik her for at prøve igen",
				Close: bS,
				Comments: kS,
				Complimentary: vS,
				Confirm: wS,
				"Confirm cancellation": "Bekræft annullering",
				"Confirm subscription": "Bekræft abonnement",
				"Contact support": "Kontakt support",
				Continue: SS,
				"Continue subscription": "Fortsæt tilmelding",
				"Could not sign in. Login link expired.": "Kunne ikke log ind. Log ind link udløbet.",
				"Could not update email! Invalid link.": "Kunne ikke opdatere e-mail! Ugyldigt link.",
				"Create a new contact": "Opret ny kontakt",
				"Current plan": "Nuværende abonnement",
				"Delete account": "Slet konto",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Var det ikke dette du ønskede at gøre? Administrer dine præferencer <button>her</button>.",
				"Don't have an account?": "Har du ikke en konto?",
				Edit: CS,
				Email: xS,
				"Email newsletter": "E-mail nyhedsbrev",
				"Email preference updated.": "E-mail præferencer blev opdateret.",
				"Email preferences": "E-mail præferencer",
				Emails: ES,
				"Emails disabled": "E-mails deaktiveret",
				"Ends {{offerEndDate}}": "Udløber {{offerEndDate}}",
				Error: "Fejl",
				"Expires {{expiryDate}}": "Udløber {{expiryDate}}",
				Forever: TS,
				"Free Trial – Ends {{trialEnd}}": "Gratis prøveperiode - Udløber {{trialEnd}}",
				"Get help": "Få hjælp",
				"Get in touch for help": "Tag kontakt for at få hjælp",
				"Get notified when someone replies to your comment": "Bliv notificeret når nogen svarer på din kommentar",
				"Give feedback on this post": "Giv feedback til dette indlæg",
				"Help! I'm not receiving emails": "Hjælp! Jeg modtager ikke e-mails",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Hvis et nyhedsbrev er markeret som spam, deaktiveres e-mails automatisk for den adresse så du ikke længere modtage uønskede beskeder.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Hvis spamklagen var utilsigtet, eller du gerne vil begynde at modtage e-mails igen, kan du abonnere igen på e-mails ved at klikke på knappen på det forrige skærmbillede.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Hvis du annullere dit abonnement nu, vil du fortsat have adgang indtil {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Hvis du har en virksomheds- eller statslig e-mailkonto, skal du kontakte din it-afdeling og bede dem om at tillade, at e-mails modtages fra {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Hvis du gerne vil begynde at modtage e-mails igen, er de bedste næste trin at tjekke din registreret e-mailadresse for eventuelle problemer og derefter klikke på gentilmeld på den forrige skærmbillede.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Hvis du ikke modtager det e-mailnyhedsbrev, du har tilmeldt dig, er der et par ting, du skal tjekke.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Hvis du har gennemført alle disse checks, og du stadig ikke modtager e-mails, kan du kontakte {{supportAddress}} for at få hjælp.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "I tilfælde af, at der modtages en permanent fejl ved forsøg på at sende et nyhedsbrev, vil e-mails blive deaktiveret på kontoen.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Tilføj {{senderEmail}} til din kontaktliste i din e-mailklient. Dette signalerer til din e-mailudbyder, at e-mails sendt fra denne adresse skal være tillid til.",
				"Less like this": "Mindre af dette",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Sørg for, at e-mails ikke ender i Spam eller Kampagner mapper i din indbakke. Hvis de gør, skal du klikke på "Markér som ikke spam" og/eller "Flyt til indbakke".',
				Manage: jS,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: $S,
				"More like this": "Mere af dette",
				Name: AS,
				"Need more help? Contact support": "Brug for hjælp? Kontakt support",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Nyhedsbreve kan deaktiveres på din konto af to årsager: En tidligere e-mail blev markeret som spam, eller forsøg på at sende en e-mail resulterede i en permanent fejl (bounce).",
				"Not receiving emails?": "Modtager du ikke e-mails?",
				"Now check your email!": "Tjek din e-mail!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Når du har tilmeldt dig igen, hvis du stadig ikke kan se e-mails i din indbakke, skal du tjekke din spam-mappe. Nogle e-mailudbydere registrerer tidligere spam-klager og vil blive ved med at markere e-mails. Hvis dette sker, skal du markere det seneste nyhedsbrev som 'Ikke spam' for at flytte det tilbage til din primære indbakke.",
				"Permanent failure (bounce)": "Permanent fejl (bounce)",
				Plan: NS,
				"Plan checkout was cancelled.": "Abonnementsbetaling blev aflyst.",
				"Plan upgrade was cancelled.": "Opgradering af abonnement blev aflyst.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Udfyld venligst påkrævede felter",
				Price: MS,
				"Re-enable emails": "Genaktiver e-mails",
				Recommendations: PS,
				"Renews at {{price}}.": "Bliver fornyet til {{price}}.",
				Retry: _S,
				Save: zS,
				"Send an email and say hi!": "Send en e-mail og sig hej!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Send en e-mail til {{senderEmail}} og sig hej. Dette kan også hjælpe med at signalere til din e-mailudbyder, at e-mails til og fra denne adresse skal være tillid til.",
				"Sending login link...": "Sender link til log ind",
				"Sending...": "Sender",
				"Show all": "",
				"Sign in": "Log ind",
				"Sign out": "",
				"Sign up": "Bliv medlem",
				"Signup error: Invalid link": "Tilmeldingsfejl: Ugyldigt link",
				"Sorry, that didn’t work.": "Beklager, det virkede ikke.",
				"Spam complaints": "Spam klager",
				"Start {{amount}}-day free trial": "Start {{amount}}-dages gratis prøveperiode",
				"Starting {{startDate}}": "Fra {{startDate}}",
				"Starting today": "Fra i dag",
				"Submit feedback": "Send feedback",
				Subscribe: OS,
				Subscribed: DS,
				Success: IS,
				"Success! Check your email for magic link to sign-in.": "Sådan! Tjek din indbakke for et magisk link til at logge ind.",
				"Success! Your account is fully activated, you now have access to all content.": "Sådan! Din konto er fuldt aktiveret, du har nu adgang til alt indhold.",
				"Success! Your email is updated.": "Sådan! Din e-mail er opdateret.",
				"Successfully unsubscribed": "Du er nu afmeldt",
				"Thanks for the feedback!": "Tak for din feedback!",
				"That didn't go to plan": "Det gik ikke helt efter planen",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Den e-mailadresse, vi har på dig, er {{memberEmail}} – hvis det ikke er korrekt, kan du opdatere den i dit <button>kontoindstillingsområde</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Der opstod et problem med at sende din feedback. Prøv venligst igen lidt senere.",
				"This site is invite-only, contact the owner for access.": "Denne sider kræver at du skal være inviteret. Kontakt ejeres for at få adgang.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "For at gennemføre oprettelsen af din konto, skal du klikke på bekræftelseslinket i din e-mail indbakke. Hvis det ikke kommer indenfor 3 minutter, så tjek venligst din spam mappe!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prøv gratis i {{amount}} dage, derefter {{original Price}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Lås op for adgang til alle nyhedsbreve ved at blive en betalingsabonnent.",
				"Unsubscribe from all emails": "Afmeld alle e-mails",
				Unsubscribed: RS,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Du annullerer ikke dit abonnement på {{title}} ved at afmelde dig fra alle e-mails",
				Update: YS,
				"Update your preferences": "Opdater dine præferencer",
				"Verify your email address is correct": "Tjek om din e-mailadresse er korrekt",
				"View plans": "Se abonnementer",
				Visit: LS,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Vi kunne ikke afmelde dig, da e-mailen ikke blev fundet. Kontakt venligst ejeren af siden.",
				"Welcome back, {{name}}!": "Velkommen tilbage, {{name}}!",
				"Welcome back!": "Velkommen tilbage!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Når en indbakke ikke accepterer en e-mail, kaldes det almindeligvis en bounce. I mange tilfælde kan dette være midlertidigt. Men i nogle tilfælde kan en afvist e-mail returneres som en permanent fejl, når en e-mailadresse er ugyldig eller ikke eksisterer.",
				"Why has my email been disabled?": "Hvorfor er min e-mail blevet deaktiveret?",
				Yearly: FS,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Du har i øjeblikket et gratis medlemskab, opgrader til et betalt abonnement for fuld adgang.",
				"You have been successfully resubscribed": "Du er nu tilmeldt igen",
				"You're currently not receiving emails": "Du modtager ikke e-mails i øjeblikket",
				"You're not receiving emails": "Du modtager ikke e-mails",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Du modtager ikke e-mails fordi du enten har markeret en af de seneste mails som spam, eller fordi e-mails ikke kunne leveres til den oplyste e-mailadresse.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Du er logget ind.",
				"You've successfully subscribed to": "",
				"Your account": "Din konto",
				"Your input helps shape what gets published.": "Dit input hjælper med at forme det der bliver publiceret.",
				"Your subscription will expire on {{expiryDate}}": "Dit abonnement udløber {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Dit abonnement fornyes {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Dit abonnement starter {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		BS = "Tilmeld",
		lX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: BS,
			default: {
				"Email sent": "E-mail sendt",
				"Now check your email!": "Tjek din indbakke!",
				"Please enter a valid email address": "Indtast venligst en gyldig e-mailadresse",
				"Something went wrong, please try again.": "Der gik noget galt. Prøv venligst igen.",
				Subscribe: BS,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "For at gennemføre tilmelding, tryk på bekræftelseslinket i din indbakke. Hvis det ikke kommer frem indenfor 3 minutter, så tjek din spam mappe!",
				"Your email address": "Din e-mailadresse"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		US = "Anonym",
		VS = "Abbrechen",
		HS = "Kommentar",
		qS = "Löschen",
		WS = "Diskussion",
		KS = "Bearbeiten",
		JS = "Bearbeitet",
		GS = "Expertise",
		QS = "Verbergen",
		XS = "Name",
		ZS = "Neurochirurg",
		e0 = "Antworten",
		t0 = "Melden",
		n0 = "Speichern",
		i0 = "Senden",
		o0 = "Gesendet",
		r0 = "Anzeigen",
		a0 = "Gestern",
		uX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: US,
			Cancel: VS,
			Comment: HS,
			Delete: qS,
			Discussion: WS,
			Edit: KS,
			Edited: JS,
			Expertise: GS,
			Hide: QS,
			Name: XS,
			Neurosurgeon: ZS,
			Reply: e0,
			Report: t0,
			Save: n0,
			Sending: i0,
			Sent: o0,
			Show: r0,
			Yesterday: a0,
			default: {
				"{{amount}} characters left": "{{amount}} Zeichen übrig",
				"{{amount}} comments": "{{amount}} Kommentare",
				"{{amount}} days ago": "Vor {{amount}} Tagen",
				"{{amount}} hours ago": "Vor {{amount}} Stunden",
				"{{amount}} minutes ago": "Vor {{amount}} Minuten",
				"{{amount}} months ago": "Vor {{amount}} Monaten",
				"{{amount}} seconds ago": "Vor {{amount}} Sekunden",
				"{{amount}} weeks ago": "Vor {{amount}} Wochen",
				"{{amount}} years ago": "Vor {{amount}} Jahren",
				"1 comment": "1 Kommentar",
				"Add comment": "Kommentar hinzufügen",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Füge deinem Kommentar Kontext hinzu, teile deinen Namen und deine Expertise, um eine gesunde Diskussion zu fördern.",
				"Add reply": "Antwort hinzufügen",
				"Already a member?": "Bist du bereits Mitglied?",
				Anonymous: US,
				"Become a member of {{publication}} to start commenting.": "Werde Mitglied bei {{publication}}, um Kommentare zu schreiben.",
				"Become a paid member of {{publication}} to start commenting.": "Werde zahlendes Mitglied bei {{publication}}, um Kommentare zu schreiben.",
				Cancel: VS,
				Comment: HS,
				"Complete your profile": "Vervollständige dein Profil",
				Delete: qS,
				"Deleted member": "Gelöschtes Mitglied",
				Discussion: WS,
				Edit: KS,
				"Edit this comment": "Diesen Kommentar bearbeiten",
				Edited: JS,
				"Enter your name": "Gib deinen Namen ein",
				Expertise: GS,
				"Founder @ Acme Inc": "Gründer bei Acme Inc",
				"Full-time parent": "Vollzeit-Elternteil",
				"Head of Marketing at Acme, Inc": "Leiter Marketing bei Acme, Inc",
				Hide: QS,
				"Hide comment": "Kommentar verbergen",
				"Jamie Larson": "Jamie Larson",
				"Join the discussion": "Nimm an der Diskussion teil",
				"Just now": "Gerade eben",
				"Local resident": "Ortsansässiger",
				"Member discussion": "Mitgliederdiskussion",
				Name: XS,
				Neurosurgeon: ZS,
				"One day ago": "Vor einem Tag",
				"One hour ago": "Vor einer Stunde",
				"One minute ago": "Vor einer Minute",
				"One month ago": "Vor einem Monat",
				"One week ago": "Vor einer Woche",
				"One year ago": "Vor einem Jahr",
				Reply: e0,
				"Reply to comment": "Auf Kommentar antworten",
				Report: t0,
				"Report comment": "Kommentar melden",
				"Report this comment": "Diesen Kommentar melden",
				"Report this comment?": "Diesen Kommentar melden?",
				Save: n0,
				Sending: i0,
				Sent: o0,
				Show: r0,
				"Show {{amount}} more replies": "{{amount}} weitere Antworten anzeigen",
				"Show {{amount}} previous comments": "{{amount}} frühere Kommentare anzeigen",
				"Show 1 more reply": "1 weitere Antwort anzeigen",
				"Show 1 previous comment": "1 vorherigen Kommentar anzeigen",
				"Show comment": "Kommentar anzeigen",
				"Sign in": "Anmelden",
				"Sign up now": "Jetzt anmelden",
				"Start the conversation": "Beginne das Gespräch",
				"This comment has been hidden.": "Dieser Kommentar wurde ausgeblendet.",
				"This comment has been removed.": "Dieser Kommentar wurde entfernt.",
				"Upgrade now": "Jetzt upgraden",
				Yesterday: a0,
				"You want to report this comment?": "Möchtest du diesen Kommentar melden?",
				"Your request will be sent to the owner of this site.": "Deine Anfrage wird an den Besitzer dieser Website gesendet."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		cX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Alles Gute!",
				"Complete signup for {{siteTitle}}!": "Vervollständige deine Registrierung für {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Vervollständige deine Registrierung bei {{siteTitle}}!",
				"Confirm email address": "Bestätige deine E-Mail-Adresse",
				"Confirm signup": "Bestätige deine Registrierung",
				"Confirm your email address": "Bestätige deine E-Mail-Adresse",
				"Confirm your email update for {{siteTitle}}!": "Bestätige die Änderung deiner E-Mail-Adresse für {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bestätige dein Abonnement für {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Der Link läuft aus Sicherheitsgründen nach 24 Stunden ab.",
				"Hey there,": "Hallo,",
				"Hey there!": "Hallo!",
				"If you did not make this request, you can safely ignore this email.": "Ignoriere diese E-Mail, wenn du diese nicht angefordert hast.",
				"If you did not make this request, you can simply delete this message.": "Du kannst diese Nachricht einfach löschen, wenn du diese nicht angefordert hast.",
				"Please confirm your email address with this link:": "Bitte bestätige deine E-Mail-Adresse mit diesem Link:",
				"Secure sign in link for {{siteTitle}}": "Sicherer Anmeldelink für {{siteTitle}}",
				"See you soon!": "Bis bald!",
				"Sent to {{email}}": "Gesendet an {{email}}",
				"Sign in": "Einloggen",
				"Sign in to {{siteTitle}}": "Bei {{siteTitle}} einloggen",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Bitte klicke auf den unten stehenden Link, um deine Registrierung bei {{siteTitle}} abzuschließen und automatisch eingeloggt zu werden:",
				"Thank you for signing up to {{siteTitle}}!": "Danke für deine Registrierung bei {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Danke für dein Abonnement von {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Danke für dein Abonnement von {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Danke für dein Abonnement von {{siteTitle}}. Klicke auf den folgenden Link, um dich automatisch einzuloggen:",
				"This email address will not be used.": "Diese E-Mail Adresse wird nicht verwendet.",
				"Welcome back to {{siteTitle}}!": "Willkommen zurück auf {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Willkommen zurück! Benutze diesen Link, um dich sicher bei deinem {{siteTitle}}-Konto einzuloggen:",
				"You can also copy & paste this URL into your browser:": "Du kannst diese URL auch kopieren und in deinem Browser einfügen:",
				"You will not be signed up, and no account will be created for you.": "Du wirst nicht registriert und es wird kein Konto für dich angelegt.",
				"You will not be subscribed.": "Du wirst nicht angemeldet.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Du bist nur einen Klick von deinem Abonnement von {{siteTitle}} entfernt — bitte bestätige deine E-Mail-Adresse mit diesem Link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Du bist nur einen Klick von deinem Abonnement von {{siteTitle}} entfernt!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		s0 = "Konto",
		l0 = "Zurück",
		u0 = "Ändern",
		c0 = "Auswählen",
		d0 = "Schließen",
		m0 = "Kommentare",
		p0 = "Kostenlos",
		f0 = "Bestätigen",
		h0 = "Weiter",
		g0 = "Bearbeiten",
		y0 = "E-Mail",
		b0 = "E-Mails",
		k0 = "Für immer",
		v0 = "Verwalten",
		w0 = "Monatlich",
		S0 = "Name",
		C0 = "Tarif",
		x0 = "Preis",
		E0 = "",
		T0 = "Nochmals versuchen",
		j0 = "Speichern",
		$0 = "Abonnieren",
		A0 = "Abonniert",
		N0 = "Erfolg",
		M0 = "Abmelden",
		P0 = "Aktualisieren",
		_0 = "",
		z0 = "Jährlich",
		dX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: s0,
			Back: l0,
			Change: u0,
			Choose: c0,
			Close: d0,
			Comments: m0,
			Complimentary: p0,
			Confirm: f0,
			Continue: h0,
			Edit: g0,
			Email: y0,
			Emails: b0,
			Forever: k0,
			Manage: v0,
			Monthly: w0,
			Name: S0,
			Plan: C0,
			Price: x0,
			Recommendations: E0,
			Retry: T0,
			Save: j0,
			Subscribe: $0,
			Subscribed: A0,
			Success: N0,
			Unsubscribed: M0,
			Update: P0,
			Visit: _0,
			Yearly: z0,
			default: {
				"{{amount}} days free": "{{amount}} Tage kostenfrei",
				"{{amount}} off": "{{amount}} Rabatt",
				"{{amount}} off for first {{number}} months.": "{{amount}} Rabatt für die ersten {{number}} Monate.",
				"{{amount}} off for first {{period}}.": "{{amount}} Rabatt für den/das erste/n {{period}}.",
				"{{amount}} off forever.": "{{amount}} dauerhaft günstiger.",
				"{{discount}}% discount": "{{discount}}% Rabatt",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} wird den Newsletter {{newsletterName}} nicht länger erhalten.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} wird keine weiteren E-Mail-Benachrichtigungen für Kommentar-Antworten erhalten.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} wird diesen Newsletter nicht länger erhalten.",
				"{{trialDays}} days free": "{{trialDays}} Tage kostenfrei",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Ein Login-Link wurde an deine E-Mail-Adresse gesendet. Falls die E-Mail nicht innerhalb von 3 Minuten ankommt, überprüfe bitte deinen Spam-Ordner.",
				Account: s0,
				"Account settings": "Konto-Einstellungen",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Wenn das kostenlose Testabo endet, bezahlst du den regulären Preis für den gewählten Tarif. Du kannst dein Abonnement jederzeit kündigen.",
				"Already a member?": "Bereits Mitglied?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ein unerwarteter Fehler ist aufgetreten. Bitte erneut versuchen oder wende dich an den <a>Support</a>, falls der Fehler weiter besteht.",
				Back: l0,
				"Back to Log in": "Zurück zur Anmeldung",
				"Billing info": "Abrechnungsinformationen",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Jederzeit kündbar.",
				"Cancel subscription": "Abonnement kündigen",
				"Cancellation reason": "Kündigungsgrund",
				Change: u0,
				"Check spam & promotions folders": "Überprüfe dein Spam- und Werbeordner",
				"Check with your mail provider": "Erkundige dich bei deinem E-Mail-Anbieter",
				Choose: c0,
				"Choose a different plan": "Wähle einen anderen Tarif",
				"Choose your newsletters": "Wähle deine Newsletter",
				"Click here to retry": "Hier klicken zum Wiederholen",
				Close: d0,
				Comments: m0,
				Complimentary: p0,
				Confirm: f0,
				"Confirm cancellation": "Beendigung bestätigen",
				"Confirm subscription": "Abonnement bestätigen",
				"Contact support": "Support kontaktieren",
				Continue: h0,
				"Continue subscription": "Abonnement fortführen",
				"Could not sign in. Login link expired.": "Anmeldung nicht möglich. Der Login-Link ist abgelaufen.",
				"Could not update email! Invalid link.": "E-Mail-Aktualisierung fehlgeschlagen. Link nicht gültig.",
				"Create a new contact": "Neuen Kontakt anlegen",
				"Current plan": "Aktueller Tarif",
				"Delete account": "Konto löschen",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "War das ein Versehen? Verwalte deine Einstellungen <button>hier</button>.",
				"Don't have an account?": "Noch kein Konto?",
				Edit: g0,
				Email: y0,
				"Email newsletter": "E-Mail-Newsletter",
				"Email preference updated.": "E-Mail-Einstellungen aktualisiert.",
				"Email preferences": "E-Mail-Einstellungen",
				Emails: b0,
				"Emails disabled": "E-Mails deaktiviert",
				"Ends {{offerEndDate}}": "Endet am {{offerEndDate}}",
				Error: "Fehler",
				"Expires {{expiryDate}}": "Läuft am {{expiryDate}} ab",
				Forever: k0,
				"Free Trial – Ends {{trialEnd}}": "Kostenlose Testphase – endet am {{trialEnd}}",
				"Get help": "Hilfe erhalten",
				"Get in touch for help": "Kontaktiere uns für Hilfe",
				"Get notified when someone replies to your comment": "Erhalte eine Benachrichtigung, wenn jemand auf deinen Kommentar antwortet",
				"Give feedback on this post": "Gib Feedback zu diesem Beitrag",
				"Help! I'm not receiving emails": "Hilfe! Ich erhalte keine E-Mails",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Wenn ein Newsletter als Spam markiert wird, werden E-Mails für diese Adresse automatisch deaktiviert, um sicherzustellen, dass du keine unerwünschten Nachrichten mehr erhältst.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Wenn die Spam-Beschwerde versehentlich war oder du wieder E-Mails erhalten möchtest, kannst du dich durch Klicken auf den Button auf dem vorherigen Bildschirm erneut für E-Mails anmelden.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Wenn du dein Abonnement jetzt kündigst, hast du noch Zugang bis zum {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Wenn du eine Firmen- oder Regierungs-E-Mail-Adresse nutzt, wende dich an deine IT-Abteilung und bitte sie, E-Mails von {{senderEmail}} zu erlauben",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Wenn du wieder E-Mails erhalten möchtest, solltest du deine hinterlegte E-Mail-Adresse auf Probleme zu überprüfen und dann auf dem vorherigen Bildschirm auf erneut abonnieren zu klicken.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Wenn du den Newsletter, für den du dich angemeldet hast, nicht erhältst, gibt es einige Dinge, die du überprüfen kannst.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Wenn du all diese Punkte erledigt hast und immer noch keine E-Mails erhältst, kannst du Unterstützung erhalten, indem du dich an {{supportAddress}} wendest.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Im Falle eines dauerhaften Fehlers beim Versuch, einen Newsletter zu senden, werden die E-Mails auf dem Konto deaktiviert.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Füge in deinem E-Mail-Client {{senderEmail}} zu deiner Kontaktliste hinzu. Dies signalisiert deinem Mail-Anbieter, dass E-Mails von dieser Adresse vertrauenswürdig sind.",
				"Less like this": "Weniger davon",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Stelle sicher, dass E-Mails nicht unbeabsichtigt im Spam-Ordner deines Posteingangs landen. Wenn das der Fall sein sollte, klicke auf  "Kein Spam" und/oder "In den Posteingang bewegen".',
				Manage: v0,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: w0,
				"More like this": "Mehr davon",
				Name: S0,
				"Need more help? Contact support": "Du benötigst weitere Hilfe? Kontaktiere den Support",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Newsletter können aus zwei Gründen in deinem Konto deaktiviert werden: Eine frühere E-Mail wurde als Spam markiert oder der Versuch, eine E-Mail zu senden, führte zu einem dauerhaften Fehler (Bounce).",
				"Not receiving emails?": "Keine E-Mails erhalten?",
				"Now check your email!": "Überprüfe jetzt deinen Posteingang!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": 'Wenn du nach der Registrierung immer noch keine E-Mails in deinem Posteingang siehst, überprüfen deinen Spam-Ordner. Einige E-Mail-Anbieter speichern frühere Spam-Beschwerden und kennzeichnen E-Mails weiterhin. Wenn dies der Fall ist, markiere den neuesten Newsletter als "Kein Spam", um ihn wieder in deinen Posteingang zu verschieben.',
				"Permanent failure (bounce)": "Permanenter Fehler (Bounce)",
				Plan: C0,
				"Plan checkout was cancelled.": "Der Abschluss des Tarifs wurde abgebrochen.",
				"Plan upgrade was cancelled.": "Das Upgrade deines Tarifs wurde abgebrochen.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Bitte alle Pflichtfelder ausfüllen",
				Price: x0,
				"Re-enable emails": "E-Mails wieder aktivieren",
				Recommendations: E0,
				"Renews at {{price}}.": "Wird verlängert zum Preis von {{price}}.",
				Retry: T0,
				Save: j0,
				"Send an email and say hi!": "Sende eine E-Mail und sag Hi!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Schicke eine E-Mail an {{senderEmail}} und sag Hallo. Dies kann auch dazu beitragen, deinem E-Mail-Anbieter zu signalisieren, dass E-Mails an und von dieser Adresse vertrauenswürdig sind.",
				"Sending login link...": "Login-Link senden …",
				"Sending...": "Sende …",
				"Show all": "",
				"Sign in": "Einloggen",
				"Sign out": "Abmelden",
				"Sign up": "Registrieren",
				"Signup error: Invalid link": "Fehler bei der Registrierung: Ungültiger Link",
				"Sorry, that didn’t work.": "Entschuldige, das hat nicht funktioniert.",
				"Spam complaints": "Spam-Beschwerden",
				"Start {{amount}}-day free trial": "Starte dein {{amount}}-tägiges kostenfreies Testabo",
				"Starting {{startDate}}": "Beginnend am {{startDate}}",
				"Starting today": "Beginnt heute",
				"Submit feedback": "Feedback senden",
				Subscribe: $0,
				Subscribed: A0,
				Success: N0,
				"Success! Check your email for magic link to sign-in.": "Super! Sieh in deinem Posteingang nach und klicke auf den magischen Link zum Anmelden.",
				"Success! Your account is fully activated, you now have access to all content.": "Prima! Dein Konto ist nun vollständig und du hast jetzt Zugang zu allen Inhalten.",
				"Success! Your email is updated.": "Super! Deine E-Mail wurde erfolgreich aktualisiert.",
				"Successfully unsubscribed": "Erfolgreich abgemeldet",
				"Thanks for the feedback!": "Danke für das Feedback!",
				"That didn't go to plan": "Das ist nicht nach Plan verlaufen",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Die E-Mail-Adresse, die wir von dir haben, lautet {{memberEmail}} - wenn das nicht korrekt ist, kannst du sie in deinem <button>Kontoeinstellungen</button> aktualisieren.",
				"There was a problem submitting your feedback. Please try again a little later.": "Bei der Übermittlung deines Feedbacks ist ein Problem aufgetreten. Bitte versuche es etwas später noch einmal.",
				"This site is invite-only, contact the owner for access.": "Diese Seite benötigt eine Einladung. Bitte kontaktiere den Inhaber.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Um deine Registrierung abzuschließen, klicke auf den Bestätigungslink in deinem Posteingang. Falls die E-Mail nicht innerhalb von 3 Minuten ankommt, überprüfe bitte deinen Spam-Ordner!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Kostenfreier Testzugang für {{amount}} Tage, danach {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Schalte den Zugang zu allen Newslettern frei, indem du ein zahlender Abonnent wirst.",
				"Unsubscribe from all emails": "Von allen E-Mails abmelden",
				Unsubscribed: M0,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Wenn du dich von diesen E-Mails abmeldest, wird dein bezahltes Abonnement bei {{title}} nicht automatisch gekündigt",
				Update: P0,
				"Update your preferences": "Aktualisiere deine Einstellungen",
				"Verify your email address is correct": "Überprüfe, ob deine E-Mail-Adresse stimmt",
				"View plans": "Tarife ansehen",
				Visit: _0,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Wir konnten dich nicht abmelden, da die E-Mail-Adresse nicht gefunden wurde. Bitte kontaktiere den Seitenbetreiber.",
				"Welcome back, {{name}}!": "Willkommen zurück, {{name}}!",
				"Welcome back!": "Willkommen zurück!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Wenn ein Posteingang eine E-Mail nicht annimmt, spricht man von einem Bounce. In vielen Fällen kann dies vorübergehend sein (Soft Bounce). In einigen Fällen kann eine E-Mail jedoch als dauerhafter Fehler zurückgeschickt werden, wenn eine E-Mail-Adresse ungültig oder nicht vorhanden ist (Hard Bounce).",
				"Why has my email been disabled?": "Warum wurde meine E-Mail deaktiviert?",
				Yearly: z0,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Du hast derzeit eine kostenlose Mitgliedschaft. Wechsele zu einem kostenpflichtigen Abonnement, um vollen Zugang zu erhalten.",
				"You have been successfully resubscribed": "Du wurdest erfolgreich wieder angemeldet",
				"You're currently not receiving emails": "Du erhältst im Moment keine E-Mails",
				"You're not receiving emails": "Du erhältst keine E-Mails",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Du erhältst keine E-Mails, da du entweder eine kürzlich empfangene Nachricht als Spam markiert hast oder weil Nachrichten nicht an deine angegebene E-Mail-Adresse zugestellt werden konnten.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Du hast dich erfolgreich angemeldet.",
				"You've successfully subscribed to": "",
				"Your account": "Dein Konto",
				"Your input helps shape what gets published.": "Dein Beitrag trägt dazu bei, was veröffentlicht wird.",
				"Your subscription will expire on {{expiryDate}}": "Dein Abonnement wird am {{expiryDate}} ablaufen.",
				"Your subscription will renew on {{renewalDate}}": "Dein Abonnement wird am {{renewalDate}} erneuert.",
				"Your subscription will start on {{subscriptionStart}}": "Dein Abonnement started am {{subscriptionStart}}."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		O0 = "Abonnieren",
		mX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: O0,
			default: {
				"Email sent": "E-Mail versendet",
				"Now check your email!": "Überprüfe jetzt dein E-Mail-Postfach!",
				"Please enter a valid email address": "Bitte gib eine gültige E-Mail-Adresse ein",
				"Something went wrong, please try again.": "Etwas ist schief gelaufen. Bitte versuche es erneut.",
				Subscribe: O0,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Um die Registrierung abzuschließen, klicke auf den Bestätigungslink, den wir an deine E-Mail-Adresse gesendet haben. Falls die E-Mail nicht innerhalb von 3 Minuten eintrifft, überprüfe bitte deinen Spam-Ordner!",
				"Your email address": "Deine E-Mail-Adresse"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		D0 = "",
		I0 = "",
		R0 = "",
		Y0 = "",
		L0 = "",
		F0 = "",
		B0 = "",
		U0 = "",
		V0 = "",
		H0 = "",
		q0 = "",
		W0 = "",
		K0 = "",
		J0 = "",
		G0 = "",
		Q0 = "",
		X0 = "",
		Z0 = "",
		pX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: D0,
			Cancel: I0,
			Comment: R0,
			Delete: Y0,
			Discussion: L0,
			Edit: F0,
			Edited: B0,
			Expertise: U0,
			Hide: V0,
			Name: H0,
			Neurosurgeon: q0,
			Reply: W0,
			Report: K0,
			Save: J0,
			Sending: G0,
			Sent: Q0,
			Show: X0,
			Yesterday: Z0,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: D0,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: I0,
				Comment: R0,
				"Complete your profile": "",
				Delete: Y0,
				"Deleted member": "",
				Discussion: L0,
				Edit: F0,
				"Edit this comment": "",
				Edited: B0,
				"Enter your name": "",
				Expertise: U0,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: V0,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: H0,
				Neurosurgeon: q0,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: W0,
				"Reply to comment": "",
				Report: K0,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: J0,
				Sending: G0,
				Sent: Q0,
				Show: X0,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: Z0,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		fX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "",
				"Confirm your subscription to {{siteTitle}}": "",
				"For your security, the link will expire in 24 hours time.": "",
				"Hey there,": "",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "",
				"If you did not make this request, you can simply delete this message.": "",
				"Please confirm your email address with this link:": "",
				"Secure sign in link for {{siteTitle}}": "",
				"See you soon!": "",
				"Sent to {{email}}": "",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "",
				"Thank you for signing up to {{siteTitle}}!": "",
				"Thank you for subscribing to {{siteTitle}}!": "",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "",
				"This email address will not be used.": "",
				"Welcome back to {{siteTitle}}!": "",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "",
				"You can also copy & paste this URL into your browser:": "",
				"You will not be signed up, and no account will be created for you.": "",
				"You will not be subscribed.": "",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		eC = "",
		tC = "",
		nC = "",
		iC = "",
		oC = "",
		rC = "",
		aC = "",
		sC = "",
		lC = "",
		uC = "",
		cC = "",
		dC = "",
		mC = "",
		pC = "",
		fC = "",
		hC = "",
		gC = "",
		yC = "",
		bC = "",
		kC = "",
		vC = "",
		wC = "",
		SC = "",
		CC = "",
		xC = "",
		EC = "",
		TC = "",
		jC = "",
		hX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: eC,
			Back: tC,
			Change: nC,
			Choose: iC,
			Close: oC,
			Comments: rC,
			Complimentary: aC,
			Confirm: sC,
			Continue: lC,
			Edit: uC,
			Email: cC,
			Emails: dC,
			Forever: mC,
			Manage: pC,
			Monthly: fC,
			Name: hC,
			Plan: gC,
			Price: yC,
			Recommendations: bC,
			Retry: kC,
			Save: vC,
			Subscribe: wC,
			Subscribed: SC,
			Success: CC,
			Unsubscribed: xC,
			Update: EC,
			Visit: TC,
			Yearly: jC,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "",
				Account: eC,
				"Account settings": "",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "",
				"Already a member?": "",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: tC,
				"Back to Log in": "",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "",
				"Cancellation reason": "",
				Change: nC,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: iC,
				"Choose a different plan": "",
				"Choose your newsletters": "",
				"Click here to retry": "",
				Close: oC,
				Comments: rC,
				Complimentary: aC,
				Confirm: sC,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: lC,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "",
				Edit: uC,
				Email: cC,
				"Email newsletter": "",
				"Email preference updated.": "",
				"Email preferences": "",
				Emails: dC,
				"Emails disabled": "",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: mC,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "",
				"Give feedback on this post": "",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: pC,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: fC,
				"More like this": "",
				Name: hC,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "",
				"Now check your email!": "",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: gC,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: yC,
				"Re-enable emails": "",
				Recommendations: bC,
				"Renews at {{price}}.": "",
				Retry: kC,
				Save: vC,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "",
				"Sending...": "",
				"Show all": "",
				"Sign in": "",
				"Sign out": "",
				"Sign up": "",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "",
				Subscribe: wC,
				Subscribed: SC,
				Success: CC,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "",
				"Thanks for the feedback!": "",
				"That didn't go to plan": "",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "",
				Unsubscribed: xC,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "",
				Update: EC,
				"Update your preferences": "",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: TC,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: jC,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "",
				"Your input helps shape what gets published.": "",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		$C = "",
		gX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: $C,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: $C,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		AC = "",
		NC = "",
		MC = "",
		PC = "",
		_C = "",
		zC = "",
		OC = "",
		DC = "",
		IC = "",
		RC = "",
		YC = "",
		LC = "",
		FC = "",
		BC = "",
		UC = "",
		VC = "",
		HC = "",
		qC = "",
		yX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: AC,
			Cancel: NC,
			Comment: MC,
			Delete: PC,
			Discussion: _C,
			Edit: zC,
			Edited: OC,
			Expertise: DC,
			Hide: IC,
			Name: RC,
			Neurosurgeon: YC,
			Reply: LC,
			Report: FC,
			Save: BC,
			Sending: UC,
			Sent: VC,
			Show: HC,
			Yesterday: qC,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: AC,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: NC,
				Comment: MC,
				"Complete your profile": "",
				Delete: PC,
				"Deleted member": "",
				Discussion: _C,
				Edit: zC,
				"Edit this comment": "",
				Edited: OC,
				"Enter your name": "",
				Expertise: DC,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: IC,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: RC,
				Neurosurgeon: YC,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: LC,
				"Reply to comment": "",
				Report: FC,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: BC,
				Sending: UC,
				Sent: VC,
				Show: HC,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: qC,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		bX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Ĉion bonan!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Pletu vian aliĝon al {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Konfirmu vian retadreson ĝisdatigon por {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Konfirmu vian abonon al {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Por via sekureco, la ligilo eksvalidiĝos post 24 horoj.",
				"Hey there,": "Saluton,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Se vi ne petis ĉi tiun, vi povas sekure ignori ĉi tiun retpoŝtan.",
				"If you did not make this request, you can simply delete this message.": "Se vi ne petis ĉi tiun, vi povas simple forigi ĉi tiun mesaĝon.",
				"Please confirm your email address with this link:": "Bonvolu konfirmi vian retadreson per ĉi tiu ligilo:",
				"Secure sign in link for {{siteTitle}}": "Sekura ensaluta ligilo por {{siteTitle}}",
				"See you soon!": "Ĝis baldaŭ!",
				"Sent to {{email}}": "Sendita al {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Ensalutu al {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Premu la suban ligilon por kompletigi la aliĝprocezon por {{siteTitle}}, kaj estu ensalutinta aŭtomate:",
				"Thank you for signing up to {{siteTitle}}!": "Dankon pro aliĝi al {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Dankon pro abono al {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Dankon pro abono al {{siteTitle}}. Premu la suban ligilon por ensaluti aŭtomate:",
				"This email address will not be used.": "Ne uzos ĉi tiu retadreson.",
				"Welcome back to {{siteTitle}}!": "Bonvenon ree al {{siteTitle}}",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bonvenon ree! Uzu ĉi tiun ligilon por sekure ensaluti al via konto {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Vi ankaŭ povas kopii & alglui ĉi tiun URL en vian retumilon:",
				"You will not be signed up, and no account will be created for you.": "Vi ne registritos, kaj neniu konto kreitos por vi.",
				"You will not be subscribed.": "Vi ne abonitos.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Vi estas unu premo for de abonado al {{siteTitle}} — bonvolu konfirmi vian retadreson per ĉi tiu ligilo:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		WC = "Konto",
		KC = "Reen",
		JC = "",
		GC = "",
		QC = "Fermu",
		XC = "Komentoj",
		ZC = "",
		ex = "Konfirmu",
		tx = "Daŭrigu",
		nx = "",
		ix = "Retadreso",
		ox = "Retpoŝtoj",
		rx = "",
		ax = "Administru",
		sx = "Monate",
		lx = "Nomo",
		ux = "",
		cx = "Kosto",
		dx = "",
		mx = "Reprovu",
		px = "Konservi",
		fx = "",
		hx = "",
		gx = "",
		yx = "",
		bx = "",
		kx = "",
		vx = "Jare",
		kX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: WC,
			Back: KC,
			Change: JC,
			Choose: GC,
			Close: QC,
			Comments: XC,
			Complimentary: ZC,
			Confirm: ex,
			Continue: tx,
			Edit: nx,
			Email: ix,
			Emails: ox,
			Forever: rx,
			Manage: ax,
			Monthly: sx,
			Name: lx,
			Plan: ux,
			Price: cx,
			Recommendations: dx,
			Retry: mx,
			Save: px,
			Subscribe: fx,
			Subscribed: hx,
			Success: gx,
			Unsubscribed: yx,
			Update: bx,
			Visit: kx,
			Yearly: vx,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% rabato",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} tagoj senpagaj",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Sendis ensalutan ligilon al via enirkesto. Se ĝi ne alvenas post 3 minutoj, nepre kontrolu vian trudmesaĝdosieron.",
				Account: WC,
				"Account settings": "Kontagordoj",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Post senpaga provo finiĝos, vi pagos la regulan prezon por la nivelo, kiun vi elektis. Vi ĉiam povas nuligi antaŭ tiam.",
				"Already a member?": "Ĉu membro jam?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: KC,
				"Back to Log in": "Reen al Ensaluto",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Nuligu abonon",
				"Cancellation reason": "Nuliga kialo",
				Change: JC,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: GC,
				"Choose a different plan": "Elektu alian planon",
				"Choose your newsletters": "Elektu viajn bultenojn",
				"Click here to retry": "",
				Close: QC,
				Comments: XC,
				Complimentary: ZC,
				Confirm: ex,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: tx,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Forigu konton",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Ĉu ne havas konton?",
				Edit: nx,
				Email: ix,
				"Email newsletter": "",
				"Email preference updated.": "Retpoŝta agordo ĝisdatigita.",
				"Email preferences": "Retpoŝtaj agordoj",
				Emails: ox,
				"Emails disabled": "Retpoŝtoj malŝaltitaj",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: rx,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Ricevi helpon",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Estu sciiga kiam iu respondos al via komento",
				"Give feedback on this post": "Donu komentojn pri ĉi tiu afiŝo",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Malpli tiel",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: ax,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: sx,
				"More like this": "Pli kiel ĉi tio",
				Name: lx,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "",
				"Now check your email!": "Bonvolu kontroli vian retpoŝton nun!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: ux,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: cx,
				"Re-enable emails": "Reŝalti retpoŝtojn",
				Recommendations: dx,
				"Renews at {{price}}.": "",
				Retry: mx,
				Save: px,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Sendanta ensaluta ligilo...",
				"Sending...": "Sendante...",
				"Show all": "",
				"Sign in": "Ensalutu",
				"Sign out": "",
				"Sign up": "Aliĝu",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Komencu senpaga {{amount}}-taga provo",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Sendu rimarkojn",
				Subscribe: fx,
				Subscribed: hx,
				Success: gx,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Sukcese malabonita",
				"Thanks for the feedback!": "Dankon pro la rimarkoj!",
				"That didn't go to plan": "Tio ne iris laŭ la intenco",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Ĉi tiu retejo estas nur por invitiĝuloj, kontaktu la proprietulo por alireblo.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Por kompletigi aliĝon, premu la konfirman ligilon en via enirkesto. Se ĝi ne alvenas ene de 3 minutoj, kontrolu vian trudmesaĝdosieron!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Malabonu de ĉiuj retpoŝtoj",
				Unsubscribed: yx,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Malabonigi de retpoŝtoj ne nuligos vian pagitan abonon al {{title}}",
				Update: bx,
				"Update your preferences": "Ĝisdatigu viajn agordojn",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: kx,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Ni ne povis malaboni vin ĉar la retadreso ne estis trovita. Bonvolu kontakti la proprietulo de la retejo",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: vx,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Vi sukcese reaboniĝis",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Vi ne ricevas retpoŝtojn ĉar vi aŭ markis lastatempan mesaĝon kiel trudmesaĝo, aŭ ĉar mesaĝoj ne povis liveri al via provizita retadreso.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Via konto",
				"Your input helps shape what gets published.": "Via enigo helpas formi kio estas aperigita.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		wx = "",
		vX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: wx,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: wx,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Sx = "Anónimo",
		Cx = "Cancelar",
		xx = "Comentar",
		Ex = "Eliminar",
		Tx = "Discusión",
		jx = "Editar",
		$x = "Editado",
		Ax = "Experiencia",
		Nx = "Ocultar",
		Mx = "Nombre",
		Px = "Neurocirujano",
		_x = "Responder",
		zx = "Reportar",
		Ox = "Guardar",
		Dx = "Enviando",
		Ix = "Enviar",
		Rx = "Mostrar",
		Yx = "Ayer",
		wX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: Sx,
			Cancel: Cx,
			Comment: xx,
			Delete: Ex,
			Discussion: Tx,
			Edit: jx,
			Edited: $x,
			Expertise: Ax,
			Hide: Nx,
			Name: Mx,
			Neurosurgeon: Px,
			Reply: _x,
			Report: zx,
			Save: Ox,
			Sending: Dx,
			Sent: Ix,
			Show: Rx,
			Yesterday: Yx,
			default: {
				"{{amount}} characters left": "{{amount}} caracteres restantes",
				"{{amount}} comments": "{{amount}} comentarios",
				"{{amount}} days ago": "{{amount}} días atrás",
				"{{amount}} hours ago": "{{amount}} horas atrás",
				"{{amount}} minutes ago": "{{amount}} minutos atrás",
				"{{amount}} months ago": "{{amount}} meses atrás",
				"{{amount}} seconds ago": "{{amount}} segundos atrás",
				"{{amount}} weeks ago": "{{amount}} semanas atrás",
				"{{amount}} years ago": "{{amount}} años atrás",
				"1 comment": "1 comentario",
				"Add comment": "Agregar comentario",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Agrega contexto a tu comentario, comparte tu nombre y experiencia para fomentar una discusión saludable",
				"Add reply": "Agregar respuesta",
				"Already a member?": "¿Ya eres miembro?",
				Anonymous: Sx,
				"Become a member of {{publication}} to start commenting.": "Conviertete en miembro de {{publication}} para comenzar a comentar",
				"Become a paid member of {{publication}} to start commenting.": "Conviertete en un miembro pago de {{publication}} para comenzar a comentar",
				Cancel: Cx,
				Comment: xx,
				"Complete your profile": "Completa tu perfil",
				Delete: Ex,
				"Deleted member": "Eliminar miembro",
				Discussion: Tx,
				Edit: jx,
				"Edit this comment": "Editar este comentario",
				Edited: $x,
				"Enter your name": "Ingresa tu nombre",
				Expertise: Ax,
				"Founder @ Acme Inc": "Fundador @ Acme Inc",
				"Full-time parent": "Pariente de tiempo completo",
				"Head of Marketing at Acme, Inc": "Jefe de Marketing en Acme, Inc",
				Hide: Nx,
				"Hide comment": "Ocultar comentario",
				"Jamie Larson": "Jamie Larson",
				"Join the discussion": "Se parte de la discusión",
				"Just now": "Justo ahora",
				"Local resident": "Residente local",
				"Member discussion": "Discusión de miembros",
				Name: Mx,
				Neurosurgeon: Px,
				"One day ago": "Hace un día",
				"One hour ago": "Hace una hora",
				"One minute ago": "Hace un minuto",
				"One month ago": "Hace un mes",
				"One week ago": "Hace una semana",
				"One year ago": "Hace un año",
				Reply: _x,
				"Reply to comment": "Responder al comentario",
				Report: zx,
				"Report comment": "Reportar comentario",
				"Report this comment": "Reportar este comentario",
				"Report this comment?": "¿Reportar este comentario?",
				Save: Ox,
				Sending: Dx,
				Sent: Ix,
				Show: Rx,
				"Show {{amount}} more replies": "Mostrar {{amount}} más respuestas",
				"Show {{amount}} previous comments": "Mostrar {{amount}} comentarios previos",
				"Show 1 more reply": "Mostrar 1 respuesta más",
				"Show 1 previous comment": "Mostrar 1 comentario previo",
				"Show comment": "Mostrar comentario",
				"Sign in": "Inicia sesión",
				"Sign up now": "Regístrate ahora",
				"Start the conversation": "Comienza la conversación",
				"This comment has been hidden.": "Este comentario ha sido ocultado.",
				"This comment has been removed.": "Este comentario ha sido removido",
				"Upgrade now": "Mejora ahora",
				Yesterday: Yx,
				"You want to report this comment?": "¿Quieres reportar este comentario?",
				"Your request will be sent to the owner of this site.": "Tu requerimiento será enviado al propietario de este sitio web."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		SX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "¡Todo lo mejor!",
				"Complete signup for {{siteTitle}}!": "¡Completa el registro en {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "¡Completa tu registro en {{siteTitle}}!",
				"Confirm email address": "Confirmar dirección de correo",
				"Confirm signup": "Confirmar registro",
				"Confirm your email address": "Confirma tu correo electrónico",
				"Confirm your email update for {{siteTitle}}!": "¡Confirma la actualización de tu correo electrónico para {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Confirma tu suscripción a {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Por tu seguridad, el enlace expirará en 24 horas.",
				"Hey there,": "Hola,",
				"Hey there!": "¡Hola!",
				"If you did not make this request, you can safely ignore this email.": "Si no hiciste esta solicitud, puedes ignorar este correo electrónico sin problemas.",
				"If you did not make this request, you can simply delete this message.": "Si no hiciste esta solicitud, simplemente puedes eliminar este mensaje.",
				"Please confirm your email address with this link:": "Por favor, confirma tu dirección de correo electrónico con este enlace:",
				"Secure sign in link for {{siteTitle}}": "Enlace seguro de inicio de sesión para {{siteTitle}}",
				"See you soon!": "¡Hasta pronto!",
				"Sent to {{email}}": "Enviado a {{email}}",
				"Sign in": "Iniciar sesión",
				"Sign in to {{siteTitle}}": "Inicia sesión en {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Toca el enlace a continuación para completar el proceso de registro en {{siteTitle}} e iniciar sesión automáticamente:",
				"Thank you for signing up to {{siteTitle}}!": "¡Gracias por registrarte en {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "¡Gracias por suscribirte a {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Gracias por suscribirte a {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Gracias por suscribirte a {{siteTitle}}. Toca el enlace a continuación para iniciar sesión automáticamente:",
				"This email address will not be used.": "Esta dirección de correo electrónico no se utilizará.",
				"Welcome back to {{siteTitle}}!": "¡Bienvenido de nuevo a {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "¡Bienvenido de nuevo! Usa este enlace para iniciar sesión de manera segura en tu cuenta de {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "También puedes copiar y pegar esta URL en tu navegador:",
				"You will not be signed up, and no account will be created for you.": "No te registrarás y no se creará ninguna cuenta para ti.",
				"You will not be subscribed.": "No estarás suscrito.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Estás a un toque de suscribirte a {{siteTitle}} — por favor confirma tu dirección de correo electrónico con este enlace:",
				"You're one tap away from subscribing to {{siteTitle}}!": "¡Estás a un toque de suscribirte a {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Lx = "Cuenta",
		Fx = "Atrás",
		Bx = "Cambiar",
		Ux = "Elige",
		Vx = "Cerrar",
		Hx = "Comentarios",
		qx = "Complementario",
		Wx = "Confirmar",
		Kx = "Continuar",
		Jx = "Editar",
		Gx = "Correo electrónico",
		Qx = "Correos electrónicos",
		Xx = "para siempre",
		Zx = "Administrar",
		e1 = "Mensual",
		t1 = "Nombre",
		n1 = "Plan",
		i1 = "Precio",
		o1 = "",
		r1 = "Reintentar",
		a1 = "Guardar",
		s1 = "Suscribir",
		l1 = "Suscrito",
		u1 = "Éxito",
		c1 = "Dado de baja",
		d1 = "Actualizar",
		m1 = "",
		p1 = "Anual",
		CX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: Lx,
			Back: Fx,
			Change: Bx,
			Choose: Ux,
			Close: Vx,
			Comments: Hx,
			Complimentary: qx,
			Confirm: Wx,
			Continue: Kx,
			Edit: Jx,
			Email: Gx,
			Emails: Qx,
			Forever: Xx,
			Manage: Zx,
			Monthly: e1,
			Name: t1,
			Plan: n1,
			Price: i1,
			Recommendations: o1,
			Retry: r1,
			Save: a1,
			Subscribe: s1,
			Subscribed: l1,
			Success: u1,
			Unsubscribed: c1,
			Update: d1,
			Visit: m1,
			Yearly: p1,
			default: {
				"{{amount}} days free": "{{amount}} días gratis",
				"{{amount}} off": "{{amount}} de descuento",
				"{{amount}} off for first {{number}} months.": "{{amount}} de descuento por los primeros {{number}} meses.",
				"{{amount}} off for first {{period}}.": "{{amount}} de descuento por los primeros {{period}}.",
				"{{amount}} off forever.": "{{amount}} de descuento para siempre.",
				"{{discount}}% discount": "{{discount}}% de descuento",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} ya no va a recibir boletines de {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} ya no va a recibir correos electrónicos cuando alguien responde a sus comentarios.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} ya no va a recibir este boletín.",
				"{{trialDays}} days free": "{{trialDays}} días gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Se ha enviado un enlace de inicio de sesión a tu correo. Si no llega en 3 minutos, revisa tu carpeta de spam.",
				Account: Lx,
				"Account settings": "Configuración de la cuenta",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Después de que finalice el período de prueba gratuito, se te cobrará el precio regular del nivel que hayas elegido. Siempre puedes cancelar antes de eso.",
				"Already a member?": "¿Ya eres miembro?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Un error inesperado ha ocurrido. Por favor intente de nuevo o <a>contacte soporte técnico</a> si el error persiste.",
				Back: Fx,
				"Back to Log in": "Volver al inicio de sesión",
				"Billing info": "Información de pago",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Cancelación en cualquier momento.",
				"Cancel subscription": "Cancelar suscripción",
				"Cancellation reason": "Razón de cancelación",
				Change: Bx,
				"Check spam & promotions folders": "Compruebe la carpeta de correo basura y promociones",
				"Check with your mail provider": "Compruebe con su proveedor de correo",
				Choose: Ux,
				"Choose a different plan": "Elige un plan diferente",
				"Choose your newsletters": "Elige tus boletines",
				"Click here to retry": "Haga click aquí para reintentar",
				Close: Vx,
				Comments: Hx,
				Complimentary: qx,
				Confirm: Wx,
				"Confirm cancellation": "Confirmar cancelación",
				"Confirm subscription": "Confirmar suscripción",
				"Contact support": "Contacte soporte técnico",
				Continue: Kx,
				"Continue subscription": "Continuar suscripción",
				"Could not sign in. Login link expired.": "No se pudo iniciar sesión. El enlace de inicio ha expirado.",
				"Could not update email! Invalid link.": "¡No se pudo actualizar el correo electrónico! Enlace inválido.",
				"Create a new contact": "Crea un nuevo contacto",
				"Current plan": "Plan actual",
				"Delete account": "Eliminar cuenta",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "¿No quisiste hacer esto? Puedes gestionar tus preferencias <button>acá</button>.",
				"Don't have an account?": "¿No tienes una cuenta?",
				Edit: Jx,
				Email: Gx,
				"Email newsletter": "Boletín informativo por correo electrónico",
				"Email preference updated.": "Preferencia de correo electrónico actualizada.",
				"Email preferences": "Preferencias de correo electrónico",
				Emails: Qx,
				"Emails disabled": "Correos electrónicos desactivados",
				"Ends {{offerEndDate}}": "Termina el {{offerEndDate}}",
				Error: "Error",
				"Expires {{expiryDate}}": "Expira {{expiryDate}}",
				Forever: Xx,
				"Free Trial – Ends {{trialEnd}}": "Prueba gratis - Termina el {{trialEnd}}",
				"Get help": "Obtener ayuda",
				"Get in touch for help": "Póngase en contacto para obtener ayuda",
				"Get notified when someone replies to your comment": "Recibe notificaciones cuando alguien responda a tu comentario",
				"Give feedback on this post": "Envía comentarios sobre esta publicación",
				"Help! I'm not receiving emails": "¡Ayuda! No estoy recibiendo correos electronicos",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Si un correo es marcado como spam, los correos electrónicos son automáticamente deshabilitados para esa dirección de correo para asegurarse que usted no reciba ningún correo indeseado.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Si la denuncia de spam fue accidental, o si quiere recibir los correos electrónicos de nuevo, puede volver a suscribirse a los correos haciendo click en el botón de la pantalla anterior.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Si cancela su suscripción ahora, continuara con acceso hasta el {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Si usted tiene un correo electrónico de una corporación o del gobierno, puede comunicarse con el departamento de TI y solicitar que se le permita recibir correos de {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Si no está recibiendo los boletines informativos a los que se suscribió, estas son algunas cosas que puede revisar.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Si ha comprobado todo y aun así no esta recibiendo los correos electrónicos, puede comunicarse con soporte técnico contactando {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "En el caso de que haya un problema al intentar enviar el boletín, los correos electrónicos van a ser desabilitados en su cuenta.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Añada {{senderEmail}} a su lista de contactos. Esto le indica a su provedor de correo electrónico que puede confiar en esta dirección de correo.",
				"Less like this": "Menos como esto",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Asegúrese de que los correos electrónicos no terminen accidentalmente en las carpetas de correo no deseado o promociones de su bandeja de entrada. Si lo son, haga clic en "Mark as not spam" y/o "Move to inbox".',
				Manage: Zx,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: e1,
				"More like this": "Más como esto",
				Name: t1,
				"Need more help? Contact support": "¿Necesitas más ayuda? Contacte soporte técnico.",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Los boletines se pueden deshabilitar en su cuenta por dos razones: Un correo electrónico anterior se marcó como correo no deseado o el intento de enviar un correo electrónico resultó en una falla permanente (bounce).",
				"Not receiving emails?": "¿No recibes correos electrónicos?",
				"Now check your email!": "¡Ahora revisa tu correo electrónico!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Una vez que se haya vuelto a suscribir, si aún no ve los correos electrónicos en su bandeja de entrada, verifique su carpeta de correo no deseado. Algunos proveedores de bandejas de entrada mantienen un registro de quejas de spam anteriores y continuarán marcando los correos electrónicos. Si esto sucede, marque el último boletín como 'No es spam' para moverlo nuevamente a su bandeja de entrada principal.",
				"Permanent failure (bounce)": "Fallo permanente (bounce)",
				Plan: n1,
				"Plan checkout was cancelled.": "El pago de plan fue cancelado.",
				"Plan upgrade was cancelled.": "La actualización de plan fue cancelado.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Por favor llene los campos requeridos.",
				Price: i1,
				"Re-enable emails": "Reactivar correos electrónicos",
				Recommendations: o1,
				"Renews at {{price}}.": "Se renueva en {{price}}.",
				Retry: r1,
				Save: a1,
				"Send an email and say hi!": "¡Envía un correo electronico y saluda!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "¡Envia un correo electronico a {{senderEmail}} y saluda! Esto también puede ayudar a indicarle a su proveedor de correo que se debe confiar en los correos electrónicos hacia y desde esta dirección.",
				"Sending login link...": "Enviando enlace de inicio de sesión...",
				"Sending...": "Enviando...",
				"Show all": "",
				"Sign in": "Iniciar sesión",
				"Sign out": "Terminar sesión",
				"Sign up": "Registrarse",
				"Signup error: Invalid link": "Error de registro: Enlace inválido",
				"Sorry, that didn’t work.": "Lo siento, eso no funcionó.",
				"Spam complaints": "Quejas de spam",
				"Start {{amount}}-day free trial": "Comienza el período de prueba gratuito de {{amount}} días",
				"Starting {{startDate}}": "A partir de {{startDate}}",
				"Starting today": "A partir de hoy",
				"Submit feedback": "Enviar comentarios",
				Subscribe: s1,
				Subscribed: l1,
				Success: u1,
				"Success! Check your email for magic link to sign-in.": "¡Éxito! Revise su correo electrónico para ver el enlace mágico para iniciar sesión.",
				"Success! Your account is fully activated, you now have access to all content.": "¡Éxito! Su cuenta está completamente activada, ahora tiene acceso a todo el contenido.",
				"Success! Your email is updated.": "¡Éxito! Su correo electrónico está actualizado.",
				"Successfully unsubscribed": "Te has dado de baja correctamente",
				"Thanks for the feedback!": "¡Gracias por tus comentarios!",
				"That didn't go to plan": "Eso no salió según lo planeado",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "La dirección de correo electrónico que tenemos para usted es {{memberEmail}} - si eso no es correcto, puede actualizarlo en su <button> área de configuracion de la cuenta <button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Hubo un problema al enviar sus comentarios. Vuelva a intentarlo un poco más tarde.",
				"This site is invite-only, contact the owner for access.": "Este sitio es solo por invitación, contacta al propietario para obtener acceso.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar el registro, haz clic en el enlace de confirmación en tu correo electrónico. Si no llega en 3 minutos, ¡revisa tu carpeta de spam!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prueba gratis por {{amount}} dias, luego {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Desbloquee el acceso a todos los boletines convirtiéndose en un suscriptor pago.",
				"Unsubscribe from all emails": "Cancelar suscripción a todos los correos electrónicos",
				Unsubscribed: c1,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Cancelar la suscripción a los correos electrónicos no cancelará tu suscripción de pago a {{title}}",
				Update: d1,
				"Update your preferences": "Actualiza tus preferencias",
				"Verify your email address is correct": "Verifique que su dirección de correo electrónico sea correcta",
				"View plans": "Ver planes",
				Visit: m1,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "No pudimos cancelar tu suscripción ya que no se encontró la dirección de correo electrónico. Por favor, contacta al propietario del sitio.",
				"Welcome back, {{name}}!": "¡Bienvenido de nuevo, {{name}}!",
				"Welcome back!": "¡Bienvenido de nuevo!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Cuando una bandeja de entrada no acepta un correo electrónico, comúnmente se le llama rebote. En muchos casos, esto puede ser temporal. Sin embargo, en algunos casos, un correo electrónico rebotado puede devolverse como una falla permanente cuando una dirección de correo electrónico no es válida o no existe.",
				"Why has my email been disabled?": "¿Por qué mi correo electronico ha sido desabilitado?",
				Yearly: p1,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Usted tiene una membresía gratuita, actualice a una suscripción paga para obtener acceso completo.",
				"You have been successfully resubscribed": "Te has vuelto a suscribir con éxito",
				"You're currently not receiving emails": "Actualmente no estás recibiendo correos electrónicos",
				"You're not receiving emails": "No estás recibiendo correos electrónicos",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "No estás recibiendo correos electrónicos porque marcaste un mensaje reciente como spam o porque no se pudieron entregar los mensajes a la dirección de correo electrónico proporcionada.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Has iniciado sesión correctamente.",
				"You've successfully subscribed to": "",
				"Your account": "Tu cuenta",
				"Your input helps shape what gets published.": "Tu opinión ayuda a definir lo que se publica.",
				"Your subscription will expire on {{expiryDate}}": "Su suscripción caducará el {{expiryDate}} ",
				"Your subscription will renew on {{renewalDate}}": "Su suscripción se renovará el {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Su suscripción comenzará el {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		f1 = "Suscribirse",
		xX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: f1,
			default: {
				"Email sent": "Correo electrónico enviado",
				"Now check your email!": "Ahora, ¡revisa tu email!",
				"Please enter a valid email address": "Por favor, ingresa una dirección de email válida",
				"Something went wrong, please try again.": "Algo salió mal, por favor intenta nuevamente.",
				Subscribe: f1,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar el registro, haz clic en el link en tu bandeja de entrada. Si no llega en los siguientes 3 minutos, ¡revisa tu carpeta de spam!",
				"Your email address": "Tu dirección de correo electrónico"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		h1 = "",
		g1 = "",
		y1 = "",
		b1 = "",
		k1 = "",
		v1 = "",
		w1 = "",
		S1 = "",
		C1 = "",
		x1 = "",
		E1 = "",
		T1 = "",
		j1 = "",
		$1 = "",
		A1 = "",
		N1 = "",
		M1 = "",
		P1 = "",
		EX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: h1,
			Cancel: g1,
			Comment: y1,
			Delete: b1,
			Discussion: k1,
			Edit: v1,
			Edited: w1,
			Expertise: S1,
			Hide: C1,
			Name: x1,
			Neurosurgeon: E1,
			Reply: T1,
			Report: j1,
			Save: $1,
			Sending: A1,
			Sent: N1,
			Show: M1,
			Yesterday: P1,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: h1,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: g1,
				Comment: y1,
				"Complete your profile": "",
				Delete: b1,
				"Deleted member": "",
				Discussion: k1,
				Edit: v1,
				"Edit this comment": "",
				Edited: w1,
				"Enter your name": "",
				Expertise: S1,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: C1,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: x1,
				Neurosurgeon: E1,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: T1,
				"Reply to comment": "",
				Report: j1,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: $1,
				Sending: A1,
				Sent: N1,
				Show: M1,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: P1,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		TX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Kaikkea hyvää!",
				"Complete signup for {{siteTitle}}!": "Rekisteröidy sivulle {{siteTitle}}",
				"Complete your sign up to {{siteTitle}}!": "Täytä kaikki tarvittavat tiedot sivulle {{siteTitle}}",
				"Confirm email address": "Vahvista sähköpostiosoitteesi",
				"Confirm signup": "Vahvista rekisteröityminen",
				"Confirm your email address": "Vahvista sähköpostiosoitteesi",
				"Confirm your email update for {{siteTitle}}!": "Vahvista sähköpostin päivitys sivulle {{siteTitle}}",
				"Confirm your subscription to {{siteTitle}}": "Vahvista tilauksesi sivulle {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Turvallisuutesi varmistamiseksi linkki vanhenee 24h jälkeen",
				"Hey there,": "Hei",
				"Hey there!": "Hei!",
				"If you did not make this request, you can safely ignore this email.": "Jos et tehny tätä pyyntöä, voit olla reagoimatta viestiin",
				"If you did not make this request, you can simply delete this message.": "Jos et tehnyt tätä pyyntöä, voit poistaa tämän viestin",
				"Please confirm your email address with this link:": "Vahvista sähköpostisi tästä linkistä:",
				"Secure sign in link for {{siteTitle}}": "Turvallinen kirjautumislinkki sivustolle {{siteTitle}}",
				"See you soon!": "Nähdään pian!",
				"Sent to {{email}}": "Lähetetty {{email}}",
				"Sign in": "Kirjaudu sisään",
				"Sign in to {{siteTitle}}": "Kirjaudu sisään sivulle {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klikkaa alla olevaa linkkiä viimeistelläksesi rekisteröityminen sivulle {{siteTitle}}",
				"Thank you for signing up to {{siteTitle}}!": "Kiitos rekisteröitymisestä sivulle {{siteTitle}}",
				"Thank you for subscribing to {{siteTitle}}!": "Kiitos tilauksestasi sivulle {{siteTitle}}",
				"Thank you for subscribing to {{siteTitle}}.": "Kiitos tilauksestasi sivulle {{siteTitle}}",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Kiitos tilauksestasi sivulle Kiitos tilauksestasi sivulle {{siteTitle}}. Klikkaa alla olevaa linkkiä jatkaaksesi.",
				"This email address will not be used.": "Tätä sähköpostia ei käytetä.",
				"Welcome back to {{siteTitle}}!": "Tervetuloa takaisin sivulle {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Tervetuloa takaisin! Käytä tätä linkkiä kirjautuaksesi {{siteTitle}} tilillesi:",
				"You can also copy & paste this URL into your browser:": "Voit myös kopioida ja liittää tämän osoitteen selaimeesi:",
				"You will not be signed up, and no account will be created for you.": "Sinua ei rekisteröidä ja tiliä ei luoda sinulle",
				"You will not be subscribed.": "Sinulle ei tehdä tilausta",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Olet yhden klikkauksen päässä tilauksestasi sivulle {{siteTitle}} - Vahista sähköpostisi tästä:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Olet yhden klikkauksen päässä tilauksestasi sivulle {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		_1 = "Oma tili",
		z1 = "Takaisin",
		O1 = "Vaihda",
		D1 = "Valitse",
		I1 = "Sulje",
		R1 = "Kommentit",
		Y1 = "Ilmainen",
		L1 = "Vahvista",
		F1 = "Jatka",
		B1 = "Muokkaa",
		U1 = "Sähköposti",
		V1 = "Sähköpostit",
		H1 = "Ikuisesti",
		q1 = "Hallitse",
		W1 = "Kuukausittainen",
		K1 = "Nimi",
		J1 = "Tilaus",
		G1 = "Hinta",
		Q1 = "",
		X1 = "Kokeile uudestaan",
		Z1 = "Tallenna",
		eE = "Tilaa",
		tE = "Tilaus onnistunut",
		nE = "Onnistunut",
		iE = "Tilaus peruutettu",
		oE = "Päivitä",
		rE = "",
		aE = "Vuosittainen",
		jX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: _1,
			Back: z1,
			Change: O1,
			Choose: D1,
			Close: I1,
			Comments: R1,
			Complimentary: Y1,
			Confirm: L1,
			Continue: F1,
			Edit: B1,
			Email: U1,
			Emails: V1,
			Forever: H1,
			Manage: q1,
			Monthly: W1,
			Name: K1,
			Plan: J1,
			Price: G1,
			Recommendations: Q1,
			Retry: X1,
			Save: Z1,
			Subscribe: eE,
			Subscribed: tE,
			Success: nE,
			Unsubscribed: iE,
			Update: oE,
			Visit: rE,
			Yearly: aE,
			default: {
				"{{amount}} days free": "{{amount}} päivää ilmaiseksi",
				"{{amount}} off": "{{amount}} pois",
				"{{amount}} off for first {{number}} months.": "{{amount}} pois ensimmäisestä {{number}} kuukaudesta",
				"{{amount}} off for first {{period}}.": "{{amount}} pois ensimmäisestä {{period}}",
				"{{amount}} off forever.": "{{amount}} pois ikuisesti",
				"{{discount}}% discount": "{{discount}}% alennus",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} ei enää jatkossa saa {{newsletterName}} uutiskirjettä.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} ei lähetetä enää jatkossa sähköpostia jos joku vastaa kommenttiisi.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} ei enää lähetetä tätä uutiskirjettä.",
				"{{trialDays}} days free": "{{trialDays}} päivää ilmaiseksi",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Kirjautumislinkki on lähetetty sähköpostiisi. Jos se ei tule 3 minuutin kuluessa, muista katsoa spam-kansiosi.",
				Account: _1,
				"Account settings": "Tilin asetukset",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Kun ilmainen kokeilusi loppuu, sinulta veloitetaan valitsemasi tilauksen kuukausimaksu. Voit aina peruuttaa tilauksesi ennen tätä.",
				"Already a member?": "Oletko jo jäsen?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Odottamaton virhe syntyi, yritäthän uudestaan tai <a>contact support</a> jos ongelma jatkuu.",
				Back: z1,
				"Back to Log in": "Takaisin kirjautumiseen",
				"Billing info": "Maksutiedot",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Peruuta milloin vain",
				"Cancel subscription": "Peruuta tilaus",
				"Cancellation reason": "Syy peruutukselle",
				Change: O1,
				"Check spam & promotions folders": "Katso spam & promotions kansiot",
				"Check with your mail provider": "Tarkista sähköpostitarjoajaltasi",
				Choose: D1,
				"Choose a different plan": "Valitse toinen tilaus",
				"Choose your newsletters": "Valitse uutiskirjeesi",
				"Click here to retry": "Klikkaa tästä kokeillaksesi uudestaan",
				Close: I1,
				Comments: R1,
				Complimentary: Y1,
				Confirm: L1,
				"Confirm cancellation": "Vahvista peruutus",
				"Confirm subscription": "Vahvista tilaus",
				"Contact support": "Ota yhteyttä tukeen",
				Continue: F1,
				"Continue subscription": "Jatka tilaustasi",
				"Could not sign in. Login link expired.": "Kirjautuminen epäonnistui. Kirjautumislinkki on vanhentunut.",
				"Could not update email! Invalid link.": "Sähköpostia ei pystytty päivittämään! Linkki ei toimi.",
				"Create a new contact": "Luo uusi kontakti",
				"Current plan": "Nykyinen tilaus",
				"Delete account": "Poista tilisi",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Etkö tarkoittanut tehdä näin? Muokkaa valintojasi <button>here</button>",
				"Don't have an account?": "Eikö sinulla ole tiliä?",
				Edit: B1,
				Email: U1,
				"Email newsletter": "Uutiskirje sähköpostiin",
				"Email preference updated.": "Sähköpostiasetukset päivitetty",
				"Email preferences": "Sähköpostiasetukset",
				Emails: V1,
				"Emails disabled": "Sähköpostit pois käytöstä",
				"Ends {{offerEndDate}}": "Loppuu {{offerEndDate}}",
				Error: "Virhe",
				"Expires {{expiryDate}}": "Vanhenee {{expiryDate}}",
				Forever: H1,
				"Free Trial – Ends {{trialEnd}}": "Ilmainen kokeilu – Loppuu {{trialEnd}}",
				"Get help": "Pyydä apua",
				"Get in touch for help": "Ota yhteyttä saadaksesi apua",
				"Get notified when someone replies to your comment": "Saa viesti kun joku vastaa kommenttiisi",
				"Give feedback on this post": "Anna palautetta tähän postaukseen",
				"Help! I'm not receiving emails": "Apua! En saa sähköposteja",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Jos uutiskirje on merkitty spammiksi, sähköpostit tähän osoitteeseen on estetty, jotta et enää vastaanota viestejä osoitteeseen",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Jos spam-valitus oli aiheeton, tai haluaisit saada taas viestejä, voit uudelleen ilmoittautua sähköposteihin painamalla nappia edellisellä sivulla.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Jos haluat perua tilauksesi nyt, sinulla on vielä oikeus materiaaliin {{periodEnd}} asti",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Jos sinulla on yritys- tai valtion sähköposti, pyydä IT-osastoa hyväksymään sähköpostit lähettäjältä {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Jos haluat saada taas sähköposteja, paras tapa jatkaa on tarkistaa sähköpostiosoitteesi ja sitten klikata uudelleen uutiskirjeeseen osallistumista edellisellä sivulla.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Jos et saa uutiskirjettä sähköpostiisi, tässä on muutama asia tarkistettavaksi:",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Jos et vieläkään saa uutiskirjeitä, ota yhteyttä {{supportAddress}}",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Jos uutiskirjeen lähetyksessä tapahtuu pysyvä ongelma, sähköpostien lähetys keskeytetään.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Sähköpostiasetuksissasi lisää {{senderEmail}} kontakteihisi. Tämä antaa viestin sähköpostitarjoajalle, että viestit tästä osoitteesta ovat hyväksyttäviä.",
				"Less like this": "Vähemmän tämän kaltaisia",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Varmista, että sähköpostit eivät mene Spam- tai roskapostikansioihin, Jos näin käy, klikkaa "Mark as not spam" ja/tai "Move to inbox".',
				Manage: q1,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: W1,
				"More like this": "Lisää tämän kaltaista",
				Name: K1,
				"Need more help? Contact support": "Tarvitsetko lisää apua? Ota yhteyttä tukeen",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Uutiskirjeet sähköpostiisi voivat peruuntua kahdesta syystä: edellinen sähköposti oli merkattu spammiksi, tai sähköpostin lähetyksestä tuli bounce.",
				"Not receiving emails?": "Etkö saa sähköposteja?",
				"Now check your email!": "Nyt tarkista sähköpostisi",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Kun olet tilannut sähköpostit uudelleen ja et vieläkään saa posteja, katso ensimmäiseksi spam-kansio. Jotkut tarjoajat pitävät listaa ennen merkityistä viesteistä ja estävät niitä jatkossakin. Jos näin tapahtuu, merkitse viesti Not Spam ja siirrä se postilaatikkoosi.",
				"Permanent failure (bounce)": "Pysyvä virhe (bounce)",
				Plan: J1,
				"Plan checkout was cancelled.": "Tilauksen checkout on peruttu",
				"Plan upgrade was cancelled.": "Tilauksen korotus on peruttu",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Täytä tarvittavat kentät",
				Price: G1,
				"Re-enable emails": "Uudelleen hyväksy sähköpostit",
				Recommendations: Q1,
				"Renews at {{price}}.": "Tilaus päivittyy hinnalla {{price}}.",
				Retry: X1,
				Save: Z1,
				"Send an email and say hi!": "Lähetä sähköposti ja sano moi!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Lähetä sähköposti osoitteeseen {{senderEmail}} ja sano hei. Tämä viestii tarjoajalle, että osoite on hyväksytty.",
				"Sending login link...": "Lähetetään kirjautumislinkkiä...",
				"Sending...": "Lähetetään...",
				"Show all": "",
				"Sign in": "Kirjaudu sisään",
				"Sign out": "Kirjaudu ulos",
				"Sign up": "Rekisteröidy",
				"Signup error: Invalid link": "Virhe rekisteröinnissä: Linkki ei toimi",
				"Sorry, that didn’t work.": "Anteeksi, tämä ei onnistunut",
				"Spam complaints": "Spam-valitukset",
				"Start {{amount}}-day free trial": "Aloita {{amount}}-päivän kokeilu",
				"Starting {{startDate}}": "Aloitetaan {{startDate}}",
				"Starting today": "Alkaa tänään",
				"Submit feedback": "Anna palautetta",
				Subscribe: eE,
				Subscribed: tE,
				Success: nE,
				"Success! Check your email for magic link to sign-in.": "Onnistui! Katso sähköpostisi kirjautumislinkkiä varten",
				"Success! Your account is fully activated, you now have access to all content.": "Onnistui! Tilisi on aktivoitu ja sinulla on pääsy sisältöihin",
				"Success! Your email is updated.": "Onnistui! Sähköpostisi on päivitetty",
				"Successfully unsubscribed": "Tilauksen peruutus onnistui",
				"Thanks for the feedback!": "Kiitos palautteestasi!",
				"That didn't go to plan": "Tämä ei mennyt suunnitelmien mukaan",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "Meillä oli ongelma palautteesi lähetyksen kanssa. Kokeleithan myöhemmin uudestaan.",
				"This site is invite-only, contact the owner for access.": "Tämä sivu on vain kutsutuille, ota yhteyttä omistajaan saadaksesi pääsyoikeuden.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Viimeistelläksesi rekisteröitymisen, klikkaa vahvistuslinkkiä sähköpostissasi. Jos sitä ei saavu 3 minuutin kuluessa, tarkista roskapostikansiosi!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Kokeile ilmaiseksi {{amount}} päivää, sen jälkeen hinta on {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Avaa pääsy kaikkiin uutiskirjeisiin maksullisella tilauksella.",
				"Unsubscribe from all emails": "Peruuta kaikki sähköpostit",
				Unsubscribed: iE,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Sähköpostien peruuttaminen ei peruuta maksullista tilaustasi {{title}}",
				Update: oE,
				"Update your preferences": "Päivitä asetuksesi",
				"Verify your email address is correct": "Vahvista sähköpostiosoitteesi oikeellisuus",
				"View plans": "Katso tilausvaihtoehtoja",
				Visit: rE,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Emme voineet peruuttaa tilaustasi, koska sähköpostiosoitetta ei löytynyt. Ota yhteyttä sivuston omistajaan.",
				"Welcome back, {{name}}!": "Tervetuloa takaisin, {{name}}!",
				"Welcome back!": "Tervetuloa takaisin!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "ksissa “bounssannut” sähköposti voi kuitenkin palautua pysyvänä virheenä, kun sähköpostiosoite on virheellinen tai sitä ei ole olemassa.",
				"Why has my email been disabled?": "Miksi sähköpostini on poistettu käytöstä?",
				Yearly: aE,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Sinulla on tällä hetkellä ilmainen jäsenyys, päivitä maksulliseksi tilaukseksi saadaksesi täyden pääsyn.",
				"You have been successfully resubscribed": "Olet tilannut uudelleen onnistuneesti",
				"You're currently not receiving emails": "Et tällä hetkellä ole saamassa sähköposteja",
				"You're not receiving emails": "Et saa sähköposteja",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Et saa sähköposteja siksi, että joko merkitsit äskettäisen viestin roskapostiksi tai siksi, että viestejä ei voitu toimittaa antamaasi sähköpostiosoitteeseen.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Olet kirjautunut sisään onnistuneesti",
				"You've successfully subscribed to": "",
				"Your account": "Tilisi",
				"Your input helps shape what gets published.": "Antamasi palautteen avulla muokataan julkaistavaa sisältöä",
				"Your subscription will expire on {{expiryDate}}": "Tilauksesi päättyy {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Tilauksesi uusiutuu {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Tilauksesi alkaa {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		sE = "Tilaa",
		$X = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: sE,
			default: {
				"Email sent": "Sähköpostiviesti lähetettiin",
				"Now check your email!": "Tarkista nyt sähköpostisi!",
				"Please enter a valid email address": "Ole hyvä ja syötä voimassa oleva sähköpostiosoite",
				"Something went wrong, please try again.": "Jotain meni pieleen, ole hyvä ja yritä uudestaan.",
				Subscribe: sE,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Viimeistelläksesi rekisteröitymisen, klikkaa vahvistuslinkkiä saamassasi sähköpostiviestissä. Jos et saa vahvistuslinkin sisältävää viestiä kolmen minuutin kuluessa, tarkistathan roskapostikansiosi.",
				"Your email address": "Sähköpostiosoitteesi"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		lE = "",
		uE = "",
		cE = "",
		dE = "",
		mE = "",
		pE = "",
		fE = "",
		hE = "",
		gE = "",
		yE = "",
		bE = "",
		kE = "",
		vE = "",
		wE = "",
		SE = "",
		CE = "",
		xE = "",
		EE = "",
		AX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: lE,
			Cancel: uE,
			Comment: cE,
			Delete: dE,
			Discussion: mE,
			Edit: pE,
			Edited: fE,
			Expertise: hE,
			Hide: gE,
			Name: yE,
			Neurosurgeon: bE,
			Reply: kE,
			Report: vE,
			Save: wE,
			Sending: SE,
			Sent: CE,
			Show: xE,
			Yesterday: EE,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: lE,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: uE,
				Comment: cE,
				"Complete your profile": "",
				Delete: dE,
				"Deleted member": "",
				Discussion: mE,
				Edit: pE,
				"Edit this comment": "",
				Edited: fE,
				"Enter your name": "",
				Expertise: hE,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: gE,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: yE,
				Neurosurgeon: bE,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: kE,
				"Reply to comment": "",
				Report: vE,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: wE,
				Sending: SE,
				Sent: CE,
				Show: xE,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: EE,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		NX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Bien à vous !",
				"Complete signup for {{siteTitle}}!": "Finalisez votre inscription à {{siteTitle}} !",
				"Complete your sign up to {{siteTitle}}!": "Finalisez votre inscription à {{siteTitle}}",
				"Confirm email address": "Confirmez votre adresse email",
				"Confirm signup": "Confirmer l'inscription",
				"Confirm your email address": "Confirmez votre adresse email",
				"Confirm your email update for {{siteTitle}}!": "Confirmez votre adresse email pour {{siteTitle}}",
				"Confirm your subscription to {{siteTitle}}": "Confirmez votre abonnement à {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Pour des raisons de sécurité, le lien expirera dans 24 heures.",
				"Hey there,": "Bonjour,",
				"Hey there!": "Bonjour !",
				"If you did not make this request, you can safely ignore this email.": "Si vous n’êtes pas à l'origine de cette demande, vous pouvez ignorer cet e-mail.",
				"If you did not make this request, you can simply delete this message.": "Si vous n’êtes pas à l'origine de cette demande, vous pouvez supprimer cet e-mail.",
				"Please confirm your email address with this link:": "Confirmez votre adresse e-mail avec ce lien :",
				"Secure sign in link for {{siteTitle}}": "Lien sécurisé de connexion pour {{siteTitle}}",
				"See you soon!": "À bientôt !",
				"Sent to {{email}}": "Envoyé à {{email}}",
				"Sign in": "Se connecter",
				"Sign in to {{siteTitle}}": "Se connecter à {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Cliquez sur le lien ci-dessous pour compléter votre inscription à {{siteTitle}} et vous connecter automatiquement :",
				"Thank you for signing up to {{siteTitle}}!": "Merci pour votre inscription à {{siteTitle}} !",
				"Thank you for subscribing to {{siteTitle}}!": "Merci pour votre abonnement à {{siteTitle}} !",
				"Thank you for subscribing to {{siteTitle}}.": "Merci pour votre abonnement à {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Merci pour votre abonnement à {{siteTitle}}. Cliquez sur le lien ci-dessous pour vous connecter automatiquement :",
				"This email address will not be used.": "Cette adresse e-mail ne sera pas utilisée.",
				"Welcome back to {{siteTitle}}!": "Bienvenue de retour chez {{siteTitle}} !",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bon retour parmi nous ! Utilisez ce lien pour vous connecter en toute sécurité à votre compte {{siteTitle}} :",
				"You can also copy & paste this URL into your browser:": "Vous pouvez aussi copier et coller cette URL dans votre navigateur :",
				"You will not be signed up, and no account will be created for you.": "Vous ne serez pas inscrit et aucun compte ne sera créé pour vous.",
				"You will not be subscribed.": "Vous ne serez pas abonné.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Plus qu’une étape pour vous abonner à {{siteTitle}} — confirmez votre adresse e-mail avec ce lien :",
				"You're one tap away from subscribing to {{siteTitle}}!": "Plus qu’une étape pour vous abonner à {{siteTitle}} !"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		TE = "Compte",
		jE = "Retour",
		$E = "Changer",
		AE = "Choisir",
		NE = "Fermer",
		ME = "Commentaires",
		PE = "Offert",
		_E = "Confirmer",
		zE = "Continuer",
		OE = "Modifier",
		DE = "E-mail",
		IE = "E-mails",
		RE = "Permanent",
		YE = "Gérer",
		LE = "Mensuel",
		FE = "Nom",
		BE = "Abonnement",
		UE = "Prix",
		VE = "",
		HE = "Réesayer",
		qE = "Sauvegarder",
		WE = "S'abonner",
		KE = "Abonné(e)",
		JE = "Succès",
		GE = "Désabonné(e)",
		QE = "Mise à jour",
		XE = "",
		ZE = "Annuel",
		MX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: TE,
			Back: jE,
			Change: $E,
			Choose: AE,
			Close: NE,
			Comments: ME,
			Complimentary: PE,
			Confirm: _E,
			Continue: zE,
			Edit: OE,
			Email: DE,
			Emails: IE,
			Forever: RE,
			Manage: YE,
			Monthly: LE,
			Name: FE,
			Plan: BE,
			Price: UE,
			Recommendations: VE,
			Retry: HE,
			Save: qE,
			Subscribe: WE,
			Subscribed: KE,
			Success: JE,
			Unsubscribed: GE,
			Update: QE,
			Visit: XE,
			Yearly: ZE,
			default: {
				"{{amount}} days free": "{{amount}} jours gratuits",
				"{{amount}} off": "{{amount}} de réduction",
				"{{amount}} off for first {{number}} months.": "{{amount}} de réduction pour les {{number}} premiers mois.",
				"{{amount}} off for first {{period}}.": "{{amount}} de réduction pour le/la premier/ère {{period}}.",
				"{{amount}} off forever.": "{{amount}} de réduction permanente.",
				"{{discount}}% discount": "{{discount}}% de réduction",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} ne recevra plus la newsletter {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} ne recevra plus d'e-mails lorsque quelqu'un répond à vos commentaires.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} ne recevra plus cette newsletter.",
				"{{trialDays}} days free": "{{trialDays}} jours gratuits",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Un lien de connexion a été envoyé dans votre boîte de réception. S’il n’arrive pas dans les 3 minutes, vérifiez votre dossier spam.",
				Account: TE,
				"Account settings": "Paramètres du compte",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "À la fin de la période d’essai gratuite, le prix normal de l’abonnement choisi sera facturé. Vous pouvez toujours annuler d’ici là.",
				"Already a member?": "Déjà membre ?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Une erreur inattendue s'est produite. Veuillez réessayer ou <a>contacter le support</a> si l'erreur persiste.",
				Back: jE,
				"Back to Log in": "Retour à Connexion",
				"Billing info": "Informations sur la facturation",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Annuler à tout moment.",
				"Cancel subscription": "Annuler l’abonnement",
				"Cancellation reason": "Raison de l’annulation",
				Change: $E,
				"Check spam & promotions folders": "Vérifiez les dossiers de spam et de promotion",
				"Check with your mail provider": "Vérifiez auprès de votre fournisseur d'e-mail",
				Choose: AE,
				"Choose a different plan": "Choisir un autre abonnement",
				"Choose your newsletters": "Choisir les newsletters",
				"Click here to retry": "Cliquez ici pour réessayer",
				Close: NE,
				Comments: ME,
				Complimentary: PE,
				Confirm: _E,
				"Confirm cancellation": "Confirmer l'annulation",
				"Confirm subscription": "Confirmer l'abonnement",
				"Contact support": "Contacter le support",
				Continue: zE,
				"Continue subscription": "Continuer l'abonnement",
				"Could not sign in. Login link expired.": "Impossible de se connecter. Le lien de connexion a expiré.",
				"Could not update email! Invalid link.": "Impossible de mettre à jour l'e-mail ! Lien invalide.",
				"Create a new contact": "Créer un nouveau contact",
				"Current plan": "Abonnement actuel",
				"Delete account": "Supprimer le compte",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Vous ne vouliez pas faire ça ? Gérez vos préférences <button>ici</button>.",
				"Don't have an account?": "Vous n’avez pas encore de compte ?",
				Edit: OE,
				Email: DE,
				"Email newsletter": "E-mail de la newsletter",
				"Email preference updated.": "Préférences d’e-mail mises à jour.",
				"Email preferences": "Préférences d’e-mail",
				Emails: IE,
				"Emails disabled": "E-mails désactivés",
				"Ends {{offerEndDate}}": "Se termine le {{offerEndDate}}",
				Error: "Erreur",
				"Expires {{expiryDate}}": "Expire le {{expiryDate}}",
				Forever: RE,
				"Free Trial – Ends {{trialEnd}}": "Essai gratuit - Se termine le {{trialEnd}}",
				"Get help": "Obtenir de l’aide",
				"Get in touch for help": "Contactez-nous pour obtenir de l'aide",
				"Get notified when someone replies to your comment": "Recevez une notification lorsque quelqu’un répond à votre commentaire",
				"Give feedback on this post": "Donnez votre avis sur cet article",
				"Help! I'm not receiving emails": "À l'aide ! Je ne reçois pas d'e-mails",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Si une newsletter est signalée comme étant du spam, les e-mails sont automatiquement désactivés pour cette adresse afin que vous ne receviez plus de messages indésirables.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Si le signalement spam était accidentel, ou si vous voulez de nouveau recevoir les e-mails, vous pouvez vous réinscrire aux e-mails en cliquant sur le bouton sur la page précédente.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Si vous annulez votre abonnement maintenant, vous continuerez à y avoir accès jusqu'au {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Si vous avez un compte e-mail d'entreprise ou gouvernenmental, contactez votre service informatique et demandez leur d'autoriser les e-mails provenant de {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Si vous voulez à nouveau recevoir les e-mails, la meilleure chose à faire est de vérifier votre toute erreur liée à l'adresse e-mail renseignée, puis de cliquer sur réinscription sur la page précédente.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Si vous ne recevez pas la newsletter par e-mail à laquelle vous vous êtes abonné, voici quelques points à vérifier.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Si vous avez complété toutes ces étapes et ne recevez toujours pas d'e-mails, vous pouvez nous contacter à {{supportAddress}} pour obtenir de l'aide.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Si une erreur persistante est reçue lors de la tentative d'envoi de la newsletter, les e-mails seront désactivés pour le compte.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Dans votre client de messagerie, ajoutez {{senderEmail}} à votre liste de contacts. Cela signale à votre fournisseur de messagerie que les e-mails provenant de cette adresse doivent être considérés comme dignes de confiance.",
				"Less like this": "Moins de contenu similaire",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': `Assurez-vous que les e-mails ne finissent pas accidentellement dans le dossier Spam ou Promotions de votre boîte de réception. Si c'est le cas, cliquez sur "Marquer en tant que non-indésirable" et/ou "Déplacer vers la boîte de réception".`,
				Manage: YE,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: LE,
				"More like this": "Plus de contenu similaire",
				Name: FE,
				"Need more help? Contact support": "Besoin d'aide? Contactez le support",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Les newsletters peuvent être désactivés pour votre compte pour deux raisons : un précédent e-mail a été marqué en tant que spam, ou une tentative d'envoi d'e-mail a résulté en une erreur persistante (renvoi).",
				"Not receiving emails?": "Vous n’avez pas reçu d’e-mails ?",
				"Now check your email!": "Veuillez maintenant vérifier votre boite de réception.",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Une fois réinscrit, si vous ne voyez toujours pas d'e-mails dans votre boîte de réception, vérifiez votre dossier spam. Certains fournisseurs garde en mémoire les précédents signalements spams et continue de marquer les e-mails comme tels. Si tel est le cas, marquez la dernière newsletter comme 'non-indésirable' et déplacez-là vers votre boîte de réception.",
				"Permanent failure (bounce)": "Erreur persistante (renvoi)",
				Plan: BE,
				"Plan checkout was cancelled.": "Le paiement de l'abonnement a été annulé.",
				"Plan upgrade was cancelled.": "La mise à niveau de l'abonnement a été annulée.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Veuillez remplir les champs requis",
				Price: UE,
				"Re-enable emails": "Ré-activer les e-mails",
				Recommendations: VE,
				"Renews at {{price}}.": "Renouvellement pour {{price}}.",
				Retry: HE,
				Save: qE,
				"Send an email and say hi!": "Envoyez un e-mail et dites bonjour !",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Envoyez un e-mail à {{senderEmail}} et dites bonjour ! Cela devrait également signaler à votre fournisseur de messagerie que les e-mails depuis/vers cette adresse doivent être considérés comme dignes de confiance.",
				"Sending login link...": "Envoi du lien de connexion…",
				"Sending...": "Envoi…",
				"Show all": "",
				"Sign in": "Se connecter",
				"Sign out": "Se déconnecter",
				"Sign up": "S’inscrire",
				"Signup error: Invalid link": "Erreur d'inscription : lien invalide",
				"Sorry, that didn’t work.": "Désolé, cela n'a pas fonctionné.",
				"Spam complaints": "Signalements pour spam",
				"Start {{amount}}-day free trial": "Commencer l’essai gratuit de {{amount}} jours",
				"Starting {{startDate}}": "À partir du {{startDate}}",
				"Starting today": "À partir d'aujourd'hui",
				"Submit feedback": "Envoyez votre avis",
				Subscribe: WE,
				Subscribed: KE,
				Success: JE,
				"Success! Check your email for magic link to sign-in.": "Succès ! Vérifiez votre boîte de réception pour le lien de connexion.",
				"Success! Your account is fully activated, you now have access to all content.": "Succès ! Votre compte est entièrement activé, et vous avez désormais accès à tout le contenu.",
				"Success! Your email is updated.": "Succès ! Votre adresse e-mail a été mise à jour.",
				"Successfully unsubscribed": "Désabonnement réussi",
				"Thanks for the feedback!": "Merci pour votre avis !",
				"That didn't go to plan": "Cela n’a pas fonctionné comme prévu",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "L'adresse e-mail qui vous est associée est {{memberEmail}} — Si celle-ci est incorrecte, vous pouvez la modifier dans votre <button>espace paramètres de compte</button>",
				"There was a problem submitting your feedback. Please try again a little later.": "Un problème est survenu lors de la soumission de votre commentaire. Veuillez réessayer un peu plus tard.",
				"This site is invite-only, contact the owner for access.": "Ce site est réservé aux invités, contactez le propriétaire pour y accéder.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Pour confirmer votre inscription, cliquez sur le lien de confirmation envoyé dans votre boite de réception. S’il ne vous parvient pas dans les 3 minutes, vérifiez votre dossier spam.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Essayez gratuitement pendant {{amount}} jours, puis {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Débloquez l'accès à toutes les newsletters en devenant un abonné payant.",
				"Unsubscribe from all emails": "Se désinscrire de tous les e-mails",
				Unsubscribed: GE,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "La désinscription des e-mails n’annulera pas votre abonnement payant à {{title}}",
				Update: QE,
				"Update your preferences": "Mettez à jour vos préférences",
				"Verify your email address is correct": "Vérifiez que votre adresse e-mail est correcte",
				"View plans": "Voir les abonnements",
				Visit: XE,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "La désinscription n’a pas fonctionné car votre adresse e-mail n’a pas été trouvée. Veuillez contacter le propriétaire du site.",
				"Welcome back, {{name}}!": "Bon retour parmi nous, {{name}} !",
				"Welcome back!": "Bon retour parmi nous !",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Lorsqu'une boîte de réception n'accepte pas un e-mail, on parle communément d'un renvoi. Dans beaucoup de cas, cela peut être temporaire. Cependant, dans certains cas, un e-mail renvoyé peut être accompagné d'une erreur persistante, lorsqu'une adresse e-mail est invalide ou inexistante.",
				"Why has my email been disabled?": "Pourquoi mon e-mail a-t-il été désactivé ?",
				Yearly: ZE,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Vous avez actuellement un abonnement gratuit, passez à un abonnement payant pour un accès complet.",
				"You have been successfully resubscribed": "Vous avez été réinscrit avec succès",
				"You're currently not receiving emails": "Vous ne recevez actuellement pas d'e-mails",
				"You're not receiving emails": "Vous ne recevez pas d'e-mails",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Vous ne recevez pas d’e-mails parce que vous avez marqué un message récent comme spam, ou parce que les messages n’ont pas pu être livrés à l’adresse e-mail que vous aviez indiquée.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Vous vous êtes connecté avec succès.",
				"You've successfully subscribed to": "",
				"Your account": "Votre compte",
				"Your input helps shape what gets published.": "Votre avis aide à améliorer ce qui est publié.",
				"Your subscription will expire on {{expiryDate}}": "Votre abonnement expirera le {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Votre abonnement sera renouvelé le {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Votre abonnement débutera le {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		eT = "S'abonner",
		PX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: eT,
			default: {
				"Email sent": "E-mail envoyé",
				"Now check your email!": "Maintenant, vérifiez votre boîte de réception !",
				"Please enter a valid email address": "Veuillez renseigner une adresse e-mail valide",
				"Something went wrong, please try again.": "Un problème est survenu, veuillez réessayer.",
				Subscribe: eT,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Pour terminer l'inscription, cliquez sur le lien de confirmation dans votre boîte de réception. S'il n'arrive pas dans les 3 minutes, vérifiez votre dossier de spam !",
				"Your email address": "Votre adresse e-mail"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		tT = "",
		nT = "",
		iT = "",
		oT = "",
		rT = "",
		aT = "",
		sT = "",
		lT = "",
		uT = "",
		cT = "",
		dT = "",
		mT = "",
		pT = "",
		fT = "",
		hT = "",
		gT = "",
		yT = "",
		bT = "",
		_X = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: tT,
			Cancel: nT,
			Comment: iT,
			Delete: oT,
			Discussion: rT,
			Edit: aT,
			Edited: sT,
			Expertise: lT,
			Hide: uT,
			Name: cT,
			Neurosurgeon: dT,
			Reply: mT,
			Report: pT,
			Save: fT,
			Sending: hT,
			Sent: gT,
			Show: yT,
			Yesterday: bT,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: tT,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: nT,
				Comment: iT,
				"Complete your profile": "",
				Delete: oT,
				"Deleted member": "",
				Discussion: rT,
				Edit: aT,
				"Edit this comment": "",
				Edited: sT,
				"Enter your name": "",
				Expertise: lT,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: uT,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: cT,
				Neurosurgeon: dT,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: mT,
				"Reply to comment": "",
				Report: pT,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: fT,
				Sending: hT,
				Sent: gT,
				Show: yT,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: bT,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		zX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Sve najbolje!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Završite vašu registraciju na {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Potvrdite promjenu email adrese na {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Potvrdite vašu pretplatu na {{siteTitle}}!",
				"For your security, the link will expire in 24 hours time.": "Radi Vaše sigurnosti, ovaj link prestaje vrijediti nakon 24 sata.",
				"Hey there,": "Pozdrav,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Možete zanemariti ovaj email ukoliko niste uputili ovaj zahtjev.",
				"If you did not make this request, you can simply delete this message.": "Možete obrisati ovaj email ukoliko niste uputili ovaj zahtjev.",
				"Please confirm your email address with this link:": "Molimo Vas potvrdite Vašu email adresu klikom na ovaj link:",
				"Secure sign in link for {{siteTitle}}": "Sigurni link za logiranje na {{siteTitle}}",
				"See you soon!": "Vidimo se uskoro!",
				"Sent to {{email}}": "Poslano na {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Ulogirajte se na {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Završite registraciju na {{siteTitle}} klikom na link ispod, i ulogirajte se odmah:",
				"Thank you for signing up to {{siteTitle}}!": "Hvala za registraciju na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Hvala za pretplatu na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Hvala za pretplatu na {{siteTitle}}. Otvorite link ispod da biste se ulogirali:",
				"This email address will not be used.": "Ova email adresa neće biti iskorištena.",
				"Welcome back to {{siteTitle}}!": "Dobro došli na {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Dobro došli! Iskoristite ovaj link da biste se ulogirali na {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Uvijek možete kopirati link i otvoriti u Vašem web pregledniku:",
				"You will not be signed up, and no account will be created for you.": "Nećete biti registrirani i Vaš račun neće biti kreiran.",
				"You will not be subscribed.": "Nećete biti pretplaćeni.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Na korak ste od pretplate na {{siteTitle}} - molimo Vas da potvrdite email adresu na ovom linku:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		kT = "Račun",
		vT = "Natrag",
		wT = "",
		ST = "",
		CT = "Zatvori",
		xT = "Komentari",
		ET = "",
		TT = "Potvrdi",
		jT = "Nastavi",
		$T = "",
		AT = "Email",
		NT = "Email-ovi",
		MT = "",
		PT = "Podešavanja",
		_T = "Mjesečno",
		zT = "Ime",
		OT = "",
		DT = "Cijena",
		IT = "",
		RT = "Pokušaj opet",
		YT = "Sačuvaj",
		LT = "",
		FT = "",
		BT = "",
		UT = "",
		VT = "",
		HT = "",
		qT = "Godišnje",
		OX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: kT,
			Back: vT,
			Change: wT,
			Choose: ST,
			Close: CT,
			Comments: xT,
			Complimentary: ET,
			Confirm: TT,
			Continue: jT,
			Edit: $T,
			Email: AT,
			Emails: NT,
			Forever: MT,
			Manage: PT,
			Monthly: _T,
			Name: zT,
			Plan: OT,
			Price: DT,
			Recommendations: IT,
			Retry: RT,
			Save: YT,
			Subscribe: LT,
			Subscribed: FT,
			Success: BT,
			Unsubscribed: UT,
			Update: VT,
			Visit: HT,
			Yearly: qT,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% popust",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dana besplatno",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Link za prijavu je poslan na Vašu email adresu. Ako ne stigne za 3 minute provjerite spam folder.",
				Account: kT,
				"Account settings": "Podešavanje korisničkog računa",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Nakon što probni period istekne, izvršit će se naplata za plan koji ste izabrali. Uvijek možete otkazati pretplatu prije toga.",
				"Already a member?": "Već ste član?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: vT,
				"Back to Log in": "Natrag na prijavu",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Otkaži pretplatu",
				"Cancellation reason": "Razlog za otkazivanje",
				Change: wT,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: ST,
				"Choose a different plan": "Izaberi drugi plan",
				"Choose your newsletters": "Izaberi ",
				"Click here to retry": "",
				Close: CT,
				Comments: xT,
				Complimentary: ET,
				Confirm: TT,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: jT,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Obriši račun",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Nemate račun?",
				Edit: $T,
				Email: AT,
				"Email newsletter": "",
				"Email preference updated.": "Email podešavanja su sačuvana.",
				"Email preferences": "Email podešavanja",
				Emails: NT,
				"Emails disabled": "Isključeni email-ovi",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: MT,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Potražite pomoć",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Obavijesti me ako netko odgovori na moj komentar:",
				"Give feedback on this post": "Ostavite komentar na ovaj post",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Manje sadržaja kao što je ovaj",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: PT,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: _T,
				"More like this": "Više sadržaja kao što je ovaj",
				Name: zT,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Ne dobivate e-poštu?",
				"Now check your email!": "Provjerite Vaš email!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: OT,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: DT,
				"Re-enable emails": "Ponovo omogući email adrese",
				Recommendations: IT,
				"Renews at {{price}}.": "",
				Retry: RT,
				Save: YT,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Link za prijavu se šalje...",
				"Sending...": "Slanje...",
				"Show all": "",
				"Sign in": "Prijava",
				"Sign out": "",
				"Sign up": "Registracija",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Počni besplatnu probu {{amount}} dana",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Pošalji povratne informacije",
				Subscribe: LT,
				Subscribed: FT,
				Success: BT,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Uspješna odjava",
				"Thanks for the feedback!": "Hvala na povratnim informacijama!",
				"That didn't go to plan": "Nešto nije kako treba",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Ovaj sajt je samo za članove, kontaktirajte vlasnika kako biste dobili pristup.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Kliknite na link da biste završili registraciju. Ukoliko ne stigne za 3 minute provjerite spam folder!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Odjavite se sa svih email-ova",
				Unsubscribed: UT,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Odjavljivanjem sa email-ova nećete prekinuti Vašu pretplatu na {{title}}",
				Update: VT,
				"Update your preferences": "Izmijenite Vaše postavke",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: HT,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nismo uspjeli odjaviti email. Molimo Vas kontaktirajte vlasnika sajta.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: qT,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Uspješno ste se ponovo prijavili",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Ne primate e-poruke zato što ste nedavnu poruku označili kao nepoželjnu ili zato što se poruke nisu mogle isporučiti na adresu e-pošte koju ste naveli.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Vaš korisnički račun",
				"Your input helps shape what gets published.": "Vaš doprinos pomaže u oblikovanju onoga što se objavljuje.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		WT = "Pretplati se",
		DX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: WT,
			default: {
				"Email sent": "",
				"Now check your email!": "Provjeri svoj email",
				"Please enter a valid email address": "Unesi valjanu email adresu",
				"Something went wrong, please try again.": "Nešto je pošlo ukrivo, pokušaj ponovo",
				Subscribe: WT,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Kako bi dovršio registraciju klikni na potvrdni link u svoj inbox. Ako email ne stigne za 3 minute, provjeri spam folder",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		KT = "",
		JT = "",
		GT = "",
		QT = "",
		XT = "",
		ZT = "",
		ej = "",
		tj = "",
		nj = "",
		ij = "",
		oj = "",
		rj = "",
		aj = "",
		sj = "",
		lj = "",
		uj = "",
		cj = "",
		dj = "",
		IX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: KT,
			Cancel: JT,
			Comment: GT,
			Delete: QT,
			Discussion: XT,
			Edit: ZT,
			Edited: ej,
			Expertise: tj,
			Hide: nj,
			Name: ij,
			Neurosurgeon: oj,
			Reply: rj,
			Report: aj,
			Save: sj,
			Sending: lj,
			Sent: uj,
			Show: cj,
			Yesterday: dj,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: KT,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: JT,
				Comment: GT,
				"Complete your profile": "",
				Delete: QT,
				"Deleted member": "",
				Discussion: XT,
				Edit: ZT,
				"Edit this comment": "",
				Edited: ej,
				"Enter your name": "",
				Expertise: tj,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: nj,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: ij,
				Neurosurgeon: oj,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: rj,
				"Reply to comment": "",
				Report: aj,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: sj,
				Sending: lj,
				Sent: uj,
				Show: cj,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: dj,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		RX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Minden jót!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}} — Regisztráció",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}} — Email cím jóváhagyása",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}} — Feliratkozás jógáhagyása",
				"For your security, the link will expire in 24 hours time.": "Az Ön biztonsága érdekében a link 24 órán belül elévül",
				"Hey there,": "Üdvözöljük,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Ha nem Ön kezdeményezte a kérést, akkor nyugodtan hagyja figyelmen kívül ezt az üzenetet",
				"If you did not make this request, you can simply delete this message.": "Kérjük törölje ezt az üzenetet, ha nem Ön kezdeményezte a kérést",
				"Please confirm your email address with this link:": "Kérjük kattintson az alábbi linkre az email címe jóváhagyásáért:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}} — Biztonságos bejelentkezési link",
				"See you soon!": "Viszlát!",
				"Sent to {{email}}": "Elküldve ide: {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Bejelentkezés ide: {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Kattintson az alábbi linkre a regisztráció befejezéséhez és az automatikus bejelentkezéshez:",
				"Thank you for signing up to {{siteTitle}}!": "Köszönjük a regisztrációt!",
				"Thank you for subscribing to {{siteTitle}}!": "Köszönjük a feliratkozást!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Köszönjük a feliratkozást. Kérjük kattintson az alábbi linkre az automatikus bejelentkezéshez:",
				"This email address will not be used.": "Ezt az email címet nem fogjuk használni.",
				"Welcome back to {{siteTitle}}!": "Üdvözöljük!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Üdv újra! Kérjük használja az alábbi linket a biztonságos bejelentkezéshez:",
				"You can also copy & paste this URL into your browser:": "Használja az alábbi linket, ha problémája adódna a fentiekkel:",
				"You will not be signed up, and no account will be created for you.": "Nem fog bejelentkezni és nem készül saját fiókja.",
				"You will not be subscribed.": "Nem fog feliratkozni.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Csak egy kattintásra van attól, hogy feliratkozzon. Kérjük hagyja jóvá az email címét az alábbi linkkel:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		mj = "Fiók",
		pj = "Vissza",
		fj = "",
		hj = "",
		gj = "Bezár",
		yj = "Kommentek",
		bj = "",
		kj = "Jóváhgyás",
		vj = "Folytatás",
		wj = "",
		Sj = "Email",
		Cj = "Email-ek",
		xj = "",
		Ej = "Kezelés",
		Tj = "Havi",
		jj = "Név",
		$j = "",
		Aj = "Ár",
		Nj = "",
		Mj = "Újra",
		Pj = "Mentés",
		_j = "",
		zj = "",
		Oj = "",
		Dj = "",
		Ij = "",
		Rj = "",
		Yj = "Éves",
		YX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: mj,
			Back: pj,
			Change: fj,
			Choose: hj,
			Close: gj,
			Comments: yj,
			Complimentary: bj,
			Confirm: kj,
			Continue: vj,
			Edit: wj,
			Email: Sj,
			Emails: Cj,
			Forever: xj,
			Manage: Ej,
			Monthly: Tj,
			Name: jj,
			Plan: $j,
			Price: Aj,
			Recommendations: Nj,
			Retry: Mj,
			Save: Pj,
			Subscribe: _j,
			Subscribed: zj,
			Success: Oj,
			Unsubscribed: Dj,
			Update: Ij,
			Visit: Rj,
			Yearly: Yj,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% kedvezmény",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} nap ingyen",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "A bejelentkezéshez szükséges linket elküldtük a megadott email címre. Ha nem érkezne meg 3 percen belül, kérjük ellenőrizze a spam mappát!",
				Account: mj,
				"Account settings": "Fiók beállítások",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Az ingyenes próbaidőszak lejárta után a kiválasztott csomag normál díját fogjuk felszámolni. A feliratkozás bármikor ingyenesen lemondható a próbaidőszak alatt.",
				"Already a member?": "Már van fiókja?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: pj,
				"Back to Log in": "Vissza a bejelentkezéshez",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Feliratkozás megszűntetése",
				"Cancellation reason": "A megszűntetés oka",
				Change: fj,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: hj,
				"Choose a different plan": "Válasszon másik csomagot",
				"Choose your newsletters": "Válassza ki a hírleveleket",
				"Click here to retry": "",
				Close: gj,
				Comments: yj,
				Complimentary: bj,
				Confirm: kj,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: vj,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Fiók törlése",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Még nincs fiókja?",
				Edit: wj,
				Email: Sj,
				"Email newsletter": "",
				"Email preference updated.": "Email beállítások elmentve",
				"Email preferences": "Email beállítások",
				Emails: Cj,
				"Emails disabled": "Email-ek kikapcsolva",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: xj,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Kérjen segítséget",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Értesítést kérek ha valaki válaszol a kommentemre",
				"Give feedback on this post": "Hogy tetszett ez a cikk?",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Kevesebb ilyet",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: Ej,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: Tj,
				"More like this": "Több ilyet",
				Name: jj,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Nem érkeznek meg az email-ek?",
				"Now check your email!": "Ellenőrizze az postafiókját",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: $j,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: Aj,
				"Re-enable emails": "Email-ek aktiválása",
				Recommendations: Nj,
				"Renews at {{price}}.": "",
				Retry: Mj,
				Save: Pj,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Bejelenkezési link küldése...",
				"Sending...": "Küldés...",
				"Show all": "",
				"Sign in": "Bejelentkezés",
				"Sign out": "",
				"Sign up": "Regisztráció",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "{{amount}} napos próbaidőszak kezdése",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Visszajelzés küldése",
				Subscribe: _j,
				Subscribed: zj,
				Success: Oj,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Sikeres leiratkozás",
				"Thanks for the feedback!": "Köszönjük a visszajelzést",
				"That didn't go to plan": "Hiba történt",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "A website csak meghívóval látogatható. Meghívóért lépjen kapcsolatba az oldal tulajdonosával!",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "A regisztráció befejezéséhez kérjük kattintson az email-ben kapott linkre. Ha a link nem érkezne meg 3 percen belül kérjük ellenőrizze a spam mappát.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Leiratkozás minden email-ről",
				Unsubscribed: Dj,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Az email-ről történő leiratkozás nem szűnteti meg a fiókját",
				Update: Ij,
				"Update your preferences": "Beállítások mentése",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: Rj,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Ehhez az email-hez nem tartozik fiók. Kérjük lépjen kapcsolatba az oldal tulajdonosával.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: Yj,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Sikeres feliratkozás",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Azért nem kap email-t mert vagy spam-nek jelölt egy tőlünk kapott hírlevelet, vagy azért mert a megadott email cím nem tud üzeneteket fogadni.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Fiók",
				"Your input helps shape what gets published.": "A visszajelzése segít abban, hogy mit publikáljunk",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Lj = "",
		LX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: Lj,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: Lj,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Fj = "Anonim",
		Bj = "Batal",
		Uj = "Komentar",
		Vj = "Hapus",
		Hj = "Diskusi",
		qj = "Edit",
		Wj = "Diedit",
		Kj = "Keahlian",
		Jj = "Sembunyikan",
		Gj = "Nama",
		Qj = "Ahli Bedah Saraf",
		Xj = "Balas",
		Zj = "Laporkan",
		e$ = "Simpan",
		t$ = "Mengirim",
		n$ = "Terkirim",
		i$ = "Tampilkan",
		o$ = "Kemarin",
		FX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: Fj,
			Cancel: Bj,
			Comment: Uj,
			Delete: Vj,
			Discussion: Hj,
			Edit: qj,
			Edited: Wj,
			Expertise: Kj,
			Hide: Jj,
			Name: Gj,
			Neurosurgeon: Qj,
			Reply: Xj,
			Report: Zj,
			Save: e$,
			Sending: t$,
			Sent: n$,
			Show: i$,
			Yesterday: o$,
			default: {
				"{{amount}} characters left": "{{amount}} karakter tersisa",
				"{{amount}} comments": "{{amount}} komentar",
				"{{amount}} days ago": "{{amount}} hari yang lalu",
				"{{amount}} hours ago": "{{amount}} jam yang lalu",
				"{{amount}} minutes ago": "{{amount}} menit yang lalu",
				"{{amount}} months ago": "{{amount}} bulan yang lalu",
				"{{amount}} seconds ago": "{{amount}} detik yang lalu",
				"{{amount}} weeks ago": "{{amount}} minggu yang lalu",
				"{{amount}} years ago": "{{amount}} tahun yang lalu",
				"1 comment": "1 komentar",
				"Add comment": "Tambahkan komentar",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Tambahkan konteks pada komentar Anda, bagikan nama dan keahlian Anda untuk mendorong diskusi yang sehat.",
				"Add reply": "Tambahkan balasan",
				"Already a member?": "Sudah menjadi anggota?",
				Anonymous: Fj,
				"Become a member of {{publication}} to start commenting.": "Jadilah anggota di {{publication}} untuk mulai berkomentar.",
				"Become a paid member of {{publication}} to start commenting.": "Jadilah anggota berbayar di {{publication}} untuk mulai berkomentar.",
				Cancel: Bj,
				Comment: Uj,
				"Complete your profile": "Lengkapi profil Anda",
				Delete: Vj,
				"Deleted member": "Anggota dihapus",
				Discussion: Hj,
				Edit: qj,
				"Edit this comment": "Edit komentar ini",
				Edited: Wj,
				"Enter your name": "Masukkan nama Anda",
				Expertise: Kj,
				"Founder @ Acme Inc": "Founder @ Acme Inc",
				"Full-time parent": "Orang tua penuh waktu",
				"Head of Marketing at Acme, Inc": "Kepala Pemasaran di Acme, Inc",
				Hide: Jj,
				"Hide comment": "Sembunyikan komentar",
				"Jamie Larson": "Jamie Larson",
				"Join the discussion": "Bergabung dalam diskusi",
				"Just now": "Baru saja",
				"Local resident": "Penduduk lokal",
				"Member discussion": "Diskusi anggota",
				Name: Gj,
				Neurosurgeon: Qj,
				"One day ago": "Satu hari yang lalu",
				"One hour ago": "Satu jam yang lalu",
				"One minute ago": "Satu menit yang lalu",
				"One month ago": "Satu bulan yang lalu",
				"One week ago": "Satu minggu yang lalu",
				"One year ago": "Satu tahun yang lalu",
				Reply: Xj,
				"Reply to comment": "Balas komentar",
				Report: Zj,
				"Report comment": "Laporkan komentar",
				"Report this comment": "Laporkan komentar ini",
				"Report this comment?": "Laporkan komentar ini?",
				Save: e$,
				Sending: t$,
				Sent: n$,
				Show: i$,
				"Show {{amount}} more replies": "Tampilkan {{amount}} balasan lainnya",
				"Show {{amount}} previous comments": "Tampilkan {{amount}} komentar sebelumnya",
				"Show 1 more reply": "Tampilkan 1 balasan lainnya",
				"Show 1 previous comment": "Tampilkan 1 komentar sebelumnya",
				"Show comment": "Tampilkan komentar",
				"Sign in": "Masuk",
				"Sign up now": "Daftar sekarang",
				"Start the conversation": "Mulai percakapan",
				"This comment has been hidden.": "Komentar ini telah disembunyikan.",
				"This comment has been removed.": "Komentar ini telah dihapus.",
				"Upgrade now": "Tingkatkan sekarang",
				Yesterday: o$,
				"You want to report this comment?": "Anda ingin melaporkan komentar ini?",
				"Your request will be sent to the owner of this site.": "Permintaan Anda akan dikirimkan kepada pemilik situs ini."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		BX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Semoga sukses!",
				"Complete signup for {{siteTitle}}!": "Selesaikan pendaftaran pada {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Selesaikan pendaftaran Anda ke {{siteTitle}}!",
				"Confirm email address": "Konfirmasi alamat email",
				"Confirm signup": "Konfirmasi pendaftaran",
				"Confirm your email address": "Konfirmasi alamat email Anda",
				"Confirm your email update for {{siteTitle}}!": "Konfirmasikan pembaruan email Anda pada {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Konfirmasikan langganan Anda ke {{siteTitle}}!",
				"For your security, the link will expire in 24 hours time.": "Demi keamanan Anda, tautan akan kedaluwarsa dalam waktu 24 jam.",
				"Hey there,": "Hei yang di sana,",
				"Hey there!": "Hei yang di sana!",
				"If you did not make this request, you can safely ignore this email.": "Jika Anda tidak mengajukan permintaan ini, Anda dapat dengan aman mengabaikan email ini.",
				"If you did not make this request, you can simply delete this message.": "Jika Anda tidak mengajukan permintaan ini, Anda dapat menghapus pesan ini.",
				"Please confirm your email address with this link:": "Harap konfirmasi alamat email Anda dengan tautan ini:",
				"Secure sign in link for {{siteTitle}}": "Tautan masuk yang aman untuk {{siteTitle}}",
				"See you soon!": "Sampai jumpa lagi!",
				"Sent to {{email}}": "Dikirim ke {{email}}",
				"Sign in": "Masuk",
				"Sign in to {{siteTitle}}": "Masuk ke {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Ketuk tautan di bawah ini untuk menyelesaikan proses pendaftaran pada {{siteTitle}}, dan masuk secara otomatis",
				"Thank you for signing up to {{siteTitle}}!": "Terima kasih telah mendaftar ke {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Terima kasih telah berlangganan ke {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Terima kasih telah berlangganan ke {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Terima kasih telah berlangganan ke {{siteTitle}}. Ketuk tautan di bawah ini untuk masuk secara otomatis:",
				"This email address will not be used.": "Alamat email ini tidak akan digunakan.",
				"Welcome back to {{siteTitle}}!": "Selamat datang kembali di {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Selamat datang kembali! Gunakan tautan ini untuk masuk dengan aman ke akun {{siteTitle}} Anda:",
				"You can also copy & paste this URL into your browser:": "Anda juga dapat menyalin & menempelkan URL ini ke browser Anda:",
				"You will not be signed up, and no account will be created for you.": "Anda tidak akan terdaftar, dan tidak akan ada akun yang dibuat untuk Anda.",
				"You will not be subscribed.": "Anda tidak akan berlangganan.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Anda hanya perlu satu ketukan untuk berlangganan ke {{siteTitle}} — harap konfirmasikan alamat email Anda dengan tautan ini:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Anda hanya perlu satu ketukan untuk berlangganan ke {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		r$ = "Akun",
		a$ = "Kembali",
		s$ = "Ubah",
		l$ = "Pilih",
		u$ = "Tutup",
		c$ = "Komentar",
		d$ = "Pemberian gratis",
		m$ = "Konfirmasi",
		p$ = "Lanjutkan",
		f$ = "Edit",
		h$ = "Email",
		g$ = "Email",
		y$ = "Selamanya",
		b$ = "Kelola",
		k$ = "Bulanan",
		v$ = "Nama",
		w$ = "Paket",
		S$ = "Harga",
		C$ = "Rekomendasi",
		x$ = "Coba lagi",
		E$ = "Simpan",
		T$ = "Berlangganan",
		j$ = "Telah berlangganan",
		$$ = "Berhasil",
		A$ = "Tidak berlangganan",
		N$ = "Perbarui",
		M$ = "Kunjungi",
		P$ = "Tahunan",
		UX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: r$,
			Back: a$,
			Change: s$,
			Choose: l$,
			Close: u$,
			Comments: c$,
			Complimentary: d$,
			Confirm: m$,
			Continue: p$,
			Edit: f$,
			Email: h$,
			Emails: g$,
			Forever: y$,
			Manage: b$,
			Monthly: k$,
			Name: v$,
			Plan: w$,
			Price: S$,
			Recommendations: C$,
			Retry: x$,
			Save: E$,
			Subscribe: T$,
			Subscribed: j$,
			Success: $$,
			Unsubscribed: A$,
			Update: N$,
			Visit: M$,
			Yearly: P$,
			default: {
				"{{amount}} days free": "Gratis {{amount}} hari",
				"{{amount}} off": "Diskon {{amount}}",
				"{{amount}} off for first {{number}} months.": "Diskon {{amount}} untuk {{number}} bulan pertama.",
				"{{amount}} off for first {{period}}.": "Diskon {{amount}} untuk {{period}} pertama.",
				"{{amount}} off forever.": "Diskon {{amount}} selamanya.",
				"{{discount}}% discount": "Diskon {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} tidak akan menerima buletin {{newsletterName}} lagi.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} tidak akan lagi menerima email ketika seseorang membalas komentar Anda.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} tidak akan menerima buletin ini lagi.",
				"{{trialDays}} days free": "Gratis {{trialDays}} hari",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Tautan masuk telah dikirimkan ke kotak masuk Anda. Jika tidak diterima dalam waktu 3 menit, pastikan untuk memeriksa folder spam Anda.",
				Account: r$,
				"Account settings": "Pengaturan akun",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Setelah percobaan gratis berakhir, Anda akan dikenai biaya harga normal untuk tingkatan yang Anda pilih. Anda selalu dapat membatalkannya sebelum itu.",
				"Already a member?": "Sudah menjadi anggota?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Terjadi kesalahan tak terduga. Harap coba lagi atau <a>hubungi layanan dukungan</a> jika kesalahan tetap berlanjut.",
				Back: a$,
				"Back to Log in": "Kembali ke Masuk",
				"Billing info": "Info pembayaran",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Batalkan kapan saja.",
				"Cancel subscription": "Batalkan langganan",
				"Cancellation reason": "Alasan pembatalan",
				Change: s$,
				"Check spam & promotions folders": "Periksa folder spam & promosi",
				"Check with your mail provider": "Hubungi penyedia layanan email Anda",
				Choose: l$,
				"Choose a different plan": "Pilih paket yang berbeda",
				"Choose your newsletters": "Pilih buletin Anda",
				"Click here to retry": "Klik di sini untuk mencoba lagi",
				Close: u$,
				Comments: c$,
				Complimentary: d$,
				Confirm: m$,
				"Confirm cancellation": "Konfirmasi pembatalan",
				"Confirm subscription": "Konfirmasi langganan",
				"Contact support": "Hubungi layanan dukungan",
				Continue: p$,
				"Continue subscription": "Lanjutkan berlangganan",
				"Could not sign in. Login link expired.": "Tidak dapat masuk. Tautan untuk masuk telah kedaluwarsa.",
				"Could not update email! Invalid link.": "Tidak dapat memperbarui email! Tautan tidak valid.",
				"Create a new contact": "Buat kontak baru",
				"Current plan": "Paket saat ini",
				"Delete account": "Hapus akun",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Tidak bermaksud melakukan ini? Kelola preferensi Anda <button>di sini</button>.",
				"Don't have an account?": "Belum punya akun?",
				Edit: f$,
				Email: h$,
				"Email newsletter": "Buletin email",
				"Email preference updated.": "Preferensi email diperbarui.",
				"Email preferences": "Preferensi email.",
				Emails: g$,
				"Emails disabled": "Email dinonaktifkan",
				"Ends {{offerEndDate}}": "Berakhir {{offerEndDate}}",
				Error: "Eror",
				"Expires {{expiryDate}}": "kedaluwarsa {{expiryDate}}",
				Forever: y$,
				"Free Trial – Ends {{trialEnd}}": "Percobaan Gratis – Berakhir {{trialEnd}}",
				"Get help": "Dapatkan bantuan",
				"Get in touch for help": "Hubungi untuk mendapatkan bantuan",
				"Get notified when someone replies to your comment": "Dapatkan pemberitahuan ketika seseorang menjawab komentar Anda",
				"Give feedback on this post": "Berikan masukan pada postingan ini",
				"Help! I'm not receiving emails": "Tolong! Saya tidak menerima email",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Jika buletin ditandai sebagai spam, email secara otomatis dinonaktifkan untuk alamat tersebut guna memastikan Anda tidak lagi menerima pesan yang tidak diinginkan.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Jika keluhan spam tersebut tidak disengaja, atau Anda ingin mulai menerima email lagi, Anda dapat berlangganan kembali untuk menerima email dengan mengklik tombol di layar sebelumnya.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Jika Anda membatalkan langganan sekarang, Anda akan tetap memiliki akses hingga {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Jika Anda memiliki akun email perusahaan atau pemerintah, hubungi departemen IT Anda dan mintalah mereka untuk mengizinkan pengiriman email dari {{senderEmail}} diterima.",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Jika Anda ingin mulai menerima email lagi, langkah-langkah terbaik selanjutnya adalah memeriksa alamat email Anda pada data yang tersimpan untuk memastikan tidak ada masalah, kemudian klik tombol 'berlangganan kembali' pada layar sebelumnya.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Jika Anda tidak menerima buletin email langganan Anda, berikut adalah beberapa hal yang perlu diperiksa.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Jika Anda telah melakukan semua pemeriksaan tersebut dan masih belum menerima email, Anda dapat menghubungi kami melalui kontak {{supportAddress}} untuk mendapatkan bantuan.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Jika terjadi kegagalan permanen saat mencoba mengirim buletin, email akan dinonaktifkan pada akun tersebut.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Pada klien email Anda, tambahkan {{senderEmail}} ke daftar kontak Anda. Hal ini akan memberikan sinyal kepada layanan email Anda bahwa email yang dikirim dari alamat ini harus dipercaya.",
				"Less like this": "Kurangi yang seperti ini",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Pastikan email tidak berakhir di kotak masuk Spam atau Promosi Anda secara tidak sengaja. Jika ya, klik "Tandai sebagai bukan spam" dan/atau "Pindahkan ke kotak masuk".',
				Manage: b$,
				"Memberships unavailable, contact the owner for access.": "Keanggotaan tidak tersedia, hubungi pemilik situs untuk mendapatkan akses.",
				Monthly: k$,
				"More like this": "Lebih banyak yang seperti ini",
				Name: v$,
				"Need more help? Contact support": "Perlu bantuan lebih lanjut? Hubungi layanan dukungan",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Buletin dapat dinonaktifkan pada akun Anda dengan dua alasan: Email sebelumnya ditandai sebagai spam, atau percobaan pengiriman email menghasilkan kegagalan permanen (bounce).",
				"Not receiving emails?": "Tidak menerima email?",
				"Now check your email!": "Sekarang periksa email Anda!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Setelah berlangganan kembali, jika Anda masih tidak melihat email di kotak masuk Anda, periksa folder spam. Beberapa penyedia layanan kotak masuk menyimpan catatan keluhan spam sebelumnya dan akan terus menandai email tersebut. Jika hal ini terjadi, tandai buletin terbaru sebagai 'Bukan spam' untuk memindahkannya kembali ke kotak masuk utama Anda.",
				"Permanent failure (bounce)": "Kegagalan permanen (bounce)",
				Plan: w$,
				"Plan checkout was cancelled.": "Pembayaran paket dibatalkan.",
				"Plan upgrade was cancelled.": "Peningkatan paket dibatalkan.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "Harap hubungi {{supportAddress}} untuk mengubah langganan gratis Anda.",
				"Please fill in required fields": "Harap isi kolom yang wajib diisi",
				Price: S$,
				"Re-enable emails": "Aktifkan kembali email",
				Recommendations: C$,
				"Renews at {{price}}.": "Perpanjang dengan harga {{price}}",
				Retry: x$,
				Save: E$,
				"Send an email and say hi!": "Kirimkan email dan ucapan hai!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Kirim email ke {{senderEmail}} dan ucapan halo. Hal ini juga dapat membantu memberi sinyal kepada penyedia layanan email Anda bahwa email yang dikirim ke dan dari alamat ini harus dipercaya.",
				"Sending login link...": "Mengirim tautan masuk...",
				"Sending...": "Mengirim...",
				"Show all": "Tampilkan semua",
				"Sign in": "Masuk",
				"Sign out": "Keluar",
				"Sign up": "Daftar",
				"Signup error: Invalid link": "Kesalahan pendaftaran: Tautan tidak valid",
				"Sorry, that didn’t work.": "Maaf, itu tidak berhasil.",
				"Spam complaints": "Keluhan spam",
				"Start {{amount}}-day free trial": "Mulai percobaan gratis selama {{amount}} hari",
				"Starting {{startDate}}": "Dimulai pada {{startDate}}.",
				"Starting today": "Dimulai hari ini",
				"Submit feedback": "Kirim masukan",
				Subscribe: T$,
				Subscribed: j$,
				Success: $$,
				"Success! Check your email for magic link to sign-in.": "Berhasil! Periksa email Anda untuk mendapatkan tautan ajaib untuk masuk.",
				"Success! Your account is fully activated, you now have access to all content.": "Berhasil! Akun Anda telah diaktifkan sepenuhnya, sekarang Anda memiliki akses ke semua konten.",
				"Success! Your email is updated.": "Berhasil! Email Anda telah diperbarui.",
				"Successfully unsubscribed": "Berhasil berhenti berlangganan",
				"Thanks for the feedback!": "Terima kasih atas masukannya!",
				"That didn't go to plan": "Itu tidak berjalan sesuai rencana",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Alamat email Anda yang kami miliki adalah {{memberEmail}} — jika itu tidak benar, Anda dapat memperbarui di <button>area pengaturan akun</button> Anda.",
				"There was a problem submitting your feedback. Please try again a little later.": "Terjadi masalah saat mengirimkan masukan Anda. Coba lagi nanti.",
				"This site is invite-only, contact the owner for access.": "Situs ini hanya untuk yang diundang, hubungi pemiliknya untuk mendapatkan akses.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Untuk menyelesaikan pendaftaran, klik tautan konfirmasi di kotak masuk Anda. Jika tidak diterima dalam waktu 3 menit, pastikan untuk memeriksa folder spam Anda!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Coba gratis selama {{amount}} hari, kemudian {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Buka akses ke semua buletin dengan menjadi pelanggan berbayar.",
				"Unsubscribe from all emails": "Berhenti berlangganan dari semua email",
				Unsubscribed: A$,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Berhenti berlangganan dari email tidak akan membatalkan langganan berbayar Anda ke {{title}}",
				Update: N$,
				"Update your preferences": "Perbarui preferensi Anda",
				"Verify your email address is correct": "Verifikasi bahwa alamat email Anda benar",
				"View plans": "Lihat paket",
				Visit: M$,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Kami tidak dapat menghentikan langganan Anda karena alamat email tidak ditemukan. Harap hubungi pemilik situs.",
				"Welcome back, {{name}}!": "Selamat datang kembali, {{name}}!",
				"Welcome back!": "Selamat datang kembali!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Ketika sebuah kotak masuk gagal menerima sebuah email, hal tersebut umumnya disebut sebagai bounce. Dalam banyak kasus, ini bisa bersifat sementara. Namun, dalam beberapa kasus, email yang terbounce dapat dikembalikan sebagai kegagalan permanen ketika alamat email yang dituju tidak valid atau tidak ada.",
				"Why has my email been disabled?": "Mengapa email saya dinonaktifkan?",
				Yearly: P$,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Saat ini Anda memiliki keanggotaan gratis, tingkatkan ke langganan berbayar untuk akses penuh",
				"You have been successfully resubscribed": "Anda telah berhasil berlangganan kembali",
				"You're currently not receiving emails": "Anda saat ini tidak menerima email.",
				"You're not receiving emails": "Anda tidak menerima email.",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Anda tidak menerima email karena Anda telah menandai pesan terbaru sebagai spam, atau karena pesan tidak dapat dikirimkan ke alamat email yang Anda berikan.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Anda telah berhasil masuk.",
				"You've successfully subscribed to": "Anda telah berhasil berlangganan ke",
				"Your account": "Akun Anda",
				"Your input helps shape what gets published.": "Masukan Anda membantu membentuk apa yang dipublikasikan.",
				"Your subscription will expire on {{expiryDate}}": "Langganan Anda akan berakhir pada {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Langganan Anda akan diperpanjang pada {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Langganan Anda akan dimulai pada {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		_$ = "Berlangganan",
		VX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: _$,
			default: {
				"Email sent": "Email terkirim",
				"Now check your email!": "Sekarang periksa email Anda!",
				"Please enter a valid email address": "Harap masukkan alamat email yang valid",
				"Something went wrong, please try again.": "Ada kesalahan, harap coba lagi.",
				Subscribe: _$,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Untuk menyelesaikan pendaftaran, klik tautan konfirmasi di kotak masuk Anda. Jika tidak diterima dalam waktu 3 menit, pastikan untuk memeriksa folder spam Anda!",
				"Your email address": "Alamat email Anda"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		z$ = "",
		O$ = "",
		D$ = "",
		I$ = "",
		R$ = "",
		Y$ = "",
		L$ = "",
		F$ = "",
		B$ = "",
		U$ = "",
		V$ = "",
		H$ = "",
		q$ = "",
		W$ = "",
		K$ = "",
		J$ = "",
		G$ = "",
		Q$ = "",
		HX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: z$,
			Cancel: O$,
			Comment: D$,
			Delete: I$,
			Discussion: R$,
			Edit: Y$,
			Edited: L$,
			Expertise: F$,
			Hide: B$,
			Name: U$,
			Neurosurgeon: V$,
			Reply: H$,
			Report: q$,
			Save: W$,
			Sending: K$,
			Sent: J$,
			Show: G$,
			Yesterday: Q$,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: z$,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: O$,
				Comment: D$,
				"Complete your profile": "",
				Delete: I$,
				"Deleted member": "",
				Discussion: R$,
				Edit: Y$,
				"Edit this comment": "",
				Edited: L$,
				"Enter your name": "",
				Expertise: F$,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: B$,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: U$,
				Neurosurgeon: V$,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: H$,
				"Reply to comment": "",
				Report: q$,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: W$,
				Sending: K$,
				Sent: J$,
				Show: G$,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: Q$,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		qX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Bestu kveðjur!",
				"Complete signup for {{siteTitle}}!": "Ljúka nýskráningu fyrir {{siteTitle}}",
				"Complete your sign up to {{siteTitle}}!": "Ljúktu við nýskráningu þína fyrir {{siteTitle}}!",
				"Confirm email address": "Staðfestið netfang",
				"Confirm signup": "Staðfestið nýskráningu",
				"Confirm your email address": "Staðfestu netfangið þitt",
				"Confirm your email update for {{siteTitle}}!": "Staðfestið breytingu á netfangi fyrir {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Staðfestu áskrift þína að {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Í öryggisskyni verður hlekkurinn óvirkur eftir 24 klukkustundir",
				"Hey there,": "Góðan dag,",
				"Hey there!": "Góðan daginn!",
				"If you did not make this request, you can safely ignore this email.": "Ef þú stendur ekki að baki þessari beiðni geturðu leitt þennan tölvupóst hjá þér",
				"If you did not make this request, you can simply delete this message.": "Ef þú stendur ekki að baki þessari beiðni geturðu einfaldlega eytt þessum skilaboðum",
				"Please confirm your email address with this link:": "Vinsamlegast staðfestið netfangið með þessum hlekki",
				"Secure sign in link for {{siteTitle}}": "Innskráningarhlekkur fyrir {{siteTitle}}",
				"See you soon!": "Sjáumst von bráðar!",
				"Sent to {{email}}": "Senda til {{email}}",
				"Sign in": "Innskráning",
				"Sign in to {{siteTitle}}": "Innskráning á {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Smellið á hlekkinn að neðan til að ganga frá skráningarferlingu fyrir {{siteTitle}}, og til að virkja sjálfvirka innskráningu:",
				"Thank you for signing up to {{siteTitle}}!": "Takk fyrir nýskráningu á {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Takk fyrir áskriftina að {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Takk fyrir áskriftina að {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Takk fyrir að gerast áskrifandi að {{siteTitle}}. Smellið á hlekkinn að neðan til að virkja sjálfvirka innskráningu:",
				"This email address will not be used.": "Þetta netfang verður ekki tekið til notkunar.",
				"Welcome back to {{siteTitle}}!": "Velkomin/n aftur á {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Velkomin/n aftur! Notið þennan hlekk fyrir örugga innskráningu á {{siteTitle}}",
				"You can also copy & paste this URL into your browser:": "Þú getur einnig afritað þessa vefslóð og sett hana í vafrann þinn:",
				"You will not be signed up, and no account will be created for you.": "Þú verður ekki nýskráður, og enginn reikningur verður búinn til í þínu nafni.",
				"You will not be subscribed.": "Þú verður ekki áskrifandi.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Þú ert einum smelli frá áskrift að {{siteTitle}} — vinsamlegast staðfestið netfang með þessum hlekki:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Þú ert einum smelli frá áskrift að {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		X$ = "Aðgangur",
		Z$ = "Til baka",
		eA = "Breyta",
		tA = "Velja",
		nA = "Loka",
		iA = "Ummæli",
		oA = "Í kaupbæti",
		rA = "Staðfesta",
		aA = "Áfram",
		sA = "Breyta",
		lA = "Netfang",
		uA = "Netföng",
		cA = "Að eilífu",
		dA = "Stjórna",
		mA = "Mánaðarlega",
		pA = "Nafn",
		fA = "Áskriftarleið",
		hA = "Verð",
		gA = "",
		yA = "Reyna aftur",
		bA = "Vista",
		kA = "Áskrift",
		vA = "Í áskrift",
		wA = "Þetta heppnaðist",
		SA = "Ekki í áskrift",
		CA = "Uppfæra",
		xA = "",
		EA = "Árlega",
		WX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: X$,
			Back: Z$,
			Change: eA,
			Choose: tA,
			Close: nA,
			Comments: iA,
			Complimentary: oA,
			Confirm: rA,
			Continue: aA,
			Edit: sA,
			Email: lA,
			Emails: uA,
			Forever: cA,
			Manage: dA,
			Monthly: mA,
			Name: pA,
			Plan: fA,
			Price: hA,
			Recommendations: gA,
			Retry: yA,
			Save: bA,
			Subscribe: kA,
			Subscribed: vA,
			Success: wA,
			Unsubscribed: SA,
			Update: CA,
			Visit: xA,
			Yearly: EA,
			default: {
				"{{amount}} days free": "{{amount}} dagar án endurgjalds",
				"{{amount}} off": "{{amount}} afsláttur",
				"{{amount}} off for first {{number}} months.": "{{amount}} afsláttur fyrstu {{number}} mánuðina.",
				"{{amount}} off for first {{period}}.": "{{amount}} afsláttur fyrsta {{period}}",
				"{{amount}} off forever.": "{{amount}} afsláttur um ókomna tíð.",
				"{{discount}}% discount": "{{discount}}% afsláttur",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} fær framvegis ekki fréttabréf frá {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} fær framvegis ekki tölvupóst þegar einhver svarar ummælum þínum.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} fær framvegis ekki þetta fréttabréf.",
				"{{trialDays}} days free": "dagar án endurgjalds",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Innskráningarhlekkur hefur verið sendur á netfangið þitt. Ef hann er ekki kominn innan 3ja mínútna skaltu athuga spam-möppuna.",
				Account: X$,
				"Account settings": "Aðgangsstillingar",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Þegar prufutímabili lýkur muntu greiða venjulegt verð í samræmi við áskriftarleiðina sem þú valdir. Þú getur ávallt sagt upp áskriftinni áður en til þess kemur.",
				"Already a member?": "Ertu nú þegar með áskrift?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Óvænt villa kom upp. Vinsamlegast reynið aftur eða <a>hafið samband</a> ef villan reynist þrálát.",
				Back: Z$,
				"Back to Log in": "Aftur til innskráningar",
				"Billing info": "Greiðsluupplýsingar",
				"Black Friday": "Svartur föstudagur",
				"Cancel anytime.": "Segðu upp hvenær sem er",
				"Cancel subscription": "Segja upp áskrift",
				"Cancellation reason": "Ástæða uppsagnar",
				Change: eA,
				"Check spam & promotions folders": "Athugið ruslpósta- eða kynningarefnismöppur",
				"Check with your mail provider": "Hafið samband við þjónustuveitanda netfangsins",
				Choose: tA,
				"Choose a different plan": "Velja aðra áskriftarleið",
				"Choose your newsletters": "Velja fréttabréf",
				"Click here to retry": "Smellið hér til að reyna aftur",
				Close: nA,
				Comments: iA,
				Complimentary: oA,
				Confirm: rA,
				"Confirm cancellation": "Staðfesta uppsögn",
				"Confirm subscription": "Staðfesta áskrift",
				"Contact support": "Hafa samband við þjónustuver",
				Continue: aA,
				"Continue subscription": "Halda áfram í áskrift",
				"Could not sign in. Login link expired.": "Innskráning mistókst. Hlekkurinn varð óvirkur.",
				"Could not update email! Invalid link.": "Breyting á netfangi mistókst! Ógildur hlekkur.",
				"Create a new contact": "Skrá nýjan tengilið",
				"Current plan": "Núgildandi áskriftarleið",
				"Delete account": "Eyða aðgangi",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Var þetta ætlunin? Breyttu stillingunum <button>hér</button>.",
				"Don't have an account?": "Ertu ekki með aðgang?",
				Edit: sA,
				Email: lA,
				"Email newsletter": "Fréttabréf",
				"Email preference updated.": "Stillingum netfangsins breytt",
				"Email preferences": "Stillingar netfangs",
				Emails: uA,
				"Emails disabled": "Netföng gerð óvirk",
				"Ends {{offerEndDate}}": "Lýkur {{offerEndDate}}",
				Error: "Villa",
				"Expires {{expiryDate}}": "Rennur út {{expiryDate}}",
				Forever: cA,
				"Free Trial – Ends {{trialEnd}}": "Ókeypis prufutímabil – Lýkur {{trialEnd}}",
				"Get help": "Fá aðstoð",
				"Get in touch for help": "Hafðu samband til að fá aðstoð",
				"Get notified when someone replies to your comment": "Fá tilkynningu þegar einhver svarar ummælum þínum",
				"Give feedback on this post": "Gefðu þessari færslu endurgjöf",
				"Help! I'm not receiving emails": "Hjálp! Ég fæ ekki tölvupósta",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Ef fréttabréf er flokkað sem ruslpóstur er lokað fyrir tölvupósta á netfangið til að tryggja að þú fáir ekki þarflaus skilaboð.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Ef kvörtunin um ruslpóstinn var óviljandi eða ef þú vilt fá tölvupósta að nýju, geturðu endurvakið áskriftina með því að smella á hnappinn sem birtist í glugganum á undan.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Ef þú segir upp áskriftinni núna muntu áfram hafa aðgang fram til {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Ef þú ert með aðgang í nafni fyrirtækis eða ríkisstofnunar geturðu haft samband við upplýsingatæknideildina og beðið hana um að leyfa viðtöku tölvupósta frá {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Ef þú vilt fá tölvupósta að nýju er nærtækast að athuga hvort netfangið sé í lagi og smella síðan á endurnýja áskrift í glugganum á undan.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Ef þú færð ekki fréttabréfið sem þú ert í áskrift að þá eru hér nokkur atriði sem hægt er að skoða:",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Ef þú hefur skoðað öll þess atriði og færð enn ekki tölvupósta geturðu haft samband við {{supportAddress}}",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Ef varanleg villa kemur upp við sendingu tölvupósta verða þeir gerðir óvirkir.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Bættu {{senderEmail}} við listann yfir tengiliði í tölvupósthólfinu. Það gefur þjónustuveitandanum merki um að tölvupóstum frá þessu netfangi sé treystandi.",
				"Less like this": "Minna af þessu tagi",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Gakktu úr skugga um að tölvupóstanir endi ekki í möppum fyrir ruslpósta eða kynningarefni. Ef svo er skaltu smella á "Mark as not spam" og/eða "Move to inbox"',
				Manage: dA,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: mA,
				"More like this": "Meira af þessu tagi",
				Name: pA,
				"Need more help? Contact support": "Þarftu meiri aðstoð? Hafðu samband við þjónustuverið",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Færðu ekki tölvupósta?",
				"Now check your email!": "Athugaðu nú tölvupósthólfið þitt!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Ef þú sérð ekki tölvupósta eftir að hafa endurvakið áskrift, athugaðu spam-möppuna. Enn kunna að vera skráðar kvartanir um ruslpóst og tölvupóstarnir því flokkaður á þann veg. Ef svo er skaltu merkja síðasta fréttabréf sem 'Not spam' og færa yfir í aðalpósthólfið.",
				"Permanent failure (bounce)": "Varanleg villa",
				Plan: fA,
				"Plan checkout was cancelled.": "Hætt var við kaup á áskrift",
				"Plan upgrade was cancelled.": "Hætt var við breytingu á áskriftarleið",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "Vinsamlegast hafið samband við {{supportAddress}} til að breyta kaupbætisáskrift.",
				"Please fill in required fields": "Vinsamlegast fyllið í nauðsynlega reiti",
				Price: hA,
				"Re-enable emails": "Fá tölvupósta að nýju",
				Recommendations: gA,
				"Renews at {{price}}.": "Endurnýjast á verðinu {{price}}",
				Retry: yA,
				Save: bA,
				"Send an email and say hi!": "Sendu tölvupóst og segðu hæ!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Sendu tölvupóst á {{senderEmail}} og segðu halló. Þetta gefur einnig tölvupóstþjónustunni merki um að póstum til og frá þessu netfangi sé treystandi.",
				"Sending login link...": "Sendi innskráningarhlekk",
				"Sending...": "Sending í vinnslu",
				"Show all": "",
				"Sign in": "Innskráning",
				"Sign out": "Útskráning",
				"Sign up": "Nýskráning",
				"Signup error: Invalid link": "Villa við nýskráningu: Ógildur hlekkur",
				"Sorry, that didn’t work.": "Þetta virkaði því miður ekki.",
				"Spam complaints": "Kvartanir um ruslpóst",
				"Start {{amount}}-day free trial": "Hefja {{amount}}-daga prufutímabil",
				"Starting {{startDate}}": "Frá og með {{startDate}}",
				"Starting today": "Frá og með deginum í dag",
				"Submit feedback": "Gefa endurgjöf",
				Subscribe: kA,
				Subscribed: vA,
				Success: wA,
				"Success! Check your email for magic link to sign-in.": "Þetta heppnaðist! Athugaðu tölvupósthólfið til að finna hlekk til innskráningar.",
				"Success! Your account is fully activated, you now have access to all content.": "Þetta heppnaðist! Aðgangurinn þinn er virkur, þú hefur nú aðgang að öllu efni.",
				"Success! Your email is updated.": "Þetta heppnaðist! Breyting á netfangi hefur tekið gildi.",
				"Successfully unsubscribed": "Uppsögn heppnaðist",
				"Thanks for the feedback!": "Takk fyrir endurgjöfina!",
				"That didn't go to plan": "Þetta fór ekki samkvæmt áætlun",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Netfangið sem þú ert skráður fyrir er {{memberEmail}} — ef það er rangt geturðu breytt því í <button>aðgangsstillingum</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Villa kom upp við sendingu athugasemdar. Vinsamlegast reynið aftur örlítið síðar.",
				"This site is invite-only, contact the owner for access.": "Aðgangur krefst boðsmiða, hafið samband við eiganda síðunnar til að fá aðgang.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Til að ljúka nýskráningu skaltu smella á staðfestingarhlekkinn sem var sendur á netfangið þitt. Ef hann er ekki kominn innan 3 mínútna skaltu athuga spam-möppuna.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prófaðu í {{amount}} daga án endurgjalds og síðan fyrir {{originalPrice}}",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Fáðu aðgang að öllum fréttabréfum með því að gerast áskrifandi.",
				"Unsubscribe from all emails": "Segja upp öllum tölvupóstum",
				Unsubscribed: SA,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Uppsögn tölvupósta felur ekki í sér uppsögn áskriftar að {{title}}",
				Update: CA,
				"Update your preferences": "Breyta vali",
				"Verify your email address is correct": "Gakktu úr skugga um að netfangið sé rétt",
				"View plans": "Skoða áskriftarleiðir",
				Visit: xA,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Uppsögn mistókst vegna þess að netfangið fannst ekki. Hafðu samband við eiganda síðunnar.",
				"Welcome back, {{name}}!": "Velkominn aftur, {{name}}!",
				"Welcome back!": "Velkominn aftur!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Þegar netfang getur ekki tekið við tölvupósti er það oftast tímabundin villa en í sumum tilfellum, þegar netfangið er ógilt eða ekki til staðar, er villan varanleg.",
				"Why has my email been disabled?": "Hvers vegna var netfangið mitt gert óvirkt?",
				Yearly: EA,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Þú ert með gjaldfrjálsan aðgang eins og stendur, keyptu áskrift til að fá fullan aðgang.",
				"You have been successfully resubscribed": "Þú ert orðinn áskrifandi að nýju",
				"You're currently not receiving emails": "Þú færð ekki tölvupósta eins og stendur",
				"You're not receiving emails": "Þú færð ekki tölvupósta",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Þú færð ekki tölvupósta ýmist vegna þess að þú merktir síðustu skilaboð sem ruslpóst eða vegna þess að ekki er hægt að senda skilaboð á netfangið sem þú gafst upp.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Þér tókst að skrá þig inn",
				"You've successfully subscribed to": "",
				"Your account": "Aðgangurinn þinn",
				"Your input helps shape what gets published.": "",
				"Your subscription will expire on {{expiryDate}}": "Áskrift þinni lýkur {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Áskrift þín verður endurnýjuð {{expiryDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Áskrift þín hefst {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		TA = "Áskrift",
		KX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: TA,
			default: {
				"Email sent": "Tölvupóstur var sendur",
				"Now check your email!": "Athugaðu nú tölvupósthólfið þitt!",
				"Please enter a valid email address": "Vinsamlegast sláðu inn gilt netfang",
				"Something went wrong, please try again.": "Eitthvað fór úrskeiðis, vinsamlegast reynið aftur.",
				Subscribe: TA,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Smelltu á staðfestingarhlekkinn sem var sendur til þín til að ljúka nýskráningu. Ef hann er ekki kominn innan 3 mínútna skaltu athuga spam-möppuna!",
				"Your email address": "Netfangið þitt"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		jA = "",
		$A = "",
		AA = "",
		NA = "",
		MA = "",
		PA = "",
		_A = "",
		zA = "",
		OA = "",
		DA = "",
		IA = "",
		RA = "",
		YA = "",
		LA = "",
		FA = "",
		BA = "",
		UA = "",
		VA = "",
		JX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: jA,
			Cancel: $A,
			Comment: AA,
			Delete: NA,
			Discussion: MA,
			Edit: PA,
			Edited: _A,
			Expertise: zA,
			Hide: OA,
			Name: DA,
			Neurosurgeon: IA,
			Reply: RA,
			Report: YA,
			Save: LA,
			Sending: FA,
			Sent: BA,
			Show: UA,
			Yesterday: VA,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: jA,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: $A,
				Comment: AA,
				"Complete your profile": "",
				Delete: NA,
				"Deleted member": "",
				Discussion: MA,
				Edit: PA,
				"Edit this comment": "",
				Edited: _A,
				"Enter your name": "",
				Expertise: zA,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: OA,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: DA,
				Neurosurgeon: IA,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: RA,
				"Reply to comment": "",
				Report: YA,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: LA,
				Sending: FA,
				Sent: BA,
				Show: UA,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: VA,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		GX = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Ti auguro il meglio!",
				"Complete signup for {{siteTitle}}!": "Completa l'iscrizione a {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Completa la tua iscrizione a {{siteTitle}}!",
				"Confirm email address": "Conferma indirizzo email",
				"Confirm signup": "Conferma iscrizione",
				"Confirm your email address": "Conferma il tuo inidirizzo email",
				"Confirm your email update for {{siteTitle}}!": "Conferma l'aggiornamento della tua email per {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Conferma il tuo abbonamento a {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Per la tua sicurezza, il link scadrà tra 24 ore.",
				"Hey there,": "Ciao,",
				"Hey there!": "Ciao!",
				"If you did not make this request, you can safely ignore this email.": "Se non hai effettuato tu questa richiesta, puoi tranquillamente ignorare questa email.",
				"If you did not make this request, you can simply delete this message.": "Se non hai effettuato tu questa richiesta, puoi semplicemente cancellare questo messaggio.",
				"Please confirm your email address with this link:": "Conferma il tuo indirizzo email a questo link:",
				"Secure sign in link for {{siteTitle}}": "Link di accesso sicuro a {{siteTitle}}",
				"See you soon!": "A presto!",
				"Sent to {{email}}": "Inviata a {{email}}",
				"Sign in": "Accedi",
				"Sign in to {{siteTitle}}": "Accedi a {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Clicca il link sottostante per concludere l'iscrizione a {{siteTitle}}, ed effettuare automaticamente l'accesso:",
				"Thank you for signing up to {{siteTitle}}!": "Grazie per esserti iscritto a {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Grazie per esserti abbonato a {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Grazie per esserti abbonato a {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Grazie per esserti abbonato a {{siteTitle}}. Clicca il link sottostante per effettaure automaticamente l'accesso:",
				"This email address will not be used.": "Questo indirizzo email non verrà utilizzato.",
				"Welcome back to {{siteTitle}}!": "Bentornato su {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bentornato! Usa questo link per accedere in sicurezza al tuo account su {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Puoi anche copiare ed incollare questo indirizzo direttamente nel tuo browser:",
				"You will not be signed up, and no account will be created for you.": "Non verrai registrato e non verrà creato alcun account a tuo nome.",
				"You will not be subscribed.": "Non verrai abbonato.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Sei ad un passo dall'abbonamento a {{siteTitle}} — conferma la tua email a questo link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Sei ad un passo dall'abbonamento a {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		HA = "Account",
		qA = "Indietro",
		WA = "Cambia",
		KA = "Scegli",
		JA = "Chiudi",
		GA = "Commenti",
		QA = "Omaggio",
		XA = "Conferma",
		ZA = "Continua",
		eN = "Modifica",
		tN = "Email",
		nN = "Email",
		iN = "Per sempre",
		oN = "Gestisci",
		rN = "Mensile",
		aN = "Nome",
		sN = "Piano",
		lN = "Prezzo",
		uN = "",
		cN = "Riprova",
		dN = "Salva",
		mN = "Abbonati",
		pN = "Abbonato",
		fN = "Fatto",
		hN = "Disiscritto",
		gN = "Aggiorna",
		yN = "",
		bN = "Annuale",
		QX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: HA,
			Back: qA,
			Change: WA,
			Choose: KA,
			Close: JA,
			Comments: GA,
			Complimentary: QA,
			Confirm: XA,
			Continue: ZA,
			Edit: eN,
			Email: tN,
			Emails: nN,
			Forever: iN,
			Manage: oN,
			Monthly: rN,
			Name: aN,
			Plan: sN,
			Price: lN,
			Recommendations: uN,
			Retry: cN,
			Save: dN,
			Subscribe: mN,
			Subscribed: pN,
			Success: fN,
			Unsubscribed: hN,
			Update: gN,
			Visit: yN,
			Yearly: bN,
			default: {
				"{{amount}} days free": "{{amount}} giorni gratis",
				"{{amount}} off": "{{amount}} in meno",
				"{{amount}} off for first {{number}} months.": "{{amount}} in meno per i primi {{number}} mesi.",
				"{{amount}} off for first {{period}}.": "{{amount}} in meno per il primo {{period}}.",
				"{{amount}} off forever.": "{{amount}} in meno per sempre.",
				"{{discount}}% discount": "{{discount}}% di sconto",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "La newsletter {{newsletterName}} non verrà più inviata a {{memberEmail}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "Non riceverà più email a {{memberEmail}} quando qualcuno risponde ai tuoi commenti.",
				"{{memberEmail}} will no longer receive this newsletter.": "La newsletter non verrà più inviata a {{memberEmail}}.",
				"{{trialDays}} days free": "{{trialDays}} giorni gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Un link di accesso è stato inviato alla tua casella di posta. Se non lo ricevi entro 3 minuti, controlla nello spam.",
				Account: HA,
				"Account settings": "Impostazioni account",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Al termine della prova gratuita, ti verrà addebitato il prezzo regolare del piano scelto. Puoi annullare in qualsiasi momento prima della scadenza.",
				"Already a member?": "Sei già iscritto?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Si è verificato un errore imprevisto. <a>Contatta l'assistenza</a> se l'errore persiste.",
				Back: qA,
				"Back to Log in": "Torna alla pagina d'accesso",
				"Billing info": "Informazioni di fatturazione",
				"Black Friday": "Black friday",
				"Cancel anytime.": "Cancella in qualsiasi momento.",
				"Cancel subscription": "Cancella l'abbonamento",
				"Cancellation reason": "Motivo della cancellazione",
				Change: WA,
				"Check spam & promotions folders": "Controlla nello spam",
				"Check with your mail provider": "Contatta il tuo provider di posta elettronica",
				Choose: KA,
				"Choose a different plan": "Scegli un piano differente",
				"Choose your newsletters": "Scegli la tua newsletter",
				"Click here to retry": "Clicca qui per riprovare",
				Close: JA,
				Comments: GA,
				Complimentary: QA,
				Confirm: XA,
				"Confirm cancellation": "Conferma cancellazione",
				"Confirm subscription": "Conferma abbonamento",
				"Contact support": "Contatta l'assistenza",
				Continue: ZA,
				"Continue subscription": "Riabbonati",
				"Could not sign in. Login link expired.": "Accesso non effettuato. Il link è scaduto.",
				"Could not update email! Invalid link.": "Email non aggiornata! Link non valido.",
				"Create a new contact": "Crea un nuovo contatto",
				"Current plan": "Piano attuale",
				"Delete account": "Elimina account",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Non era tua intenzione? Gestisti <button>qui</button> le tue preferenze.",
				"Don't have an account?": "Non hai un account?",
				Edit: eN,
				Email: tN,
				"Email newsletter": "Newsletter",
				"Email preference updated.": "Preferenze email aggiornate.",
				"Email preferences": "Preferenze email",
				Emails: nN,
				"Emails disabled": "Email disattivate",
				"Ends {{offerEndDate}}": "Finisce il {{offerEndDate}}",
				Error: "Errore",
				"Expires {{expiryDate}}": "Scade il {{offerEndDate}}",
				Forever: iN,
				"Free Trial – Ends {{trialEnd}}": "Prova gratuita – finisce il {{trialEnd}}",
				"Get help": "Chiedi aiuto",
				"Get in touch for help": "Richiedere assistenza",
				"Get notified when someone replies to your comment": "Ricevi una notifica quando qualcuno risponde ad un tuo commento",
				"Give feedback on this post": "Manda un feedback per questo post",
				"Help! I'm not receiving emails": "Aiuto! Non ricevo le email",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Se una newsletter viene segnalata come spam, le email per quell'indirizzo vengono disabilitate automaticamente, in modo che tu non riceva nessun messaggio indesiderato.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Se il reclamo per spam è stato commesso per errore, o nel caso tu voglia nuovamente ricevere le email, puoi iscriverti nuovamente cliccando il bottone nella schermata precedente.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Se annulli ora il tuo abbonamento, continuerai ad avere accesso fino al {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Se possiedi un account email aziendale o governativo, contatta il reparto IT e chiedi di consentire la ricezione delle email da parte di {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": 'Se desideri ricevere nuovamente le email, la cosa migliore da fare è controllare che non ci siano problemi con il tuo indirizzo di posta e poi cliccare su "Reiscriviti" nella schermata precedente.',
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Se non ricevi la newsletter a cui sei iscritto, ecco alcuni passaggi da controllare.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Se avete completato tutti i passaggi e ancora non ricevete nessuna email, potete contattare l'assistenza a {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Nel caso in cui si verifichi un fallimento permanente durante l'invio di una newsletter, le email saranno disabilitate per quell'account.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Nel tuo client di posta aggiungi {{senderEmail}} ai tuoi contatti. Questo fa si che il tuo provider riconosca l'indirizzo come attendibile.",
				"Less like this": "Meno come questo",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Assicurati che le email non finiscano per sbaglio nello spam. Se ve ne sono, clicca su "Segnala come non spam" e/o "Sposta nella cartella Posta in arrivo".',
				Manage: oN,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: rN,
				"More like this": "Più come questo",
				Name: aN,
				"Need more help? Contact support": "Hai ancora bisogno di aiuto? Contatta l'assistenza",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Le newsletter possono essere disabilitate nel tuo account per due ragioni: un'email precedente è stata segnalata come spam, o l'invio di un'email ha restituito un fallimento permanente (rimbalzo).",
				"Not receiving emails?": "Non ricevi le email?",
				"Now check your email!": "Ora controlla la tua email!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": `Se ancora non vedi le email una volta reiscritto, controlla nello spam. Alcuni provider tengono nota dei reclami e continuano a segnalare le email. Se questo dovesse succedere, segnala l'ultima email ricevuta come "non spam" e spostala nella tua posta in arrivo.`,
				"Permanent failure (bounce)": "Fallimento permanente (rimbalzo)",
				Plan: sN,
				"Plan checkout was cancelled.": "Il pagamento del piano è stato annullato.",
				"Plan upgrade was cancelled.": "L'aggiornamento del piano è stato annullato.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Si prega di compilare i campi obbligatori",
				Price: lN,
				"Re-enable emails": "Riattiva le email",
				Recommendations: uN,
				"Renews at {{price}}.": "Rinnova a {{price}}.",
				Retry: cN,
				Save: dN,
				"Send an email and say hi!": "Invia un'email di saluti!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Invia un'email di saluti a {{senderEmail}}. Questo potrebbe aiutare a segnalare al tuo provider che le email da e verso questo indirizzo possono essere considerate attendibili.",
				"Sending login link...": "Invio link di accesso...",
				"Sending...": "Invio...",
				"Show all": "",
				"Sign in": "Accedi",
				"Sign out": "Esci",
				"Sign up": "Iscriviti",
				"Signup error: Invalid link": "Errore di accesso: link invalido",
				"Sorry, that didn’t work.": "Mi dispiace, non ha funzionato.",
				"Spam complaints": "Reclami per spam",
				"Start {{amount}}-day free trial": "Inizia i {{amount}} giorni di prova gratuita",
				"Starting {{startDate}}": "Inizia il {{startDate}}",
				"Starting today": "Inizia oggi",
				"Submit feedback": "Invia feedback",
				Subscribe: mN,
				Subscribed: pN,
				Success: fN,
				"Success! Check your email for magic link to sign-in.": "Fatto! Controlla la tua email per il magico link d'accesso.",
				"Success! Your account is fully activated, you now have access to all content.": "Fatto! Il tuo account è stato attivato, ora hai accesso a tutti i contenuti.",
				"Success! Your email is updated.": "Fatto! La tua email è stata aggiornata.",
				"Successfully unsubscribed": "Disiscrizione effettuata con successo",
				"Thanks for the feedback!": "Grazie per il feedback!",
				"That didn't go to plan": "Questo non era previsto",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "L'indirizzo email registrato è {{memberEmail}} — se non è corretto, puoi modificarlo nelle tue <button>impostazioni dell'account</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "C'è stato un errore durante l'invio del tuo feedback. Si prega di riprovare più tardi.",
				"This site is invite-only, contact the owner for access.": "Questo sito è accessibile solo su invito, contatta il proprietario per poter accedere.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Per completare l'iscrizione, clicca il link di conferma inviato alla tua email. Se non lo ricevi entro 3 minuti, controlla nello spam!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prova gratis per {{amount}} giorni, poi {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Abbonati per sbloccare l'accesso a tutte le newsletter.",
				"Unsubscribe from all emails": "Disiscriviti da tutte le email",
				Unsubscribed: hN,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "La disiscrizione dalle email non annullerà l'abbonamento a {{title}}",
				Update: gN,
				"Update your preferences": "Aggiorna le tue preferenze",
				"Verify your email address is correct": "Controlla che il tuo indirizzo email sia corretto",
				"View plans": "Vedi piani",
				Visit: yN,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Non è stato possibile disiscriverti poiché l'indirizzo email non è stato trovato. Si prega di contattare il proprietario del sito.",
				"Welcome back, {{name}}!": "È bello rivederti, {{name}}!",
				"Welcome back!": "Bentornato!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": `Quando una casella fallisce l'accettazione di un'email, questo viene normalmente chiamato "rimbalzo". In molti casi questo è temporaneo. Tuttavia, in alcuni casi un'email potrebbe tornare come un fallimento permanente se l'indirizzo è sbagliato o inesistente.`,
				"Why has my email been disabled?": "Perché la mia email è stata disattivata?",
				Yearly: bN,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Attualmente hai un piano gratuito, abbonati per ottenere l'accesso completo.",
				"You have been successfully resubscribed": "Reiscrizione effettuata con successo",
				"You're currently not receiving emails": "Al momento non ricevi nessuna email",
				"You're not receiving emails": "Non ricevi nessuna email",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Non ricevi email perché hai contrassegnato un messaggio recente come spam, o perché non è stato possibile recapitare i messaggi all'indirizzo email fornito.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Accesso effettuato.",
				"You've successfully subscribed to": "",
				"Your account": "Il tuo account",
				"Your input helps shape what gets published.": "Il tuo contributo aiuta a dare forma a ciò che viene pubblicato.",
				"Your subscription will expire on {{expiryDate}}": "Il tuo abbonamento scadrà il {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Il tuo abbonamento verrà rinnovato il {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Il tuo abbonamento inizierà il {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		kN = "Abbonati",
		XX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: kN,
			default: {
				"Email sent": "Email inviata",
				"Now check your email!": "Ora controlla la tua email!",
				"Please enter a valid email address": "Inserisci un indirizzo email valido",
				"Something went wrong, please try again.": "Qualcosa è andato storto, si prega di riprovare.",
				Subscribe: kN,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Per completare l'iscrizione, clicca il link di conferma inviato alla tua email. Se non lo ricevi entro 3 minuti, controlla nello spam!",
				"Your email address": "Il tuo indirizzo email"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		vN = "",
		wN = "",
		SN = "",
		CN = "",
		xN = "",
		EN = "",
		TN = "",
		jN = "",
		$N = "",
		AN = "",
		NN = "",
		MN = "",
		PN = "",
		_N = "",
		zN = "",
		ON = "",
		DN = "",
		IN = "",
		ZX = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: vN,
			Cancel: wN,
			Comment: SN,
			Delete: CN,
			Discussion: xN,
			Edit: EN,
			Edited: TN,
			Expertise: jN,
			Hide: $N,
			Name: AN,
			Neurosurgeon: NN,
			Reply: MN,
			Report: PN,
			Save: _N,
			Sending: zN,
			Sent: ON,
			Show: DN,
			Yesterday: IN,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: vN,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: wN,
				Comment: SN,
				"Complete your profile": "",
				Delete: CN,
				"Deleted member": "",
				Discussion: xN,
				Edit: EN,
				"Edit this comment": "",
				Edited: TN,
				"Enter your name": "",
				Expertise: jN,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: $N,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: AN,
				Neurosurgeon: NN,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: MN,
				"Reply to comment": "",
				Report: PN,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: _N,
				Sending: zN,
				Sent: ON,
				Show: DN,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: IN,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		eZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "よろしくお願いします！",
				"Complete signup for {{siteTitle}}!": "{{siteTitle}}の新規登録を完了してください！",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}}の新規登録を完了してください。",
				"Confirm email address": "メールアドレスを確認",
				"Confirm signup": "新規登録を確認",
				"Confirm your email address": "メールアドレスを確認",
				"Confirm your email update for {{siteTitle}}!": "メールを更新して確認してください。",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}}の購読を確認",
				"For your security, the link will expire in 24 hours time.": "セキュリティのため、リンクの有効期限は24時間です。",
				"Hey there,": "こんにちは",
				"Hey there!": "こんにちは！",
				"If you did not make this request, you can safely ignore this email.": "このリクエストを行っていない場合は、このメールを無視してください。",
				"If you did not make this request, you can simply delete this message.": "このリクエストを行っていない場合は、このメールを削除してください。",
				"Please confirm your email address with this link:": "このリンクを使用してメールアドレスを確認してください：",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}}への安全なログイン先リンク",
				"See you soon!": "引き続きよろしくお願いします。",
				"Sent to {{email}}": "{{email}}に送信",
				"Sign in": "ログイン",
				"Sign in to {{siteTitle}}": "{{siteTitle}}にログイン",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "下のリンクを選択すると新規登録が完了し、自動でログインします。",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}}の新規登録ありがとうございます！",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}}の購読ありがとうございます！",
				"Thank you for subscribing to {{siteTitle}}.": "{{siteTitle}}の購読ありがとうございます。",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}}の購読ありがとうございます。下のリンクを選択すると自動的にログインされます。",
				"This email address will not be used.": "このメールアドレスは使用されていません。",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}}へようこそ！",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "おかえりなさい！このリンクを使用すると、{{siteTitle}}のアカウントに安全にログインすることができます。",
				"You can also copy & paste this URL into your browser:": "または、このURLをブラウザ内にコピー＆ペーストすることもできます。",
				"You will not be signed up, and no account will be created for you.": "新規登録はされず、アカウントは作成されません。",
				"You will not be subscribed.": "購読されません。",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "{{siteTitle}}への購読まであと少しです。このリンクを使用してメールアドレスを確認してください。",
				"You're one tap away from subscribing to {{siteTitle}}!": "{{siteTitle}}への購読まであと少しです。"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		RN = "アカウント",
		YN = "戻る",
		LN = "変更",
		FN = "選択",
		BN = "閉じる",
		UN = "コメント",
		VN = "無料",
		HN = "確認",
		qN = "続ける",
		WN = "編集",
		KN = "メール",
		JN = "メール",
		GN = "永久",
		QN = "管理",
		XN = "月額",
		ZN = "名前",
		eM = "プラン",
		tM = "価格",
		nM = "",
		iM = "再試行",
		oM = "保存",
		rM = "購読する",
		aM = "購読済み",
		sM = "成功",
		lM = "購読解除されました",
		uM = "更新",
		cM = "",
		dM = "年額",
		tZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: RN,
			Back: YN,
			Change: LN,
			Choose: FN,
			Close: BN,
			Comments: UN,
			Complimentary: VN,
			Confirm: HN,
			Continue: qN,
			Edit: WN,
			Email: KN,
			Emails: JN,
			Forever: GN,
			Manage: QN,
			Monthly: XN,
			Name: ZN,
			Plan: eM,
			Price: tM,
			Recommendations: nM,
			Retry: iM,
			Save: oM,
			Subscribe: rM,
			Subscribed: aM,
			Success: sM,
			Unsubscribed: lM,
			Update: uM,
			Visit: cM,
			Yearly: dM,
			default: {
				"{{amount}} days free": "{{amount}}日間無料",
				"{{amount}} off": "{{amount}}オフ",
				"{{amount}} off for first {{number}} months.": "最初の{{number}}ヶ月間{{amount}}オフ",
				"{{amount}} off for first {{period}}.": "最初の{{period}}{{amount}}オフ",
				"{{amount}} off forever.": "永久に{{amount}}オフ",
				"{{discount}}% discount": "{{discount}}% 割引",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}}は{{newsletterName}}のニュースレターを受信しなくなります。",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "誰かがあなたのコメントに返信しても、{{memberEmail}} はメールを受信しません。",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} はこのニュースレターを受信しなくなります。",
				"{{trialDays}} days free": "{{trialDays}}日間無料",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "ログインリンクが受信箱に送信されました。3分以内にメールが届かない場合は、迷惑メールのフォルダーをご確認ください。",
				Account: RN,
				"Account settings": "アカウント設定",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "無料期間が終了すると、選択したプランの通常価格が請求されます。それまではいつでもキャンセルできます。",
				"Already a member?": "すでに会員ですか？",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "予期しないエラーが発生しました。もう一度試すか、エラーが解決しない場合は<a>サポートにお問い合わせ</a>ください。",
				Back: YN,
				"Back to Log in": "ログインに戻る",
				"Billing info": "請求情報",
				"Black Friday": "ブラックフライデー",
				"Cancel anytime.": "いつでもキャンセル可能",
				"Cancel subscription": "購読をキャンセル",
				"Cancellation reason": "キャンセル理由",
				Change: LN,
				"Check spam & promotions folders": "スパムとプロモーションフォルダを確認してください",
				"Check with your mail provider": "メールプロバイダーに確認してください",
				Choose: FN,
				"Choose a different plan": "別のプランを選択",
				"Choose your newsletters": "ニュースレターを選択",
				"Click here to retry": "再試行するにはここをクリックしてください",
				Close: BN,
				Comments: UN,
				Complimentary: VN,
				Confirm: HN,
				"Confirm cancellation": "キャンセルを確認",
				"Confirm subscription": "購読を確認",
				"Contact support": "サポートに連絡",
				Continue: qN,
				"Continue subscription": "購読を続ける",
				"Could not sign in. Login link expired.": "ログインできませんでした。ログインリンクの有効期限が切れています。",
				"Could not update email! Invalid link.": "メールアドレスを更新できませんでした。無効なリンクです。",
				"Create a new contact": "新しい連絡先を作成",
				"Current plan": "現在のプラン",
				"Delete account": "アカウントを削除",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "意図しなかった場合は、<button>こちら</button>で設定を変更してください。",
				"Don't have an account?": "アカウントをお持ちでない場合",
				Edit: WN,
				Email: KN,
				"Email newsletter": "ニュースレターのメール",
				"Email preference updated.": "メールの設定が更新されました。",
				"Email preferences": "メールの設定",
				Emails: JN,
				"Emails disabled": "メールが無効になっています",
				"Ends {{offerEndDate}}": "{{offerEndDate}}まで",
				Error: "エラー",
				"Expires {{expiryDate}}": "{{expiryDate}}まで有効",
				Forever: GN,
				"Free Trial – Ends {{trialEnd}}": "無料期間 - {{trialEnd}}まで",
				"Get help": "サポート",
				"Get in touch for help": "サポートが必要な場合はご連絡ください",
				"Get notified when someone replies to your comment": "誰かがあなたのコメントに返信したときに通知を受ける",
				"Give feedback on this post": "この投稿にフィードバックを提供する",
				"Help! I'm not receiving emails": "助けてください！メールが受信できません",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "ニュースレターがスパムとして判定された場合、そのアドレスではメールが自動的に無効になり、望ましくないメッセージを受け取らないようになります。",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "スパムの判定が誤っていた場合、またはメールの受信を再開したい場合は、前の画面のボタンをクリックしてメールを再購読することができます。",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "今すぐ購読をキャンセルすると、{{periodEnd}}までアクセスできます。",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "企業または政府のメールアカウントをお持ちの場合は、IT部門に連絡し、{{senderEmail}}からのメール受信を許可してもらってください",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "再度メールを受け取りたい場合は、メールアドレスに問題がないかをまず確認し、次に前の画面で再購読を選択してください。",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "購読したニュースレターのメールを受け取れてない場合は、以下の点を確認してみてください。",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "これらの項目を全て満たしてもメールがまだ受け取れない場合は、{{supportAddress}}に連絡してサポートを受けてください。",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "ニュースレターの送信時に永続的な障害が発生した場合、アカウントのメールが無効になります。",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "メールクライアントで{{senderEmail}}を連絡先リストに追加してください。これにより、メールプロバイダーにこのアドレスから送信されたメールを信頼するように伝えることができます。",
				"Less like this": "興味なし",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'メールがスパムまたはプロモーションフォルダに誤って入っていないか確認してください。もしそうなら、"スパムではない"とマークするか、"受信トレイに移動"を選択してください。',
				Manage: QN,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: XN,
				"More like this": "興味あり",
				Name: ZN,
				"Need more help? Contact support": "サポートが必要ですか？お問い合わせください。",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "ニュースレターは、2つの理由によってアカウント上で無効になる場合があります: 以前のメールがスパムとしてマークされた場合、またはメールの送信が永続的な障害によって失敗した場合です。",
				"Not receiving emails?": "メールが受信されない場合",
				"Now check your email!": "メールを確認してください",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "再購読した後も受信トレイにメールが表示されない場合は、スパムフォルダを確認してください。一部の受信トレイは以前のスパムの記録を保持し、引き続きメールを判定します。これが起こった場合は、最新のニュースレターを「スパムではない」とマークし、受信トレイに移動してください。",
				"Permanent failure (bounce)": "永続的な障害",
				Plan: eM,
				"Plan checkout was cancelled.": "プランのチェックアウトがキャンセルされました。",
				"Plan upgrade was cancelled.": "プランのアップグレードがキャンセルされました。",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "必須項目に入力してください",
				Price: tM,
				"Re-enable emails": "メールを再有効化する",
				Recommendations: nM,
				"Renews at {{price}}.": "{{price}}で更新されます。",
				Retry: iM,
				Save: oM,
				"Send an email and say hi!": "テストメールを送信",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "{{senderEmail}}にメールを送ると、メールプロバイダーに対して、このアドレスとのやり取りは信頼できるものだと知らせることができます。",
				"Sending login link...": "ログイン先リンクを送信しています...",
				"Sending...": "送信しています...",
				"Show all": "",
				"Sign in": "ログイン",
				"Sign out": "ログアウト",
				"Sign up": "新規登録",
				"Signup error: Invalid link": "エラー： 無効なリンク",
				"Sorry, that didn’t work.": "申し訳ありませんが、うまくいきませんでした。",
				"Spam complaints": "スパムに関する苦情",
				"Start {{amount}}-day free trial": "{{amount}}日間の無料トライアルを開始する",
				"Starting {{startDate}}": "{{startDate}}から開始",
				"Starting today": "本日から開始",
				"Submit feedback": "フィードバックを送信",
				Subscribe: rM,
				Subscribed: aM,
				Success: sM,
				"Success! Check your email for magic link to sign-in.": "成功しました！ログイン用のマジックリンクをメールで確認してください。",
				"Success! Your account is fully activated, you now have access to all content.": "成功しました！アカウントが完全にアクティブ化されました。これですべてのコンテンツにアクセスできます。",
				"Success! Your email is updated.": "成功しました！メールアドレスが更新されました。",
				"Successfully unsubscribed": "正常に購読解除されました",
				"Thanks for the feedback!": "フィードバックありがとうございます！",
				"That didn't go to plan": "",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "メールアドレスは{{memberEmail}}です。もし正しくない場合は、<button>アカウント設定</button>で更新することができます。",
				"There was a problem submitting your feedback. Please try again a little later.": "フィードバックの送信中に問題が発生しました。しばらくしてからもう一度お試しください。",
				"This site is invite-only, contact the owner for access.": "このサイトは招待制です。アクセスするにはオーナーに連絡してください。",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "新規登録を完了するには、受信トレイの確認リンクをクリックしてください。3分経っても届かない場合は、スパムフォルダを確認してください。",
				"Try free for {{amount}} days, then {{originalPrice}}.": "{{amount}}日間無料でお試しください、その後は{{originalPrice}}です。",
				"Unlock access to all newsletters by becoming a paid subscriber.": "有料の購読者になることで、すべてのニュースレターへのアクセスが可能になります。",
				"Unsubscribe from all emails": "すべてのメールの購読解除",
				Unsubscribed: lM,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "メールの購読を解除しても、{{title}}への有料購読はキャンセルされません",
				Update: uM,
				"Update your preferences": "設定を更新する",
				"Verify your email address is correct": "メールアドレスが正しいかどうか確認してください",
				"View plans": "プランを表示",
				Visit: cM,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "メールアドレスが見つからなかったため、購読解除できませんでした。サイトのオーナーに連絡してください。",
				"Welcome back, {{name}}!": "おかえりなさい、{{name}}さん！",
				"Welcome back!": "おかえりなさい！",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "受信トレイにメールが届かない場合のことを一般的にバウンスと呼び、多くの場合、一時的なものです。ただし、メールアドレスが無効または存在しない場合、バウンスしたメールは永続的な失敗として返されることがあります。",
				"Why has my email been disabled?": "なぜメールが無効になったのか？",
				Yearly: dM,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "現在、無料版のメンバーシップです。完全にアクセスするには有料版にアップグレードしてください。",
				"You have been successfully resubscribed": "正常に再購読されました",
				"You're currently not receiving emails": "現在、メールを受信していません",
				"You're not receiving emails": "メールを受信していません",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "最近のメッセージをスパムとして判定したか、提供されたメールアドレスに配信できなかったため、メールを受信していません。",
				"You're subscribed!": "",
				"You've successfully signed in.": "ログインに成功しました",
				"You've successfully subscribed to": "",
				"Your account": "あなたのアカウント",
				"Your input helps shape what gets published.": "あなたの感想を今後の内容の参考にさせていただきます。",
				"Your subscription will expire on {{expiryDate}}": "あなたの購読は{{expiryDate}}に期限切れになります。",
				"Your subscription will renew on {{renewalDate}}": "あなたの購読は{{renewalDate}}に更新されます。",
				"Your subscription will start on {{subscriptionStart}}": "あなたの購読は{{subscriptionStart}}に開始されます。"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		mM = "購読",
		nZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: mM,
			default: {
				"Email sent": "メールを送信しました",
				"Now check your email!": "メールを確認してください！",
				"Please enter a valid email address": "有効なメールアドレスを入力してください",
				"Something went wrong, please try again.": "問題が発生しました。もう一度お試しください。",
				Subscribe: mM,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "新規登録を完了するには、受信トレイにある確認用リンクを選択してください。もし3分経っても届かない場合、スパムフォルダをご確認ください。",
				"Your email address": "メールアドレス"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		pM = "",
		fM = "",
		hM = "",
		gM = "",
		yM = "",
		bM = "",
		kM = "",
		vM = "",
		wM = "",
		SM = "",
		CM = "",
		xM = "",
		EM = "",
		TM = "",
		jM = "",
		$M = "",
		AM = "",
		NM = "",
		iZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: pM,
			Cancel: fM,
			Comment: hM,
			Delete: gM,
			Discussion: yM,
			Edit: bM,
			Edited: kM,
			Expertise: vM,
			Hide: wM,
			Name: SM,
			Neurosurgeon: CM,
			Reply: xM,
			Report: EM,
			Save: TM,
			Sending: jM,
			Sent: $M,
			Show: AM,
			Yesterday: NM,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: pM,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: fM,
				Comment: hM,
				"Complete your profile": "",
				Delete: gM,
				"Deleted member": "",
				Discussion: yM,
				Edit: bM,
				"Edit this comment": "",
				Edited: kM,
				"Enter your name": "",
				Expertise: vM,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: wM,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: SM,
				Neurosurgeon: CM,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: xM,
				"Reply to comment": "",
				Report: EM,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: TM,
				Sending: jM,
				Sent: $M,
				Show: AM,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: NM,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		oZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "모든 것이 잘 되기를 바랍니다!",
				"Complete signup for {{siteTitle}}!": "{{siteTitle}}에 가입을 완료하세요!",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}}에 가입을 완료하세요!",
				"Confirm email address": "이메일을 확인하세요",
				"Confirm signup": "회원가입을 확인하세요",
				"Confirm your email address": "이메일을 확인하세요",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}}의 이메일 업데이트를 확인하세요!",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}}의 구독을 확인하세요.",
				"For your security, the link will expire in 24 hours time.": "보안을 위해 링크는 24시간 후에 만료됩니다.",
				"Hey there,": "안녕하세요,",
				"Hey there!": "안녕하세요!",
				"If you did not make this request, you can safely ignore this email.": "직접 요청하신게 아니라면, 이 이메일을 무시하셔도 됩니다.",
				"If you did not make this request, you can simply delete this message.": "직접 요청하신게 아니라면, 이 메시지를 삭제하시면 됩니다.",
				"Please confirm your email address with this link:": "아래 링크를 사용하여 이메일 주소를 확인해주세요:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}}의 안전한 로그인 링크입니다.",
				"See you soon!": "곧 다시 만나요!",
				"Sent to {{email}}": "{{email}}으로 전송되었습니다.",
				"Sign in": "로그인",
				"Sign in to {{siteTitle}}": "{{siteTitle}}에 로그인하세요.",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "{{siteTitle}}의 가입을 완료하고, 자동으로 로그인하려면 아래 링크를 탭해주세요:",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}}에 가입해 주셔서 감사합니다!",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}} 구독해 주셔서 감사드립니다!",
				"Thank you for subscribing to {{siteTitle}}.": "{{siteTitle}} 구독해 주셔서 감사드립니다.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}} 구독에 감사드립니다. 아래 링크를 탭하여 자동으로 로그인하세요:",
				"This email address will not be used.": "이 이메일 주소는 사용되지 않을 것입니다.",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}}에 다시 오신 것을 환영합니다!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "안전한 로그인을 위해 다음 링크를 사용하여 {{siteTitle}} 계정에 로그인하세요:",
				"You can also copy & paste this URL into your browser:": "또는 이 URL을 웹 브라우저에 복사하여 사용할 수 있습니다.",
				"You will not be signed up, and no account will be created for you.": "가입되지 않으며 계정도 생성되지 않습니다.",
				"You will not be subscribed.": "구독되지 않을 것입니다.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "탭하시면 {{siteTitle}} 구독이 완료됩니다! 이 링크를 사용하여 이메일 주소를 확인해주세요.",
				"You're one tap away from subscribing to {{siteTitle}}!": "탭하시면 {{siteTitle}} 구독이 완료됩니다!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		MM = "계정",
		PM = "뒤로",
		_M = "변경",
		zM = "선택",
		OM = "닫기",
		DM = "댓글",
		IM = "무료",
		RM = "확인",
		YM = "계속",
		LM = "편집",
		FM = "이메일",
		BM = "이메일",
		UM = "영원히",
		VM = "관리",
		HM = "월간",
		qM = "이름",
		WM = "플랜",
		KM = "가격",
		JM = "",
		GM = "다시 시도",
		QM = "저장",
		XM = "구독",
		ZM = "구독 완료",
		eP = "성공",
		tP = "구독 취소 완료",
		nP = "업데이트",
		iP = "",
		oP = "연간",
		rZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: MM,
			Back: PM,
			Change: _M,
			Choose: zM,
			Close: OM,
			Comments: DM,
			Complimentary: IM,
			Confirm: RM,
			Continue: YM,
			Edit: LM,
			Email: FM,
			Emails: BM,
			Forever: UM,
			Manage: VM,
			Monthly: HM,
			Name: qM,
			Plan: WM,
			Price: KM,
			Recommendations: JM,
			Retry: GM,
			Save: QM,
			Subscribe: XM,
			Subscribed: ZM,
			Success: eP,
			Unsubscribed: tP,
			Update: nP,
			Visit: iP,
			Yearly: oP,
			default: {
				"{{amount}} days free": "{{amount}}일 무료",
				"{{amount}} off": "{{amount}} 할인",
				"{{amount}} off for first {{number}} months.": "첫 {{number}}개월 {{amount}} 할인",
				"{{amount}} off for first {{period}}.": "첫 {{period}} {{amount}} 할인",
				"{{amount}} off forever.": "{{amount}} 영원히 할인",
				"{{discount}}% discount": "{{discount}}% 할인",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}}은(는) {{newsletterName}} 뉴스레터를 더 이상 받지 않습니다.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}}은(는) 다른 사람이 댓글에 답변할 때 이메일을 더 이상 받지 않습니다.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}}은(는) 이 뉴스레터를 더 이상 받지 않습니다.",
				"{{trialDays}} days free": "{{trialDays}}일 무료",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "로그인 링크가 이메일로 전송되었습니다. 3분 내에 도착하지 않으면 스팸 폴더를 확인해주세요.",
				Account: MM,
				"Account settings": "계정 설정",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "무료 체험이 종료되면 선택한 요금제의 정상 가격이 청구됩니다. 그 전에 언제든지 취소할 수 있습니다.",
				"Already a member?": "이미 회원이신가요?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "예기치 않은 오류가 발생했습니다. 계속해서 오류가 발생하면 다시 시도하거나 <a>지원팀에 문의</a>해주세요.",
				Back: PM,
				"Back to Log in": "로그인으로 돌아가기",
				"Billing info": "결제 정보",
				"Black Friday": "블랙 프라이데이",
				"Cancel anytime.": "언제든지 취소할 수 있습니다.",
				"Cancel subscription": "구독 취소",
				"Cancellation reason": "취소 사유",
				Change: _M,
				"Check spam & promotions folders": "스팸 & 프로모션 폴더 확인하세요",
				"Check with your mail provider": "메일 제공업체에 문의하세요",
				Choose: zM,
				"Choose a different plan": "다른 요금제 선택",
				"Choose your newsletters": "뉴스레터 선택",
				"Click here to retry": "다시 시도하려면 여기를 클릭하세요",
				Close: OM,
				Comments: DM,
				Complimentary: IM,
				Confirm: RM,
				"Confirm cancellation": "취소 확인",
				"Confirm subscription": "구독 확인",
				"Contact support": "지원팀에 문의",
				Continue: YM,
				"Continue subscription": "구독 계속",
				"Could not sign in. Login link expired.": "로그인할 수 없습니다. 로그인 링크가 만료되었습니다.",
				"Could not update email! Invalid link.": "이메일을 업데이트할 수 없습니다! 잘못된 링크입니다.",
				"Create a new contact": "새 연락처 만들기",
				"Current plan": "현재 요금제",
				"Delete account": "계정 삭제",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "의도치 않았나요? 기본 설정을 <button>여기</button>에서 관리할 수 있습니다.",
				"Don't have an account?": "계정이 없으신가요?",
				Edit: LM,
				Email: FM,
				"Email newsletter": "이메일 뉴스레터",
				"Email preference updated.": "이메일 기본 설정이 업데이트되었습니다.",
				"Email preferences": "이메일 설정",
				Emails: BM,
				"Emails disabled": "이메일 사용 중지됨",
				"Ends {{offerEndDate}}": "{{offerEndDate}}에 종료됩니다",
				Error: "오류",
				"Expires {{expiryDate}}": "{{expiryDate}}에 만료됩니다",
				Forever: UM,
				"Free Trial – Ends {{trialEnd}}": "무료 체험 – {{trialEnd}}에 종료됩니다",
				"Get help": "도움말 받기",
				"Get in touch for help": "도움말을 받으려면 연락하세요",
				"Get notified when someone replies to your comment": "댓글에 대한 답변이 올라오면 알림 받기",
				"Give feedback on this post": "이 게시물에 대한 의견 제공하기",
				"Help! I'm not receiving emails": "도와주세요! 이메일을 받지 못하고 있습니다",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "만약 뉴스레터가 스팸으로 표시되면, 더 이상 원하지 않는 메시지를 받지 않도록 해당 주소의 이메일이 자동으로 사용 중지됩니다.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "스팸 신고가 실수였거나 이메일을 다시 받기를 원하면, 이전 화면의 버튼을 클릭하여 이메일을 다시 구독할 수 있습니다.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "만약 회사나 정부 이메일 계정을 사용하고 있다면, IT 부서에 연락하여 {{senderEmail}}에서 이메일을 받을 수 있도록 요청하세요",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "이메일을 다시 받기를 원한다면, 가장 좋은 방법은 문제가 있는지 확인한 다음 이전 화면의 다시 구독 버튼을 클릭하는 것입니다.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "만약 구독한 이메일 뉴스레터를 받지 못하고 있다면, 확인해야 할 몇 가지 사항이 있습니다.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "이 모든 확인을 완료했는데도 이메일을 받지 못하고 있다면, {{supportAddress}}에 연락하여 지원을 받을 수 있습니다.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "영구적인 실패가 발생하여 뉴스레터를 보내려고 시도할 때, 계정의 이메일이 사용 중지됩니다.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "이메일 클라이언트에서 {{senderEmail}}을 연락처 목록에 추가하세요. 이렇게 하면 메일 제공업체에게 이 주소에서 보낸 이메일을 신뢰해야 한다는 신호를 보냅니다.",
				"Less like this": "비슷한 게시물 줄이기",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': '이메일이 스팸이나 프로모션 폴더에 실수로 들어가지 않도록 하세요. 만약 들어가 있다면 "스팸이 아님" 또는 "받은 편지함으로 이동"을 클릭하세요.',
				Manage: VM,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: HM,
				"More like this": "비슷한 게시물 더 보기",
				Name: qM,
				"Need more help? Contact support": "더 많은 도움이 필요하신가요? 지원팀에 문의하세요",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "뉴스레터는 계정에서 두 가지 이유로 사용 중지될 수 있습니다: 이전 이메일이 스팸으로 표시되었거나 이메일을 보내려고 시도했지만 영구적인 실패가 발생했을 때(바운스).",
				"Not receiving emails?": "이메일을 받지 못하고 계신가요?",
				"Now check your email!": "지금 이메일을 확인해주세요!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "다시 구독한 후에도 받은 편지함에 이메일이 표시되지 않는다면 스팸 폴더를 확인하세요. 일부 받은 편지함 제공업체는 이전 스팸 신고 기록을 유지하고 계속해서 이메일을 표시합니다. 이런 경우 최신 뉴스레터를 '스팸이 아님'으로 표시하여 기본 받은 편지함으로 이동시키세요.",
				"Permanent failure (bounce)": "영구적인 실패(바운스)",
				Plan: WM,
				"Plan checkout was cancelled.": "플랜 결제가 취소되었습니다.",
				"Plan upgrade was cancelled.": "플랜 업그레이드가 취소되었습니다.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "필수 항목을 입력하세요",
				Price: KM,
				"Re-enable emails": "이메일 재활성화",
				Recommendations: JM,
				"Renews at {{price}}.": "{{price}}에 갱신됩니다.",
				Retry: GM,
				Save: QM,
				"Send an email and say hi!": "이메일을 보내 인사를 건네보세요!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "{{senderEmail}}에게 이메일을 보내 인사를 건네보세요. 이렇게 하면 메일 제공업체에게 이 주소로부터 이메일을 신뢰해야 한다는 신호를 보냅니다.",
				"Sending login link...": "로그인 링크 전송 중...",
				"Sending...": "전송 중...",
				"Show all": "",
				"Sign in": "로그인",
				"Sign out": "로그아웃",
				"Sign up": "가입하기",
				"Signup error: Invalid link": "가입 오류: 잘못된 링크",
				"Sorry, that didn’t work.": "죄송합니다. 작동하지 않았습니다.",
				"Spam complaints": "스팸 신고",
				"Start {{amount}}-day free trial": "{{amount}}일 동안의 무료 체험 시작",
				"Starting {{startDate}}": "{{startDate}}부터 시작",
				"Starting today": "오늘부터 시작",
				"Submit feedback": "의견 제출",
				Subscribe: XM,
				Subscribed: ZM,
				Success: eP,
				"Success! Check your email for magic link to sign-in.": "성공! 로그인을 위한 링크가 이메일로 전송되었습니다.",
				"Success! Your account is fully activated, you now have access to all content.": "성공! 계정이 활성화되었습니다. 이제 모든 콘텐츠에 접근할 수 있습니다.",
				"Success! Your email is updated.": "성공! 이메일이 업데이트되었습니다.",
				"Successfully unsubscribed": "구독이 성공적으로 취소되었습니다",
				"Thanks for the feedback!": "의견을 보내주셔서 감사합니다!",
				"That didn't go to plan": "계획대로 진행되지 않았습니다",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "회원님의 이메일 주소는 {{memberEmail}}입니다. 이 주소가 맞지 않다면 <button>계정 설정 영역</button>에서 업데이트할 수 있습니다.",
				"There was a problem submitting your feedback. Please try again a little later.": "의견을 제출하는 중에 문제가 발생했습니다. 잠시 후 다시 시도하세요.",
				"This site is invite-only, contact the owner for access.": "위 사이트는 초대된 사용자만 사용이 가능합니다. 접근을 위해서는 관리자에게 연락하세요.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "가입을 완료하려면 이메일의 확인 링크를 클릭하세요. 3분 이내에 도착하지 않으면 스팸 폴더를 확인해주세요!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "{{amount}}일 동안 무료로 사용한 후 {{originalPrice}}로 결제하세요.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "유료 구독자가 되어 모든 뉴스레터에 접근하세요.",
				"Unsubscribe from all emails": "모든 이메일 구독 취소",
				Unsubscribed: tP,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "이메일 구독 취소는 {{title}}에 대한 유료 구독을 취소하지 않습니다",
				Update: nP,
				"Update your preferences": "설정 업데이트",
				"Verify your email address is correct": "이메일 주소가 올바른지 확인하세요",
				"View plans": "플랜 보기",
				Visit: iP,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "이메일 주소를 찾을 수 없어 구독을 취소할 수 없습니다. 사이트 관리자에게 문의하세요.",
				"Welcome back, {{name}}!": "{{name}}님, 다시 돌아오신 것을 환영합니다!",
				"Welcome back!": "다시 돌아오신 것을 환영합니다!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "받는 편지함이 이메일을 받지 못하는 경우 이를 바운스(bounce)라고 합니다. 이는 일시적인 경우가 많지만, 이메일 주소가 잘못되었거나 존재하지 않는 경우 영구적인 실패로 반환될 수도 있습니다.",
				"Why has my email been disabled?": "왜 이메일이 비활성화되었나요?",
				Yearly: oP,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "현재 무료 멤버십을 사용 중입니다. 유료 구독으로 업그레이드하여 모든 콘텐츠에 접근하세요.",
				"You have been successfully resubscribed": "성공적으로 재구독되었습니다",
				"You're currently not receiving emails": "현재 이메일을 받지 않고 계십니다",
				"You're not receiving emails": "이메일을 받지 않고 계십니다",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "최근 메시지를 스팸으로 표시했거나 메시지를 제공된 이메일 주소로 전달할 수 없어 이메일을 받지 못하고 계십니다.",
				"You're subscribed!": "",
				"You've successfully signed in.": "성공적으로 로그인되었습니다.",
				"You've successfully subscribed to": "",
				"Your account": "계정",
				"Your input helps shape what gets published.": "회원님의 의견은 게시물을 제작하는 것에 큰 도움이 됩니다.",
				"Your subscription will expire on {{expiryDate}}": "회원님의 구독은 {{expiryDate}}에 만료됩니다",
				"Your subscription will renew on {{renewalDate}}": "회원님의 구독은 {{renewalDate}}에 갱신됩니다",
				"Your subscription will start on {{subscriptionStart}}": "회원님의 구독은 {{subscriptionStart}}에 시작됩니다"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		rP = "구독",
		aZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: rP,
			default: {
				"Email sent": "이메일 발송됨",
				"Now check your email!": "이제 이메일을 확인하세요!",
				"Please enter a valid email address": "유효한 이메일 주소를 입력하세요",
				"Something went wrong, please try again.": "문제가 발생했습니다. 다시 시도하세요.",
				Subscribe: rP,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "가입을 완료하려면 받은 편지함의 확인 링크를 클릭하세요. 3분 이내에 도착하지 않으면 스팸 폴더를 확인하세요!",
				"Your email address": "이메일 주소"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		aP = "",
		sP = "",
		lP = "",
		uP = "",
		cP = "",
		dP = "",
		mP = "",
		pP = "",
		fP = "",
		hP = "",
		gP = "",
		yP = "",
		bP = "",
		kP = "",
		vP = "",
		wP = "",
		SP = "",
		CP = "",
		sZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: aP,
			Cancel: sP,
			Comment: lP,
			Delete: uP,
			Discussion: cP,
			Edit: dP,
			Edited: mP,
			Expertise: pP,
			Hide: fP,
			Name: hP,
			Neurosurgeon: gP,
			Reply: yP,
			Report: bP,
			Save: kP,
			Sending: vP,
			Sent: wP,
			Show: SP,
			Yesterday: CP,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: aP,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: sP,
				Comment: lP,
				"Complete your profile": "",
				Delete: uP,
				"Deleted member": "",
				Discussion: cP,
				Edit: dP,
				"Edit this comment": "",
				Edited: mP,
				"Enter your name": "",
				Expertise: pP,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: fP,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: hP,
				Neurosurgeon: gP,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: yP,
				"Reply to comment": "",
				Report: bP,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: kP,
				Sending: vP,
				Sent: wP,
				Show: SP,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: CP,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		lZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Сайн сайхныг хүсье!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}} бүртгэлээ дуусгана уу!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}} шинэчилсэн имэйлээ баталгаажуулна уу!",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}} захиалгаа баталгаажуулах",
				"For your security, the link will expire in 24 hours time.": "Нууцлалын шалтгаанаар энэхүү холбоос нь 24 цагийн дараа хүчингүй болно.",
				"Hey there,": "Сайн уу,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Хэрвээ та энэхүү хүсэлтийг гаргаагүй бол энэ имэйлийг тоолгүй орхиж болно.",
				"If you did not make this request, you can simply delete this message.": "Хэрвээ та энэхүү хүсэлтийг гаргаагүй бол энэ имэйлийг устгаж болно.",
				"Please confirm your email address with this link:": "Та өөрийн имэйл хаягаа дараах холбоосоор баталгаажуулна уу:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}}-д нэвтрэх нууцлал бүхий холбоос",
				"See you soon!": "Удахгүй уулзацгаая!",
				"Sent to {{email}}": "{{email}} хаяг руу илгээлээ",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "{{siteTitle}}-д нэвтрэх",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Доорх холбоосыг дарснаар {{siteTitle}} бүртгэлээ дуусгаж, автоматаар нэвтрэнэ:",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}}-д бүтргүүлсэнд баярлалаа!",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}}-д захиалга өгсөнд баярлалаа!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}}-д захиалга өгсөнд баярлалаа. Доох холбоосыг дарснаар автоматаар нэвтрэнэ:",
				"This email address will not be used.": "Энэхүү имэйл хаяг ашиглагдахгүй.",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}}-д тавтай морилно уу!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Дахин тавтай морилно уу! Энэхүү холбоосыг ашиглан {{siteTitle}}-д нэвтрэнэ үү:",
				"You can also copy & paste this URL into your browser:": "Мөн та энэ холбоосыг хуулж аван өөрийн интернет хөтөч рүүгээ оруулж болно:",
				"You will not be signed up, and no account will be created for you.": "Та бүртгэгдэхгүй бөгөөд танд ямар нэгэн бүртгэл үүсэхгүй.",
				"You will not be subscribed.": "Таны захиалга цуцлагдахгүй.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Таны {{siteTitle}} захиалга идэвжихэд ганцхан алхам үлдлээ - энэхүү холбоосоор өөрийн имэйлээ идэхжүүлнэ үү:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		xP = "Бүртгэл",
		EP = "Буцах",
		TP = "",
		jP = "",
		$P = "Хаах",
		AP = "Сэтгэгдлүүд",
		NP = "",
		MP = "Баталгаажуулах",
		PP = "Үргэлжлүүлэх",
		_P = "",
		zP = "Имэйл",
		OP = "Имэйлүүд",
		DP = "",
		IP = "Удирдах",
		RP = "Сарын",
		YP = "Нэр",
		LP = "",
		FP = "Үнэ",
		BP = "",
		UP = "Дахин оролдох",
		VP = "Хадгалах",
		HP = "",
		qP = "",
		WP = "",
		KP = "",
		JP = "",
		GP = "",
		QP = "Жилийн",
		uZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: xP,
			Back: EP,
			Change: TP,
			Choose: jP,
			Close: $P,
			Comments: AP,
			Complimentary: NP,
			Confirm: MP,
			Continue: PP,
			Edit: _P,
			Email: zP,
			Emails: OP,
			Forever: DP,
			Manage: IP,
			Monthly: RP,
			Name: YP,
			Plan: LP,
			Price: FP,
			Recommendations: BP,
			Retry: UP,
			Save: VP,
			Subscribe: HP,
			Subscribed: qP,
			Success: WP,
			Unsubscribed: KP,
			Update: JP,
			Visit: GP,
			Yearly: QP,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% хямдрал",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} өдөр үнэгүй",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Таны имэйл рүү нэвтрэх холбоосыг илгээлээ. Хэрвээ 3 минутын дотор ирэхгүй бол спамаа шалгана уу.",
				Account: xP,
				"Account settings": "Бүртгэлийн тохиргоо",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Үнэгүй туршилтын хугацаа дуусахад таны данснаас сонгосон багцын үнэ хасагдана. Гэвч та өмнө нь цуцлах боломжтой.",
				"Already a member?": "Бүртгэлтэй юу?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: EP,
				"Back to Log in": "Нэвтрэх хэсэг рүү буцах",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Захиалгаа цуцлах",
				"Cancellation reason": "Цуцалсан шалтгаан",
				Change: TP,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: jP,
				"Choose a different plan": "Өөр багц сонгох",
				"Choose your newsletters": "Товхимолоо сонгох",
				"Click here to retry": "",
				Close: $P,
				Comments: AP,
				Complimentary: NP,
				Confirm: MP,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: PP,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Бүртгэлээ устгах",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Бүргэлгүй юу?",
				Edit: _P,
				Email: zP,
				"Email newsletter": "",
				"Email preference updated.": "Имэйлийн тохиргоо шинэчлэгдлээ.",
				"Email preferences": "Имэйлийн тохиргоо",
				Emails: OP,
				"Emails disabled": "Имэйлийг идэхгүй болгосон",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: DP,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Тусламж",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Хэн нэгэн таны сэтгэгдэлд хариу бичих үед мэдэгдэх",
				"Give feedback on this post": "Энэ нийтлэлд саналаа өгөх",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Таалагдсангүй",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: IP,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: RP,
				"More like this": "Таалагдлаа",
				Name: YP,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Имэйл ирээгүй юу?",
				"Now check your email!": "Одоо имэйлээ шалгана уу!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: LP,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: FP,
				"Re-enable emails": "Имэйлийг дахин идэвхжүүлэх",
				Recommendations: BP,
				"Renews at {{price}}.": "",
				Retry: UP,
				Save: VP,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Нэвтрэх холбоосыг илгээж байна...",
				"Sending...": "Илгээж байна...",
				"Show all": "",
				"Sign in": "Нэвтрэх",
				"Sign out": "",
				"Sign up": "Бүртгүүлэх",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "{{amount}} өдрийн үнэгүй туршилтыг эхлүүлэх",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Саналаа илгээх",
				Subscribe: HP,
				Subscribed: qP,
				Success: WP,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Захиалгыг амжилттай цуцаллаа",
				"Thanks for the feedback!": "Саналаа илгээсэнд баярлалаа!",
				"That didn't go to plan": "",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Энэхүү сайт руу зөвхөн урилгаар нэвтрэх боломжтой тул та админд нь хандана уу.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Тан руу илгээсэн баталгаажуулах холбоос дээр дарж бүртгэлээ дуусгана уу. Хэрвээ 3 минутын дотор ирэхгүй бол спамаа шалгана уу!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Бүх имэйлийг зогсоох",
				Unsubscribed: KP,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Имэйлийг зогсоосон ч таны {{title}} төлбөртэй захиалга цуцлагдахгүй",
				Update: JP,
				"Update your preferences": "Тохиргоогоо шинэчлэх",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: GP,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Энэхүү имэйл хаяг олдоогүй учир захиалгыг цуцлах боломжгүй. Та сайтын админд хандана уу.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: QP,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Таны захиалга амжилттай дахин идэвхжлээ",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Таны имэйл хүлээж авахгүй байгаа шалтгаан нь нэг бол та аль нэг имэйлийг спам гэж тэмдэглэсэн, эсвэл таны хаяг имэйл хүлээж авах боломжгүй байна.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Таны бүртгэл",
				"Your input helps shape what gets published.": "Таны санал дараа дараагийн нийтлэлийг илүү чанартай болгоход туслана",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		XP = "",
		cZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: XP,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: XP,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		ZP = "",
		e_ = "",
		t_ = "",
		n_ = "",
		i_ = "",
		o_ = "",
		r_ = "",
		a_ = "",
		s_ = "",
		l_ = "",
		u_ = "",
		c_ = "",
		d_ = "",
		m_ = "",
		p_ = "",
		f_ = "",
		h_ = "",
		g_ = "",
		dZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: ZP,
			Cancel: e_,
			Comment: t_,
			Delete: n_,
			Discussion: i_,
			Edit: o_,
			Edited: r_,
			Expertise: a_,
			Hide: s_,
			Name: l_,
			Neurosurgeon: u_,
			Reply: c_,
			Report: d_,
			Save: m_,
			Sending: p_,
			Sent: f_,
			Show: h_,
			Yesterday: g_,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: ZP,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: e_,
				Comment: t_,
				"Complete your profile": "",
				Delete: n_,
				"Deleted member": "",
				Discussion: i_,
				Edit: o_,
				"Edit this comment": "",
				Edited: r_,
				"Enter your name": "",
				Expertise: a_,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: s_,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: l_,
				Neurosurgeon: u_,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: c_,
				"Reply to comment": "",
				Report: d_,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: m_,
				Sending: p_,
				Sent: f_,
				Show: h_,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: g_,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		mZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Semoga berjaya!",
				"Complete signup for {{siteTitle}}!": "Lengkapkan pendaftaran untuk {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Lengkapkan pendaftaran anda ke {{siteTitle}}!",
				"Confirm email address": "Sahkan alamat e-mel",
				"Confirm signup": "Sahkan pendaftaran",
				"Confirm your email address": "Sahkan alamat e-mel anda",
				"Confirm your email update for {{siteTitle}}!": "Sahkan kemas kini e-mel anda untuk {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Sahkan langganan anda kepada {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Untuk keselamatan anda, pautan akan tamat tempoh dalam masa 24 jam.",
				"Hey there,": "Hai,",
				"Hey there!": "Hai!",
				"If you did not make this request, you can safely ignore this email.": "Jika anda tidak membuat permintaan ini, anda boleh mengabaikan e-mel ini dengan selamat.",
				"If you did not make this request, you can simply delete this message.": "Jika anda tidak membuat permintaan ini, anda boleh memadamkan mesej ini.",
				"Please confirm your email address with this link:": "Sila sahkan alamat e-mel anda dengan pautan ini:",
				"Secure sign in link for {{siteTitle}}": "Pautan log masuk untuk {{siteTitle}}",
				"See you soon!": "Jumpa lagi!",
				"Sent to {{email}}": "Dihantar ke {{email}}",
				"Sign in": "Log masuk",
				"Sign in to {{siteTitle}}": "Log masuk ke {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Ketik pautan di bawah untuk melengkapkan proses pendaftaran {{siteTitle}} dan log masuk secara automatik:",
				"Thank you for signing up to {{siteTitle}}!": "Terima kasih kerana mendaftar ke {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Terima kasih kerana melanggan {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Terima kasih kerana melanggan {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Terima kasih kerana melanggan {{siteTitle}}. Ketik pautan di bawah untuk log masuk secara automatik:",
				"This email address will not be used.": "Alamat e-mel ini tidak akan digunakan.",
				"Welcome back to {{siteTitle}}!": "Selamat kembali ke {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Selamat kembali! Gunakan pautan ini untuk log masuk dengan selamat ke akaun {{siteTitle}} anda:",
				"You can also copy & paste this URL into your browser:": "Anda juga boleh menyalin & menampal URL ini ke dalam pelayar anda:",
				"You will not be signed up, and no account will be created for you.": "Anda tidak akan didaftarkan, dan tiada akaun akan dibuat untuk anda.",
				"You will not be subscribed.": "Anda tidak akan dilanggan.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Anda hanya satu ketikan dari melanggan{{siteTitle}} — sila sahkan alamat e-mel anda dengan pautan ini:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Anda hanya satu ketikan dari melanggan {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		y_ = "Akaun",
		b_ = "Kembali",
		k_ = "Ubah",
		v_ = "Pilih",
		w_ = "Tutup",
		S_ = "Komen",
		C_ = "",
		x_ = "Sahkan",
		E_ = "Teruskan",
		T_ = "Sunting",
		j_ = "E-mel",
		$_ = "E-mel",
		A_ = "Selamanya",
		N_ = "Urus",
		M_ = "Bulanan",
		P_ = "Nama",
		__ = "Pelan",
		z_ = "Harga",
		O_ = "",
		D_ = "Cuba semula",
		I_ = "Simpan",
		R_ = "Langgan",
		Y_ = "Dilanggan",
		L_ = "Berjaya",
		F_ = "Langganan diberhentikan",
		B_ = "Kemas kini",
		U_ = "",
		V_ = "Tahunan",
		pZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: y_,
			Back: b_,
			Change: k_,
			Choose: v_,
			Close: w_,
			Comments: S_,
			Complimentary: C_,
			Confirm: x_,
			Continue: E_,
			Edit: T_,
			Email: j_,
			Emails: $_,
			Forever: A_,
			Manage: N_,
			Monthly: M_,
			Name: P_,
			Plan: __,
			Price: z_,
			Recommendations: O_,
			Retry: D_,
			Save: I_,
			Subscribe: R_,
			Subscribed: Y_,
			Success: L_,
			Unsubscribed: F_,
			Update: B_,
			Visit: U_,
			Yearly: V_,
			default: {
				"{{amount}} days free": "Percuma {{amount}} hari",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "{{amount}} potongan untuk {{number}} bulan pertama.",
				"{{amount}} off for first {{period}}.": "{{amount}} potongan untuk {{period}} pertama.",
				"{{amount}} off forever.": "{{amount}} potongan selama-lamanya.",
				"{{discount}}% discount": "{{discount}}% diskaun",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} tidak akan menerima newsletter {{newsletterName}} lagi.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} tidak akan menerima email apabila seseorang membalas komen anda.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} tidak akan menerima newsletter ini lagi.",
				"{{trialDays}} days free": "Percuma {{trialDays}} hari",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Pautan log masuk telah dihantar ke peti masuk anda. Jika ia tidak sampai dalam masa 3 minit, pastikan anda menyemak folder spam anda.",
				Account: y_,
				"Account settings": "Tetapan akaun",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Selepas tempoh percubaan percuma tamat, anda akan dicaj harga biasa untuk peringkat yang anda pilih. Anda sentiasa boleh membatalkan sebelum itu.",
				"Already a member?": "Sudah menjadi ahli?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ralat yang tidak dijangka berlaku. Sila cuba lagi atau <a>hubungi sokongan</a> jika ralat berterusan.",
				Back: b_,
				"Back to Log in": "Kembali ke Log masuk",
				"Billing info": "Maklumat bil",
				"Black Friday": "",
				"Cancel anytime.": "Batalkan bila-bila masa.",
				"Cancel subscription": "Batalkan langganan",
				"Cancellation reason": "Alasan pembatalan",
				Change: k_,
				"Check spam & promotions folders": "Semak folder spam & promosi",
				"Check with your mail provider": "Semak dengan pembekal mel anda",
				Choose: v_,
				"Choose a different plan": "Pilih pelan yang berbeza",
				"Choose your newsletters": "Pilih newsletter anda",
				"Click here to retry": "Klik di sini untuk cuba semula",
				Close: w_,
				Comments: S_,
				Complimentary: C_,
				Confirm: x_,
				"Confirm cancellation": "Sahkan pembatalan",
				"Confirm subscription": "Sahkan langganan",
				"Contact support": "Hubungi sokongan",
				Continue: E_,
				"Continue subscription": "Teruskan langganan",
				"Could not sign in. Login link expired.": "Tidak dapat log masuk. Pautan log masuk tamat tempoh.",
				"Could not update email! Invalid link.": "Tidak dapat mengemas kini e-mel! Pautan tidak sah.",
				"Create a new contact": "Cipta kenalan baru",
				"Current plan": "Pelam semasa",
				"Delete account": "Padam akaun",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Tidak bermaksud untuk melakukan ini? Urus pilihan anda <butang>di sini</button>.",
				"Don't have an account?": "Tiada akaun?",
				Edit: T_,
				Email: j_,
				"Email newsletter": "Newsletter e-mel",
				"Email preference updated.": "Emel pilihan dikemas kini.",
				"Email preferences": "Emel pilihan",
				Emails: $_,
				"Emails disabled": "E-mel dilumpuhkan",
				"Ends {{offerEndDate}}": "Tamat pada {{offerEndDate}}",
				Error: "Ralat",
				"Expires {{expiryDate}}": "Luput pada {{expiryDate}}",
				Forever: A_,
				"Free Trial – Ends {{trialEnd}}": "Percubaan Percuma – Tamat {{trialEnd}}",
				"Get help": "Dapatkan bantuan",
				"Get in touch for help": "Hubungi untuk mendapatkan bantuan",
				"Get notified when someone replies to your comment": "Dapatkan pemberitahuan apabila seseorang membalas komen anda",
				"Give feedback on this post": "Berikan maklum balas mengenai pos ini",
				"Help! I'm not receiving emails": "Tolong! Saya tidak menerima e-mel",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Jika newsletter ditanda sebagai spam, e-mel akan dilumpuhkan secara automatik untuk alamat tersebut untuk memastikan anda tidak lagi menerima sebarang mesej yang tidak diingini.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Jika aduan spam itu tidak disengajakan, atau anda ingin mula menerima e-mel semula, anda boleh melanggan semula e-mel dengan mengklik butang pada skrin sebelumnya.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Jika anda membatalkan langganan anda sekarang, anda akan terus mendapat akses sehingga {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Jika anda mempunyai akaun e-mel korporat atau kerajaan, hubungi jabatan IT anda dan minta mereka membenarkan e-mel diterima daripada {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Jika anda ingin mula menerima e-mel semula, langkah terbaik seterusnya ialah menyemak alamat e-mel anda pada fail untuk sebarang isu dan kemudian klik langgan semula pada skrin sebelumnya.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Jika anda tidak menerima newsletter e-mel yang anda langgan, berikut adalah beberapa perkara untuk diperiksa.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Jika anda telah menyelesaikan semua semakan ini dan anda masih tidak menerima e-mel, anda boleh menghubungi untuk mendapatkan sokongan dengan menghubungi {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Sekiranya kegagalan kekal diterima semasa cuba menghantar newsletter, e-mel akan dilumpuhkan pada akaun.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Dalam klien e-mel anda tambah {{senderEmail}} pada senarai kenalan anda. Ini memberi isyarat kepada pembekal mel anda bahawa e-mel yang dihantar dari alamat ini harus dipercayai.",
				"Less like this": "Kurang macam ni",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Pastikan e-mel tidak tiba-tiba masuk ke dalam folder Spam atau Promosi peti masuk anda. Jika ya, klik pada "Tandakan sebagai bukan spam" dan/atau "Alih ke peti masuk".',
				Manage: N_,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: M_,
				"More like this": "Lebih seperti ini",
				Name: P_,
				"Need more help? Contact support": "Perlukan bantuan lagi? Hubungi sokongan",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Newsletter boleh dilumpuhkan pada akaun anda atas dua sebab: E-mel sebelumnya telah ditandakan sebagai spam atau percubaan menghantar e-mel mengakibatkan kegagalan kekal (bounce).",
				"Not receiving emails?": "Tidak menerima e-mel?",
				"Now check your email!": "Semak e-mel anda sekarang!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Setelah melanggan semula, jika anda masih tidak melihat e-mel dalam peti masuk anda, semak folder spam anda. Sesetengah pembekal peti masuk menyimpan rekod aduan spam sebelumnya dan akan terus membenderakan e-mel. Jika ini berlaku, tandakan surat berita terkini sebagai 'Bukan spam' untuk mengalihkannya kembali ke peti masuk utama anda.",
				"Permanent failure (bounce)": "Kegagalan kekal (bounce)",
				Plan: __,
				"Plan checkout was cancelled.": "Daftar keluar pelan telah dibatalkan.",
				"Plan upgrade was cancelled.": "Naik taraf pelan telah dibatalkan.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Sila isikan medan yang diperlukan",
				Price: z_,
				"Re-enable emails": "Membolehkan semula e-mel",
				Recommendations: O_,
				"Renews at {{price}}.": "Perbaharui pada {{price}}.",
				Retry: D_,
				Save: I_,
				"Send an email and say hi!": "Hantar e-mel dan katakan hai!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Hantar e-mel kepada {{senderEmail}} dan katakan hai. Ini juga boleh membantu memberi isyarat kepada pembekal mel anda bahawa e-mel ke dan dari alamat ini harus dipercayai.",
				"Sending login link...": "Menghantar pautan log masuk...",
				"Sending...": "Menghantar...",
				"Show all": "",
				"Sign in": "Log masuk",
				"Sign out": "Log keluar",
				"Sign up": "Daftar",
				"Signup error: Invalid link": "Ralat daftar: Pautan tidak sah",
				"Sorry, that didn’t work.": "Maaf, itu tidak berfungsi.",
				"Spam complaints": "Aduan spam",
				"Start {{amount}}-day free trial": "Mulakan percubaan percuma {{amount}} hari",
				"Starting {{startDate}}": "Mulai {{startDate}}",
				"Starting today": "Mulai hari ini",
				"Submit feedback": "Serahkan maklum balas",
				Subscribe: R_,
				Subscribed: Y_,
				Success: L_,
				"Success! Check your email for magic link to sign-in.": "Berjaya! Semak e-mel anda untuk magic link untuk log masuk.",
				"Success! Your account is fully activated, you now have access to all content.": "Berjaya! Akaun anda telah diaktifkan sepenuhnya, anda kini mempunyai akses ke semua kandungan.",
				"Success! Your email is updated.": "Berjaya! E-mel anda dikemas kini.",
				"Successfully unsubscribed": "Pemberhentian langganan berjaya",
				"Thanks for the feedback!": "Terima kasih atas maklum balas!",
				"That didn't go to plan": "Itu tidak berjalan sesuai dengan rancangan",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Alamat e-mel yang kami miliki untuk anda adalah {{memberEmail}} — jika itu tidak betul, anda boleh mengemas kini di <button>ruang tetapan akaun</button> anda.",
				"There was a problem submitting your feedback. Please try again a little later.": "Terdapat masalah menghantar maklum balas anda. Sila cuba sebentar lagi.",
				"This site is invite-only, contact the owner for access.": "Laman web ini hanya untuk jemputan, hubungi pemilik untuk akses.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Untuk melengkapkan pendaftaran, klik pautan pengesahan di peti masuk anda. Jika ia tidak tiba dalam masa 3 minit, semak folder spam anda!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Cuba secara percuma selama {{amount}} hari, kemudian {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Buka akses ke semua newsletter dengan menjadi pelanggan berbayar.",
				"Unsubscribe from all emails": "Berhenti langganan dari semua e-mel",
				Unsubscribed: F_,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Memberhentikan langganan dari e-mel tidak akan membatalkan langganan berbayar anda ke {{title}}",
				Update: B_,
				"Update your preferences": "Kemas kini keutamaan anda",
				"Verify your email address is correct": "Sahkan jika alamat e-mel anda betul",
				"View plans": "Lihat pelan",
				Visit: U_,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Kami tidak dapat membatalkan langganan anda kerana alamat e-mel tidak ditemui. Sila hubungi pemilik laman web.",
				"Welcome back, {{name}}!": "Selamat kembali, {{name}}!",
				"Welcome back!": "Selamat kembali!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Apabila peti masuk gagal menerima e-mel, ia biasanya disebut sebagai bounce. Dalam banyak kes, ini hanya sementara. Walau bagaimanapun, dalam beberapa kes, e-mel bounce boleh dikembalikan sebagai kegagalan kekal apabila alamat e-mel tidak sah atau tidak wujud.",
				"Why has my email been disabled?": "Mengapa e-mel saya telah dilumpuhkan?",
				Yearly: V_,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Anda kini mempunyai keahlian percuma, naik taraf ke langganan berbayar untuk akses penuh.",
				"You have been successfully resubscribed": "Anda telah berjaya melanggan semula",
				"You're currently not receiving emails": "Anda kini tidak menerima e-mel",
				"You're not receiving emails": "Anda tidak menerima e-mel",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Anda tidak menerima e-mel kerana anda sama ada menandai mesej terkini sebagai spam, atau kerana mesej tidak dapat dihantar ke alamat e-mel yang diberikan.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Anda telah berjaya log masuk.",
				"You've successfully subscribed to": "",
				"Your account": "Akaun anda",
				"Your input helps shape what gets published.": "Input anda membantu membentuk apa yang diterbitkan.",
				"Your subscription will expire on {{expiryDate}}": "Langganan anda akan tamat tempoh pada {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Langganan anda akan diperbaharui pada {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Langganan anda akan bermula pada {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		H_ = "Langgan",
		fZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: H_,
			default: {
				"Email sent": "",
				"Now check your email!": "Semak e-mel anda sekarang!",
				"Please enter a valid email address": "Sila masukkan alamat e-mel yang sah",
				"Something went wrong, please try again.": "Kesilapan telah berlaku, sila cuba lagi.",
				Subscribe: H_,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Untuk melengkapkan pendaftaran, klik pautan pengesahan dalam peti masuk anda. Jika ia tidak sampai dalam masa 3 minit, semak folder spam anda!",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		q_ = "Anoniem",
		W_ = "Annuleren",
		K_ = "Verstuur",
		J_ = "Verwijderen",
		G_ = "Gesprek",
		Q_ = "Bewerken",
		X_ = "Bewerkt",
		Z_ = "Expertise",
		e2 = "Verbergen",
		t2 = "Naam",
		n2 = "Neurochirurg",
		i2 = "Beantwoorden",
		o2 = "Melden",
		r2 = "Opslaan",
		a2 = "Verzenden",
		s2 = "Verzonden",
		l2 = "Tonen",
		u2 = "Gisteren",
		hZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: q_,
			Cancel: W_,
			Comment: K_,
			Delete: J_,
			Discussion: G_,
			Edit: Q_,
			Edited: X_,
			Expertise: Z_,
			Hide: e2,
			Name: t2,
			Neurosurgeon: n2,
			Reply: i2,
			Report: o2,
			Save: r2,
			Sending: a2,
			Sent: s2,
			Show: l2,
			Yesterday: u2,
			default: {
				"{{amount}} characters left": "Nog {{amount}} tekens over",
				"{{amount}} comments": "{{amount}} reacties",
				"{{amount}} days ago": "{{amount}} dagen geleden",
				"{{amount}} hours ago": "{{amount}} uur geleden",
				"{{amount}} minutes ago": "{{amount}} minuten geleden",
				"{{amount}} months ago": "{{amount}} maanden geleden",
				"{{amount}} seconds ago": "{{amount}} seconden geleden",
				"{{amount}} weeks ago": "{{amount}} weken geleden",
				"{{amount}} years ago": "{{amount}} jaar geleden",
				"1 comment": "Eén reactie",
				"Add comment": "Versturen",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Voeg context toe aan je reactie, deel je naam en expertise om een gezonde discussie te bevorderen.",
				"Add reply": "Beantwoorden",
				"Already a member?": "Al lid?",
				Anonymous: q_,
				"Become a member of {{publication}} to start commenting.": "Word lid van {{publication}} om te kunnen reageren.",
				"Become a paid member of {{publication}} to start commenting.": "Word betalend lid van {{publication}} om te kunnen reageren.",
				Cancel: W_,
				Comment: K_,
				"Complete your profile": "Vervolledig jouw profiel",
				Delete: J_,
				"Deleted member": "Verwijderd lid",
				Discussion: G_,
				Edit: Q_,
				"Edit this comment": "Bewerk deze reactie",
				Edited: X_,
				"Enter your name": "Vul je naam in",
				Expertise: Z_,
				"Founder @ Acme Inc": "Oprichter, Acme BV",
				"Full-time parent": "Full-time ouder",
				"Head of Marketing at Acme, Inc": "Acme BV, Hoofd Marketing",
				Hide: e2,
				"Hide comment": "Verberg reactie",
				"Jamie Larson": "Jan Jansen",
				"Join the discussion": "Doe mee aan het gesprek",
				"Just now": "Zojuist",
				"Local resident": "Lokale bewoner",
				"Member discussion": "Gesprek",
				Name: t2,
				Neurosurgeon: n2,
				"One day ago": "Een dag geleden",
				"One hour ago": "Een uur geleden",
				"One minute ago": "Een minuut geleden",
				"One month ago": "Een maand geleden",
				"One week ago": "Een week geleden",
				"One year ago": "Een jaar geleden",
				Reply: i2,
				"Reply to comment": "Beantwoord deze reactie",
				Report: o2,
				"Report comment": "Meld reactie",
				"Report this comment": "Meld deze reactie",
				"Report this comment?": "Meld deze reactie?",
				Save: r2,
				Sending: a2,
				Sent: s2,
				Show: l2,
				"Show {{amount}} more replies": "Toon {{amount}} extra antwoorden",
				"Show {{amount}} previous comments": "Toon {{amount}} vorige reacties",
				"Show 1 more reply": "Toon nog 1 antwoord",
				"Show 1 previous comment": "Toon 1 vorige reactie",
				"Show comment": "Toon reactie",
				"Sign in": "Inloggen",
				"Sign up now": "Registreren",
				"Start the conversation": "Begin het gesprek",
				"This comment has been hidden.": "Deze reactie is verborgen.",
				"This comment has been removed.": "Deze reactie is verwijderd.",
				"Upgrade now": "Upgrade nu",
				Yesterday: u2,
				"You want to report this comment?": "Wil je deze reactie melden?",
				"Your request will be sent to the owner of this site.": "Jouw melding zal worden verzonden naar de eigenaar van deze site."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		gZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Tot snel!",
				"Complete signup for {{siteTitle}}!": "Bevestig je aanmelding voor {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Rond je aanmedling af voor {{siteTitle}}!",
				"Confirm email address": "Bevestig e-mailadres",
				"Confirm signup": "Bevestig registratie",
				"Confirm your email address": "Bevestig je e-mailadres",
				"Confirm your email update for {{siteTitle}}!": "Bevestig je nieuwe e-mailadres voor {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bevestig je abonnement op {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Voor je veiligheid vervalt de link na 24 uur.",
				"Hey there,": "Hallo,",
				"Hey there!": "Hallo!",
				"If you did not make this request, you can safely ignore this email.": "Als deze aanvraag niet van jou is, kun je deze e-mail negeren.",
				"If you did not make this request, you can simply delete this message.": "Als deze aanvraag niet van jou is, kun je deze e-mail verwijderen.",
				"Please confirm your email address with this link:": "Bevestig je e-mailadres met deze link:",
				"Secure sign in link for {{siteTitle}}": "Veilige inloglink voor {{siteTitle}}",
				"See you soon!": "Tot snel!",
				"Sent to {{email}}": "Verzonden naar {{email}}",
				"Sign in": "Inloggen",
				"Sign in to {{siteTitle}}": "Inloggen op {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klik op de link hieronder om je registratie voor {{siteTitle}} af te ronden en automatisch in te loggen:",
				"Thank you for signing up to {{siteTitle}}!": "Bedankt voor het aanmelden bij {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Bedankt voor je abonnement op {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Bedankt voor je abonnement op {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Bedankt voor je abonnement op {{siteTitle}}. Klik op de link hieronder om automatisch in te loggen:",
				"This email address will not be used.": "Dit e-mailadres zal niet worden niet gebruikt.",
				"Welcome back to {{siteTitle}}!": "Welkom terug bij {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Welkom terug! Gebruik deze link om veilig in te loggen op je {{siteTitle}} account:",
				"You can also copy & paste this URL into your browser:": "Je kan deze URL ook kopiëren en plakken in je browser:",
				"You will not be signed up, and no account will be created for you.": "Je zal niet worden geregistreerd en er zal geen account voor je worden aangemaakt.",
				"You will not be subscribed.": "Je zal niet worden geabonneerd.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Je bent één klik verwijderd van een abonnement op {{siteTitle}} — bevestig je e-mailadres met deze link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Je bent één klik verwijderd van een abonnement op {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		c2 = "Account",
		d2 = "Terug",
		m2 = "Wijzigen",
		p2 = "Kies",
		f2 = "Sluiten",
		h2 = "Reacties",
		g2 = "Gratis",
		y2 = "Bevestigen",
		b2 = "Doorgaan",
		k2 = "Bewerken",
		v2 = "E-mail",
		w2 = "E-mails",
		S2 = "Voor altijd",
		C2 = "Beheer",
		x2 = "Maandelijks",
		E2 = "Naam",
		T2 = "",
		j2 = "Prijs",
		$2 = "",
		A2 = "Opnieuw proberen",
		N2 = "Opslaan",
		M2 = "",
		P2 = "",
		_2 = "",
		z2 = "",
		O2 = "",
		D2 = "",
		I2 = "Jaarlijks",
		yZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: c2,
			Back: d2,
			Change: m2,
			Choose: p2,
			Close: f2,
			Comments: h2,
			Complimentary: g2,
			Confirm: y2,
			Continue: b2,
			Edit: k2,
			Email: v2,
			Emails: w2,
			Forever: S2,
			Manage: C2,
			Monthly: x2,
			Name: E2,
			Plan: T2,
			Price: j2,
			Recommendations: $2,
			Retry: A2,
			Save: N2,
			Subscribe: M2,
			Subscribed: P2,
			Success: _2,
			Unsubscribed: z2,
			Update: O2,
			Visit: D2,
			Yearly: I2,
			default: {
				"{{amount}} days free": "{{amount}} dagen gratis",
				"{{amount}} off": "{{amount}} korting",
				"{{amount}} off for first {{number}} months.": "{{amount}} korting voor de eerste {{number}} maanden.",
				"{{amount}} off for first {{period}}.": "{{amount}} korting voor de eerste {{period}}.",
				"{{amount}} off forever.": "{{amount}} korting voor altijd.",
				"{{discount}}% discount": "{{discount}}% korting",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dagen gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Je hebt een email met een login link ontvangen. Check je spamfolder als hij niet binnen de 3 minuten aankomt.",
				Account: c2,
				"Account settings": "Gegevens",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Na de proefperiode zal het normale tarief in rekening worden gebracht voor het door jou gekozen abonnement.",
				"Already a member?": "Al lid?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: d2,
				"Back to Log in": "Terug naar inloggen",
				"Billing info": "Betaalgegevens",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Altijd opzegbaar.",
				"Cancel subscription": "Abonnement opzeggen",
				"Cancellation reason": "Reden voor opzegging",
				Change: m2,
				"Check spam & promotions folders": "Check je spam folders",
				"Check with your mail provider": "Check bij je e-mail provider",
				Choose: p2,
				"Choose a different plan": "Kies een ander abonnement",
				"Choose your newsletters": "Kies jouw nieuwsbrieven",
				"Click here to retry": "Click hier om opnieuw te proberen",
				Close: f2,
				Comments: h2,
				Complimentary: g2,
				Confirm: y2,
				"Confirm cancellation": "Bevestig opzegging",
				"Confirm subscription": "Bevestig abonnement",
				"Contact support": "",
				Continue: b2,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "Huidig abonnement",
				"Delete account": "Account verwijderen",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Heb je nog geen account?",
				Edit: k2,
				Email: v2,
				"Email newsletter": "Nieuwsbrief",
				"Email preference updated.": "E-mailinstellingen aanpassen",
				"Email preferences": "E-mailinstellingen",
				Emails: w2,
				"Emails disabled": "E-mails zijn uitgeschakeld",
				"Ends {{offerEndDate}}": "Eindigt op {{offerEndDate}}",
				Error: "Fout",
				"Expires {{expiryDate}}": "Verloopt op {{expiryDate}}",
				Forever: S2,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Lees meer",
				"Get in touch for help": "Neem contact op voor hulp",
				"Get notified when someone replies to your comment": "Blijf op de hoogte als iemand op jouw reactie reageert",
				"Give feedback on this post": "Deel je mening over dit artikel",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Minder hiervan",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: C2,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: x2,
				"More like this": "Meer hiervan",
				Name: E2,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Ontvang je geen e-mails?",
				"Now check your email!": "Check nu je e-mail!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: T2,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: j2,
				"Re-enable emails": "E-mails weer inschakelen",
				Recommendations: $2,
				"Renews at {{price}}.": "",
				Retry: A2,
				Save: N2,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Inloglink versturen...",
				"Sending...": "Versturen...",
				"Show all": "",
				"Sign in": "Inloggen",
				"Sign out": "Uitloggen",
				"Sign up": "Registreren",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Start gratis je {{amount}}-daagse proefperiode",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Deel je feedback",
				Subscribe: M2,
				Subscribed: P2,
				Success: _2,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Succesvol uitgeschreven",
				"Thanks for the feedback!": "Bedankt voor je feedback!",
				"That didn't go to plan": "Er ging iets mis",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Deze site is alleen toegankelijk op uitnodiging, neem contact op met de eigenaar.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Klik op de bevestigingslink in de e-mail om je registratie af te ronden. Check ook je spamfolder als hij niet binnen de 3 minuten aankomt.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Uitschrijven voor alles",
				Unsubscribed: z2,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Je betaalde abonnement voor {{title}} wordt niet geannuleerd als je je uitschrijft voor e-mails",
				Update: O2,
				"Update your preferences": "Voorkeuren aanpassen",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: D2,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Het is niet gelukt om je uit te schrijven, omdat je e-mailadres niet is gevonden. Neem contact met ons op.",
				"Welcome back, {{name}}!": "Welkom terug, {{name}}!",
				"Welcome back!": "Welkom terug!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: I2,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Je bent weer succesvol geabonneerd",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Je ontvangt geen e-mails omdat je ofwel een recent bericht als spam had gemarkeerd, of omdat de berichten niet verzonden konden worden naar jouw e-mailadres.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Je bent succesvol ingelogd.",
				"You've successfully subscribed to": "Je bent succesvol geabonneerd op",
				"Your account": "Jouw account",
				"Your input helps shape what gets published.": "Jouw mening helpt bepalen wat er gepubliceerd wordt.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		R2 = "Inschrijven",
		bZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: R2,
			default: {
				"Email sent": "E-mail verzonden",
				"Now check your email!": "Check nu je e-mail!",
				"Please enter a valid email address": "Vul een geldig e-mailadres in",
				"Something went wrong, please try again.": "Er ging iets mis, probeer het opnieuw.",
				Subscribe: R2,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Om je inschrijving te voltooien, klik op de bevestigingslink in je inbox. Als het niet binnen 3 minuten aankomt, controleer dan je spamfolder!",
				"Your email address": "Jouw e-mailadres"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Y2 = "",
		L2 = "",
		F2 = "",
		B2 = "",
		U2 = "",
		V2 = "",
		H2 = "",
		q2 = "",
		W2 = "",
		K2 = "",
		J2 = "",
		G2 = "",
		Q2 = "",
		X2 = "",
		Z2 = "",
		ez = "",
		tz = "",
		nz = "",
		kZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: Y2,
			Cancel: L2,
			Comment: F2,
			Delete: B2,
			Discussion: U2,
			Edit: V2,
			Edited: H2,
			Expertise: q2,
			Hide: W2,
			Name: K2,
			Neurosurgeon: J2,
			Reply: G2,
			Report: Q2,
			Save: X2,
			Sending: Z2,
			Sent: ez,
			Show: tz,
			Yesterday: nz,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: Y2,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: L2,
				Comment: F2,
				"Complete your profile": "",
				Delete: B2,
				"Deleted member": "",
				Discussion: U2,
				Edit: V2,
				"Edit this comment": "",
				Edited: H2,
				"Enter your name": "",
				Expertise: q2,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: W2,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: K2,
				Neurosurgeon: J2,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: G2,
				"Reply to comment": "",
				Report: Q2,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: X2,
				Sending: Z2,
				Sent: ez,
				Show: tz,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: nz,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		vZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Beste helsing!",
				"Complete signup for {{siteTitle}}!": "Fullfør registreringa til {{siteTitle}}!  ",
				"Complete your sign up to {{siteTitle}}!": "Fullfør registreringa di til {{siteTitle}}!",
				"Confirm email address": "Bekreft e-postadressa",
				"Confirm signup": "Bekreft at du vil registrera deg",
				"Confirm your email address": "Bekreft e-postadressa di",
				"Confirm your email update for {{siteTitle}}!": "Bekreft at du vil oppdatera e-postadressa hos {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bekreft at du vil abonnera på {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "For di sikkerheit vil lenka slutta å verka om 24 timar.",
				"Hey there,": "Hei,",
				"Hey there!": "Hei!",
				"If you did not make this request, you can safely ignore this email.": "Viss du ikkje bad om denne e-posten, kan du trygt ignorera han.",
				"If you did not make this request, you can simply delete this message.": "Viss du ikkje bad om denne meldinga, kan du trygt sletta han.",
				"Please confirm your email address with this link:": "Ver gild og bekreft e-postadressa di med denne lenka:",
				"Secure sign in link for {{siteTitle}}": "Trygg innlogginslenke for {{siteTitle}}",
				"See you soon!": "På gjensyn!",
				"Sent to {{email}}": "Sendt til {{email}}",
				"Sign in": "Logg inn",
				"Sign in to {{siteTitle}}": "Logg inn på {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klikk på lenka nedanfor for å fullføra registreringa di til {{siteTitle}}, og bli automatisk innlogga:",
				"Thank you for signing up to {{siteTitle}}!": "Takk for at du registrerte deg hos {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Takk for at du abonnerer på {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Takk for at du abonnerer på {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Takk for at du abonnerer på {{siteTitle}}. Klikk på lenka nedanfor for å logga inn automatisk:",
				"This email address will not be used.": "Denne e-postadressa vil ikkje bli brukt.",
				"Welcome back to {{siteTitle}}!": "Velkommen tilbake til {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Velkommen tilbake! Bruk denne lenka for å logga inn på {{siteTitle}}-brukaren din:",
				"You can also copy & paste this URL into your browser:": "Du kan også kopiera og lima inn denne lenka i nettlesaren din:",
				"You will not be signed up, and no account will be created for you.": "Du vil ikkje bli registrert, og ingen brukar vil bli laga for deg.",
				"You will not be subscribed.": "Du vil ikkje bli ein abonnent.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Du er eitt klikk unna å abonnera på {{siteTitle}} – ver gild og bekreft e-postadressa di med denne lenka:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Du er eitt klikk unna å abonnera på {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		iz = "Brukar",
		oz = "Tilbake",
		rz = "Endra",
		az = "Vel",
		sz = "Lukk",
		lz = "Kommentarar",
		uz = "Gåve",
		cz = "Bekreft",
		dz = "Fortset",
		mz = "Endra",
		pz = "E-post",
		fz = "E-postar.",
		hz = "For evig",
		gz = "Innstillinger",
		yz = "Månadleg",
		bz = "Namn",
		kz = "Abonnement",
		vz = "Pris",
		wz = "",
		Sz = "Prøv på ny",
		Cz = "Lagra",
		xz = "Abonner",
		Ez = "Abonnert",
		Tz = "Vellykka",
		jz = "Abonnement avslutta",
		$z = "Oppdater",
		Az = "",
		Nz = "Årleg",
		wZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: iz,
			Back: oz,
			Change: rz,
			Choose: az,
			Close: sz,
			Comments: lz,
			Complimentary: uz,
			Confirm: cz,
			Continue: dz,
			Edit: mz,
			Email: pz,
			Emails: fz,
			Forever: hz,
			Manage: gz,
			Monthly: yz,
			Name: bz,
			Plan: kz,
			Price: vz,
			Recommendations: wz,
			Retry: Sz,
			Save: Cz,
			Subscribe: xz,
			Subscribed: Ez,
			Success: Tz,
			Unsubscribed: jz,
			Update: $z,
			Visit: Az,
			Yearly: Nz,
			default: {
				"{{amount}} days free": "{{amount}} dagar gratis",
				"{{amount}} off": "avslag",
				"{{amount}} off for first {{number}} months.": "{{amount}} dei første {{number}} månadane.",
				"{{amount}} off for first {{period}}.": "{{amount}} avslag den første {{period}}.",
				"{{amount}} off forever.": "{{amount}} avslag for alltid.",
				"{{discount}}% discount": "% rabatt",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} vil ikkje lenger motta {{newsletterName}} nyheitsbrev.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} vil ikkje lenger motta e-post når nokon svarar på kommentarar.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} vil ikkje lenger motta dette nyheitsbrevet.",
				"{{trialDays}} days free": "{{trialDays}} dagar gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Ei innlogginslenke har blitt sendt til innboksen din. Sjekk søppelposten din om lenka ikkje kjem innan 3 minutt.",
				Account: iz,
				"Account settings": "Brukarinnstillingar",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Når den gratis prøveperioden er over vil du bli belasta den normale prisen for abonnementet du har vald. Du kan alltids avslutta abonnementet au.",
				"Already a member?": "Allereie medlem?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ein uventa feil har skjedd. Ver gild å prøv igjen eller <a>ta kontakt</a> viss feilen fortset.",
				Back: oz,
				"Back to Log in": "Tilbake til innlogginga",
				"Billing info": "Betalingsinfo",
				"Black Friday": "",
				"Cancel anytime.": "Kanseller kor tid som helst.",
				"Cancel subscription": "Avslutt abonnement",
				"Cancellation reason": "Grunn for avslutting",
				Change: rz,
				"Check spam & promotions folders": "Sjekk søppelpostmappa di",
				"Check with your mail provider": "Sjekk med e-postleverandøren din",
				Choose: az,
				"Choose a different plan": "Vel eit anna abonnement",
				"Choose your newsletters": "Vel nyheitsbrevet ditt",
				"Click here to retry": "Klikk her for å prøva på ny",
				Close: sz,
				Comments: lz,
				Complimentary: uz,
				Confirm: cz,
				"Confirm cancellation": "Bekreft avslutting",
				"Confirm subscription": "Bekreft abonnement",
				"Contact support": "Få hjelp",
				Continue: dz,
				"Continue subscription": "Fortset abonnement",
				"Could not sign in. Login link expired.": "Kunne ikkje logga inn. Innlogginslenka er utgått.",
				"Could not update email! Invalid link.": "Kunne ikkje oppdatera e-post! Ugyldig lenke.",
				"Create a new contact": "Lag ein ny kontakt",
				"Current plan": "Noverande abonnement",
				"Delete account": "Slett brukar",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Var det ikkje meininga å gjera dette? Du kan endra preferansane dine <button>her</button>.",
				"Don't have an account?": "Har du ikkje ein brukar?",
				Edit: mz,
				Email: pz,
				"Email newsletter": "E-post nyheitsbrev",
				"Email preference updated.": "E-post preferansane dine er oppdatert.",
				"Email preferences": "E-post preferansar.",
				Emails: fz,
				"Emails disabled": "E-postar skrudd av",
				"Ends {{offerEndDate}}": "Sluttar {{offerEndDate}}",
				Error: "Feil",
				"Expires {{expiryDate}}": "Går ut {{expiryDate}}",
				Forever: hz,
				"Free Trial – Ends {{trialEnd}}": "Gratis prøveperiode – sluttar {{trialEnd}}",
				"Get help": "Få hjelp",
				"Get in touch for help": "Ta kontakt for å få hjelp",
				"Get notified when someone replies to your comment": "Få varsler når nokon svarar på kommenten din",
				"Give feedback on this post": "Gje tilbakemeldinger på denne artikkelen",
				"Help! I'm not receiving emails": "Hjelp! Eg får ikkje e-postar",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Viss eit nyheitsbrev er markert som søppelpost vil dei automatisk bli avslutta for den adressa, slik at du ikkje får uønska e-postar.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Viss søppelpost-klagen var med eit uhell, eller du ønsker å byrja å få e-postar frå oss igjen, kan du abonnera på nyheitsbrev igjen ved å klikka knappen på førre skjerm.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Vis du avslutter abonnementet no, vil du framleis ha tilgang fram til {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Viss du har har e-post hos ein bedrift kan du spørra IT-avdelinga om dei kan tillata e-postar frå {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Viss du vil få e-postar igjen, er det enklaste å sjekka e-postadressa du har gitt oss for feil, og så abonnera igjen ved å klikka resubscribe på førre skjerm.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Viss du ikkje mottar nyheitsbrevet du har abonnert på, kan du prøva dette. ",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Viss du har fullført desse stega og framleis ikkje får nyheitsbrev, kan du ta kontakt med oss på {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "I tilfelle ein permanent feil mottas ved forøsk på å senda eit nyheitsbrev vil e-poster bli deaktivert på kontoen.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Legg til {{senderEmail}} til e-posten din si kontaktliste. Dette signaliserer til leverandøren din at e-poster frå denne adressa er til å stola på.",
				"Less like this": "Mindre som dette",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Pass på at e-postane ikkje ender opp i spam-mappa. Viss dei gjer, marker dei anten som "Dette er ikkje spam" og/eller "Flytt til innboks".',
				Manage: gz,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: yz,
				"More like this": "Meir som dette",
				Name: bz,
				"Need more help? Contact support": "Treng du meir hjelp? Ta kontakt med brukarstøtte",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Nyheitsbrev kan bli skrudd av for brukaren din av to grunner: Ein tidlegare e-post har blitt markert som spam. Eller så har eit forsøk på å senda ein e-post resultert i ein permanent feil.",
				"Not receiving emails?": "Får du ikkje e-postar?",
				"Now check your email!": "Sjekk e-posten din!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Sjekk spam-mappa di om du framleis ikkje ser e-postane etter å ha abonnert på ny. Nokon e-postleverandørar kan flagga e-postar som spam basert på tidlegare e-postar. Viss dette skjer, marker den siste du mottok i spam-mappa som 'ikkje spam' og flytt tilbake til innboksen din.",
				"Permanent failure (bounce)": "Permanent feil",
				Plan: kz,
				"Plan checkout was cancelled.": "Betaling kansellert.",
				"Plan upgrade was cancelled.": "Oppgradering kansellert.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Ver gilde og fyll inn dei obligatoriske felta",
				Price: vz,
				"Re-enable emails": "Aktiver e-postar på ny",
				Recommendations: wz,
				"Renews at {{price}}.": "Forynast til {{price}}.",
				Retry: Sz,
				Save: Cz,
				"Send an email and say hi!": "Send ein e-post og sei hei!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Send ein e-post til {{senderEmail}} og sei hallo. Dette kan også hjelpa å signalisera for leverandøren at denne e-postadressa er trygg.",
				"Sending login link...": "Sender innloggingslenke...",
				"Sending...": "Sender...",
				"Show all": "",
				"Sign in": "Logg inn",
				"Sign out": "Logg ut",
				"Sign up": "Registrer deg",
				"Signup error: Invalid link": "Registreringsfeil: Ugyldig lenke",
				"Sorry, that didn’t work.": "Beklagar, det verka ikkje.",
				"Spam complaints": "Spamklagar",
				"Start {{amount}}-day free trial": "Start {{amount}}-dagar gratis prøveperiode",
				"Starting {{startDate}}": "Starter {{startDate}}",
				"Starting today": "Starter idag",
				"Submit feedback": "Gje oss tilbakemeldinger",
				Subscribe: xz,
				Subscribed: Ez,
				Success: Tz,
				"Success! Check your email for magic link to sign-in.": "Vellykka! Sjekk e-posten din for ei innlogginslenke.",
				"Success! Your account is fully activated, you now have access to all content.": "Vellykka! Brukaren din er aktivert, du har no tilgang til alt innhald.",
				"Success! Your email is updated.": "Vellykka! E-posten din er oppdatert.",
				"Successfully unsubscribed": "Vellykka kansellering.",
				"Thanks for the feedback!": "Takk for tilbakemeldingen!",
				"That didn't go to plan": "Det gjekk ikkje etter planen",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "E-postadressa me har på deg er {{memberEmail}} – viss det ikkje er riktig, kan du oppdatera i <button>brukarinnstillingane</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Det var eit problem med å senda tilbakemeldinga di. Vennligst prøv igjen litt seinare.",
				"This site is invite-only, contact the owner for access.": "Denne sida er kun for inviterte, ta kontakt med eigaren for tilgang.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Klikk på bekreftelseslenka i innboksen din for å fullføra registreringa. Sjekk spam-mappa di om lenka ikkje har kome innan 3 minutt.",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prøv gratis i {{amount}} dagar, deretter {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Få tilgang til alle nyheitsbreva med å bli ein betalande abonnent.",
				"Unsubscribe from all emails": "Slutt å motta e-postar",
				Unsubscribed: jz,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Å avslutta e-postabonnementa vil ikkje kansellera det betalta abonnementet ditt til {{title}}",
				Update: $z,
				"Update your preferences": "Oppdater preferansane dine",
				"Verify your email address is correct": "Bekreft at e-posten din er riktig",
				"View plans": "Sjå abonnementa",
				Visit: Az,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Me kunne ikkje avslutta abonnementet ditt då me ikkje fann e-postadressa di. Vennligst ta kontakt med eigaren av sida.",
				"Welcome back, {{name}}!": "Velkommen tilbake, {{name}}!",
				"Welcome back!": "Velkommen tilbake!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Når ein innboks ikkje klarar å akseptera ein e-post blir det kalla ein bounce. I nokre tilfelle blir ein bounce registrert som ein permanent feil når ein e-postadresse er ugyldig eller ikkje eksisterer.",
				"Why has my email been disabled?": "Kvifor har e-posten min blitt deaktivert?",
				Yearly: Nz,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "For augneblikket har du eit gratis medlemsskap. Oppgrader til eit betalande for å få full tilgang.",
				"You have been successfully resubscribed": "No abonnerer du igjen",
				"You're currently not receiving emails": "For augneblikket mottek du ingen e-postar",
				"You're not receiving emails": "Du mottek ikkje e-postar",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Du mottar ikkje e-postar. Anten fordi du har markert dei som spame, eller fordi dei ikkje kan bli levert til e-posten du har gitt oss.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Vellykka innlogging.",
				"You've successfully subscribed to": "",
				"Your account": "Din brukar",
				"Your input helps shape what gets published.": "Dine tilbakemeldinger hjelper oss å forma tilbodet vårt.",
				"Your subscription will expire on {{expiryDate}}": "Ditt abonnement går ut den {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Ditt abonnement vil fornyast den {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Ditt abonnement vil byrja den {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Mz = "Abonner",
		SZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: Mz,
			default: {
				"Email sent": "E-post sendt",
				"Now check your email!": "Sjekk e-posten din!",
				"Please enter a valid email address": "Vennligst skriv ein gyldig e-postadresse",
				"Something went wrong, please try again.": "Noko gale har skjedd, vennligst prøv igjen.",
				Subscribe: Mz,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Klikk bekreftelseslenka i innboksen din for å fullføra registreringa. Sjekk spam-mappa om lenka ikkje kjem innan 3 minutt. ",
				"Your email address": "Din e-postadresse"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Pz = "",
		_z = "",
		zz = "",
		Oz = "",
		Dz = "",
		Iz = "",
		Rz = "",
		Yz = "",
		Lz = "",
		Fz = "",
		Bz = "",
		Uz = "",
		Vz = "",
		Hz = "",
		qz = "",
		Wz = "",
		Kz = "",
		Jz = "",
		CZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: Pz,
			Cancel: _z,
			Comment: zz,
			Delete: Oz,
			Discussion: Dz,
			Edit: Iz,
			Edited: Rz,
			Expertise: Yz,
			Hide: Lz,
			Name: Fz,
			Neurosurgeon: Bz,
			Reply: Uz,
			Report: Vz,
			Save: Hz,
			Sending: qz,
			Sent: Wz,
			Show: Kz,
			Yesterday: Jz,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: Pz,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: _z,
				Comment: zz,
				"Complete your profile": "",
				Delete: Oz,
				"Deleted member": "",
				Discussion: Dz,
				Edit: Iz,
				"Edit this comment": "",
				Edited: Rz,
				"Enter your name": "",
				Expertise: Yz,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: Lz,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: Fz,
				Neurosurgeon: Bz,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: Uz,
				"Reply to comment": "",
				Report: Vz,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: Hz,
				Sending: qz,
				Sent: Wz,
				Show: Kz,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: Jz,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		xZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Alt det beste!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Fullfør registreringen din på {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Bekreft e-postoppdateringen din for {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bekreft abonnementet ditt på {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "For din sikkerhet så vil denne linken utløpe om 24 timer",
				"Hey there,": "Hei,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Hvis du ikke har bedt om dette, kan du trygt ignorere denne e-posten.",
				"If you did not make this request, you can simply delete this message.": "Hvis du ikke har bedt om dette, kan du enkelt slette denne meldingen.",
				"Please confirm your email address with this link:": "Vennligst bekreft e-postadressen din med denne lenken:",
				"Secure sign in link for {{siteTitle}}": "Sikker påloggingslenke for {{siteTitle}}",
				"See you soon!": "Ser deg snart!",
				"Sent to {{email}}": "Send til {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Logg inn på {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Trykk på lenken nedenfor for å fullføre registreringsprosessen for {{siteTitle}}. Du blir automatisk logget på:",
				"Thank you for signing up to {{siteTitle}}!": "Takk for at du registrerte deg på {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Takk for at du abonnerer på {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Takk for at du abonnerer på {{siteTitle}}. Trykk på lenken nedenfor for å bli automatisk logget på:",
				"This email address will not be used.": "Denne e-postadressen vil ikke bli brukt.",
				"Welcome back to {{siteTitle}}!": "Velkommen tilbake til {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Velkommen tilbake! Bruk denne lenken til å logge deg sikkert på {{siteTitle}}-kontoen din:",
				"You can also copy & paste this URL into your browser:": "Du kan også kopiere og lime inn denne URL-en i nettleseren din:",
				"You will not be signed up, and no account will be created for you.": "Du vil ikke bli registrert, og ingen konto vil bli opprettet for deg.",
				"You will not be subscribed.": "Du vil ikke ble meldt på",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Du er ett klikk unna fra å abonnere på {{siteTitle}} — bekreft e-postadressen din med denne lenken:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Gz = "Konto",
		Qz = "Tilbake",
		Xz = "",
		Zz = "",
		eO = "Lukk",
		tO = "Kommentarer",
		nO = "",
		iO = "Bekreft",
		oO = "Fortsett",
		rO = "",
		aO = "Epost",
		sO = "Epost",
		lO = "",
		uO = "Administrer",
		cO = "Månedlig",
		dO = "Navn",
		mO = "",
		pO = "Pris",
		fO = "",
		hO = "Prøv på nytt",
		gO = "Lagre",
		yO = "",
		bO = "",
		kO = "",
		vO = "",
		wO = "",
		SO = "",
		CO = "Årlig",
		EZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: Gz,
			Back: Qz,
			Change: Xz,
			Choose: Zz,
			Close: eO,
			Comments: tO,
			Complimentary: nO,
			Confirm: iO,
			Continue: oO,
			Edit: rO,
			Email: aO,
			Emails: sO,
			Forever: lO,
			Manage: uO,
			Monthly: cO,
			Name: dO,
			Plan: mO,
			Price: pO,
			Recommendations: fO,
			Retry: hO,
			Save: gO,
			Subscribe: yO,
			Subscribed: bO,
			Success: kO,
			Unsubscribed: vO,
			Update: wO,
			Visit: SO,
			Yearly: CO,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% rabatt",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dager gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "En påloggingslenke har blitt sendt til innboksen din. Hvis den ikke kommer innen 3 minutter, må du sjekke søppelposten din.",
				Account: Gz,
				"Account settings": "Kontoinnstillinger",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Etter at en gratis prøveperiode er over, vil du bli belastet den vanlige prisen for nivået du har valgt. Du kan alltid avbryte før det.",
				"Already a member?": "Allerede medlem?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: Qz,
				"Back to Log in": "Tilbake til innlogging",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Avbryt abonnement",
				"Cancellation reason": "Grunn til avbryting",
				Change: Xz,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: Zz,
				"Choose a different plan": "Velg et annet nivå",
				"Choose your newsletters": "Velg dine nyhetsbrev",
				"Click here to retry": "",
				Close: eO,
				Comments: tO,
				Complimentary: nO,
				Confirm: iO,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: oO,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Slett konto",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Har du ikke konto?",
				Edit: rO,
				Email: aO,
				"Email newsletter": "",
				"Email preference updated.": "Innstillinger for epost oppdatert",
				"Email preferences": "Innstillinger for epost",
				Emails: sO,
				"Emails disabled": "Epost deaktivert",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: lO,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Få hjelp",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Få varsel dersom noen svarer på kommentaren din",
				"Give feedback on this post": "Gi tilbakemelding på dette innlegget",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Mindre som dette",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: uO,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: cO,
				"More like this": "Mer som dette",
				Name: dO,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Mottar du ikke epost?",
				"Now check your email!": "Sjekk eposten din!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: mO,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: pO,
				"Re-enable emails": "Re-aktiver epost",
				Recommendations: fO,
				"Renews at {{price}}.": "",
				Retry: hO,
				Save: gO,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Sender påloggingslenke",
				"Sending...": "Sender...",
				"Show all": "",
				"Sign in": "Logg inn",
				"Sign out": "",
				"Sign up": "Opprett bruker",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Start gratis prøveperiode på {{amount}} dager",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Send tilbakemelding",
				Subscribe: yO,
				Subscribed: bO,
				Success: kO,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Avmelding vellykket",
				"Thanks for the feedback!": "Takk for tilbakemeldingen!",
				"That didn't go to plan": "Det gikk ikke som planlagt",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Denne siten er kun fo inviterte. Kontakt eieren for invitasjon.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "For å fullføre registreringen, klikk på bekreftelseslenken i innboksen din. Hvis den ikke kommer innen 3 minutter, må du sjekke søppelposten din!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Meld deg av mottak av all epost",
				Unsubscribed: vO,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Å melde seg av e-poster vil ikke avbryte abonnementet ditt på {{title}}",
				Update: wO,
				"Update your preferences": "Oppdater dine valg",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: SO,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Vi kunne ikke melde deg av siden e-postadressen ikke ble funnet. Vennligst kontakt nettstedseieren.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: CO,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Du har blitt meldt på igjen",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Du mottar ikke e-post fordi du enten nylig har merket en melding som spam, eller fordi meldinger ikke kunne leveres til den oppgitte e-postadressen din.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Din konto",
				"Your input helps shape what gets published.": "Din tilbakemelding bidrar til å forme hva som blir publisert.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		xO = "",
		TZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: xO,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: xO,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		EO = "",
		TO = "",
		jO = "",
		$O = "",
		AO = "",
		NO = "",
		MO = "",
		PO = "",
		_O = "",
		zO = "",
		OO = "",
		DO = "",
		IO = "",
		RO = "",
		YO = "",
		LO = "",
		FO = "",
		BO = "",
		jZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: EO,
			Cancel: TO,
			Comment: jO,
			Delete: $O,
			Discussion: AO,
			Edit: NO,
			Edited: MO,
			Expertise: PO,
			Hide: _O,
			Name: zO,
			Neurosurgeon: OO,
			Reply: DO,
			Report: IO,
			Save: RO,
			Sending: YO,
			Sent: LO,
			Show: FO,
			Yesterday: BO,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: EO,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: TO,
				Comment: jO,
				"Complete your profile": "",
				Delete: $O,
				"Deleted member": "",
				Discussion: AO,
				Edit: NO,
				"Edit this comment": "",
				Edited: MO,
				"Enter your name": "",
				Expertise: PO,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: _O,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: zO,
				Neurosurgeon: OO,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: DO,
				"Reply to comment": "",
				Report: IO,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: RO,
				Sending: YO,
				Sent: LO,
				Show: FO,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: BO,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		$Z = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Wszystkiego dobrego!",
				"Complete signup for {{siteTitle}}!": "Dokończ rejestrację do {{siteTitle}}",
				"Complete your sign up to {{siteTitle}}!": "Dokończ swoją rejestrację do {{siteTitle}}!",
				"Confirm email address": "Potwierdź adres email",
				"Confirm signup": "Potwierdź rejestrację",
				"Confirm your email address": "Potwierdź swój adres email",
				"Confirm your email update for {{siteTitle}}!": "Potwierdź zmianę adresu email do {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Potwierdź swoją subskrypcję do {{siteTitle}}!",
				"For your security, the link will expire in 24 hours time.": "Dla bezpieczeństwa link wygaśnie po 24 godzinach.",
				"Hey there,": "Cześć,",
				"Hey there!": "Cześć!",
				"If you did not make this request, you can safely ignore this email.": "Jeśli to nie ty wysłałeś tę prośbę, możesz bezpiecznie zignorować ten email.",
				"If you did not make this request, you can simply delete this message.": "Jeśli to nie ty wysłałeś tę prośbę, możesz po prostu skasować ten email.",
				"Please confirm your email address with this link:": "Potwierdź proszę swój adres email klikając w ten link:",
				"Secure sign in link for {{siteTitle}}": "Bezpieczny link logowania do {{siteTitle}}",
				"See you soon!": "Do zobaczenia!",
				"Sent to {{email}}": "Wysłano do {{email}}",
				"Sign in": "Zaloguj się",
				"Sign in to {{siteTitle}}": "Zaloguj się do {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Kliknij w link poniżej aby dokończyć proces rejestracji do {{siteTitle}} i zostać automatycznie zalogowanym:",
				"Thank you for signing up to {{siteTitle}}!": "Dziękujemy za rejestrację do {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Dziękujemy za zapisanie się do {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Dziękujemy za zapisanie się do {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Dziękujemy za zapisanie się do {{siteTitle}}. Kliknij w link poniżej aby zostać automatycznie zalogowanym:",
				"This email address will not be used.": "Ten adres email nie będzie więcej używany.",
				"Welcome back to {{siteTitle}}!": "Witaj ponownie na {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Witaj ponownie! Użyj tego linku aby się bezpiecznie zalogować do swojego konta na {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Możesz też skopiować i wkleić ten adres URL w swojej przeglądarce internetowej:",
				"You will not be signed up, and no account will be created for you.": "Nie zostaniesz zarejestrowany i twoje konto nie zostanie utworzone.",
				"You will not be subscribed.": "Nie zostaniesz zapisany.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Jesteś jedno kliknięcie od zapisania się do {{siteTitle}} - potwierdź proszę swój adres email tym linkiem:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Jesteś jedno kliknięcie od zapisania się do {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		UO = "Konto",
		VO = "Wstecz",
		HO = "Zmień",
		qO = "Wybierz",
		WO = "Zamknij",
		KO = "Komentarze",
		JO = "Za darmo",
		GO = "Potwierdź",
		QO = "Kontynuuj",
		XO = "Edytuj",
		ZO = "Email",
		eD = "Emaile",
		tD = "Na zawsze",
		nD = "Zarządzaj",
		iD = "Miesięcznie",
		oD = "Imię",
		rD = "Plan",
		aD = "Cena",
		sD = "",
		lD = "Powtórz",
		uD = "Zapisz",
		cD = "Subskrybuj",
		dD = "Zasubskrybowane",
		mD = "Sukces",
		pD = "Niezasubskrybowany",
		fD = "Zaktualizuj",
		hD = "",
		gD = "Rocznie",
		AZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: UO,
			Back: VO,
			Change: HO,
			Choose: qO,
			Close: WO,
			Comments: KO,
			Complimentary: JO,
			Confirm: GO,
			Continue: QO,
			Edit: XO,
			Email: ZO,
			Emails: eD,
			Forever: tD,
			Manage: nD,
			Monthly: iD,
			Name: oD,
			Plan: rD,
			Price: aD,
			Recommendations: sD,
			Retry: lD,
			Save: uD,
			Subscribe: cD,
			Subscribed: dD,
			Success: mD,
			Unsubscribed: pD,
			Update: fD,
			Visit: hD,
			Yearly: gD,
			default: {
				"{{amount}} days free": "{{amount}} dni za darmo",
				"{{amount}} off": "Rabat {{amount}}",
				"{{amount}} off for first {{number}} months.": "Rabat {{amount}} na pierwsze {{number}} miesiące.",
				"{{amount}} off for first {{period}}.": "Rabat {{amount}} na pierwszy {{period}}.",
				"{{amount}} off forever.": "Rabat {{amount}} na zawsze",
				"{{discount}}% discount": "Rabat {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} nie będzie już otrzymywać newslettera {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} nie będzie już otrzymywać wiadomości, gdy ktoś odpowie na Twój komentarz.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} nie będzie już otrzymywać tego newslettera.",
				"{{trialDays}} days free": "{{trialDays}} darmowych dni",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Link do logowania został wysłany do twojej skrzynki odbiorczej. Jeśli nie dotrze w ciągu 3 minut, sprawdź swój folder spamu.",
				Account: UO,
				"Account settings": "Ustawienia konta",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Po zakończeniu okresu próbnego zostanie naliczona regularna opłata za wybrany poziom subskrypcji. Zawsze możesz anulować subskrypcję zanim to nastąpi.",
				"Already a member?": "Masz już konto?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Wystąpił nieoczekiwany błąd. Spróbuj ponownie lub <a>skontaktuj z pomocą techniczną</a> jeśli błąd będzie nadal występował.",
				Back: VO,
				"Back to Log in": "Wróć do logowania",
				"Billing info": "Informacje rozliczeniowe",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Anuluj w dowolnej chwili.",
				"Cancel subscription": "Anuluj subskrypcję",
				"Cancellation reason": "Powód anulowania",
				Change: HO,
				"Check spam & promotions folders": "Sprawdź foldery spamu i promocji",
				"Check with your mail provider": "Skontaktuj się z dostawcą poczty",
				Choose: qO,
				"Choose a different plan": "Wybierz inny plan",
				"Choose your newsletters": "Wybierz swoje newslettery",
				"Click here to retry": "Kliknij tu żeby potwierdzić",
				Close: WO,
				Comments: KO,
				Complimentary: JO,
				Confirm: GO,
				"Confirm cancellation": "Potwierdź rezygnację",
				"Confirm subscription": "Potwierdź subskrypcję",
				"Contact support": "Kontakt z pomocą techniczną",
				Continue: QO,
				"Continue subscription": "Kontynuuj subskrypcję",
				"Could not sign in. Login link expired.": "Nie można się zalogować. Link do logowania wygasł.",
				"Could not update email! Invalid link.": "Nie można zaktualizować adresu email! Nieprawidłowy link.",
				"Create a new contact": "Utwórz nowy kontakt",
				"Current plan": "Obecny plan",
				"Delete account": "Skasuj konto",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Nie chcesz tego robić? Zarządzaj preferencjami <button>tutaj</button>.",
				"Don't have an account?": "Nie masz jeszcze konta?",
				Edit: XO,
				Email: ZO,
				"Email newsletter": "Newsletter email",
				"Email preference updated.": "Ustawienia email zaktualizowane",
				"Email preferences": "Ustawienia email",
				Emails: eD,
				"Emails disabled": "Wysyłanie emaili zablokowane",
				"Ends {{offerEndDate}}": "Kończy się {{offerEndDate}}",
				Error: "Błąd",
				"Expires {{expiryDate}}": "Wygasa {{expiryDate}}",
				Forever: tD,
				"Free Trial – Ends {{trialEnd}}": "Bezpłatny okres próbny - Koniec {{trialEnd}}",
				"Get help": "Uzyskaj pomoc",
				"Get in touch for help": "Skontaktuj się, aby uzyskać pomoc",
				"Get notified when someone replies to your comment": "Otrzymaj powiadomienie gdy ktoś odpowie na twój komentarz",
				"Give feedback on this post": "Oceń ten wpis",
				"Help! I'm not receiving emails": "Pomocy! Nie otrzymuję emaili",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Jeśli newsletter zostanie oznaczony jako spam, wiadomości email są automatycznie wyłączane dla tego adresu, aby upewnić się, że nie otrzymujesz już żadnych niechcianych wiadomości.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Jeśli skarga dotycząca spamu była przypadkowa lub chcesz ponownie zacząć otrzymywać wiadomości, możesz raz jeszcze zasubskrybować, klikając przycisk na poprzednim ekranie.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Jeśli anulujesz subskrypcję teraz, będziesz mieć do niej dostęp do  {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Jeśli masz firmowe lub rządowe konto emial, skontaktuj się z działem IT i poproś o zezwolenie na odbieranie wiadomości od {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Jeśli chcesz ponownie zacząć otrzymywać wiadomości, najlepiej sprawdź poprawność swojego adres email, a następnie kliknij przycisk ponownej subskrypcji na poprzednim ekranie.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Jeśli nie otrzymujesz subskrybowanego newsletter, oto kilka rzeczy do sprawdzenia.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Jeśli wykonałeś wszystkie te czynności i nadal nie otrzymujesz wiadomości, możesz skontaktować się z pomocą techniczną pod tym adresem {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "W przypadku trwałego niepowodzenia podczas próby wysłania newslettera wiadomości email zostaną wyłączone na koncie.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "W kliencie poczty dodaj {{senderEmail}} do listy kontaktów. Sygnalizuje to dostawcy poczty, że wiadomości wysyłane z tego adresu powinny być zaufane.",
				"Less like this": "Mniej podobnych",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Upewnij się, że emaile nie trafiają przypadkowo do folderów Spam lub Promocje w skrzynce odbiorczej. Jeśli tak jest, kliknij na "Oznacz jako nie spam" i/lub "Przenieś do skrzynki odbiorczej".',
				Manage: nD,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: iD,
				"More like this": "Więcej podobnych",
				Name: oD,
				"Need more help? Contact support": "Potrzebujesz pomocy? Skontaktuj się z pomocą techniczną",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Newslettery mogą zostać wyłączone na Twoim koncie z dwóch powodów: poprzedni email został oznaczony jako spam lub próba wysłania wiadomości zakończyła się niepowodzeniem (odesłaniem).",
				"Not receiving emails?": "Nie dostajesz emaili?",
				"Now check your email!": "Teraz sprawdź swoją pocztę!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "Trwała awaria (odesłanie emaila",
				Plan: rD,
				"Plan checkout was cancelled.": "Opłata za plan została anulowana.",
				"Plan upgrade was cancelled.": "Aktualizacja planu została anulowana.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "Wyśli maila pod adres {{supportAddress}} aby dostosować bezpłatną subskrypcję.",
				"Please fill in required fields": "Wypełnij wymagane pola",
				Price: aD,
				"Re-enable emails": "Włącz ponownie emaile",
				Recommendations: sD,
				"Renews at {{price}}.": "Odnowi się w cenie {{price}}.",
				Retry: lD,
				Save: uD,
				"Send an email and say hi!": "Wyślij email i przywitaj się!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Wyślij email na adres {{senderEmail}} i przywitaj się. Może to również pomóc w zasygnalizowaniu dostawcy poczty, że wiadomości email wysyłane z i na ten adres powinny być zaufane.",
				"Sending login link...": "Wysyłanie linku do logowania...",
				"Sending...": "Wysyłanie...",
				"Show all": "",
				"Sign in": "Zaloguj się",
				"Sign out": "Wyloguj się",
				"Sign up": "Zarejestruj się",
				"Signup error: Invalid link": "Błąd rejestracji: Nieprawidłowy link",
				"Sorry, that didn’t work.": "Przepraszamy, to nie zadziałało.",
				"Spam complaints": "Skargi dotyczące spamu",
				"Start {{amount}}-day free trial": "Rozpocznij {{amount}}-dniowy okres próbny",
				"Starting {{startDate}}": "Rozpoczyna się od {{startDate}}",
				"Starting today": "Rozpoczyna się od dziś",
				"Submit feedback": "Wyślij ocenę",
				Subscribe: cD,
				Subscribed: dD,
				Success: mD,
				"Success! Check your email for magic link to sign-in.": "Sukces! Sprawdź swój email, aby uzyskać link do logowania.",
				"Success! Your account is fully activated, you now have access to all content.": "Sukces! Twoje konto zostało w pełni aktywowane, masz teraz dostęp do serwisu.",
				"Success! Your email is updated.": "Sukces! Twój email został zaktualizowany.",
				"Successfully unsubscribed": "Wypisanie udane",
				"Thanks for the feedback!": "Dziękujemy za ocenę!",
				"That didn't go to plan": "Coś poszło nie tak",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Adres email, który mamy to {{memberEmail}} — jeśli nie jest poprawny, możesz go zaktualizować w swoich <button>ustawieniach konta</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Wystąpił problem z przesłaniem opinii. Spróbuj ponownie nieco później.",
				"This site is invite-only, contact the owner for access.": "Ta strona jest tylko na zaproszenie. Skontaktuj się z właścicielem, aby uzyskać dostęp.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Aby dokończyć rejestrację, kliknij w link przesłany na twoją skrzynkę pocztową. Jeśli nie dotrze  w ciągu 3 minut, sprawdź folder spamu!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Wypróbuj za darmo przez {{amount}} dnia, później {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Odblokuj dostęp do wszystkich biuletynów, zostając płatnym subskrybentem.",
				"Unsubscribe from all emails": "Wypisz się w wszystkich emaili",
				Unsubscribed: pD,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Wypisanie się z otrzymywania emaili nie powoduje anulowania płatnej subskrypcji {{title}}",
				Update: fD,
				"Update your preferences": "Zaktualizuj preferencje",
				"Verify your email address is correct": "Sprawdź, czy Twój email jest poprawny",
				"View plans": "Zobacz plany",
				Visit: hD,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nie udało się wypisać, bo nie znaleziono adresu email. Skontaktuj się w właścicielem strony.",
				"Welcome back, {{name}}!": "Witamy ponownie, {{name}}!",
				"Welcome back!": "Witamy ponownie!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Gdy skrzynka odbiorcza nie akceptuje wiadomości email, jest to powszechnie nazywane odrzuceniem. W wielu przypadkach może to być tymczasowe. Jednak w niektórych przypadkach odesłana email może zostać zwrócony jako trwałe niepowodzenie, gdy adres jest nieprawidłowy lub nie istnieje.",
				"Why has my email been disabled?": "Dlaczego mój email został zablokowany?",
				Yearly: gD,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Obecnie posiadasz bezpłatny plan, uaktualnij do płatnej subskrypcji, aby uzyskać pełny dostęp",
				"You have been successfully resubscribed": "Zostałeś ponownie zapisany",
				"You're currently not receiving emails": "Obecnie nie otrzymujesz emaili",
				"You're not receiving emails": "Nie otrzymujesz emaili",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Nie otrzymujesz email, ponieważ oznaczyłeś ostatnią wiadomość jako spam lub nie udało się dostarczyć wiadomości na podany adres email.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Logowanie powiodło się.",
				"You've successfully subscribed to": "Pomyślnie zasubskrybowano",
				"Your account": "Twoje konto",
				"Your input helps shape what gets published.": "Twoja ocena pomoże nam lepiej kształtować nasz publikacje.",
				"Your subscription will expire on {{expiryDate}}": "Subskrypcja wygaśnie w dniu {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Subskrypcja zostanie odnowiona w dniu {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Subskrypcja rozpocznie się w dniu {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		yD = "Zasubskrybuj",
		NZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: yD,
			default: {
				"Email sent": "Email został wysłany",
				"Now check your email!": "Teraz sprawdź swoją pocztę!",
				"Please enter a valid email address": "Wpisz prawidłowy adres email",
				"Something went wrong, please try again.": "Coś poszło nie tak, spróbuj ponownie.",
				Subscribe: yD,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Aby dokończyć rejestrację, kliknij link, który został wysłany na podany email. Jeśli link nie dotrze w ciągu 3 minut, sprawdź folder spamu!",
				"Your email address": "Twój adres email"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		bD = "",
		kD = "",
		vD = "",
		wD = "",
		SD = "",
		CD = "",
		xD = "",
		ED = "",
		TD = "",
		jD = "",
		$D = "",
		AD = "",
		ND = "",
		MD = "",
		PD = "",
		_D = "",
		zD = "",
		OD = "",
		MZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: bD,
			Cancel: kD,
			Comment: vD,
			Delete: wD,
			Discussion: SD,
			Edit: CD,
			Edited: xD,
			Expertise: ED,
			Hide: TD,
			Name: jD,
			Neurosurgeon: $D,
			Reply: AD,
			Report: ND,
			Save: MD,
			Sending: PD,
			Sent: _D,
			Show: zD,
			Yesterday: OD,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: bD,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: kD,
				Comment: vD,
				"Complete your profile": "",
				Delete: wD,
				"Deleted member": "",
				Discussion: SD,
				Edit: CD,
				"Edit this comment": "",
				Edited: xD,
				"Enter your name": "",
				Expertise: ED,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: TD,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: jD,
				Neurosurgeon: $D,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: AD,
				"Reply to comment": "",
				Report: ND,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: MD,
				Sending: PD,
				Sent: _D,
				Show: zD,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: OD,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		PZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Tudo de bom!",
				"Complete signup for {{siteTitle}}!": "Completa o teu registo para {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Completa o teu registo em {{siteTitle}}!",
				"Confirm email address": "Confirma o endereço de email",
				"Confirm signup": "Confirma o registo",
				"Confirm your email address": "Confirma o teu endereço de email",
				"Confirm your email update for {{siteTitle}}!": "Confirma o teu email atualizado em {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Confirma a tua subscrição em {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Para tua segurança, o link será desativado após 24 horas.",
				"Hey there,": "Olá,",
				"Hey there!": "Olá!",
				"If you did not make this request, you can safely ignore this email.": "Se não fizeste este pedido, podes ignorar este email.",
				"If you did not make this request, you can simply delete this message.": "Se não fizeste este pedido, podes simplesmente apagar esta mensagem.",
				"Please confirm your email address with this link:": "Por favor, confirma o teu email através deste link:",
				"Secure sign in link for {{siteTitle}}": "Ligação segura para entrar em {{siteTitle}}",
				"See you soon!": "Até breve!",
				"Sent to {{email}}": "Enviado para {{email}}",
				"Sign in": "Entrar",
				"Sign in to {{siteTitle}}": "Entrar em {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Clica no link abaixo para completares o processo de registo em {{siteTitle}}, e entrar automaticamente:",
				"Thank you for signing up to {{siteTitle}}!": "Obrigado por te registares em {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Obrigado por te subscreveres em {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Obrigado por te subscreveres em {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Obrigado por te subscreveres em {{siteTitle}}. Clica no link abaixo para entrares automaticamente:",
				"This email address will not be used.": "Este endereço de email não será usado.",
				"Welcome back to {{siteTitle}}!": "Bem-vindo de volta a {{siteTitle}}",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bem-vindo de volta! Usa este link para entrares de forma segura na tua conta em {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Podes também copiar e colar este URL no teu navegador:",
				"You will not be signed up, and no account will be created for you.": "O teu registo não será criado, e não será criada uma conta para ti.",
				"You will not be subscribed.": "Não irás ficar subscrito.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Estás a um passo de te subscreveres em {{siteTitle}} - Por favor, confirma o teu endereço de email com este link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Estás a um passo de te subscreveres em {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		DD = "Conta",
		ID = "Voltar",
		RD = "Alterar",
		YD = "Escolher",
		LD = "Fechar",
		FD = "Comentários",
		BD = "Cortesia",
		UD = "Confirmar",
		VD = "Continuar",
		HD = "Editar",
		qD = "Email",
		WD = "Emails",
		KD = "Para sempre",
		JD = "Gerir",
		GD = "Mensalmente",
		QD = "Nome",
		XD = "Plano",
		ZD = "Preço",
		eI = "",
		tI = "Tentar novamente",
		nI = "Guardar",
		iI = "Inscrever-se",
		oI = "Inscrito",
		rI = "Sucesso",
		aI = "Subscrição cancelada",
		sI = "Atualizar",
		lI = "",
		uI = "Anualmente",
		_Z = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: DD,
			Back: ID,
			Change: RD,
			Choose: YD,
			Close: LD,
			Comments: FD,
			Complimentary: BD,
			Confirm: UD,
			Continue: VD,
			Edit: HD,
			Email: qD,
			Emails: WD,
			Forever: KD,
			Manage: JD,
			Monthly: GD,
			Name: QD,
			Plan: XD,
			Price: ZD,
			Recommendations: eI,
			Retry: tI,
			Save: nI,
			Subscribe: iI,
			Subscribed: oI,
			Success: rI,
			Unsubscribed: aI,
			Update: sI,
			Visit: lI,
			Yearly: uI,
			default: {
				"{{amount}} days free": "{{amount}} dias gratuitos",
				"{{amount}} off": "Desconto de {{amount}}",
				"{{amount}} off for first {{number}} months.": "Desconto de {{amount}} nos primeiros {{number}} meses.",
				"{{amount}} off for first {{period}}.": "Desconto de {{amount}} durante o primeiro {{period}}.",
				"{{amount}} off forever.": "Desconto de {{amount}} para sempre.",
				"{{discount}}% discount": "{{discount}}% de desconto",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} deixará de receber a newsletter {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} deixará de receber emails quando alguém responder aos seus comentários.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} deixará de receber esta newsletter.",
				"{{trialDays}} days free": "{{trialDays}} dias grátis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Um link de acesso foi enviado para o teu email. Se o email não chegar dentro de 3 minutos, verifica a pasta de spam/lixo do teu email.",
				Account: DD,
				"Account settings": "Definições de conta",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Após o fim do teste grátis, será cobrado o valor normal para o nível escolhido. Podes sempre cancelar até esse momento para evitar ser cobrado.",
				"Already a member?": "Já és membro?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ocorreu um erro inesperado. Por favor tente novamente ou <a>contacte o suporte</a> se o erro persistir.",
				Back: ID,
				"Back to Log in": "Voltar ao login",
				"Billing info": "Informações de faturação",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Cancela a qualquer momento.",
				"Cancel subscription": "Cancelar subscrição",
				"Cancellation reason": "Motivo para o cancelamento",
				Change: RD,
				"Check spam & promotions folders": "Verifique a pasta de spam e promoções",
				"Check with your mail provider": "Verifique com o seu serviço de email",
				Choose: YD,
				"Choose a different plan": "Escolhe um plano diferente",
				"Choose your newsletters": "Escolhe as tuas newsletters",
				"Click here to retry": "Clique aqui para tentar novamente",
				Close: LD,
				Comments: FD,
				Complimentary: BD,
				Confirm: UD,
				"Confirm cancellation": "Confirmar cancelamento",
				"Confirm subscription": "Confirmar subscrição",
				"Contact support": "Contactar suporte",
				Continue: VD,
				"Continue subscription": "Continuar subscrição",
				"Could not sign in. Login link expired.": "Não foi possível entrar. O ligação de login expirou.",
				"Could not update email! Invalid link.": "Não foi possível atualizar o email! Link inválido.",
				"Create a new contact": "Criar novo contacto",
				"Current plan": "Plano atual",
				"Delete account": "Eliminar a conta",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Não era essa a intenção? Gerir preferências <button>aqui</button>.",
				"Don't have an account?": "Não tem conta?",
				Edit: HD,
				Email: qD,
				"Email newsletter": "",
				"Email preference updated.": "Preferências de email atualizadas.",
				"Email preferences": "Preferências de email",
				Emails: WD,
				"Emails disabled": "Email desativado",
				"Ends {{offerEndDate}}": "",
				Error: "Erro",
				"Expires {{expiryDate}}": "Expira {{expiryDate}}",
				Forever: KD,
				"Free Trial – Ends {{trialEnd}}": "Período de Teste Gratuito - Termina {{trialEnd}}",
				"Get help": "Obter ajuda",
				"Get in touch for help": "Entre em contacto para obter ajuda",
				"Get notified when someone replies to your comment": "Ser notificado quando alguém responde a um comentário teu",
				"Give feedback on this post": "Dar feedback a este artigo",
				"Help! I'm not receiving emails": "Ajuda! Não estou a receber emails",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Se uma newsletter for marcada como spam, os emails serão automaticamente desativados para esse endereço para garantir que não receberá mais mensagens indesejadas.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Se a queixa de spam foi acidental, ou se gostaria de começar a receber emails novamente, pode voltar a subscrever os emails clicando no botão na tela anterior.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Se cancelar a sua subscrição agora, continuará a ter acesso até {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Se tem uma conta de email corporativa ou governamental, contacte o seu departamento de TI e peça-lhes para permitir a receção de emails de {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Se gostaria de começar a receber emails novamente, os próximos passos são verificar o seu endereço de email registado para verificar se há algum problema e, em seguida, clicar para voltar a subscrever na tela anterior.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Se não está a receber a newsletter por email a que subscreveu, aqui estão algumas coisas a verificar.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Se completou todas estas verificações e ainda não está a receber emails, pode contactar {{supportAddress}} para obter apoio.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "No caso de uma falha permanente ser recebida ao tentar enviar uma newsletter, os emails serão desativados na conta.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "No seu cliente de email, adicione {{senderEmail}} à sua lista de contactos. Isso indica ao seu fornecedor de email que os emails enviados a partir deste endereço devem ser confiáveis.",
				"Less like this": "Menos como este",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Certifique-se de que os emails não estão a acabar acidentalmente nas pastas de Spam ou Promoções da sua caixa de entrada. Se estiverem, clique em "Marcar como não spam" e/ou "Mover para a caixa de entrada".',
				Manage: JD,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: GD,
				"More like this": "Mais como este",
				Name: QD,
				"Need more help? Contact support": "Precisa de mais ajuda? Contacte o suporte",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "As newsletters podem ser desativadas na sua conta por dois motivos: um email anterior foi marcado como spam, ou a tentativa de enviar um email resultou numa falha permanente (bounce).",
				"Not receiving emails?": "Não está a receber emails?",
				"Now check your email!": "Verifica o teu email agora!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Depois de se inscrever novamente, se você ainda não vir emails na sua caixa de entrada, verifique sua pasta de spam. Alguns provedores de caixa de entrada mantêm um registro de reclamações anteriores de spam e continuarão a sinalizar Emails. Se isso acontecer, marque a newsletter mais recente como 'Não é spam' para movê-la de volta para sua caixa de entrada principal.",
				"Permanent failure (bounce)": "Falha permanente (bounce)",
				Plan: XD,
				"Plan checkout was cancelled.": "Plano de checkout foi cancelado.",
				"Plan upgrade was cancelled.": "Melhoria de plano foi cancelado.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Preencha os campos obrigatórios",
				Price: ZD,
				"Re-enable emails": "Reativar emails",
				Recommendations: eI,
				"Renews at {{price}}.": "Renova por {{price}}",
				Retry: tI,
				Save: nI,
				"Send an email and say hi!": "Envie um email e diga olá!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Envie um email para {{senderEmail}} e diga olá. Isso também pode ajudar a sinalizar ao seu provedor de email que os emails de e para este endereço devem ser confiáveis.",
				"Sending login link...": "A enviar ligação de acesso...",
				"Sending...": "A enviar...",
				"Show all": "",
				"Sign in": "Entrar",
				"Sign out": "Sair",
				"Sign up": "Registar",
				"Signup error: Invalid link": "Erro de inscrição: ligação inválida",
				"Sorry, that didn’t work.": "Desculpe, isso não funcionou.",
				"Spam complaints": "Reclamações de spam",
				"Start {{amount}}-day free trial": "Iniciar teste grátis de {{amount}} dias",
				"Starting {{startDate}}": "Começando {{startDate}}",
				"Starting today": "Começando hoje",
				"Submit feedback": "Enviar avaliação",
				Subscribe: iI,
				Subscribed: oI,
				Success: rI,
				"Success! Check your email for magic link to sign-in.": "Sucesso! Verifique seu email para o link mágico de acesso.",
				"Success! Your account is fully activated, you now have access to all content.": "Sucesso! Sua conta está totalmente ativada, agora você tem acesso a todo o conteúdo.",
				"Success! Your email is updated.": "Sucesso! Seu email foi atualizado.",
				"Successfully unsubscribed": "Subscrição cancelada com sucesso",
				"Thanks for the feedback!": "Obrigado pela avaliação!",
				"That didn't go to plan": "Algo não correu como planeado",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "O endereço de email que temos para você é {{memberEmail}} — se isso não estiver correto, você pode atualizá-lo na sua <button>área de configurações da conta</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Houve um problema ao enviar sua avaliação. Tente novamente mais tarde.",
				"This site is invite-only, contact the owner for access.": "O acesso a este site é feito apenas por convite. Contate o proprietário para obter acesso.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar o registo, clique no link de confirmação enviado para sua caixa de entrada. Se não o receberes detro de 3 minutos, verifica a pasta de spam!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Experimente grátis por {{amount}} dias, depois {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Desbloqueie o acesso a todas as newsletters se tornando um assinante pago.",
				"Unsubscribe from all emails": "Cancelar subscrição de todos os emails",
				Unsubscribed: aI,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Cancelar a subscrição dos emails não cancelará sua assinatura paga em {{title}}",
				Update: sI,
				"Update your preferences": "Atualizar as tuas preferências",
				"Verify your email address is correct": "Verifique se o endereço de email está correto",
				"View plans": "Ver planos",
				Visit: lI,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Não conseguimos cancelar sua inscrição já que o email não foi encontrado. Por favor, entre em contato com o proprietário do site.",
				"Welcome back, {{name}}!": "Bem-vindo de volta, {{name}}!",
				"Welcome back!": "Bem-vindo de volta!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Quando uma caixa de entrada falha ao aceitar um Email, isso é comumente chamado de bounce. Em muitos casos, isso pode ser temporário. No entanto, em alguns casos, um email com falha pode ser retornado como uma falha permanente quando um endereço de email é inválido ou não existe.",
				"Why has my email been disabled?": "Por que meu email foi desativado?",
				Yearly: uI,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Você atualmente tem uma assinatura gratuita, faça um upgrade para uma assinatura paga para ter acesso completo.",
				"You have been successfully resubscribed": "A tua subscrição foi renovada com sucesso",
				"You're currently not receiving emails": "Você não está recebendo emails no momento",
				"You're not receiving emails": "Você não está recebendo Emails",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Não está a receber emails porque, ou classificou uma mensagem recente como spam, ou as mensagens não puderam ser entregues no endereço de email que você forneceu.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Você entrou com sucesso.",
				"You've successfully subscribed to": "",
				"Your account": "A tua conta",
				"Your input helps shape what gets published.": "O teu feedback ajuda a decidir o conteúdo que será publicado no futuro.",
				"Your subscription will expire on {{expiryDate}}": "Sua assinatura expirará em {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Sua assinatura será renovada em {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Sua assinatura começará em {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		cI = "Subscrever",
		zZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: cI,
			default: {
				"Email sent": "E-mail enviado",
				"Now check your email!": "Agora verifica o teu e-mail!",
				"Please enter a valid email address": "Por favor, insere um endereço de e-mail válido",
				"Something went wrong, please try again.": "Algo correu mal, por favor tenta novamente.",
				Subscribe: cI,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar o registo, clica no link de confirmação que está na tua caixa de entrada. Se não chegou em 3 minutos, verifica a tua pasta de spam!",
				"Your email address": "O teu endereço de e-mail"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		dI = "",
		mI = "",
		pI = "",
		fI = "",
		hI = "",
		gI = "",
		yI = "",
		bI = "",
		kI = "",
		vI = "",
		wI = "",
		SI = "",
		CI = "",
		xI = "",
		EI = "",
		TI = "",
		jI = "",
		$I = "",
		OZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: dI,
			Cancel: mI,
			Comment: pI,
			Delete: fI,
			Discussion: hI,
			Edit: gI,
			Edited: yI,
			Expertise: bI,
			Hide: kI,
			Name: vI,
			Neurosurgeon: wI,
			Reply: SI,
			Report: CI,
			Save: xI,
			Sending: EI,
			Sent: TI,
			Show: jI,
			Yesterday: $I,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: dI,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: mI,
				Comment: pI,
				"Complete your profile": "",
				Delete: fI,
				"Deleted member": "",
				Discussion: hI,
				Edit: gI,
				"Edit this comment": "",
				Edited: yI,
				"Enter your name": "",
				Expertise: bI,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: kI,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: vI,
				Neurosurgeon: wI,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: SI,
				"Reply to comment": "",
				Report: CI,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: xI,
				Sending: EI,
				Sent: TI,
				Show: jI,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: $I,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		DZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Tudo de bom!",
				"Complete signup for {{siteTitle}}!": "Complete seu cadastro em {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Complete seu cadastro em {{siteTitle}}!",
				"Confirm email address": "Confirmar endereço de e-mail",
				"Confirm signup": "Confirme seu cadastro",
				"Confirm your email address": "Confirme seu endereço de e-mail",
				"Confirm your email update for {{siteTitle}}!": "Confirme sua atualização de e-mail em {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Confirme sua inscrição em {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Para sua segurança, o link será desativado dentro de 24 horas.",
				"Hey there,": "Olá,",
				"Hey there!": "Olá!",
				"If you did not make this request, you can safely ignore this email.": "Se você não fez esta solicitação, pode ignorar este e-mail.",
				"If you did not make this request, you can simply delete this message.": "Se você não fez esta solicitação, pode excluir esta mensagem.",
				"Please confirm your email address with this link:": "Por favor, confirme seu endereço de e-mail usando este link:",
				"Secure sign in link for {{siteTitle}}": "Link para acesso seguro em {{siteTitle}}",
				"See you soon!": "Até logo!",
				"Sent to {{email}}": "Enviado para {{email}}",
				"Sign in": "Entrar",
				"Sign in to {{siteTitle}}": "Entrar em {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Toque no link abaixo para completar o processo de cadastro em {{siteTitle}} e entrar automaticamente:",
				"Thank you for signing up to {{siteTitle}}!": "Obrigado por se cadastrar em {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Obrigado por se inscrever em {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Obrigado por se inscrever em {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Obrigado por se inscrever em {{siteTitle}}. Toque no link abaixo para entrar automaticamente:",
				"This email address will not be used.": "Este endereço de e-mail não será usado.",
				"Welcome back to {{siteTitle}}!": "Bem-vindo de volta a {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bem-vindo novamente! Use este link para entrar automaticamente na sua conta em {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Você também pode copiar e colar este URL no seu navegador:",
				"You will not be signed up, and no account will be created for you.": "Você não será inscrito e nenhuma conta será criada para você.",
				"You will not be subscribed.": "Você não será inscrito.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Você esta a um toque de inscrever-se em {{siteTitle}} — por favor, confirme seu endereço de e-mail com este link:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Você esta a um toque de inscrever-se em {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		AI = "Conta",
		NI = "Voltar",
		MI = "Alterar",
		PI = "Escolher",
		_I = "Fechar",
		zI = "Comentários",
		OI = "Cortesia",
		DI = "Confirmar",
		II = "Continuar",
		RI = "Editar",
		YI = "E-mail",
		LI = "E-mails",
		FI = "Para sempre",
		BI = "Gerenciar",
		UI = "Mensal",
		VI = "Nome",
		HI = "Plano",
		qI = "Preço",
		WI = "",
		KI = "Tentar de novo",
		JI = "Salvar",
		GI = "Inscrever-se",
		QI = "Inscrito",
		XI = "Sucesso",
		ZI = "Cancelado",
		eR = "atualizar",
		tR = "",
		nR = "Anualmente",
		IZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: AI,
			Back: NI,
			Change: MI,
			Choose: PI,
			Close: _I,
			Comments: zI,
			Complimentary: OI,
			Confirm: DI,
			Continue: II,
			Edit: RI,
			Email: YI,
			Emails: LI,
			Forever: FI,
			Manage: BI,
			Monthly: UI,
			Name: VI,
			Plan: HI,
			Price: qI,
			Recommendations: WI,
			Retry: KI,
			Save: JI,
			Subscribe: GI,
			Subscribed: QI,
			Success: XI,
			Unsubscribed: ZI,
			Update: eR,
			Visit: tR,
			Yearly: nR,
			default: {
				"{{amount}} days free": "{{amount}} dias grátis",
				"{{amount}} off": "{{amount}} de desconto",
				"{{amount}} off for first {{number}} months.": "{{amount}} de desconto nos primeiros {{number}} meses.",
				"{{amount}} off for first {{period}}.": "{{amount}} de desconto nos primeiros {{period}}.",
				"{{amount}} off forever.": "{{amount}} de desconto para sempre.",
				"{{discount}}% discount": "{{discount}}% de desconto",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} não receberá mais a newsletter {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} não receberá mais e-mails quando alguém responder seus comentários.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} não receberá mais esta newsletter.",
				"{{trialDays}} days free": "{{trialDays}} dias grátis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Um link de acesso foi enviado para o seu e-mail. Se a mensagem não chegar dentro de 3 minutos, verifique sua pasta de spam.",
				Account: AI,
				"Account settings": "Configurações de conta",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Quando o teste grátis acabar, será cobrado o preço normal do plano que você escolheu. Você sempre pode cancelar antes.",
				"Already a member?": "Já é membro?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ocorreu um erro inesperado. Tente novamente ou <a>entre em contato com o suporte</a> se o erro persistir.",
				Back: NI,
				"Back to Log in": "Voltar para login",
				"Billing info": "Informações de cobrança",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Cancele quando quiser.",
				"Cancel subscription": "Cancelar inscrição",
				"Cancellation reason": "Motivo do cancelamento",
				Change: MI,
				"Check spam & promotions folders": "Verificar pastas de spam e promoções",
				"Check with your mail provider": "Verificar com seu provedor de e-mail",
				Choose: PI,
				"Choose a different plan": "Escolher um plano diferente",
				"Choose your newsletters": "Escolher suas newsletters",
				"Click here to retry": "Clique aqui para tentar novamente",
				Close: _I,
				Comments: zI,
				Complimentary: OI,
				Confirm: DI,
				"Confirm cancellation": "Confirmar cancelamento",
				"Confirm subscription": "Confirmar inscrição",
				"Contact support": "Contatar suporte",
				Continue: II,
				"Continue subscription": "Continuar inscrição",
				"Could not sign in. Login link expired.": "Não foi possível fazer login. O link de acesso expirou.",
				"Could not update email! Invalid link.": "Não foi possível atualizar o e-mail! Link inválido.",
				"Create a new contact": "Criar um novo contato",
				"Current plan": "Plano atual",
				"Delete account": "Excluir conta",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Não era isso que você queria? Gerencie suas preferências <button>aqui</button>.",
				"Don't have an account?": "Não tem uma conta?",
				Edit: RI,
				Email: YI,
				"Email newsletter": "Newsletter por e-mail",
				"Email preference updated.": "Preferências de e-mail atualizadas.",
				"Email preferences": "Preferências de e-mail",
				Emails: LI,
				"Emails disabled": "E-mails desativados",
				"Ends {{offerEndDate}}": "Termina em {{offerEndDate}}",
				Error: "Erro",
				"Expires {{expiryDate}}": "Expira em {{expiryDate}}",
				Forever: FI,
				"Free Trial – Ends {{trialEnd}}": "Teste grátis – Termina em {{trialEnd}}",
				"Get help": "Obter ajuda",
				"Get in touch for help": "Entre em contato para obter ajuda",
				"Get notified when someone replies to your comment": "Receber notificação quando alguém responder seu comentário",
				"Give feedback on this post": "Enviar feedback sobre esta postagem",
				"Help! I'm not receiving emails": "Ajuda! Não estou recebendo e-mails",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Se uma newsletter for marcada como spam, os e-mails são automaticamente desativados para esse endereço para garantir que você não receba mais mensagens indesejadas.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Se a reclamação de spam foi acidental ou se você deseja começar a receber e-mails novamente, pode se inscrever novamente para receber e-mails clicando no botão na tela anterior.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Se você cancelar sua inscrição agora, continuará tendo acesso até {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Se você tiver uma conta de e-mail corporativa ou governamental, entre em contato com o departamento de TI e peça para permitir que os e-mails sejam recebidos de {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Se você deseja começar a receber e-mails novamente, os próximos passos são verificar seu endereço de e-mail no arquivo para verificar se há problemas e, em seguida, clicar em se inscrever novamente na tela anterior.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Se você não estiver recebendo a newsletter por e-mail à qual se inscreveu, verifique algumas coisas.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Se você concluiu todas essas verificações e ainda não está recebendo e-mails, pode entrar em contato para obter suporte entrando em contato com {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "No caso de uma falha permanente ser recebida ao tentar enviar uma newsletter, os e-mails serão desativados na conta.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "No seu cliente de e-mail, adicione {{senderEmail}} à sua lista de contatos. Isso sinaliza ao seu provedor de e-mail que os e-mails enviados deste endereço devem ser confiáveis.",
				"Less like this": "Menos como este",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Verifique se os e-mails não estão indo parar acidentalmente nas pastas Spam ou Promoções da sua caixa de entrada. Se estiverem, clique em "Marcar como não spam" e/ou "Mover para a caixa de entrada".',
				Manage: BI,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: UI,
				"More like this": "Relacionados",
				Name: VI,
				"Need more help? Contact support": "Precisa de mais ajuda? Contate o suporte",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "As newsletters podem ser desativadas na sua conta por dois motivos: um e-mail anterior foi marcado como spam ou a tentativa de enviar um e-mail resultou em uma falha permanente (bounce).",
				"Not receiving emails?": "Não está recebendo e-mails?",
				"Now check your email!": "Agora veja seu e-mail!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Depois de se inscrever novamente, se você ainda não vir e-mails na sua caixa de entrada, verifique sua pasta de spam. Alguns provedores de caixa de entrada mantêm um registro de reclamações anteriores de spam e continuarão a sinalizar e-mails. Se isso acontecer, marque a newsletter mais recente como 'Não é spam' para movê-la de volta para sua caixa de entrada principal.",
				"Permanent failure (bounce)": "Falha permanente (bounce)",
				Plan: HI,
				"Plan checkout was cancelled.": "Plano de checkout foi cancelado.",
				"Plan upgrade was cancelled.": "Upgrade de plano foi cancelado.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Preencha os campos obrigatórios",
				Price: qI,
				"Re-enable emails": "Reativar e-mails",
				Recommendations: WI,
				"Renews at {{price}}.": "Renova por {{price}}",
				Retry: KI,
				Save: JI,
				"Send an email and say hi!": "Envie um e-mail e diga oi!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Envie um e-mail para {{senderEmail}} e diga olá. Isso também pode ajudar a sinalizar ao seu provedor de e-mail que os e-mails de e para este endereço devem ser confiáveis.",
				"Sending login link...": "Enviando link de acesso...",
				"Sending...": "Enviando...",
				"Show all": "",
				"Sign in": "Entrar",
				"Sign out": "Sair",
				"Sign up": "Cadastrar",
				"Signup error: Invalid link": "Erro de inscrição: link inválido",
				"Sorry, that didn’t work.": "Desculpe, isso não funcionou.",
				"Spam complaints": "Reclamações de spam",
				"Start {{amount}}-day free trial": "Começar teste grátis de {{amount}} dias",
				"Starting {{startDate}}": "Começando {{startDate}}",
				"Starting today": "Começando hoje",
				"Submit feedback": "Enviar avaliação",
				Subscribe: GI,
				Subscribed: QI,
				Success: XI,
				"Success! Check your email for magic link to sign-in.": "Sucesso! Verifique seu e-mail para o link mágico de acesso.",
				"Success! Your account is fully activated, you now have access to all content.": "Sucesso! Sua conta está totalmente ativada, agora você tem acesso a todo o conteúdo.",
				"Success! Your email is updated.": "Sucesso! Seu e-mail foi atualizado.",
				"Successfully unsubscribed": "Inscrição cancelada com sucesso",
				"Thanks for the feedback!": "Obrigado pela avaliação!",
				"That didn't go to plan": "Algo não saiu como planejado",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "O endereço de e-mail que temos para você é {{memberEmail}} — se isso não estiver correto, você pode atualizá-lo na sua <button>área de configurações da conta</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Houve um problema ao enviar sua avaliação. Tente novamente mais tarde.",
				"This site is invite-only, contact the owner for access.": "Este site é apenas para convidados. Contate o proprietário para obter acesso.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar o cadastro, clique no link de confirmação enviado para sua caixa de entrada. Se o link não chegar dentro de 3 minutos, confira a pasta de spam!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Experimente grátis por {{amount}} dias, depois {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Desbloqueie o acesso a todas as newsletters se tornando um assinante pago.",
				"Unsubscribe from all emails": "Cancelar inscrição em todos os e-mails",
				Unsubscribed: ZI,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Cancelar a inscrição nos e-mails não cancelará sua assinatura paga em {{title}}",
				Update: eR,
				"Update your preferences": "Atualizar preferências",
				"Verify your email address is correct": "Verifique se o endereço de e-mail está correto",
				"View plans": "Ver planos",
				Visit: tR,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Não conseguimos cancelar sua inscrição já que o e-mail não foi encontrado. Por favor, entre em contato com o proprietário do site.",
				"Welcome back, {{name}}!": "Bem-vindo de volta, {{name}}!",
				"Welcome back!": "Bem-vindo de volta!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Quando uma caixa de entrada falha ao aceitar um e-mail, isso é comumente chamado de bounce. Em muitos casos, isso pode ser temporário. No entanto, em alguns casos, um e-mail com falha pode ser retornado como uma falha permanente quando um endereço de e-mail é inválido ou não existe.",
				"Why has my email been disabled?": "Por que meu e-mail foi desativado?",
				Yearly: nR,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Você atualmente tem uma assinatura gratuita, faça um upgrade para uma assinatura paga para ter acesso completo.",
				"You have been successfully resubscribed": "Você foi reinscrito com sucesso",
				"You're currently not receiving emails": "Você não está recebendo e-mails no momento",
				"You're not receiving emails": "Você não está recebendo e-mails",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Você não está recebendo e-mails porque, ou classificou uma mensagem recente como spam, ou as mensagens não puderam ser entregues no endereço de e-mail que você forneceu.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Você entrou com sucesso.",
				"You've successfully subscribed to": "",
				"Your account": "Sua conta",
				"Your input helps shape what gets published.": "Sua resposta ajuda a moldar o que será publicado.",
				"Your subscription will expire on {{expiryDate}}": "Sua assinatura expirará em {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Sua assinatura será renovada em {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Sua assinatura começará em {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		iR = "Inscrever-se",
		RZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: iR,
			default: {
				"Email sent": "E-mail enviado",
				"Now check your email!": "Agora verifique seu e-mail!",
				"Please enter a valid email address": "Por favor, insira um endereço de e-mail válido",
				"Something went wrong, please try again.": "Algo deu errado, por favor tente novamente.",
				Subscribe: iR,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Para completar o registro, clique no link de confirmação em sua caixa de entrada. Se não chegar dentro de 3 minutos, verifique sua pasta de spam!",
				"Your email address": "Seu endereço de e-mail"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		oR = "",
		rR = "",
		aR = "",
		sR = "",
		lR = "",
		uR = "",
		cR = "",
		dR = "",
		mR = "",
		pR = "",
		fR = "",
		hR = "",
		gR = "",
		yR = "",
		bR = "",
		kR = "",
		vR = "",
		wR = "",
		YZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: oR,
			Cancel: rR,
			Comment: aR,
			Delete: sR,
			Discussion: lR,
			Edit: uR,
			Edited: cR,
			Expertise: dR,
			Hide: mR,
			Name: pR,
			Neurosurgeon: fR,
			Reply: hR,
			Report: gR,
			Save: yR,
			Sending: bR,
			Sent: kR,
			Show: vR,
			Yesterday: wR,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: oR,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: rR,
				Comment: aR,
				"Complete your profile": "",
				Delete: sR,
				"Deleted member": "",
				Discussion: lR,
				Edit: uR,
				"Edit this comment": "",
				Edited: cR,
				"Enter your name": "",
				Expertise: dR,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: mR,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: pR,
				Neurosurgeon: fR,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: hR,
				"Reply to comment": "",
				Report: gR,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: yR,
				Sending: bR,
				Sent: kR,
				Show: vR,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: wR,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		LZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Toate cele bune!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Finalizează înregistrarea la {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Confirmă actualizarea adresei tale de email pentru {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Confirmă abonamentul tău la {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Pentru siguranța ta, link-ul va expira în 24 de ore.",
				"Hey there,": "Bună,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Dacă nu ai făcut această solicitare, poți ignora în siguranță acest email.",
				"If you did not make this request, you can simply delete this message.": "Dacă nu ai făcut această solicitare, poți șterge pur și simplu acest mesaj.",
				"Please confirm your email address with this link:": "Te rugăm să confirmi adresa ta de email cu acest link:",
				"Secure sign in link for {{siteTitle}}": "Link securizat pentru autentificarea la {{siteTitle}}",
				"See you soon!": "Pe curând!",
				"Sent to {{email}}": "Trimis către {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Conectează-te la {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Apasă pe link-ul de mai jos pentru a finaliza procesul de înregistrare la {{siteTitle}} și pentru a fi conectat automat:",
				"Thank you for signing up to {{siteTitle}}!": "Îți mulțumim că te-ai înregistrat la {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Îți mulțumim că te-ai abonat la {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Îți mulțumim că te-ai abonat la {{siteTitle}}. Apasă pe link-ul de mai jos pentru a fi conectat automat:",
				"This email address will not be used.": "Această adresă de email nu va fi utilizată.",
				"Welcome back to {{siteTitle}}!": "Bine ai revenit la {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Bun venit înapoi! Folosește acest link pentru a te autentifica în siguranță în contul tău {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Poți, de asemenea, să copiezi și să lipești acest URL în browserul tău:",
				"You will not be signed up, and no account will be created for you.": "Nu vei fi înregistrat și nu se va crea niciun cont pentru tine.",
				"You will not be subscribed.": "Nu vei fi abonat.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Ești la un pas de a te abona la {{siteTitle}} — te rugăm să confirmi adresa ta de email cu acest link:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		SR = "Cont",
		CR = "Înapoi",
		xR = "",
		ER = "",
		TR = "Închide",
		jR = "Comentarii",
		$R = "",
		AR = "Confirmă",
		NR = "Continuă",
		MR = "",
		PR = "Email",
		_R = "Emailuri",
		zR = "",
		OR = "Administrează",
		DR = "Lunar",
		IR = "Nume",
		RR = "",
		YR = "Preț",
		LR = "",
		FR = "Reîncearcă",
		BR = "Salvează",
		UR = "",
		VR = "",
		HR = "",
		qR = "",
		WR = "",
		KR = "",
		JR = "Anual",
		FZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: SR,
			Back: CR,
			Change: xR,
			Choose: ER,
			Close: TR,
			Comments: jR,
			Complimentary: $R,
			Confirm: AR,
			Continue: NR,
			Edit: MR,
			Email: PR,
			Emails: _R,
			Forever: zR,
			Manage: OR,
			Monthly: DR,
			Name: IR,
			Plan: RR,
			Price: YR,
			Recommendations: LR,
			Retry: FR,
			Save: BR,
			Subscribe: UR,
			Subscribed: VR,
			Success: HR,
			Unsubscribed: qR,
			Update: WR,
			Visit: KR,
			Yearly: JR,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "Reducere de {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} zile gratuite",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Un link de autentificare a fost trimis în inbox-ul tău. Dacă nu ajunge în 3 minute, asigură-te că verifici folderul de spam.",
				Account: SR,
				"Account settings": "Setări cont",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "După ce expiră perioada de încercare gratuită, vei fi taxat la prețul obișnuit pentru nivelul pe care l-ai ales. Poți anula în orice moment înainte de aceasta.",
				"Already a member?": "Ești deja membru?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: CR,
				"Back to Log in": "Înapoi la Autentificare",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Anulează abonamentul",
				"Cancellation reason": "Motivul anulării",
				Change: xR,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: ER,
				"Choose a different plan": "Alege un plan diferit",
				"Choose your newsletters": "Alege-ți newsletterele",
				"Click here to retry": "",
				Close: TR,
				Comments: jR,
				Complimentary: $R,
				Confirm: AR,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: NR,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Șterge contul",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Nu ai un cont?",
				Edit: MR,
				Email: PR,
				"Email newsletter": "",
				"Email preference updated.": "Preferințele de email au fost actualizate.",
				"Email preferences": "Preferințe de email",
				Emails: _R,
				"Emails disabled": "Emailuri dezactivate",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: zR,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Obține ajutor",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Primește notificare când cineva răspunde la comentariul tău",
				"Give feedback on this post": "Oferă feedback despre acest articol",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Mai puțin de genul acesta",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: OR,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: DR,
				"More like this": "Mai multe de genul acesta",
				Name: IR,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Nu primești emailuri?",
				"Now check your email!": "Acum verifică-ți emailul!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: RR,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: YR,
				"Re-enable emails": "Activează din nou emailurile",
				Recommendations: LR,
				"Renews at {{price}}.": "",
				Retry: FR,
				Save: BR,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Se trimite link-ul de autentificare...",
				"Sending...": "Se trimite...",
				"Show all": "",
				"Sign in": "Autentificare",
				"Sign out": "",
				"Sign up": "Înregistrare",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Începe perioada gratuită de {{amount}} zile",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Trimite feedback",
				Subscribe: UR,
				Subscribed: VR,
				Success: HR,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Dezabonare realizată cu succes",
				"Thanks for the feedback!": "Mulțumim pentru feedback!",
				"That didn't go to plan": "Asta nu a mers conform planului",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Acest site este disponibil doar pe bază de invitație, contactează proprietarul pentru acces.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Pentru a finaliza înregistrarea, apasă pe link-ul de confirmare din inbox-ul tău. Dacă nu ajunge în 3 minute, verifică folderul de spam!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Dezabonează-te de la toate emailurile",
				Unsubscribed: qR,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Dezabonarea de la emailuri nu va anula abonamentul plătit la {{title}}",
				Update: WR,
				"Update your preferences": "Actualizează-ți preferințele",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: KR,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nu am putut să te dezabonăm deoarece adresa de email nu a fost găsită. Te rugăm să contactezi proprietarul site-ului.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: JR,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Te-ai reabonat cu succes",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Nu primești emailuri deoarece fie ai marcat un mesaj recent ca spam, fie pentru că mesajele nu pot fi livrate la adresa ta de email furnizată.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Contul tău",
				"Your input helps shape what gets published.": "Contribuția ta ajută la conturarea a ceea ce se publică.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		GR = "",
		BZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: GR,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: GR,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		QR = "",
		XR = "",
		ZR = "",
		e5 = "",
		t5 = "",
		n5 = "",
		i5 = "",
		o5 = "",
		r5 = "",
		a5 = "",
		s5 = "",
		l5 = "",
		u5 = "",
		c5 = "",
		d5 = "",
		m5 = "",
		p5 = "",
		f5 = "",
		UZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: QR,
			Cancel: XR,
			Comment: ZR,
			Delete: e5,
			Discussion: t5,
			Edit: n5,
			Edited: i5,
			Expertise: o5,
			Hide: r5,
			Name: a5,
			Neurosurgeon: s5,
			Reply: l5,
			Report: u5,
			Save: c5,
			Sending: d5,
			Sent: m5,
			Show: p5,
			Yesterday: f5,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: QR,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: XR,
				Comment: ZR,
				"Complete your profile": "",
				Delete: e5,
				"Deleted member": "",
				Discussion: t5,
				Edit: n5,
				"Edit this comment": "",
				Edited: i5,
				"Enter your name": "",
				Expertise: o5,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: r5,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: a5,
				Neurosurgeon: s5,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: l5,
				"Reply to comment": "",
				Report: u5,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: c5,
				Sending: d5,
				Sent: m5,
				Show: p5,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: f5,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		VZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Всего хорошего!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Завершите регистрацию на {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Подтвердите обновление email на {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Подтвердите подписку на {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Для вашей безопасности ссылка действительна в течение 24 часов.",
				"Hey there,": "Привет,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Если вы этого не делали, можете смело игнорировать это письмо.",
				"If you did not make this request, you can simply delete this message.": "Если вы этого не делали, можете просто удалить это сообщение.",
				"Please confirm your email address with this link:": "Пожалуйста, подтвердите свой адрес электронной почты, перейдя по этой ссылке:",
				"Secure sign in link for {{siteTitle}}": "Безопасная ссылка для входа на {{siteTitle}}",
				"See you soon!": "До встречи!",
				"Sent to {{email}}": "Отправлено на {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Войти на {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Нажмите на ссылку ниже, чтобы завершить процесс регистрации на {{siteTitle}} и автоматически войти:",
				"Thank you for signing up to {{siteTitle}}!": "Спасибо за регистрацию на {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Спасибо за подписку на {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Спасибо за подписку на {{siteTitle}}. Нажмите на ссылку ниже, чтобы автоматически войти:",
				"This email address will not be used.": "Этот email не будет использоваться.",
				"Welcome back to {{siteTitle}}!": "Добро пожаловать на {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "С возвращением! Используйте эту ссылку для безопасного входа в свою учетную запись {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Вы также можете скопировать и вставить этот URL в свой браузер:",
				"You will not be signed up, and no account will be created for you.": "Вы не будете зарегистрированы, и для вас не будет создан аккаунт.",
				"You will not be subscribed.": "Вы не будете подписаны.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Вы в одном клике от подписки на {{siteTitle}} — пожалуйста, подтвердите свой адрес электронной почты с помощью этой ссылки:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		h5 = "Аккаунт",
		g5 = "Назад",
		y5 = "",
		b5 = "",
		k5 = "Закрыть",
		v5 = "Комментарии",
		w5 = "",
		S5 = "Подтвердить",
		C5 = "Продолжить",
		x5 = "",
		E5 = "Email",
		T5 = "Письма",
		j5 = "",
		$5 = "Управление",
		A5 = "Ежемесячно",
		N5 = "Имя",
		M5 = "",
		P5 = "Цена",
		_5 = "",
		z5 = "Повторить попытку",
		O5 = "Сохранить",
		D5 = "",
		I5 = "",
		R5 = "",
		Y5 = "",
		L5 = "",
		F5 = "",
		B5 = "Ежегодно",
		HZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: h5,
			Back: g5,
			Change: y5,
			Choose: b5,
			Close: k5,
			Comments: v5,
			Complimentary: w5,
			Confirm: S5,
			Continue: C5,
			Edit: x5,
			Email: E5,
			Emails: T5,
			Forever: j5,
			Manage: $5,
			Monthly: A5,
			Name: N5,
			Plan: M5,
			Price: P5,
			Recommendations: _5,
			Retry: z5,
			Save: O5,
			Subscribe: D5,
			Subscribed: I5,
			Success: R5,
			Unsubscribed: Y5,
			Update: L5,
			Visit: F5,
			Yearly: B5,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "Скидка {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} дня(-ей) бесплатно",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Ссылка для входа была отправлена вам на email. Если письмо долго не приходит, проверьте папку Спам.",
				Account: h5,
				"Account settings": "Настройки аккаунта",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "После окончания бесплатного периода с вас будут взиматься регулярные платежи по выбранному тарифу. До этого момента вы можете отменить подписку в любое время.",
				"Already a member?": "Уже есть аккаунт?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: g5,
				"Back to Log in": "Вернуться ко входу",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Отменить подписку",
				"Cancellation reason": "Причина отмены",
				Change: y5,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: b5,
				"Choose a different plan": "Выберите другой план",
				"Choose your newsletters": "Выберите рассылки",
				"Click here to retry": "",
				Close: k5,
				Comments: v5,
				Complimentary: w5,
				Confirm: S5,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: C5,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Удалить аккаунт",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "У вас нет аккаунта?",
				Edit: x5,
				Email: E5,
				"Email newsletter": "",
				"Email preference updated.": "Настройки электронной почты обновлены.",
				"Email preferences": "Настройки электронной почты",
				Emails: T5,
				"Emails disabled": "Письма отключены",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: j5,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Получить помощь",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Оповещать, когда кто-то отвечает на ваш комментарий",
				"Give feedback on this post": "Оставить отзыв на эту публикацию",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Меньше подобного",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: $5,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: A5,
				"More like this": "Больше подобного",
				Name: N5,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Не получаете письма?",
				"Now check your email!": "Теперь проверьте свою электронную почту!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: M5,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: P5,
				"Re-enable emails": "Снова включить письма",
				Recommendations: _5,
				"Renews at {{price}}.": "",
				Retry: z5,
				Save: O5,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Отправка ссылки для входа...",
				"Sending...": "Отправка...",
				"Show all": "",
				"Sign in": "Войти",
				"Sign out": "",
				"Sign up": "Зарегистрироваться",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Начать {{amount}}-дневный пробный период",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Отправить отзыв",
				Subscribe: D5,
				Subscribed: I5,
				Success: R5,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Подписка успешно отменена",
				"Thanks for the feedback!": "Спасибо за отзыв!",
				"That didn't go to plan": "Что-то пошло не так",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Этот сайт доступен только по приглашениям, свяжитесь с владельцем для получения доступа.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Чтобы завершить регистрацию, нажмите на ссылку подтверждения в вашем почтовом ящике. Если она не придет в течение 3 минут, проверьте папку Спам!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Отписаться от всех писем",
				Unsubscribed: Y5,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Отключение рассылки не отменит вашу платную подписку на {{title}}",
				Update: L5,
				"Update your preferences": "Обновить настройки",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: F5,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Мы не смогли отменить вашу подписку, так как адрес электронной почты не найден. Пожалуйста, свяжитесь с владельцем сайта.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: B5,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Вы снова подписаны на рассылку",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Вы не получаете письма, так как либо вы пометили недавнее сообщение как спам, либо сообщения не могут быть доставлены на указанный вами email.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Ваш аккаунт",
				"Your input helps shape what gets published.": "Ваш отзыв поможет решить, что будет опубликовано дальше.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		U5 = "",
		qZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: U5,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: U5,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		V5 = "නිර්නාමික",
		H5 = "අවලංගු කරන්​න​",
		q5 = "අදහ​ස",
		W5 = "Delete කරන්​න",
		K5 = "සාකච්ඡා​ව",
		J5 = "සංස්කරණය කරන්න",
		G5 = "සංස්කරණය කරන ලද.",
		Q5 = "",
		X5 = "සඟවන්න",
		Z5 = "",
		e3 = "",
		t3 = "ප්‍රතිචාර දක්වන්​න",
		n3 = "වාර්තා කරන්​න",
		i3 = "සුරකින්​න",
		o3 = "යවමි​න්",
		r3 = "යැව්වා",
		a3 = "පෙන්වන්​න",
		s3 = "",
		WZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: V5,
			Cancel: H5,
			Comment: q5,
			Delete: W5,
			Discussion: K5,
			Edit: J5,
			Edited: G5,
			Expertise: Q5,
			Hide: X5,
			Name: Z5,
			Neurosurgeon: e3,
			Reply: t3,
			Report: n3,
			Save: i3,
			Sending: o3,
			Sent: r3,
			Show: a3,
			Yesterday: s3,
			default: {
				"{{amount}} characters left": "තව වචන {{amount}} යි.",
				"{{amount}} comments": "අදහ​ස් {{amount}} යි.",
				"{{amount}} days ago": "දින {{amount}} ට පෙ​ර",
				"{{amount}} hours ago": "පැය {{amount}} ට පෙ​ර",
				"{{amount}} minutes ago": "මිනිත්තු {{amount}} ට පෙ​ර",
				"{{amount}} months ago": "මාස {{amount}} ට පෙ​ර",
				"{{amount}} seconds ago": "තත්ත්පර {{amount}} ට පෙ​ර",
				"{{amount}} weeks ago": "සති {{amount}} ට පෙ​ර",
				"{{amount}} years ago": "අවුරුදු {{amount}} ට පෙ​ර",
				"1 comment": "1 අදහසයි.",
				"Add comment": "අදහස් එකතු කරන්​න",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "ප්‍රතිචාර එකතු කරන්​න",
				"Already a member?": "දැනටමත් සාමාජිකයෙක්ද ?",
				Anonymous: V5,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: H5,
				Comment: q5,
				"Complete your profile": "ඔබගේ ගිණුම සම්පූර්ණ කරන්​න",
				Delete: W5,
				"Deleted member": "සාමාජිකයාව delete කරන්​න",
				Discussion: K5,
				Edit: J5,
				"Edit this comment": "අදහස සංස්කරණය කරන්න",
				Edited: G5,
				"Enter your name": "ඔබගේ නම සඳහන් කරන්​න",
				Expertise: Q5,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: X5,
				"Hide comment": "අදහස සඟවන්න",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: Z5,
				Neurosurgeon: e3,
				"One day ago": "දිනකට පෙ​ර",
				"One hour ago": "පැයකට පෙ​ර",
				"One minute ago": "මිනිත්තුවකට පෙ​ර",
				"One month ago": "මසකට පෙ​ර",
				"One week ago": "සතියකට පෙ​ර",
				"One year ago": "අවුරුද්දකට පෙ​ර",
				Reply: t3,
				"Reply to comment": "අදහසට ‍රතිචාර දක්වන්​න",
				Report: n3,
				"Report comment": "අදහසට වාර්තා කරන්​න",
				"Report this comment": "මෙම අදහසට වාර්තා කරන්​න",
				"Report this comment?": "මෙම අදහසට වාර්තා කරන්නෙහිද ?",
				Save: i3,
				Sending: o3,
				Sent: r3,
				Show: a3,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: s3,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		KZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "සියලු දේ සාර්ථකත්වයට පත් වේවායි ප්‍රාර්ථනා කරන්නෙමු!",
				"Complete signup for {{siteTitle}}!": "{{siteTitle}} වෙත signup වීම සම්පූර්ණ කරන්න",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}} වෙත ඔබගේ signup වීම සම්පූර්ණ කරන්න!",
				"Confirm email address": "Email ලිපිනය තහවුරු කරන්න",
				"Confirm signup": "Signup වීම තහවුරු කරන්න",
				"Confirm your email address": "ඔබගේ email ලිපිනය තහවුරු කරන්න",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}} සඳහා වන ඔබගේ email ලිපිනය update කිරීම තහවුරු කරන්න",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}} වෙත ඔබගේ subscription එක තහවුරු කරන්න",
				"For your security, the link will expire in 24 hours time.": "ඔබගේ ආරක්ෂාව වෙනුවෙන්, මෙම link එක පැය 24ක කාලයකින් කල් ඉකුත් වනු ඇත.",
				"Hey there,": "ආයුබෝවන්,",
				"Hey there!": "ආයුබෝවන්!",
				"If you did not make this request, you can safely ignore this email.": "ඔබ මෙම ඉල්ලීම සිදු නොකලේ නම්, මෙම email එක නොසළකාහරින්න.",
				"If you did not make this request, you can simply delete this message.": "ඔබ මෙම ඉල්ලීම සිදු නොකලේ නම්, මෙම පණිවිඩය මකා දැමිය හැක.",
				"Please confirm your email address with this link:": "ඔබගේ email ලිපිනය තහවුරු කිරීම සඳහා මෙම link එක භාවිතා කරන්න:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}} වෙත ආරක්ෂිතව sign in වීම සඳහා වන link එක",
				"See you soon!": "ඉක්මණින් නැවත හමුවෙමු!",
				"Sent to {{email}}": "{{email}} වෙත යවන ලදී",
				"Sign in": "Sign in වෙන්න",
				"Sign in to {{siteTitle}}": "{{siteTitle}} වෙත sign in වෙන්න",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "{{siteTitle}} වෙත signup වීම සිදු කිරීම සඳහා පහත link එක tap කරන්න. ඒ හරහා ඔබව ස්ව්‍යංක්‍රීයව sign in වනු ඇත:",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}} වෙත signup වීම වෙනුවෙන් ඔබට ස්තූතිවන්ත වෙන්නෙමු!",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}} වෙත subscribe වීම වෙනුවෙන් ඔබට ස්තූතිවන්ත වෙන්නෙමු!",
				"Thank you for subscribing to {{siteTitle}}.": "{{siteTitle}} වෙත subscribe වීම වෙනුවෙන් ඔබට ස්තූතිවන්ත වෙන්නෙමු.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}} වෙත subscribe වීම වෙනුවෙන් ඔබට ස්තූතිවන්ත වෙන්නෙමු. ස්ව්‍යංක්‍රීයවම sign in වීම සඳහා පහත link එක මත tap කරන්න:",
				"This email address will not be used.": "මෙම email ලිපිනය භාවිතා නොවනු ඇත.",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}} වෙත සාදරයෙන් පිළිගන්නෙමු!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "සාදරයෙන් පිළිගන්නෙමු! ඔබගේ {{siteTitle}} ගිණුමට ආරක්ෂිතව sign in වීම සඳහා පහත link එක භාවිතා කරන්න",
				"You can also copy & paste this URL into your browser:": "එමෙන්ම ඔබට මේ URL එක ඔබේ browser එකට copy & paste කිරීමේ හැකියාව ඇත:",
				"You will not be signed up, and no account will be created for you.": "ඔබව sign up නොවනු ඇත, එමෙන්ම ඔබ වෙනුවෙන් ගිණුමක් නිර්මාණය නොවනු ඇත.",
				"You will not be subscribed.": "ඔබව subscribe නොවනු ඇත.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "{{siteTitle}} වෙත subscribe වීම සඳහා ඇත්තේ තව එක පියවරක් පමණි - කරුණාකර පහත link එක සමඟින් ඔබගේ email ලිපිනය තහවුරු කරන්න:",
				"You're one tap away from subscribing to {{siteTitle}}!": "{{siteTitle}} වෙත subscribe වීම සඳහා ඇත්තේ තව එක පියවරක් පමණි!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		l3 = "ගිණුම",
		u3 = "ආපසු",
		c3 = "වෙනස් කරන්න",
		d3 = "තෝරන්න",
		m3 = "වසන්න",
		p3 = "ප්‍රතිචාර",
		f3 = "ස්තුතිපූර්වක",
		h3 = "තහවුරු කරන්න",
		g3 = "ඉදිරියට යන්න",
		y3 = "Edit කරන්න",
		b3 = "Email",
		k3 = "ඊමේල්",
		v3 = "හැමදාටම",
		w3 = "කළමනාකරණය කරන්න",
		S3 = "මාසිකව",
		C3 = "නම",
		x3 = "Plan එක",
		E3 = "මිල",
		T3 = "",
		j3 = "නැවත උත්සහකරන්න",
		$3 = "Save කරන්න",
		A3 = "Subscribe කරන්න",
		N3 = "Subscribe කරන ලදී",
		M3 = "සාර්ථකයි",
		P3 = "Unsubscribe කරන ලදී",
		_3 = "Update කරන්න",
		z3 = "",
		O3 = "වාර්ෂිකව",
		JZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: l3,
			Back: u3,
			Change: c3,
			Choose: d3,
			Close: m3,
			Comments: p3,
			Complimentary: f3,
			Confirm: h3,
			Continue: g3,
			Edit: y3,
			Email: b3,
			Emails: k3,
			Forever: v3,
			Manage: w3,
			Monthly: S3,
			Name: C3,
			Plan: x3,
			Price: E3,
			Recommendations: T3,
			Retry: j3,
			Save: $3,
			Subscribe: A3,
			Subscribed: N3,
			Success: M3,
			Unsubscribed: P3,
			Update: _3,
			Visit: z3,
			Yearly: O3,
			default: {
				"{{amount}} days free": "දින {{amount}} ක් නොමිලයේ",
				"{{amount}} off": "{{amount}} ක වට්ටමක්",
				"{{amount}} off for first {{number}} months.": "පළමු මාස {{number}} සඳහා {{amount}} ක වට්ටමක්",
				"{{amount}} off for first {{period}}.": "පළමු {{period}} සඳහා {{amount}} ක වට්ටමක්",
				"{{amount}} off forever.": "හැමදාටම {{amount}} ක වට්ටමක්",
				"{{discount}}% discount": "{{discount}}% ක වට්ටමක්",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} වෙත තවදුරටත් {{newsletterName}} newsletter නොලැබෙනු ඇත.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "ඔබගේ comments සඳහා කිසිවෙකු reply කළ විට {{memberEmail}} වෙත තවදුරටත් email මඟින් දැනුම්දීමක් නොකෙරෙනු ඇත.",
				"{{memberEmail}} will no longer receive this newsletter.": "මෙම newsletter එක {{memberEmail}} වෙත තවදුරටත් නොලැබෙනු ඇත.",
				"{{trialDays}} days free": "දින {{trialDays}} ක් දක්වා නොමිලේ",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "වෙබ් අඩවියට පිවිසීම සඳහා link එකක් ඔබගේ email ලිපිනය වෙත යවා ඇත. එය විනාඩි 3ක් ඇතුළත නොපැමිණියේ නම් spam ෆෝල්ඩරය පරීක්ෂා කරන්න.",
				Account: l3,
				"Account settings": "ගිණුම් සැකසුම්",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "නොමිලයේ ලබාදෙන අත්හදාබැලීමේ කාලය අවසන් වූ පසුව, ඔබ තෝරාගන්නා ලද tier එක අනුව එහි සාමාන්‍යය මිල ගණන් අය වනු ඇත. ඊට පෙර ඕනෑම අවස්ථාවක මෙය අවලංගු කිරීමට ඔබට හැකියාව ඇත.",
				"Already a member?": "දැනටමත් සාමාජිකයෙක්ද?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "එම උත්සාහය අසාර්ථක විය. තව ටික වේලාවකින් නැවත උත්සාහ කරන්න, මෙම ගැටළුව තවදුරටත් පවතින්නේ නම්, <a>සහායක අංශය සම්බන්ධ කරගන්න</a>.",
				Back: u3,
				"Back to Log in": "නැවත log in වීම සඳහා",
				"Billing info": "බිල්පත් පිළිබඳ තොරතුරු",
				"Black Friday": "",
				"Cancel anytime.": "ඕනෑම අවස්ථාවකදී අවලංගු කළ හැක.",
				"Cancel subscription": "Subscription එක අවලංගු කරන්න",
				"Cancellation reason": "අවලංගු කිරිමට හේතුව",
				Change: c3,
				"Check spam & promotions folders": "Spam සහ promotions folders පරීක්ෂා කරන්න",
				"Check with your mail provider": "ඔබගේ email සේවා සපයන්නා සමඟින් පරීක්ෂා කර බලන්න",
				Choose: d3,
				"Choose a different plan": "වෙනත් plan එකක් තෝරන්න",
				"Choose your newsletters": "ඔබගේ newsletter වර්ගය තෝරන්න",
				"Click here to retry": "නැවත උත්සාහ කිරීම සඳහා මෙහි click කරන්න",
				Close: m3,
				Comments: p3,
				Complimentary: f3,
				Confirm: h3,
				"Confirm cancellation": "අවලංගු කිරීම තහවුරු කරන්න",
				"Confirm subscription": "subscribe කිරීම තහවුරු කරන්න",
				"Contact support": "සහායක අංශය සම්බන්ධ කරගන්න",
				Continue: g3,
				"Continue subscription": "Subscription එක පවත්වාගෙන යන්න",
				"Could not sign in. Login link expired.": "Sign in වීමට නොහැකි විය. Login link එක කල් ඉකුත් වී ඇත.",
				"Could not update email! Invalid link.": "Email ලිපිනය update කළ නොහැකි විය. වැරදි link එකකි.",
				"Create a new contact": "අලුත් contact එකක් නිර්මාණය කරන්න",
				"Current plan": "දැනට පවතින plan එක",
				"Delete account": "ගිණුම Delete කරන්න",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "මෙය සිදු කිරීමට අදහස් නොකලේ ද? <button>මේ හරහා</button> ඔබගේ preferences manage කරගන්න.",
				"Don't have an account?": "ගිණුමක් නොමැතිද?",
				Edit: y3,
				Email: b3,
				"Email newsletter": "Email newsletter",
				"Email preference updated.": "Email preference update කරන ලදී.",
				"Email preferences": "Email preferences",
				Emails: k3,
				"Emails disabled": "Emails නවත්වා ඇත",
				"Ends {{offerEndDate}}": "{{offerEndDate}} දී අවසන් වනු ඇත",
				Error: "Error එකක්",
				"Expires {{expiryDate}}": "{{expiryDate}} දින අවසන් වෙයි",
				Forever: v3,
				"Free Trial – Ends {{trialEnd}}": "අත්හදාබැලීමේ කාලසීමාව {{trialEnd}} දින අවසන් වෙයි",
				"Get help": "සහාය ලබාගන්න",
				"Get in touch for help": "සහාය ලබාගැනීම සඳහා සම්බන්ධ වෙන්න",
				"Get notified when someone replies to your comment": "ඔබේ ප්‍රතිචාරයට යම් අයෙකු පිළිතුරු දුන් විට දැනුම් දෙන්න",
				"Give feedback on this post": "මෙම post එකට ඔබේ අදහස එක් කරන්න",
				"Help! I'm not receiving emails": "සහාය අවශ්‍යයයි! මට emails ලැබෙන්නේ නැහැ.",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Newsletter එකක් spam ලෙස flag වුවහොත්, එම email ලිපිනයට emails ලැබීම ස්ව්‍යංක්‍රීයවම අක්‍රීය කිරීම හරහා ඔබට අනව්‍යශ්‍යය messages ලැබීම නතර වන බව සහතික කෙරෙනු ඇත.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Spam සඳහා කළ පැමිණිල්ල අත්වැරදීමකින් සිදු වූවක් හෝ, ඔබ නැවතත් emails ලබාගැනීමට කැමැත්තෙන් සිටින්නේ නම්, පෙර screen එකේ ඇති button එක හරහා emails වලට නැවත subscribe කිරීමේ හැකියාව ඇත.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "ඔබගේ subscription එක මෙම මොහොතේ cancel කළහොත්, {{periodEnd}} දක්වා ඔබ‍ගේ access නොවෙනස්ව පවතිනු ඇත.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "ඔබ ව්‍යාපාරික හෝ රාජ්‍යය email ලිපිනයක් භාවිතා කරන්නේ නම්, {{senderEmail}} ලිපිනයෙන් එන emails allow කරන ලෙස ඔබගේ IT department එකට දැනුම් දීමට කටයුතු කරන්න.",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "ඔබ නැවත emails ලබාගැනීමට කැමති නම්, වඩාත්ම සුදුසු මීළඟ පියවර වන්නේ ‍ඔබ භාවිතා කරන email ලිපිනයෙහි යම්කිසි ගැටළුවක් ඇත්දැයි පරීක්ෂා කිරීමෙන් අනතුරුව, පෙර screen එක හරහා resubscribe මත click කිරීමයි.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "ඔබ subscribe කළ newsletters ඔබට නොලැබෙන්නේ නම්, මේ දේවල් පරීක්ෂා කර බලන්න.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "මෙහි සඳහන් සියළුම දේ පරීක්ෂා කිරීමෙන් අනතුරුවත් ඔබට emails නොලැබෙන්නේ නම්, {{supportAddress}} සම්බන්ධ කරගනිමින් සහාය ඉල්ලා සිටින්න.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Newsletter එකක් යැවීමේ අවස්ථාවකදී permanent failure එකක් වාර්ථා වුවහොත්, මෙම ගිණුමෙහි emails අක්‍රීය කෙරෙනු ඇත.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "ඔබගේ email client එකෙහි contact list එකට {{senderEmail}} ලිපිනය add කරගන්න. මෙම ලිපිනය හරහා ලැබෙන emails විශ්වාසදායී බව මේ හරහා ඔබගේ emailසේවා සපයන්නාට සංඥා කෙරෙනු ඇත.",
				"Less like this": "මෙවැනි දෑ අඩුවෙන් පෙන්වන්න",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Spam හෝ inbox එකෙහි ඇති Promotions folder වලට emails අත්වැරදීමකින් හෝ ළඟා වන්නේ ද යන්න සහතික කරගන්න. එසේ වන්නේ නම්, "Mark as not spam" සහ/හෝ "Move to inbox" යන්නෙහි click කරන්න.',
				Manage: w3,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: S3,
				"More like this": "මෙවැනි දෑ වැඩියෙන් පෙන්වන්න",
				Name: C3,
				"Need more help? Contact support": "තවදුරටත් සහාය අවශ්‍යයි ද? සහායක සේවාව සම්බන්ධ කරගන්න",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "ඔබගේ ගිණුමෙහි newsletters අක්‍රීය වීමට හේතු දෙකක් දැක්විය හැකිය: පෙර යවන ලද email එකක් spam ලෙස සටහන් කිරීම, හෝ email එකක් යැවීමට උත්සාහ කිරීමේදී permenent faulure (bounce) එකක් වීමක් වාර්ථා වීම.",
				"Not receiving emails?": "Emails ලැබෙන්නේ නැද්ද?",
				"Now check your email!": "දැන් ඔබගේ email එක පරික්ෂා කරන්න!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "නැවත subscribe කළ විටත් ඔබගේ inbox එකට email ලැබෙන්නේ නැතිනම්, spam folder එක පරීක්ෂා කරන්න. ඇතැම් සේවා සපයන්නන් මීට පෙර spam සම්බන්ධව ලැබුණු පැමිණිලි පාදක කරගෙන තවදුරටත් emails spam ලෙස ලකුණු කරනු ලබනවා. එසේ වී ඇත්නම්,  අලුතින්ම ලැබුණු newsletter එක ඔබගේ primary inbox එකට යැවීමට 'Not spam' ලෙස සළකුනු කරන්න.",
				"Permanent failure (bounce)": "Permanent failure (bounce) එකක්",
				Plan: x3,
				"Plan checkout was cancelled.": "Plan එක checkout කිරීම අවලංගු කරන ලදී.",
				"Plan upgrade was cancelled.": "Plan එක upgrade කිරීම අවලංගු කරන ලදී.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "කරුණාකර required files පිරවීමට කටයුතු කරන්න",
				Price: E3,
				"Re-enable emails": "ඉමේල් නැවත සක්‍රීය කරන්න",
				Recommendations: T3,
				"Renews at {{price}}.": "{{price}} ක මුදලකට renew වනු ඇත.",
				Retry: j3,
				Save: $3,
				"Send an email and say hi!": "Email එකක් send කරමින් hi! කියන්න",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "{{senderEmail}} වෙත hello ලෙස සඳහන් කරමින් email එකක් එවන්න. මේ හරහා එම email ලිපිනයෙන් ලැබෙන සහ ලිපිනයට යවන emails විශ්වාසදායී බව ඔබගේ email සේවා සපයන්නාට සංඥා කෙරෙනු ඇත.",
				"Sending login link...": "Login link එක යවමින්...",
				"Sending...": "යවමින්...",
				"Show all": "",
				"Sign in": "Sign in වෙන්න",
				"Sign out": "Sign out වෙන්න",
				"Sign up": "ලියාපදිංචි වෙන්න",
				"Signup error: Invalid link": "Signup වීම අසාර්ථකයි: වැරදි link එකකි",
				"Sorry, that didn’t work.": "සමාවෙන්න, නමුත් එය සාර්ථක වූයේ නැත.",
				"Spam complaints": "Spam සඳහා වන පැමිණිලි",
				"Start {{amount}}-day free trial": "{{amount}}-day free trial එක ආරම්භකරන්න",
				"Starting {{startDate}}": "{{startDate}} සිට ආරම්භ වෙයි",
				"Starting today": "අද සිට ආරම්භ වෙයි",
				"Submit feedback": "ප්‍රතිචාරය යොමුකරන්න",
				Subscribe: A3,
				Subscribed: N3,
				Success: M3,
				"Success! Check your email for magic link to sign-in.": "සාර්ථකයි! sign-in වීමේ magic link එක සඳහා ඔබ‍ෙගේ emails පරීක්ෂා කරන්න.",
				"Success! Your account is fully activated, you now have access to all content.": "සාර්ථකයි! ඔබගේ ගිණුම සම්පූර්ණයෙන්ම activate කර ඇති අතර, දැන් ඔබට සියළුම content සඳහා access ලැබී තිබෙනවා.",
				"Success! Your email is updated.": "සාර්ථකයි! ඔබගේ email ලිපිනය update කරන ලදී.",
				"Successfully unsubscribed": "සාර්ථකව unsubscribed කර ඇත",
				"Thanks for the feedback!": "ප්‍රතිචාරය සඳහා ස්තූතියි!",
				"That didn't go to plan": "එය සැලැස්මට අනුකූලව සිදු වුණේ නෑ",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "ඔබගේ email ලිපිනය ලෙස අප සතුව තිබෙන්නේ {{memberEmail}} යන email ලිපිනයයි - මෙය වැරදියි නම්, ඔබගේ <button>account settings area එක</button> හරහා update කළ හැක.",
				"There was a problem submitting your feedback. Please try again a little later.": "ඔබගේ feedback එක යොමු කිරීමේදී ගැටළුවක් ඇති විය. තව ටික වේලාවකින් නැවත උත්සාහ කරන්න.",
				"This site is invite-only, contact the owner for access.": "මෙම වෙබ් අඩවිය ආරාධිතයන් සඳහා පමණි, ප්‍රවේශ වීම සඳහා හිමිකරු අමතන්න.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Signup වීම සම්පූර්ණ කිරීම සඳහා, ඔබ‍ගේ inbox එකට ලැබුණු email එකෙහි ඇති confirmation link එක click කරන්න. එය මිනිත්තු 3ක් ඇතුලත නොපැමිණියේ නම්, spam folder එක පරීක්ෂා කරන්න!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "දින {{amount}}ක් නොමිලයේ භාවිතා කරන්න, ඉන් පසුව {{originalPrice}}ක් පමණි.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Paid subscriber කෙනෙකු වීම හරහා සියළුම newsletters වලට access ලබාගන්න.",
				"Unsubscribe from all emails": "සියළුම email වලින් unsubscribe කරන්න",
				Unsubscribed: P3,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Email වලින් unsubscribe වීමෙන්, {{title}} සඳහා වන ඔබගේ paid subscription එක අවලංගු නොවනු ඇත",
				Update: _3,
				"Update your preferences": "ඔබගේ  preferences update කරන්න",
				"Verify your email address is correct": "ඔබගේ email ලිපිනය නිවැරදි බව තහවුරු කරන්න",
				"View plans": "Plans පෙන්වන්න",
				Visit: z3,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "ඔබගේ email ලිපිනය හමු නොවීම නිසාවෙන් ඔබව unsubscribe කරවීමට නොහැකි විය. කරුණාකර වෙබ් අඩවියෙහි හිමිකරු සම්බන්ධ කරගන්න.",
				"Welcome back, {{name}}!": "{{name}}, ඔබව සාදරයෙන් පිළිගන්නවා!",
				"Welcome back!": "ඔබව සාදරයෙන් පිළිගන්නවා!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "යම් අවස්ථාවකදී email එකක් අදාල email ලිපිනයට ලබාගත නොහැකි නම්, එය පොදුවේ bounce ලෙස හඳුන්වනු ලබනවා. මෙය තාවකාලික තත්ත්වයක් විය හැකයි. කෙසේ නමුත්, ඇතැම් අවස්ථා වලදී අදාල email ලිපිනය වැරදි නම් හෝ එවැනි email ලිපිනයක් නොමැති නම්, bounce email එකක් permanent failure එකක් ලෙස නැවත හරවා යවනු ලැබෙනවා.",
				"Why has my email been disabled?": "මගේ emails අක්‍රීය කර ඇත්තේ ඇයි?",
				Yearly: O3,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "ඔබ සතුව දැනට ඇත්තේ free membership එකකි. සම්පූර්ණ access ලබාගැනීම සඳහා එය Paid membership එකකට upgrade කරන්න.",
				"You have been successfully resubscribed": "ඔබ සාර්ථකව නැවත subscribe කර ඇත",
				"You're currently not receiving emails": "මේ වන විට ඔබට email ලැබෙන්නේ නැත",
				"You're not receiving emails": "ඔබට email ලැබෙන්නේ නැත",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "මෑතකදී ලැබුණු email පණිවිඩයක් spam ලෙස සටහන් කිරීම නිසා හෝ ඔබ ලබාදී ඇති email ලිපිනයට email පණිවිඩ යැවිය නොහැකි නිසාවෙන් ඔබට email ලැබෙන්නේ නැත.",
				"You're subscribed!": "",
				"You've successfully signed in.": "ඔබ සාර්ථකව sign in වන ලදී.",
				"You've successfully subscribed to": "",
				"Your account": "ඔබගේ ගිණුම",
				"Your input helps shape what gets published.": "ඔබගේ අදහස් ඉදිරියේදී සිදු කරන පළකිරීම් වැඩිදියුණු කිරීමට උදව් කරනු ඇත.",
				"Your subscription will expire on {{expiryDate}}": "ඔබගේ subscription එක {{expiryDate}} වැනි දින කල් ඉකුත් වනු ඇත",
				"Your subscription will renew on {{renewalDate}}": "ඔබගේ subscription එක {{expiryDate}} වැනි දින renew වනු ඇත",
				"Your subscription will start on {{subscriptionStart}}": "ඔබගේ subscription එක {{expiryDate}} වැනි දින ආරම්භ වනු ඇත"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		D3 = "Subscribe කරන්න",
		GZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: D3,
			default: {
				"Email sent": "Email එකක් යවන ලදී",
				"Now check your email!": "දැන් ඔබගේ email පරීක්ෂා කරන්න",
				"Please enter a valid email address": "කරුණාකර නිවැරදි email ලිපිනයක් ඇතුලත් කරන්න",
				"Something went wrong, please try again.": "සාර්ථක වූයේ නැත, කරුණාකර පසුව නැවතත් උත්සාහ කරන්න.",
				Subscribe: D3,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Signup වීම සම්පූර්ණ කිරීම සඳහා, ඔබ‍ගේ inbox එකට ලැබුණු email එකෙහි ඇති confirmation link එක click කරන්න. එය මිනිත්තු 3ක් ඇතුලත නොපැමිණියේ නම්, spam folder එක පරීක්ෂා කරන්න!",
				"Your email address": "ඔබගේ email ලිපිනය"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		I3 = "",
		R3 = "",
		Y3 = "",
		L3 = "",
		F3 = "",
		B3 = "",
		U3 = "",
		V3 = "",
		H3 = "",
		q3 = "",
		W3 = "",
		K3 = "",
		J3 = "",
		G3 = "",
		Q3 = "",
		X3 = "",
		Z3 = "",
		eY = "",
		QZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: I3,
			Cancel: R3,
			Comment: Y3,
			Delete: L3,
			Discussion: F3,
			Edit: B3,
			Edited: U3,
			Expertise: V3,
			Hide: H3,
			Name: q3,
			Neurosurgeon: W3,
			Reply: K3,
			Report: J3,
			Save: G3,
			Sending: Q3,
			Sent: X3,
			Show: Z3,
			Yesterday: eY,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: I3,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: R3,
				Comment: Y3,
				"Complete your profile": "",
				Delete: L3,
				"Deleted member": "",
				Discussion: F3,
				Edit: B3,
				"Edit this comment": "",
				Edited: U3,
				"Enter your name": "",
				Expertise: V3,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: H3,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: q3,
				Neurosurgeon: W3,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: K3,
				"Reply to comment": "",
				Report: J3,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: G3,
				Sending: Q3,
				Sent: X3,
				Show: Z3,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: eY,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		XZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Vse dobro!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Dokončajte prijavo na {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Potrdite posodobitev e-pošte za {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Potrdite svojo naročnino na {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Za vašo varnost bo povezava prenehala veljati v 24 urah.",
				"Hey there,": "Pozdravljeni,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Če niste oddali te zahteve, lahko to e-pošto mirno ignorirate.",
				"If you did not make this request, you can simply delete this message.": "Če te zahteve niste podali, lahko to sporočilo preprosto izbrišete.",
				"Please confirm your email address with this link:": "S to povezavo potrdite svoj e-poštni naslov:",
				"Secure sign in link for {{siteTitle}}": "Varna povezava za prijavo na {{siteTitle}}",
				"See you soon!": "Se vidimo kmalu!",
				"Sent to {{email}}": "Poslano na {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Prijava v {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Kliknite spodnjo povezavo, da dokončate postopek prijave na {{siteTitle}} in se samodejno prijavite:",
				"Thank you for signing up to {{siteTitle}}!": "Hvala za prijavo na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Hvala, ker ste se naročili na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Hvala, ker ste se naročili na {{siteTitle}}. Kliknite spodnjo povezavo in se samodejno prijavite:",
				"This email address will not be used.": "Ta e-poštni naslov ne bo uporabljen.",
				"Welcome back to {{siteTitle}}!": "Dobrodošli nazaj na {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Dobrodošli nazaj! S to povezavo se varno prijavite v svoj {{siteTitle}} račun:",
				"You can also copy & paste this URL into your browser:": "To povezavo lahko tudi kopirate in prilepite v brskalnik:",
				"You will not be signed up, and no account will be created for you.": "Ne boste vpisani in za vas ne bo ustvarjen račun.",
				"You will not be subscribed.": "Ne boste naročeni.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Le en klik vas loči od tega, da se naročite na {{siteTitle}} - potrdite svoj e-poštni naslov s to povezavo:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		tY = "Račun",
		nY = "Nazaj",
		iY = "",
		oY = "",
		rY = "Zapri",
		aY = "Komentarji",
		sY = "",
		lY = "Potrdi",
		uY = "Nadaljuj",
		cY = "",
		dY = "E-pošta",
		mY = "E-pošta",
		pY = "",
		fY = "Upravljanje",
		hY = "Mesečno",
		gY = "Ime",
		yY = "",
		bY = "Cena",
		kY = "",
		vY = "Cena",
		wY = "Shrani",
		SY = "",
		CY = "",
		xY = "",
		EY = "",
		TY = "",
		jY = "",
		$Y = "Letno",
		ZZ = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: tY,
			Back: nY,
			Change: iY,
			Choose: oY,
			Close: rY,
			Comments: aY,
			Complimentary: sY,
			Confirm: lY,
			Continue: uY,
			Edit: cY,
			Email: dY,
			Emails: mY,
			Forever: pY,
			Manage: fY,
			Monthly: hY,
			Name: gY,
			Plan: yY,
			Price: bY,
			Recommendations: kY,
			Retry: vY,
			Save: wY,
			Subscribe: SY,
			Subscribed: CY,
			Success: xY,
			Unsubscribed: EY,
			Update: TY,
			Visit: jY,
			Yearly: $Y,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% popust",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dni brezplačno",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Povezava za prijavo je bila poslana na vašo e-pošto. Če ne prispe v treh minutah, preverite mapo za neželeno pošto.",
				Account: tY,
				"Account settings": "Nastavitve računa",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Po koncu brezplačnega preizkusa se vam zaračuna redna cena za izbrano stopnjo. Pred tem jo lahko vedno prekličete.",
				"Already a member?": "Ste že član?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: nY,
				"Back to Log in": "Nazaj na prijavo",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Prekliči naročnino",
				"Cancellation reason": "Razlog za preklic",
				Change: iY,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: oY,
				"Choose a different plan": "Izberite drug načrt",
				"Choose your newsletters": "Izberite svoje novice",
				"Click here to retry": "",
				Close: rY,
				Comments: aY,
				Complimentary: sY,
				Confirm: lY,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: uY,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Izbriši račun",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Nimate računa?",
				Edit: cY,
				Email: dY,
				"Email newsletter": "",
				"Email preference updated.": "E-poštne nastavitve posodobljene",
				"Email preferences": "Nastavitve e-pošte",
				Emails: mY,
				"Emails disabled": "E-pošta onemogočena",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: pY,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Pomoč",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Prejmite obvestilo, ko nekdo odgovori na vaš komentar",
				"Give feedback on this post": "Podajte povratne informacije o tej objavi",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Ni mi všeč",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: fY,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: hY,
				"More like this": "Všeč mi je",
				Name: gY,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Ne prejemate e-poštnih sporočil?",
				"Now check your email!": "Preverite e-pošto!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: yY,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: bY,
				"Re-enable emails": "Ponovna vključitev e-poštnih sporočil",
				Recommendations: kY,
				"Renews at {{price}}.": "",
				Retry: vY,
				Save: wY,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Pošiljanje povezave za prijavo...",
				"Sending...": "Pošiljanje...",
				"Show all": "",
				"Sign in": "Prijava",
				"Sign out": "",
				"Sign up": "Registracija",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Začetek {{amount}}-dnevnega brezplačnega preizkusa",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Pošljite povratno informacijo",
				Subscribe: SY,
				Subscribed: CY,
				Success: xY,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Uspešno ste se odjavili",
				"Thanks for the feedback!": "Hvala za povratne informacije!",
				"That didn't go to plan": "To ni šlo po načrtu",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "To spletno mesto je dostopno samo s povabilom, obrnite se na lastnika.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Dokončatje prijavo s klikom na povezavo, ki ste jo dobili na vaš e-poštni naslov. Če je ne prejmete v treh minutah, preverite mapo za neželeno pošto!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Odjava od vseh e-poštnih sporočil",
				Unsubscribed: EY,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Odjava od e-poštnih sporočil ne bo preklicala vaše plačane naročnine na {{title}}",
				Update: TY,
				"Update your preferences": "Posodobite svoje nastavitve",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: jY,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nismo vas mogli odjaviti, ker e-poštnega naslova nismo našli. Prosimo, da se obrnete na lastnika spletnega mesta.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: $Y,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Uspešno ste bili ponovno naročeni",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Ne prejemate e-poštnih sporočil, ker ste naše sporočilo nedavno označili kot neželeno pošto ali, ker sporočil ni bilo mogoče dostaviti na vaš e-poštni naslov.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Vaš račun",
				"Your input helps shape what gets published.": "Vaš prispevek se nam pomaga odločati, kaj objavimo.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		AY = "",
		eee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: AY,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: AY,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		NY = "",
		MY = "",
		PY = "",
		_Y = "",
		zY = "",
		OY = "",
		DY = "",
		IY = "",
		RY = "",
		YY = "",
		LY = "",
		FY = "",
		BY = "",
		UY = "",
		VY = "",
		HY = "",
		qY = "",
		WY = "",
		tee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: NY,
			Cancel: MY,
			Comment: PY,
			Delete: _Y,
			Discussion: zY,
			Edit: OY,
			Edited: DY,
			Expertise: IY,
			Hide: RY,
			Name: YY,
			Neurosurgeon: LY,
			Reply: FY,
			Report: BY,
			Save: UY,
			Sending: VY,
			Sent: HY,
			Show: qY,
			Yesterday: WY,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: NY,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: MY,
				Comment: PY,
				"Complete your profile": "",
				Delete: _Y,
				"Deleted member": "",
				Discussion: zY,
				Edit: OY,
				"Edit this comment": "",
				Edited: DY,
				"Enter your name": "",
				Expertise: IY,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: RY,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: YY,
				Neurosurgeon: LY,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: FY,
				"Reply to comment": "",
				Report: BY,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: UY,
				Sending: VY,
				Sent: HY,
				Show: qY,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: WY,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		nee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Gjithe te mirat!",
				"Complete signup for {{siteTitle}}!": "Perfundo rregjistrimin per {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Perfundo rregjistrimin ne {{siteTitle}}!",
				"Confirm email address": "Konfirmo adresen e emailit",
				"Confirm signup": "Konfirmo rregjistrimin",
				"Confirm your email address": "Konfirmo adresen tende te emailit",
				"Confirm your email update for {{siteTitle}}!": "Konfirmo adresen tende te emailit per {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Konfirmo abonimin tend ne {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Per sigurine tende, linku do te skadoje ne 24 ore.  ",
				"Hey there,": "Pershendetje",
				"Hey there!": "Pershendetje",
				"If you did not make this request, you can safely ignore this email.": "Nese ju nuk e keni bere kete kerkese, mund ta injoroni kete email",
				"If you did not make this request, you can simply delete this message.": "Nese ju nuk e keni bere kete kerkese, thjeshte injoroje kete mesazh",
				"Please confirm your email address with this link:": "Ju lutem konfirmoni adresen tuaj te emailit me kete link:",
				"Secure sign in link for {{siteTitle}}": "Lidhja e sigurt e hyrjes për {{siteTitle}}",
				"See you soon!": "Shihemi se shpejti!",
				"Sent to {{email}}": "Derguar tek {{email}}",
				"Sign in": "Hyr",
				"Sign in to {{siteTitle}}": "Hyr ne",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Prekni lidhjen më poshtë për të përfunduar procesin e regjistrimit për {{siteTitle}}, dhe të identifikoheni automatikisht",
				"Thank you for signing up to {{siteTitle}}!": "Faleminderit per rregjistrimin ne {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Faleminderit per abonimin tuaj ne {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Faleminderit per abonimin tuaj ne {{siteTitle}}. ",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Faleminderit per abonimin tuaj ne {{siteTitle}}. Prekni lidhjen më poshtë për t'u identifikuar automatikisht:",
				"This email address will not be used.": "Kjo adrese emaili nuk do te perdoret",
				"Welcome back to {{siteTitle}}!": "Mire se erdhe ne {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Mire se erdhe perseri! Perdorni kete link per tu identifikuar ne menyre te sigurt ne llogarine tuaj ne {{siteTitle}}",
				"You can also copy & paste this URL into your browser:": "Ju gjithashtu mund ta kopjoni dhe ngjisni këtë URL në shfletuesin tuaj",
				"You will not be signed up, and no account will be created for you.": "Ju nuk do te rregjistroheni, dhe asnje adrese nuk do te krijohet per ty.",
				"You will not be subscribed.": "Ju nuk do te abonoheni",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Ju jeni nje klikim larg nga abonimi ne  {{siteTitle}}! - ju lutem konfirmoni adresen tuaj te emailit me kete link.",
				"You're one tap away from subscribing to {{siteTitle}}!": "Ju jeni nje klikim larg nga abonimi ne  {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		KY = "Llogaria",
		JY = "Kthehu",
		GY = "Ndrysho",
		QY = "Zgjidh",
		XY = "Mbyll",
		ZY = "Komentet",
		eL = "Pa pagesë",
		tL = "Konfirmo",
		nL = "Vazhdoni",
		iL = "Modifiko",
		oL = "Email",
		rL = "Emailet",
		aL = "Pergjithmone",
		sL = "Menaxho",
		lL = "Mujore",
		uL = "Emri",
		cL = "Plani",
		dL = "Çmimi",
		mL = "",
		pL = "Provo perseri",
		fL = "Ruaj",
		hL = "Abonohu",
		gL = "Abonuar",
		yL = "Sukses",
		bL = "I çabonuar",
		kL = "Rifresko",
		vL = "",
		wL = "Vjetore",
		iee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: KY,
			Back: JY,
			Change: GY,
			Choose: QY,
			Close: XY,
			Comments: ZY,
			Complimentary: eL,
			Confirm: tL,
			Continue: nL,
			Edit: iL,
			Email: oL,
			Emails: rL,
			Forever: aL,
			Manage: sL,
			Monthly: lL,
			Name: uL,
			Plan: cL,
			Price: dL,
			Recommendations: mL,
			Retry: pL,
			Save: fL,
			Subscribe: hL,
			Subscribed: gL,
			Success: yL,
			Unsubscribed: bL,
			Update: kL,
			Visit: vL,
			Yearly: wL,
			default: {
				"{{amount}} days free": "{{amount}} dite falas",
				"{{amount}} off": "{{amount}} zbritje",
				"{{amount}} off for first {{number}} months.": "{{amount}} zbritje në {{number}} muajt e parë",
				"{{amount}} off for first {{period}}.": "{{amount}} zbritje per {{period}} e parë",
				"{{amount}} off forever.": "{{amount}} zbritje pergjithmone.",
				"{{discount}}% discount": "{{discount}}% zbritje",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} nuk do te marre me buletinin e {{newsletterName}}",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} nuk do të marrë më email kur dikush u përgjigjet komenteve tuaja.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} nuk do te marre me kete buletin.",
				"{{trialDays}} days free": "{{trialDays}} dite falas",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Një lidhje identifikimi është dërguar në kutinë tuaj hyrëse. Nëse nuk arrin për 3 minuta, sigurohuni që të kontrolloni dosjen tuaj të postës së padëshiruar.",
				Account: KY,
				"Account settings": "Cilësimet e llogarisë",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Pasi të përfundojë një provë falas, ju do të tarifoheni me çmimin e rregullt për nivelin që keni zgjedhur. Mund të anuloni gjithmonë përpara kësaj.",
				"Already a member?": "Tashme nje antar?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ndodhi një gabim i papritur. Provo sërish ose <a>kontakto mbështetjen</a> nëse gabimi vazhdon.",
				Back: JY,
				"Back to Log in": "Kthehu tek identifikimi",
				"Billing info": "Te dhenat e faturimit",
				"Black Friday": "E premtja e zeze",
				"Cancel anytime.": "Anullo ne cdo kohe.",
				"Cancel subscription": "Anullo abonimin",
				"Cancellation reason": "Arsyeja e anullimit",
				Change: GY,
				"Check spam & promotions folders": "Kontrolloni dosjet e postës së padëshiruar dhe promovimeve ",
				"Check with your mail provider": "Kontrolloni me ofruesin tuaj të postës",
				Choose: QY,
				"Choose a different plan": "Zgjidh nje plan ndryshe",
				"Choose your newsletters": "Zgjidh buletinin tend",
				"Click here to retry": "Kliko ketu per te provuar perseri",
				Close: XY,
				Comments: ZY,
				Complimentary: eL,
				Confirm: tL,
				"Confirm cancellation": "Konfirmo anullimin",
				"Confirm subscription": "Konfirmo abonimin",
				"Contact support": "Kontakto suportin",
				Continue: nL,
				"Continue subscription": "Vazhdoni abonimin",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "Shto nje kontakt te ri",
				"Current plan": "Plani aktual",
				"Delete account": "Fshini llogarine",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Nuk doje ta bëje këtë? Menaxho preferencat e tua <button>këtu</button>.",
				"Don't have an account?": "Nuk keni nje llogari?",
				Edit: iL,
				Email: oL,
				"Email newsletter": "Buletini i emailit",
				"Email preference updated.": "Preferenca e emailit u përditësua.",
				"Email preferences": "Preferenat e emailit",
				Emails: rL,
				"Emails disabled": "Emailet e çaktivizuara",
				"Ends {{offerEndDate}}": "Perfundon {{offerEndDate}}",
				Error: "Gabim",
				"Expires {{expiryDate}}": "Mbaron",
				Forever: aL,
				"Free Trial – Ends {{trialEnd}}": "Prova falas – mbaron {{trialEnd}}",
				"Get help": "Merr ndihme",
				"Get in touch for help": "Kontaktoni për ndihmë",
				"Get notified when someone replies to your comment": "",
				"Give feedback on this post": "Ler nje koment ne kete post",
				"Help! I'm not receiving emails": "Ndihme! Nuk po marr emaile",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Nëse një buletin shënohet si i padëshiruar, emailet çaktivizohen automatikisht për atë adresë për t'u siguruar që nuk do të merrni më mesazhe të padëshiruara.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Nëse ankesa për postën e padëshiruar ishte aksidentale, ose dëshironi të filloni të merrni përsëri email, mund të regjistroheni përsëri në email duke klikuar butonin në ekranin e mëparshëm.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Nëse e anuloni abonimin tuaj tani, do të vazhdoni të keni akses deri në {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Nëse keni një llogari të postës elektronike të korporatës ose të qeverisë, kontaktoni departamentin tuaj të IT dhe kërkojuni që të lejojnë marrjen e emaileve nga {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Nëse dëshironi të filloni të merrni përsëri emaile, hapat më të mirë të metejshem janë të kontrolloni adresën tuaj të emailit në dosje për ndonjë problem dhe më pas klikoni Ri-abonohu në ekranin e mëparshëm.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Nëse nuk po merrni buletinin me email në të cilin jeni abonuar, këtu janë disa gjëra për të kontrolluar.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Nëse i keni përfunduar të gjitha këto kontrolle dhe ende nuk po merrni email, mund të kontaktoni për të marrë mbështetje duke kontaktuar {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Në rast se merret një dështim i përhershëm gjatë përpjekjes për të dërguar një buletin, emailet do të çaktivizohen në llogari.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Në klientin tuaj të postës elektronike shtoni {{senderEmail}} në listën tuaj të kontakteve. Kjo i sinjalizon ofruesit tuaj të postës elektronike që emailet e dërguara nga kjo adresë duhet të jenë të besueshme.",
				"Less like this": "Me pak si kjo",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Sigurohuni që emailet të mos përfundojnë aksidentalisht në dosjet e postës së padëshiruar ose të promovimeve të kutisë suaj hyrëse. Nëse janë, klikoni në "Shëno si jo të padëshiruar" dhe/ose "Lëviz te kutia hyrëse".',
				Manage: sL,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: lL,
				"More like this": "Me shume si kjo",
				Name: uL,
				"Need more help? Contact support": "Te duhet me shume ndihme? Kontakto suportin",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Buletinet mund të çaktivizohen në llogarinë tuaj për dy arsye: Një email i mëparshëm u shënua si i padëshiruar, ose përpjekja për të dërguar një email rezultoi në një dështim të përhershëm (kercim).",
				"Not receiving emails?": "Nuk po merr emaile?",
				"Now check your email!": "Kontrollo emailin tend tani!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Pasi të regjistroheni përsëri, nëse ende nuk i shihni emailet në kutinë tuaj hyrëse, kontrolloni dosjen tuaj të postës së padëshiruar. Disa ofrues të kutisë hyrëse mbajnë një regjistër të ankesave të mëparshme të postës së padëshiruar dhe do të vazhdojnë të raportojnë emailet. Nëse kjo ndodh, shëno buletinin më të fundit si 'Jo e padëshiruar' për ta zhvendosur atë në kutinë hyrëse kryesore.",
				"Permanent failure (bounce)": "Deshtim i perhershem (kercim)",
				Plan: cL,
				"Plan checkout was cancelled.": "Pagesa e planit u anullua.",
				"Plan upgrade was cancelled.": "Përmirësimi i planit u anullua.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Ju lutem plotesoni fushat e kerkuara",
				Price: dL,
				"Re-enable emails": "Ri-aktivizo emailet",
				Recommendations: mL,
				"Renews at {{price}}.": "Rinovohet per {{price}} ",
				Retry: pL,
				Save: fL,
				"Send an email and say hi!": "Dergo nje email dhe thuaj pershendetje!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Dërgo një email te {{senderEmail}} dhe thuaj përshëndetje. Kjo mund të ndihmojë gjithashtu t'i sinjalizojë ofruesit tuaj të postës elektronike se emailet drejt-dhe-nga kjo adresë duhet të jenë të besueshme.",
				"Sending login link...": "Duke derguar linkun e identifikimit...",
				"Sending...": "Duke derguar...",
				"Show all": "",
				"Sign in": "Hyr",
				"Sign out": "Dil",
				"Sign up": "Rregjistrohu",
				"Signup error: Invalid link": "Gabim ne rregjistrim: Link i pavlefshem",
				"Sorry, that didn’t work.": "Na vjen keq, kjo nuk funksionoi.",
				"Spam complaints": "Ankesat për mesazhe të padëshiruara",
				"Start {{amount}}-day free trial": "",
				"Starting {{startDate}}": "Duke filluar {{startDate}}",
				"Starting today": "Duke filluar nga sot",
				"Submit feedback": "Dergo komente",
				Subscribe: hL,
				Subscribed: gL,
				Success: yL,
				"Success! Check your email for magic link to sign-in.": "Sukses! Kontrollo emailin tend per linkun magjik te indentifikimit.",
				"Success! Your account is fully activated, you now have access to all content.": "Sukses! Llogaria jote eshte plotesisht e aktivizuar, tashme ju keni akses ne te githe kontentin",
				"Success! Your email is updated.": "Sukses! Emaili yt eshte rifreskuar",
				"Successfully unsubscribed": "Çabonuar me sukses",
				"Thanks for the feedback!": "Faleminderit per komentin!",
				"That didn't go to plan": "Kjo nuk shkoi sipas planit",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "Pati një problem me dërgimin e komenteve tuaja. Ju lutemi provoni sërish pak më vonë.",
				"This site is invite-only, contact the owner for access.": "Kjo faqe eshte vetem me ftesa, kontaktoni zoteruesin per akses.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Për të përfunduar regjistrimin, klikoni lidhjen e konfirmimit në kutinë tuaj hyrëse. Nëse nuk arrin brenda 3 minutash, kontrolloni dosjen tuaj të postës elektronike!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Provo falas per {{amount}} dite, pastaj {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Zhbllokoni aksesin per te gjitha buletinet duke u bere nje abonues me pagese.",
				"Unsubscribe from all emails": "Çregjistrohu nga të gjitha emailet",
				Unsubscribed: bL,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Çregjistrimi nga emailet nuk do ta anulojë abonimin tuaj me pagesë në {{title}}",
				Update: kL,
				"Update your preferences": "Përditësoni preferencat tuaja",
				"Verify your email address is correct": "Verifikoni që adresa juaj e emailit është e saktë",
				"View plans": "Shiko planet",
				Visit: vL,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "",
				"Welcome back, {{name}}!": "Mire se erdhe, {{name}}!",
				"Welcome back!": "Mire se erdhe!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Kur një kuti hyrëse dështon të pranojë një email, zakonisht quhet kthim. Në shumë raste, kjo mund të jetë e përkohshme. Megjithatë, në disa raste, një email i kthyer mund të kthehet si një dështim i përhershëm kur një adresë emaili është e pavlefshme ose nuk ekziston.",
				"Why has my email been disabled?": "Pse është çaktivizuar emaili im?",
				Yearly: wL,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Ju keni aktualisht nje antaresim falas, beni abonimin me pagese per akses te plote. ",
				"You have been successfully resubscribed": "Ju jeni ri-abonuar me sukses",
				"You're currently not receiving emails": "Aktualisht nuk po merrni emaile",
				"You're not receiving emails": "Ju nuk po merrni emaile",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Ju nuk po merrni email sepse ose keni shënuar një mesazh të fundit si të padëshiruar, ose sepse mesazhet nuk mund të dërgoheshin në adresën tuaj të emailit të dhënë.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Ju jeni identifikuar me sukses.",
				"You've successfully subscribed to": "",
				"Your account": "Llogaria juar",
				"Your input helps shape what gets published.": "Të dhënat tuaja ndihmojnë në formimin e asaj që publikohet.",
				"Your subscription will expire on {{expiryDate}}": "Abonimi juaj do te skadoje ne {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Abonimi juaj to te rinovohet ne {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Abonimi juaj do te filloje ne {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		SL = "",
		oee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: SL,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: SL,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		CL = "",
		xL = "",
		EL = "",
		TL = "",
		jL = "",
		$L = "",
		AL = "",
		NL = "",
		ML = "",
		PL = "",
		_L = "",
		zL = "",
		OL = "",
		DL = "",
		IL = "",
		RL = "",
		YL = "",
		LL = "",
		ree = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: CL,
			Cancel: xL,
			Comment: EL,
			Delete: TL,
			Discussion: jL,
			Edit: $L,
			Edited: AL,
			Expertise: NL,
			Hide: ML,
			Name: PL,
			Neurosurgeon: _L,
			Reply: zL,
			Report: OL,
			Save: DL,
			Sending: IL,
			Sent: RL,
			Show: YL,
			Yesterday: LL,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: CL,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: xL,
				Comment: EL,
				"Complete your profile": "",
				Delete: TL,
				"Deleted member": "",
				Discussion: jL,
				Edit: $L,
				"Edit this comment": "",
				Edited: AL,
				"Enter your name": "",
				Expertise: NL,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: ML,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: PL,
				Neurosurgeon: _L,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: zL,
				"Reply to comment": "",
				Report: OL,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: DL,
				Sending: IL,
				Sent: RL,
				Show: YL,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: LL,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		aee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Sve najbolje!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Kompletirajte vašu registraciju na {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Potvrdite promenu email adrese na {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Potvrdite vašu pretplatu na {{siteTitle}}!",
				"For your security, the link will expire in 24 hours time.": "Radi Vaše bezbednosti, ovaj link prestaje da važi nakon 24 časa.",
				"Hey there,": "Pozdrav,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Možete ignorisati ovaj email ukoliko niste uputili ovaj zahtev.",
				"If you did not make this request, you can simply delete this message.": "Možete obrisati ovaj email ukoliko niste uputili ovaj zahtev.",
				"Please confirm your email address with this link:": "Molimo Vas potvrdite Vašu email adresu klikom na ovaj link:",
				"Secure sign in link for {{siteTitle}}": "Bezbedni link za logovanje na {{siteTitle}}",
				"See you soon!": "Vidimo se uskoro!",
				"Sent to {{email}}": "Poslato na {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Ulogujte se na {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Kompletirajte registraciju na {{siteTitle}} klikom na link ispod, i ulogujte se odmah:",
				"Thank you for signing up to {{siteTitle}}!": "Hvala za registraciju na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Hvala za pretplatu na {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Hvala za pretplatu na {{siteTitle}}. Otvorite link ispod da biste se ulogovali:",
				"This email address will not be used.": "Ova email adresa neće biti iskorišćena.",
				"Welcome back to {{siteTitle}}!": "Dobro došli na {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Dobro došli! Iskoristite ovaj link da biste se ulogovali na {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Uvek možete iskopirati link i otvoriti u Vašem pretraživaču:",
				"You will not be signed up, and no account will be created for you.": "Nećete biti registrovani i Vaš nalog neće biti kreiran.",
				"You will not be subscribed.": "Nećete biti pretplaćeni.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Na jedan ste korak od pretplate na {{siteTitle}} - molimo Vas da potvrdite email adresu na ovom linku:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		FL = "Nalog",
		BL = "Nazad",
		UL = "",
		VL = "",
		HL = "Zatvori",
		qL = "Komentari",
		WL = "",
		KL = "Potvrdi",
		JL = "Nastavi",
		GL = "",
		QL = "Email",
		XL = "Email-ovi",
		ZL = "",
		eF = "Podešavanja",
		tF = "Mesečno",
		nF = "Ime",
		iF = "",
		oF = "Cena",
		rF = "",
		aF = "Pokušaj opet",
		sF = "Snimi",
		lF = "",
		uF = "",
		cF = "",
		dF = "",
		mF = "",
		pF = "",
		fF = "Godišnje",
		see = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: FL,
			Back: BL,
			Change: UL,
			Choose: VL,
			Close: HL,
			Comments: qL,
			Complimentary: WL,
			Confirm: KL,
			Continue: JL,
			Edit: GL,
			Email: QL,
			Emails: XL,
			Forever: ZL,
			Manage: eF,
			Monthly: tF,
			Name: nF,
			Plan: iF,
			Price: oF,
			Recommendations: rF,
			Retry: aF,
			Save: sF,
			Subscribe: lF,
			Subscribed: uF,
			Success: cF,
			Unsubscribed: dF,
			Update: mF,
			Visit: pF,
			Yearly: fF,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% popust",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} dana besplatno",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Link za logovanje je poslat na Vašu email adresu. Ukoliko ne stigne za 3 minuta proverite spam folder.",
				Account: FL,
				"Account settings": "Podešavanja naloga",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Nakon što probni period istekne, izvršiće se naplata za plan koji ste izabrali. Uvek možete da otkažete pretplatu pre toga.",
				"Already a member?": "Već ste član?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: BL,
				"Back to Log in": "Nazad na logovanje",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Otkaži pretplatu",
				"Cancellation reason": "Razlog za otkazivanje",
				Change: UL,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: VL,
				"Choose a different plan": "Izaberi drugi plan",
				"Choose your newsletters": "Izaberi ",
				"Click here to retry": "",
				Close: HL,
				Comments: qL,
				Complimentary: WL,
				Confirm: KL,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: JL,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Obriši nalog",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Nemate nalog?",
				Edit: GL,
				Email: QL,
				"Email newsletter": "",
				"Email preference updated.": "Email podešavanja su sačuvana.",
				"Email preferences": "Email podešavanja",
				Emails: XL,
				"Emails disabled": "Isključeni email-ovi",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: ZL,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Potražite pomoć",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Obavestite me ako neko odgovori na moj komentar:",
				"Give feedback on this post": "Ostavite komentar na ovaj post",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Manje sadržaja kao ovaj",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: eF,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: tF,
				"More like this": "Više sadržaja kao ovaj",
				Name: nF,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Ne dobijate e-poštu?",
				"Now check your email!": "Proverite Vaš email!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: iF,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: oF,
				"Re-enable emails": "Omogući email adrese ponovo",
				Recommendations: rF,
				"Renews at {{price}}.": "",
				Retry: aF,
				Save: sF,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Link za logovanje se šalje...",
				"Sending...": "Slanje...",
				"Show all": "",
				"Sign in": "Prijava",
				"Sign out": "",
				"Sign up": "Registracija",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Počni {{amount}} dana besplatnu probu",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Pošalji povratne informacije",
				Subscribe: lF,
				Subscribed: uF,
				Success: cF,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Uspešna odjava",
				"Thanks for the feedback!": "Hvala za povratne informacije!",
				"That didn't go to plan": "Nešto nije kako treba",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Ovaj sajt je samo za članove, kontaktirajte vlasnika kako bi dobili pristup.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Kliknite na link da biste završili registraciju. Ukoliko ne stigne za 3 minuta proverite spam folder!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Odjavite se sa svih email-ova",
				Unsubscribed: dF,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Odjavljivanjem sa email-ova nećete prekinuti Vašu pretplatu na {{title}}",
				Update: mF,
				"Update your preferences": "Izmenite Vaša podešavanja",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: pF,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Nismo uspeli da odjavimo email. Molimo Vas kontaktirajte vlasnika sajta.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: fF,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Uspešno ste se prijavili ponovo",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Ne primate e-poruke zato što ste nedavnu poruku označili kao nepoželjnu ili zato što poruke nisu mogle da se isporuče na adresu e-pošte koju ste naveli.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Vaš nalog",
				"Your input helps shape what gets published.": "Vaš doprinos pomaže u oblikovanju onoga što se objavljuje.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		hF = "",
		lee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: hF,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: hF,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		gF = "",
		yF = "",
		bF = "",
		kF = "",
		vF = "",
		wF = "",
		SF = "",
		CF = "",
		xF = "",
		EF = "",
		TF = "",
		jF = "",
		$F = "",
		AF = "",
		NF = "",
		MF = "",
		PF = "",
		_F = "",
		uee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: gF,
			Cancel: yF,
			Comment: bF,
			Delete: kF,
			Discussion: vF,
			Edit: wF,
			Edited: SF,
			Expertise: CF,
			Hide: xF,
			Name: EF,
			Neurosurgeon: TF,
			Reply: jF,
			Report: $F,
			Save: AF,
			Sending: NF,
			Sent: MF,
			Show: PF,
			Yesterday: _F,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: gF,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: yF,
				Comment: bF,
				"Complete your profile": "",
				Delete: kF,
				"Deleted member": "",
				Discussion: vF,
				Edit: wF,
				"Edit this comment": "",
				Edited: SF,
				"Enter your name": "",
				Expertise: CF,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: xF,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: EF,
				Neurosurgeon: TF,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: jF,
				"Reply to comment": "",
				Report: $F,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: AF,
				Sending: NF,
				Sent: MF,
				Show: PF,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: _F,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		cee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Allt gott!",
				"Complete signup for {{siteTitle}}!": "Slutför registrering på {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Slutför din registrering på {{siteTitle}}!",
				"Confirm email address": "Bekräfta e-postadress",
				"Confirm signup": "Bekräfta registrering",
				"Confirm your email address": "Bekräfta din e-postadress",
				"Confirm your email update for {{siteTitle}}!": "Bekräfta din uppdatering av e-postadress för {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Bekräfta din prenumeration på {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "För din säkerhet kommer länken att upphöra att gälla inom 24 timmar.",
				"Hey there,": "Hallå där,",
				"Hey there!": "Hallå där!",
				"If you did not make this request, you can safely ignore this email.": "Om du inte gjorde denna begäran kan du tryggt ignorera detta e-postmeddelande.",
				"If you did not make this request, you can simply delete this message.": "Om du inte gjorde denna begäran kan du helt enkelt radera detta meddelande.",
				"Please confirm your email address with this link:": "Vänligen bekräfta din e-postadress med denna länk:",
				"Secure sign in link for {{siteTitle}}": "Säker inloggningslänk för {{siteTitle}}",
				"See you soon!": "Vi ses snart!",
				"Sent to {{email}}": "Skickat till {{email}}",
				"Sign in": "Logga in",
				"Sign in to {{siteTitle}}": "Logga in på {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Klicka på länken nedan för att slutföra registreringen för {{siteTitle}} och bli automatiskt inloggad:",
				"Thank you for signing up to {{siteTitle}}!": "Tack för att du registrerade dig på {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Tack för att du prenumererar på {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Tack för att du prenumererar på {{siteTitle}}.",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Tack för att du prenumererar på {{siteTitle}}. Tryck på länken nedan för att bli automatiskt inloggad:",
				"This email address will not be used.": "Denna e-postadress kommer inte att användas.",
				"Welcome back to {{siteTitle}}!": "Välkommen tillbaka till {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Välkommen tillbaka! Använd denna länk för att säkert logga in på ditt {{siteTitle}}-konto:",
				"You can also copy & paste this URL into your browser:": "Du kan också kopiera och klistra in denna webbadress i din webbläsare:",
				"You will not be signed up, and no account will be created for you.": "Du kommer inte att registreras och inget konto kommer att skapas för dig.",
				"You will not be subscribed.": "Du kommer inte att prenumerera.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Du är ett klick bort från att prenumerera på {{siteTitle}} — vänligen bekräfta din e-postadress med denna länk:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Du är ett klick bort från att prenumerera på {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		zF = "Konto",
		OF = "Tillbaka",
		DF = "Ändra",
		IF = "Välj",
		RF = "Stäng",
		YF = "Kommentarer",
		LF = "Kostnadsfri",
		FF = "Bekräfta",
		BF = "Fortsätt",
		UF = "Editera",
		VF = "E-post",
		HF = "E-postmeddelanden",
		qF = "Tillsvidare",
		WF = "Hantera",
		KF = "Månadsvis",
		JF = "Namn",
		GF = "Prenumerationen",
		QF = "Pris",
		XF = "",
		ZF = "Försök igen",
		eB = "Spara",
		tB = "Anmäl dig",
		nB = "Anmäld",
		iB = "Det gick bra",
		oB = "Avregistrerad",
		rB = "Uppdatera",
		aB = "",
		sB = "Årligen",
		dee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: zF,
			Back: OF,
			Change: DF,
			Choose: IF,
			Close: RF,
			Comments: YF,
			Complimentary: LF,
			Confirm: FF,
			Continue: BF,
			Edit: UF,
			Email: VF,
			Emails: HF,
			Forever: qF,
			Manage: WF,
			Monthly: KF,
			Name: JF,
			Plan: GF,
			Price: QF,
			Recommendations: XF,
			Retry: ZF,
			Save: eB,
			Subscribe: tB,
			Subscribed: nB,
			Success: iB,
			Unsubscribed: oB,
			Update: rB,
			Visit: aB,
			Yearly: sB,
			default: {
				"{{amount}} days free": "{{amount}} gratisdagar",
				"{{amount}} off": "{{amount}} i rabatt",
				"{{amount}} off for first {{number}} months.": "{{amount}} i rabatt de första {{number}} månaderna.",
				"{{amount}} off for first {{period}}.": "{{amount}} i rabatt under första {{period}}.",
				"{{amount}} off forever.": "{{amount}} i rabatt tills vidare",
				"{{discount}}% discount": "{{discount}}% rabatt",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} kommer inte längre få utskicket {{newsletterName}}",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} kommer inte längre att få meddelanden när någon svarar på din kommentar",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} kommer inte längre att få det här nyhetsbrevet",
				"{{trialDays}} days free": "{{trialDays}} dagar gratis",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "En inloggningslänk har skickats till din inkorg. Om den inte anländer inom 3 minuter, kontrollera din skräppostmapp.",
				Account: zF,
				"Account settings": "Kontoinställningar",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Efter att en gratis provperiod avslutas debiteras du det ordinarie priset för den nivå du har valt. Du kan alltid avbryta innan dess.",
				"Already a member?": "Redan medlem?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Ett oväntat fel inträffade. Försök igen eller <a>kontakta administratören</a> om felet kvarstår.",
				Back: OF,
				"Back to Log in": "Tillbaka till inloggning",
				"Billing info": "Betalningsinformation",
				"Black Friday": "Black Friday",
				"Cancel anytime.": "Avsluta när som helst",
				"Cancel subscription": "Avbryt prenumeration",
				"Cancellation reason": "Anledning till avslut",
				Change: DF,
				"Check spam & promotions folders": "Titta i skräppostmappen",
				"Check with your mail provider": "Verifirera att e-posten fungerar för ditt konto",
				Choose: IF,
				"Choose a different plan": "Välj en annan prenumeration",
				"Choose your newsletters": "Välj dina nyhetsbrev",
				"Click here to retry": "Klicka här för att försöka igen",
				Close: RF,
				Comments: YF,
				Complimentary: LF,
				Confirm: FF,
				"Confirm cancellation": "Bekräfta uppsägning",
				"Confirm subscription": "Bekräfta prenumeration",
				"Contact support": "Kontakta supporten",
				Continue: BF,
				"Continue subscription": "Förläng prenumeration",
				"Could not sign in. Login link expired.": "Kunde inte logga in. Inloggningslänken har slutat gälla.",
				"Could not update email! Invalid link.": "Kunde inte uppdatera e-postadressen. Länken fungerande inte.",
				"Create a new contact": "Skapa en ny kontakt",
				"Current plan": "Nuvarande prenumeration",
				"Delete account": "Radera konto",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Ville du inte göra det här? Ändra dina inställningar <button>här</button>",
				"Don't have an account?": "Har du inget konto?",
				Edit: UF,
				Email: VF,
				"Email newsletter": "Nyhetsbrev via e-post",
				"Email preference updated.": "Inställningar för e-post uppdaterade.",
				"Email preferences": "E-postinställningar",
				Emails: HF,
				"Emails disabled": "E-post inaktiverad",
				"Ends {{offerEndDate}}": "Avslutas {{offerEndDate}}",
				Error: "Fel",
				"Expires {{expiryDate}}": "Utgår {{expiryDate}}",
				Forever: qF,
				"Free Trial – Ends {{trialEnd}}": "Gratispepriod – slutar {{trialEnd}}",
				"Get help": "Få hjälp",
				"Get in touch for help": "Kontakta oss för hjälp",
				"Get notified when someone replies to your comment": "Få en avisering när någon svarar på din kommentar",
				"Give feedback on this post": "Ge feedback på det här inlägget",
				"Help! I'm not receiving emails": "Hjälp! Jag får inte e-posten",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Om ett nyhetsbrev markeras som skräppost, stängs utskicken till den e-postadressen av automatiskt för att det inte skall skickas ovälkomna meddelanden.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Om nyhetsbrevet av misstag markerades som skräppost och du vill återuppta utskicken kan du aktivera nyhetsbrevet på föregående sida.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Om du säger upp prenumerationen nu kommer du att ha tillgång till {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Om din organisations e-postlösning blockerar utskicken kan du be administratören att tillåta e-post från adressen {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Om du vill börja ta emot utskicken igen, verifiera att du angett korrekt e-postadress och sedan klickar du på återaktivera utskick på förra sidan.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Om du inte får e-postutskicken från oss finns det några saker du kan göra.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Om det fortfarande inte fungerar efter att du undersökt allt kan du kontakta oss på {{supportAddress}}.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Om e-postutskick till din adress resulterar i ett permanent fel kommer utskicksförsök att upphöra.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Spara {{senderEmail}} som en kontakt i ditt e-postprogram. Det signalerar till din e-postleverantör att e-post från denna är adress är viktig.",
				"Less like this": "Mindre sånt här",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Verifiera att e-postmeddelandena inte hamnat i skräppostmappen. Om de gjort det, flytta dem till inkorgen och/eller markera som "Ej skräppost".',
				Manage: WF,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: KF,
				"More like this": "Mer sånt här",
				Name: JF,
				"Need more help? Contact support": "Behöver du mer hjälp? Kontakta administratören.",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Nyhetsbrev kan inaktiveras på ditt konto av två anledningar: ett tidigare utskick markerades som spam, eller ett försök att skicka ett e-postmeddelande resulterade i ett permanent fel.",
				"Not receiving emails?": "Får du inga e-postmeddelanden?",
				"Now check your email!": "Kolla nu din e-post!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Om du fortfarande inte ser e-post i din inkorg efter att du återaktiverat utskicken, kontrollera din skräppostmapp. Vissa e-postleverantörer behåller en historik över tidigare spamklagomål och fortsätter att markera e-post som spam. Om detta händer, markera det senaste nyhetsbrevet som 'Inte spam' för att flytta tillbaka det till din huvudsakliga inkorg.",
				"Permanent failure (bounce)": "Permanent fel vid e-postutsskick (studs)",
				Plan: GF,
				"Plan checkout was cancelled.": "Köp av prenumeration avbrutet",
				"Plan upgrade was cancelled.": "Uppgradering av prenunmeration avbruten",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Fyll i alla obligatoriska fält",
				Price: QF,
				"Re-enable emails": "Återaktivera e-post",
				Recommendations: XF,
				"Renews at {{price}}.": "Förnyas till priset {{price}}",
				Retry: ZF,
				Save: eB,
				"Send an email and say hi!": "Skicka e-post och säg hej!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Skicka ett e-postmeddelande till {{senderEmail}} och säj hej. Detta blir en signal till din e-postleverantör meddelanden till/från {{senderEmail}} är viktiga.",
				"Sending login link...": "Skickar inloggningslänk...",
				"Sending...": "Skickar...",
				"Show all": "",
				"Sign in": "Logga in",
				"Sign out": "Logga ut",
				"Sign up": "Få uppdateringar",
				"Signup error: Invalid link": "Registreringsfel. Länken fungerade inte.",
				"Sorry, that didn’t work.": "Tyvärr, det fungerande inte.",
				"Spam complaints": "Skräppostrapporter",
				"Start {{amount}}-day free trial": "Starta {{amount}}-dagars gratis testprenumeration",
				"Starting {{startDate}}": "Startar {{startDate}}",
				"Starting today": "Startar idag",
				"Submit feedback": "Skicka feedback",
				Subscribe: tB,
				Subscribed: nB,
				Success: iB,
				"Success! Check your email for magic link to sign-in.": "Det gick bra. Titta i din e-post efter ett meddelande från oss med en inloggningslänk.",
				"Success! Your account is fully activated, you now have access to all content.": "Det gick bra! Ditt konto är uppdaterat och du har tillgång till allt material.",
				"Success! Your email is updated.": "Det gick bra! Din e-postadress är uppdaterad.",
				"Successfully unsubscribed": "Prenumerationen avslutades framgångsrikt",
				"Thanks for the feedback!": "Tack för din feedback!",
				"That didn't go to plan": "Det där fungerade inte som tänkt",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "E-postadressen vi har för dig är {{memberEmail}} — om det inte stämmer kan du uppdatera den i <button>kontoinställningar</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Det fungerande inte att skicka in din feedbak. Försök igen lite senare.",
				"This site is invite-only, contact the owner for access.": "Den här sidan är endast för inbjudna, kontakta ägaren för åtkomst.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "För att slutföra registreringen, klicka på bekräftelselänken i din inkorg. Om den inte kommer fram inom 3 minuter, kolla din skräppostmapp!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Prova gratis i {{amount}} dagar, sen betalar du {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Få tillgång till alla nyhetsbrev genom att bli betalande prenumerant",
				"Unsubscribe from all emails": "Avregistrera från alla e-postutskick",
				Unsubscribed: oB,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Avregistrering från e-postmeddelanden kommer inte att avbryta din betalda prenumeration på {{title}}",
				Update: rB,
				"Update your preferences": "Uppdatera dina inställningar",
				"Verify your email address is correct": "Kontrollera att e-postadressen är korrekt",
				"View plans": "Visa prenumerationsalternativ",
				Visit: aB,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Vi kunde inte avsluta kontot eftersom e-postadressen inte hittades. Vänligen kontakta webbplatsens ägare.",
				"Welcome back, {{name}}!": "Välkommen tillbaka, {{name}}!",
				"Welcome back!": "Välkommen tillbaka!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "När en mottagare inte kan ta emot ett e-postmeddelande kallas det vanligtvis för att ett mejl studsar. I många fall kan detta vara tillfälligt. Dock kan i vissa fall ett studsande mejl returneras som ett permanent fel när en e-postadress är ogiltig eller inte existerar.",
				"Why has my email been disabled?": "Varför har e-postutskicken stängts av?",
				Yearly: sB,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Du har för närvarande ett gratiskonto. Uppgradera till en betald prenumeration för att full tillgång.",
				"You have been successfully resubscribed": "Du är nu anmäld ",
				"You're currently not receiving emails": "Du tar för närvarande inte emot e-post",
				"You're not receiving emails": "Du tar inte emot e-post",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Du får inte e-postmeddelanden eftersom du antingen markerade ett nyligt meddelande som skräppost, eller för att meddelanden inte kunde levereras till din angivna e-postadress.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Du är nu inloggad.",
				"You've successfully subscribed to": "",
				"Your account": "Ditt konto",
				"Your input helps shape what gets published.": "Din åsikt hjälper till att forma vad som publiceras.",
				"Your subscription will expire on {{expiryDate}}": "Din prenumeration avslutas {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Din prenumeration förnyas {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Din prenumeration startar {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		lB = "Registrera",
		mee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: lB,
			default: {
				"Email sent": "E-post skickades",
				"Now check your email!": "Titta i din e-post nu!",
				"Please enter a valid email address": "Skriv in en giltig e-postadress",
				"Something went wrong, please try again.": "Något gick fel. Försök igen.",
				Subscribe: lB,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "För att slutföra registreringen, klicka på bekräftelselänken vi skickat till din e-post. Om den inte kommer fram inom 3 minuter, kolla din skräppostmapp!",
				"Your email address": "Din e-postadress"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		uB = "Anonim",
		cB = "İptal et",
		dB = "Yorum",
		mB = "Sil",
		pB = "Tartışma",
		fB = "Düzenle",
		hB = "Düzenlendi",
		gB = "Uzmanlık",
		yB = "Gizle",
		bB = "Ad",
		kB = "",
		vB = "Cevapla",
		wB = "Rapor et",
		SB = "Kaydet",
		CB = "Gönderiliyor",
		xB = "Gönderildi",
		EB = "Göster",
		TB = "Dün",
		pee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: uB,
			Cancel: cB,
			Comment: dB,
			Delete: mB,
			Discussion: pB,
			Edit: fB,
			Edited: hB,
			Expertise: gB,
			Hide: yB,
			Name: bB,
			Neurosurgeon: kB,
			Reply: vB,
			Report: wB,
			Save: SB,
			Sending: CB,
			Sent: xB,
			Show: EB,
			Yesterday: TB,
			default: {
				"{{amount}} characters left": "{{amount}} karakter kaldı",
				"{{amount}} comments": "{{amount}} yorum",
				"{{amount}} days ago": "{{amount}} gün önce",
				"{{amount}} hours ago": "{{amount}} saat önce",
				"{{amount}} minutes ago": "{{amount}} dakika önce",
				"{{amount}} months ago": "{{amount}} ay önce",
				"{{amount}} seconds ago": "{{amount}} saniye önce",
				"{{amount}} weeks ago": "{{amount}} hafta önce",
				"{{amount}} years ago": "{{amount}} yıl önce",
				"1 comment": "1 yorum",
				"Add comment": "Yorum ekle",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Yorumunuza bağlam ekleyin, adınızı ve uzmanlığınızı paylaşarak sağlıklı bir tartışmayı teşvik edin.",
				"Add reply": "Yanıt ekle",
				"Already a member?": "Zaten üye misiniz?",
				Anonymous: uB,
				"Become a member of {{publication}} to start commenting.": "Yorum yapmaya başlamak için {{publication}} üyesi olun.",
				"Become a paid member of {{publication}} to start commenting.": "Yorum yapmaya başlamak için {{publication}} ücretli üyesi olun.",
				Cancel: cB,
				Comment: dB,
				"Complete your profile": "Profilinizi tamamlayın",
				Delete: mB,
				"Deleted member": "Silinen üye",
				Discussion: pB,
				Edit: fB,
				"Edit this comment": "Bu yorumu düzenle",
				Edited: hB,
				"Enter your name": "Adınızı girin",
				Expertise: gB,
				"Founder @ Acme Inc": "Kurucu @ Acme Inc",
				"Full-time parent": "Tam zamanlı ebeveyn",
				"Head of Marketing at Acme, Inc": "Acme, Inc'de Pazarlama Müdürü",
				Hide: yB,
				"Hide comment": "Yorumu gizle",
				"Jamie Larson": "",
				"Join the discussion": "Tartışmaya katıl",
				"Just now": "Şu anda",
				"Local resident": "Yerel sakini",
				"Member discussion": "Üye tartışması",
				Name: bB,
				Neurosurgeon: kB,
				"One day ago": "Bir gün önce",
				"One hour ago": "Bir saat önce",
				"One minute ago": "Bir dakika önce",
				"One month ago": "Bir ay önce",
				"One week ago": "Bir hafta önce",
				"One year ago": "Bir yıl önce",
				Reply: vB,
				"Reply to comment": "Yoruma cevap ver",
				Report: wB,
				"Report comment": "Yorumu rapor et",
				"Report this comment": "Bu yorumu rapor et",
				"Report this comment?": "",
				Save: SB,
				Sending: CB,
				Sent: xB,
				Show: EB,
				"Show {{amount}} more replies": "{{amount}} daha fazla yanıt göster",
				"Show {{amount}} previous comments": "{{amount}} önceki yorumu göster",
				"Show 1 more reply": "1 daha fazla yanıt göster",
				"Show 1 previous comment": "1 önceki yorumu göster",
				"Show comment": "Yorumu göster",
				"Sign in": "Giriş yap",
				"Sign up now": "Şimdi kaydıt ol",
				"Start the conversation": "Yorum yapmaya başla",
				"This comment has been hidden.": "Bu yorum gizlendi.",
				"This comment has been removed.": "Bu yorum kaldırıldı.",
				"Upgrade now": "Şimdi yükselt",
				Yesterday: TB,
				"You want to report this comment?": "Bu yorumu rapor etmek istiyor musunuz?",
				"Your request will be sent to the owner of this site.": "Talebiniz bu sitenin sahibine gönderilecektir."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		fee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "En iyi dileklerimizle!",
				"Complete signup for {{siteTitle}}!": "{{siteTitle}} için kaydı tamamlayın!",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}} sitesine kaydını tamamla!",
				"Confirm email address": "E-posta adresini onayla",
				"Confirm signup": "Kaydı onayla",
				"Confirm your email address": "E-posta adresinizi onayla",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}} için e-posta güncellemeni onayla!",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}} sitesine aboneliğini onayla",
				"For your security, the link will expire in 24 hours time.": "Güvenliğin için link 24 saat sonra geçerliliğini yitirecek.",
				"Hey there,": "Merhaba,",
				"Hey there!": "Merhaba!",
				"If you did not make this request, you can safely ignore this email.": "Eğer böyle bir talepte bulunmadıysan bu e-postayı görmezden gelebilirsin.",
				"If you did not make this request, you can simply delete this message.": "Eğer böyle bir talepte bulunmadıysan bu mesajı silebilirsin.",
				"Please confirm your email address with this link:": "Lütfen e-posta adresini bu linke tıklayarak onayla:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}} için güvenli giriş linki",
				"See you soon!": "Yakında görüşmek üzere!",
				"Sent to {{email}}": "{{email}} adresine gönderildi",
				"Sign in": "Kayıt ol",
				"Sign in to {{siteTitle}}": "{{siteTitle}} sitesine giriş yap",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "{{siteTitle}} sitesine kayıt işlemini tamamlamak için aşağıdaki linke tıkla ve otomatik olarak giriş yap:",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}} sitesine kayıt olduğun için teşekkürler!",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}} sitesine abone olduğun için teşekkürler!",
				"Thank you for subscribing to {{siteTitle}}.": "{{siteTitle}} abone olduğunuz için teşekkür ederiz",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}} sitesine abone olduğun için teşekkürler. Otomatik olarak giriş yapmak için aşağıdaki linke tıkla:",
				"This email address will not be used.": "Bu e-posta adresi kullanılmayacak.",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}} sitesine tekrar hoş geldin!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Tekrar hoş geldin! {{siteTitle}} hesabına güvenli bir şekilde giriş yapmak için bu linki kullan:",
				"You can also copy & paste this URL into your browser:": "Aynı zamanda bu URL'i kopyalayıp tarayıcına yapıştırabilirsin:",
				"You will not be signed up, and no account will be created for you.": "Kayıt olmayacaksın ve senin için bir hesap oluşturulmayacak.",
				"You will not be subscribed.": "Abone olmayacaksın.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "{{siteTitle}} sitesine abone olmaya bir tık uzaktasın — lütfen e-posta adresini bu linke tıklayarak onayla:",
				"You're one tap away from subscribing to {{siteTitle}}!": "{{siteTitle}} abone olmanıza bir dokunuş kadar yakınsınız!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		jB = "Hesap",
		$B = "Geri dön",
		AB = "Değiştir",
		NB = "Seç",
		MB = "Kapat",
		PB = "Yorumlar",
		_B = "",
		zB = "Onayla",
		OB = "Devam et",
		DB = "Düzenle",
		IB = "E-posta",
		RB = "E-postalar",
		YB = "Süresiz",
		LB = "Yönet",
		FB = "Aylık",
		BB = "İsim",
		UB = "Plan",
		VB = "Fiyat",
		HB = "",
		qB = "Tekrar dene",
		WB = "Kaydet",
		KB = "Abone",
		JB = "Abone olundu",
		GB = "Başarılı",
		QB = "Abonelikten çıkıldı",
		XB = "Güncelle",
		ZB = "",
		e4 = "Yıllık",
		hee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: jB,
			Back: $B,
			Change: AB,
			Choose: NB,
			Close: MB,
			Comments: PB,
			Complimentary: _B,
			Confirm: zB,
			Continue: OB,
			Edit: DB,
			Email: IB,
			Emails: RB,
			Forever: YB,
			Manage: LB,
			Monthly: FB,
			Name: BB,
			Plan: UB,
			Price: VB,
			Recommendations: HB,
			Retry: qB,
			Save: WB,
			Subscribe: KB,
			Subscribed: JB,
			Success: GB,
			Unsubscribed: QB,
			Update: XB,
			Visit: ZB,
			Yearly: e4,
			default: {
				"{{amount}} days free": "{{amount}} gün ücretsiz",
				"{{amount}} off": "{{amount}} indirim",
				"{{amount}} off for first {{number}} months.": "İlk {{number}} ay için {{amount}} indirim.",
				"{{amount}} off for first {{period}}.": "İlk {{period}} için {{amount}} indirim.",
				"{{amount}} off forever.": "Sonsuza kadar {{amount}} indirim.",
				"{{discount}}% discount": "%{{discount}} indirim",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} artık {{newsletterName}} haber bülteni almayacak.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}}, yorumlarınıza yanıt verildiğinde artık e-posta almayacak.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} artık bu haber bültenini almayacak.",
				"{{trialDays}} days free": "{{trialDays}} gün ücretsiz",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Gelen kutuna bir giriş linki gönderildi. Eğer 3 dakika içinde ulaşmazsa spam klasörünü kontrol ettiğinden emin ol.",
				Account: jB,
				"Account settings": "Hesap ayarları",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Ücretsiz deneme süresi bittikten sonra seçtiğin kategorinin normal fiyatından ücretlendirileceksin. O zamana kadar her an iptal edebilirsin.",
				"Already a member?": "Zaten üye misin?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Beklenmeyen bir hata oluştu. Lütfen tekrar deneyin veya hata devam ederse <a>destek ile iletişime geçin</a>.",
				Back: $B,
				"Back to Log in": "Giriş ekranına geri dön",
				"Billing info": "Fatura bilgisi",
				"Black Friday": "Muhteşem Cuma",
				"Cancel anytime.": "İstediğiniz zaman iptal edin.",
				"Cancel subscription": "Aboneliği iptal et",
				"Cancellation reason": "İptal sebebi",
				Change: AB,
				"Check spam & promotions folders": "Spam ve promosyonlar klasörlerini kontrol edin",
				"Check with your mail provider": "Posta sağlayıcınızla kontrol edin",
				Choose: NB,
				"Choose a different plan": "Farklı bir plan seç",
				"Choose your newsletters": "Haber e-postanı seç",
				"Click here to retry": "Tekrar denemek için buraya tıkla",
				Close: MB,
				Comments: PB,
				Complimentary: _B,
				Confirm: zB,
				"Confirm cancellation": "İptal İşlemini Onayla",
				"Confirm subscription": "Aboneliği onayla",
				"Contact support": "Desteğe başvurun",
				Continue: OB,
				"Continue subscription": "Aboneliğe devam et",
				"Could not sign in. Login link expired.": "Oturum açılamadı. Oturum açma bağlantısının süresi doldu.",
				"Could not update email! Invalid link.": "E-posta güncellenemedi! Geçersiz link.",
				"Create a new contact": "Yeni bir kullanıcı oluştur",
				"Current plan": "Mevcut plan",
				"Delete account": "Hesabı sil",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Bunu yapmak istemedin mi? Tercihlerinizi <button>buradan</button> yönetin.",
				"Don't have an account?": "Hesabın yok mu?",
				Edit: DB,
				Email: IB,
				"Email newsletter": "E-posta bülteni",
				"Email preference updated.": "E-posta tercihi güncellendi.",
				"Email preferences": "E-posta tercihleri",
				Emails: RB,
				"Emails disabled": "E-postalar devre dışı",
				"Ends {{offerEndDate}}": "{{offerEndDate}} tarihinde bitiyor",
				Error: "Hata",
				"Expires {{expiryDate}}": "{{expiryDate}} tarihinde sona eriyor",
				Forever: YB,
				"Free Trial – Ends {{trialEnd}}": "Ücretsiz Deneme – {{trialEnd}} tarihinde sona erer",
				"Get help": "Yardım al",
				"Get in touch for help": "Yardım için iletişime geçin",
				"Get notified when someone replies to your comment": "Birisi yorumuna cevap yazdığında bildirim al",
				"Give feedback on this post": "Gönderiye geri bildirim ver",
				"Help! I'm not receiving emails": "Yardım! e-postası alamıyorum",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Bir haber bülteni spam olarak işaretlenirse, artık istenmeyen mesaj almadığınızdan emin olmak için bu adres için e-postalar otomatik olarak devre dışı bırakılır.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Spam şikayeti yanlışlıkla olduysa veya tekrar e-posta almaya başlamak istiyorsanız, önceki ekrandaki düğmeyi tıklayarak e-postalara yeniden abone olabilirsiniz.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Aboneliğinizi şimdi iptal ederseniz, {{periodEnd}} tarihine kadar erişiminiz devam edecek.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Kurumsal veya devlet e-posta hesabınız varsa BT departmanınıza ulaşın ve {{senderEmail}} adresinden e-posta alınmasına izin vermelerini isteyin.",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Tekrar e-posta almaya başlamak istiyorsanız, bundan sonraki en iyi adım, dosyadaki e-posta adresinizde herhangi bir sorun olup olmadığını kontrol etmek ve ardından önceki ekranda yeniden abone ol'u tıklamaktır.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Abone olduğunuz e-posta bültenini almıyorsanız, kontrol etmeniz gereken birkaç şey var.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Tüm bu kontrolleri tamamlamanıza rağmen hala e-posta almıyorsanız, {{supportAddress}} ile iletişime geçerek destek almak için ulaşabilirsiniz.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Haber bülteni göndermeye çalışırken kalıcı bir hata alınması durumunda, hesapta e-postalar devre dışı bırakılır.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "E-posta istemcinizde {{senderEmail}} adresini kişi listenize ekleyin. Bu, posta sağlayıcınıza bu adresten gönderilen e-postaların güvenilir olması gerektiğini bildirir.",
				"Less like this": "Bunun gibi daha az",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'E-postaların yanlışlıkla gelen kutunuzun Spam veya Promosyonlar klasörlerine düşmediğinden emin olun. Varsa, "Spam değil olarak işaretle" ve/veya "Gelen kutusuna taşı"yı tıklayın.',
				Manage: LB,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: FB,
				"More like this": "Bunun gibi daha fazla",
				Name: BB,
				"Need more help? Contact support": "Daha fazla yardıma mı ihtiyacınız var? Desteğe başvurun",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Bültenler, hesabınızda iki nedenden dolayı devre dışı bırakılabilir: Önceki bir e-posta istenmeyen posta olarak işaretlendi veya bir e-posta gönderilmeye çalışıldığında kalıcı bir başarısızlıkla (geri dönme) sonuçlandı.",
				"Not receiving emails?": "E-posta almıyor musun?",
				"Now check your email!": "Şimdi e-posta kutunu kontrol et!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Yeniden abone olduktan sonra, gelen kutunuzda hala e-posta göremiyorsanız spam klasörünüzü kontrol edin. Bazı gelen kutusu sağlayıcıları, önceki spam şikayetlerinin kaydını tutar ve e-postaları işaretlemeye devam eder. Böyle bir durumda, birincil gelen kutunuza geri taşımak için en son haber bültenini 'Spam değil' olarak işaretleyin.",
				"Permanent failure (bounce)": "Kalıcı başarısızlık (sıçra)",
				Plan: UB,
				"Plan checkout was cancelled.": "Plan ödemesi iptal edildi.",
				"Plan upgrade was cancelled.": "Plan yükseltme iptal edildi.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Lütfen gerekli alanları doldurunuz",
				Price: VB,
				"Re-enable emails": "E-postaları yeniden etkinleştir",
				Recommendations: HB,
				"Renews at {{price}}.": "{{price}} karşılığında yenilenir.",
				Retry: qB,
				Save: WB,
				"Send an email and say hi!": "Bir e-posta gönderin ve merhaba deyin!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "{{senderEmail}} adresine bir e-posta gönderin ve merhaba deyin. Bu, posta sağlayıcınıza bu adresten gelen ve bu adresten gelen e-postalara güvenilmesi gerektiğinin sinyalini de verebilir.",
				"Sending login link...": "Giriş linki gönderiliyor...",
				"Sending...": "Gönderiliyor...",
				"Show all": "",
				"Sign in": "Giriş yap",
				"Sign out": "Çıkış yap",
				"Sign up": "Kayıt ol",
				"Signup error: Invalid link": "Kayıt hatası: Geçersiz bağlantı",
				"Sorry, that didn’t work.": "Üzgünüm, bu işe yaramadı.",
				"Spam complaints": "Spam şikayetleri",
				"Start {{amount}}-day free trial": "{{amount}} gün ücretsiz deneme süresini başlat",
				"Starting {{startDate}}": "{{startDate}} tarihinden itibaren",
				"Starting today": "Bugün başlıyor",
				"Submit feedback": "Geri bildirim gönder",
				Subscribe: KB,
				Subscribed: JB,
				Success: GB,
				"Success! Check your email for magic link to sign-in.": "Başarılı! Oturum açmak için sihirli bağlantı için e-postanızı kontrol edin.",
				"Success! Your account is fully activated, you now have access to all content.": "Başarılı! Hesabınız tamamen etkinleştirildi, artık tüm içeriğe erişebilirsiniz.",
				"Success! Your email is updated.": "Başarılı! E-postanız güncellendi.",
				"Successfully unsubscribed": "Abonelikten başarıyla çıkıldı",
				"Thanks for the feedback!": "Geri bildirim için teşekkürler!",
				"That didn't go to plan": "Bir şeyler ters gitti",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "Geri bildiriminiz gönderilirken bir sorun oluştu. Lütfen biraz sonra tekrar deneyin.",
				"This site is invite-only, contact the owner for access.": "Bu site sadece davetiyesi olanlar içindir, erişim için site sahibiyle iletişime geç.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Kaydını tamamlamak için gelen kutuna gönderilen onay linkine tıkla. Eğer 3 dakika içinde ulaşmazsa spam klasörünü kontrol et!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "{{amount}} gün ücretsiz deneyin, ardından {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Ücretli bir abone olarak tüm haber bültenlerine erişimin kilidini açın.",
				"Unsubscribe from all emails": "Tüm e-postaların aboneliğinden çık",
				Unsubscribed: QB,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "E-postaların aboneliğinden çıkmak, {{title}} sitesine olan ücretli aboneliğini iptal etmeyecek",
				Update: XB,
				"Update your preferences": "Tercihlerini güncelle",
				"Verify your email address is correct": "E-posta adresinizin doğru olduğunu doğrulayın",
				"View plans": "Planları göster",
				Visit: ZB,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "E-posta adresi bulunamadığı için seni abonelikten çıkaramıyoruz. Lütfen site sahibiyle iletişime geç.",
				"Welcome back, {{name}}!": "Tekrar hoş geldin {{name}}!",
				"Welcome back!": "Tekrar hoşgeldiniz!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Bir gelen kutusu bir e-postayı kabul edemediğinde buna genellikle geri dönen denir. Çoğu durumda, bu geçici olabilir. Bununla birlikte, bazı durumlarda, bir e-posta adresi geçersiz olduğunda veya mevcut olmadığında, geri dönen bir e-posta kalıcı bir başarısızlık olarak döndürülebilir.",
				"Why has my email been disabled?": "E-postam neden devre dışı bırakıldı?",
				Yearly: e4,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Şu anda ücretsiz üyeliğiniz var, tam erişim için ücretli aboneliğe yükseltin.",
				"You have been successfully resubscribed": "Başarıyla yeniden abone oldun",
				"You're currently not receiving emails": "Şu anda e-posta almıyorsunuz",
				"You're not receiving emails": "E-posta almıyorsunuz",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "E-postaları almıyorsun çünkü yakınlarda gönderilen bir mesajı spam olarak işaretledin ya da mesajlar verilen e-posta adresine teslim edilemedi.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Başarıyla oturum açtınız.",
				"You've successfully subscribed to": "",
				"Your account": "Hesabın",
				"Your input helps shape what gets published.": "Yorumun yayımlanan içeriklerin şekillenmesine yardımcı olur.",
				"Your subscription will expire on {{expiryDate}}": "Aboneliğiniz {{expiryDate}} tarihinde sona erecek",
				"Your subscription will renew on {{renewalDate}}": "Aboneliğiniz {{renewalDate}} tarihinde yenilenecek",
				"Your subscription will start on {{subscriptionStart}}": "Aboneliğiniz {{subscriptionStart}} tarihinde başlayacak"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		t4 = "Abone ol",
		gee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: t4,
			default: {
				"Email sent": "E-posta gönderildi",
				"Now check your email!": "Şimdi e-postanı kontrol et!",
				"Please enter a valid email address": "Lütfen geçerli bir e-posta adresi girin",
				"Something went wrong, please try again.": "Bir şeyler ters gitti lütfen tekrar deneyin.",
				Subscribe: t4,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Kayıt olmayı tamamlamak için gelen kutunuzdaki onay bağlantısını tıklayın. 3 dakika içinde gelmezse spam klasörünüzü kontrol edin!",
				"Your email address": "E-posta adresiniz"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		n4 = "",
		i4 = "",
		o4 = "",
		r4 = "",
		a4 = "",
		s4 = "",
		l4 = "",
		u4 = "",
		c4 = "",
		d4 = "",
		m4 = "",
		p4 = "",
		f4 = "",
		h4 = "",
		g4 = "",
		y4 = "",
		b4 = "",
		k4 = "",
		yee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: n4,
			Cancel: i4,
			Comment: o4,
			Delete: r4,
			Discussion: a4,
			Edit: s4,
			Edited: l4,
			Expertise: u4,
			Hide: c4,
			Name: d4,
			Neurosurgeon: m4,
			Reply: p4,
			Report: f4,
			Save: h4,
			Sending: g4,
			Sent: y4,
			Show: b4,
			Yesterday: k4,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: n4,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: i4,
				Comment: o4,
				"Complete your profile": "",
				Delete: r4,
				"Deleted member": "",
				Discussion: a4,
				Edit: s4,
				"Edit this comment": "",
				Edited: l4,
				"Enter your name": "",
				Expertise: u4,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: c4,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: d4,
				Neurosurgeon: m4,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: p4,
				"Reply to comment": "",
				Report: f4,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: h4,
				Sending: g4,
				Sent: y4,
				Show: b4,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: k4,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		bee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Всього найкращого!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "Закінч реєстрацію на {{siteTitle}}!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "Підтвердь оновлення електронної пошти для {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Підтвердь підписку на {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Для твоєї безпеки, посилання буде дійсним протягом 24 годин.",
				"Hey there,": "Привіт,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Якщо цей запит не був зроблений тобою, можеш безпечно ігнорувати це повідомлення.",
				"If you did not make this request, you can simply delete this message.": "Якщо цей запит не був зроблений тобою, можеш просто видалити це повідомлення.",
				"Please confirm your email address with this link:": "Будь ласка, підтвердь свою електронну пошту за допомогою цього посилання:",
				"Secure sign in link for {{siteTitle}}": "Безпечне посилання для входу до {{siteTitle}}",
				"See you soon!": "До зустрічі!",
				"Sent to {{email}}": "Відправлено на {{email}}",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "Увійти до {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Натисни посилання нижче, щоб завершити процес реєстрації на {{siteTitle}} і автоматично увійти:",
				"Thank you for signing up to {{siteTitle}}!": "Дякуємо за реєстрацію на {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Дякуємо за підписку на {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Дякуємо за підписку на {{siteTitle}}. Натисни посилання нижче, щоб автоматично увійти:",
				"This email address will not be used.": "Ця електронна пошта не буде використовуватися.",
				"Welcome back to {{siteTitle}}!": "Ласкаво просимо до {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Ласкаво просимо! Ужий це посилання, щоб безпечно увійти до свого облікового запису {{siteTitle}}:",
				"You can also copy & paste this URL into your browser:": "Можеш також скопіювати та вставити це посилання в свій браузер:",
				"You will not be signed up, and no account will be created for you.": "Не відбудеться твоя реєстрація, і жоден обліковий запис не буде створений для тебе.",
				"You will not be subscribed.": "Тебе не буде підписано.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Ти один натиск від підписки на {{siteTitle}} — будь ласка, підтвердь свою електронну пошту за допомогою цього посилання:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		v4 = "Oбліковий запис",
		w4 = "Назад",
		S4 = "",
		C4 = "",
		x4 = "Закрий",
		E4 = "Коментарі",
		T4 = "",
		j4 = "Підтвердь",
		$4 = "Далі",
		A4 = "",
		N4 = "Електронна пошта",
		M4 = "Електронні листи",
		P4 = "",
		_4 = "Управління",
		z4 = "Місячно",
		O4 = "Ім'я",
		D4 = "",
		I4 = "Ціна",
		R4 = "",
		Y4 = "Повтори спробу",
		L4 = "Збережи",
		F4 = "",
		B4 = "",
		U4 = "",
		V4 = "",
		H4 = "",
		q4 = "",
		W4 = "Річно",
		kee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: v4,
			Back: w4,
			Change: S4,
			Choose: C4,
			Close: x4,
			Comments: E4,
			Complimentary: T4,
			Confirm: j4,
			Continue: $4,
			Edit: A4,
			Email: N4,
			Emails: M4,
			Forever: P4,
			Manage: _4,
			Monthly: z4,
			Name: O4,
			Plan: D4,
			Price: I4,
			Recommendations: R4,
			Retry: Y4,
			Save: L4,
			Subscribe: F4,
			Subscribed: B4,
			Success: U4,
			Unsubscribed: V4,
			Update: H4,
			Visit: q4,
			Yearly: W4,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "Знижка {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "Безплатно {{trialDays}} дні(-в)",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Посилання для входу було надіслано на твою пошту. Якщо воно не прийде протягом 3 хвилин, перевірь папку спам.",
				Account: v4,
				"Account settings": "Налаштування облікового запису",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Після закінчення безплатного періоду, з тебе буде стягнена вартість за обраний тариф. Ти завжди можеш скасувати послугу до цього часу.",
				"Already a member?": "Вже зареєстрований?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: w4,
				"Back to Log in": "Повернутись до входу",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Скасуй підписку",
				"Cancellation reason": "Причина скасування",
				Change: S4,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: C4,
				"Choose a different plan": "Вибари інший план",
				"Choose your newsletters": "Вибери свої підписки",
				"Click here to retry": "",
				Close: x4,
				Comments: E4,
				Complimentary: T4,
				Confirm: j4,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: $4,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Видалити обліковий запис",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Не маєш облікового запису?",
				Edit: A4,
				Email: N4,
				"Email newsletter": "",
				"Email preference updated.": "Налаштування електронної пошти оновлені.",
				"Email preferences": "Налаштування електронної пошти",
				Emails: M4,
				"Emails disabled": "Електронна пошта вимкнена",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: P4,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Отримати допомогу",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Повідомляй коли хтось відповість на твій коментар",
				"Give feedback on this post": "Дати відгук на цю публікацію",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Менше подібних",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: _4,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: z4,
				"More like this": "Більше подібних",
				Name: O4,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Не приходять листи?",
				"Now check your email!": "А тепер перевір свою пошту!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: D4,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: I4,
				"Re-enable emails": "Знову включити пошту",
				Recommendations: R4,
				"Renews at {{price}}.": "",
				Retry: Y4,
				Save: L4,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Відправляється посилання для входу...",
				"Sending...": "Відправляється...",
				"Show all": "",
				"Sign in": "Вхід",
				"Sign out": "",
				"Sign up": "Реєстрація",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "Почни {{amount}}-денний безплатний період",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Вишли відгук",
				Subscribe: F4,
				Subscribed: B4,
				Success: U4,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Підписку успішно скасовано",
				"Thanks for the feedback!": "Дякуємо за відгук!",
				"That didn't go to plan": "Щось пішло не так",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Цей сайт доступний тільки за запрошенням, звернись до власника сайта для доступу.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Щоб завершити реєстрацію, натисни посилання в своїй електронній пошті для підтвердження. Якщо електронний лист не прийде протягом 3 хвилин, перевір папку спам!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Відписатись від усіх листів",
				Unsubscribed: V4,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Відписка від листів не скасує твою платну підписку на {{title}}",
				Update: H4,
				"Update your preferences": "Онови свої налаштування",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: q4,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Ми не можемо відписати тебе, оскільки адреса електронної пошти не знайдена. Будь ласка, зв'яжись з власником сайту.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: W4,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Тебе успішно підписано знову",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Не приходять листи, оскільки останній отриманий лист був тобою позначений як спам, або листи не можуть бути доставлені на твою адресу електронної пошти.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Твій обліковий запис",
				"Your input helps shape what gets published.": "Твій відгук допоможе вирішити що публікувати далі.",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		K4 = "",
		vee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: K4,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: K4,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		J4 = "",
		G4 = "",
		Q4 = "",
		X4 = "",
		Z4 = "",
		eU = "",
		tU = "",
		nU = "",
		iU = "",
		oU = "",
		rU = "",
		aU = "",
		sU = "",
		lU = "",
		uU = "",
		cU = "",
		dU = "",
		mU = "",
		wee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: J4,
			Cancel: G4,
			Comment: Q4,
			Delete: X4,
			Discussion: Z4,
			Edit: eU,
			Edited: tU,
			Expertise: nU,
			Hide: iU,
			Name: oU,
			Neurosurgeon: rU,
			Reply: aU,
			Report: sU,
			Save: lU,
			Sending: uU,
			Sent: cU,
			Show: dU,
			Yesterday: mU,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: J4,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: G4,
				Comment: Q4,
				"Complete your profile": "",
				Delete: X4,
				"Deleted member": "",
				Discussion: Z4,
				Edit: eU,
				"Edit this comment": "",
				Edited: tU,
				"Enter your name": "",
				Expertise: nU,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: iU,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: oU,
				Neurosurgeon: rU,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: aU,
				"Reply to comment": "",
				Report: sU,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: lU,
				Sending: uU,
				Sent: cU,
				Show: dU,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: mU,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		See = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Barcha ezgu tilaklar!",
				"Complete signup for {{siteTitle}}!": "",
				"Complete your sign up to {{siteTitle}}!": "{{siteTitle}}ga roʻyxatdan oʻtishni yakunlang!",
				"Confirm email address": "",
				"Confirm signup": "",
				"Confirm your email address": "",
				"Confirm your email update for {{siteTitle}}!": "{{siteTitle}} yangilanishini uchun elektron pochtangiz tasdiqlang!",
				"Confirm your subscription to {{siteTitle}}": "{{siteTitle}}ga obunangizni tasdiqlang",
				"For your security, the link will expire in 24 hours time.": "Xavfsizligingiz uchun havola 24 soat ichida yaroqsiz bo'ladi.",
				"Hey there,": "Salom,",
				"Hey there!": "",
				"If you did not make this request, you can safely ignore this email.": "Agar siz bu soʻrovni amalga oshirmagan boʻlsangiz, bu xatni eʼtiborsiz qoldirishingiz mumkin.",
				"If you did not make this request, you can simply delete this message.": "Agar siz ushbu so'rovni amalga oshirmagan bo'lsangiz, bu xabarni shunchaki o'chirib tashlashingiz mumkin.",
				"Please confirm your email address with this link:": "Iltimos, elektron pochta manzilingizni ushbu havola bilan tasdiqlang:",
				"Secure sign in link for {{siteTitle}}": "{{siteTitle}} uchun xavfsiz kirish havolasi",
				"See you soon!": "Ko'rishguncha!",
				"Sent to {{email}}": "{{email}}ga yuborildi",
				"Sign in": "",
				"Sign in to {{siteTitle}}": "{{siteTitle}}ga kirish",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "{{siteTitle}} uchun roʻyxatdan oʻtish jarayonini yakunlash va avtomatik ravishda tizimga kirish uchun quyidagi havolani bosing:",
				"Thank you for signing up to {{siteTitle}}!": "{{siteTitle}} uchun roʻyxatdan oʻtganingiz uchun tashakkur!",
				"Thank you for subscribing to {{siteTitle}}!": "{{siteTitle}} obunangiz uchun rahmat!",
				"Thank you for subscribing to {{siteTitle}}.": "",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "{{siteTitle}} obunangiz uchun rahmat. Avtomatik tizimga kirish uchun quyidagi havolani bosing:",
				"This email address will not be used.": "Ushbu elektron pochta manzili ishlatilmaydi.",
				"Welcome back to {{siteTitle}}!": "{{siteTitle}}ga xush kelibsiz!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Qaytib kelganingizdan xursandmiz! {{siteTitle}} hisobingizga xavfsiz kirish uchun ushbu havoladan foydalaning:",
				"You can also copy & paste this URL into your browser:": "Ushbu URL manzilini brauzeringizga nusxalashingiz va joylashtirishingiz mumkin:",
				"You will not be signed up, and no account will be created for you.": "Siz ro'yxatdan o'tmaysiz va siz uchun hech qanday hisob yaratilmaydi.",
				"You will not be subscribed.": "Siz obuna bo'lmaysiz.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "{{siteTitle}} ga obuna boʻlish uchun bir qadam qoldi — elektron pochta manzilingizni ushbu havola orqali tasdiqlang:",
				"You're one tap away from subscribing to {{siteTitle}}!": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		pU = "Hisob",
		fU = "Orqaga",
		hU = "",
		gU = "",
		yU = "Yopmoq",
		bU = "Izohlar",
		kU = "",
		vU = "Tasdiqlamoq",
		wU = "Davom etmoq",
		SU = "",
		CU = "Email",
		xU = "Elektron xatlar",
		EU = "",
		TU = "Boshqarmoq",
		jU = "Oylik",
		$U = "Ism",
		AU = "",
		NU = "Narx",
		MU = "",
		PU = "Qayta urinmoq",
		_U = "Saqlamoq",
		zU = "",
		OU = "",
		DU = "",
		IU = "",
		RU = "",
		YU = "",
		LU = "Yillik",
		Cee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: pU,
			Back: fU,
			Change: hU,
			Choose: gU,
			Close: yU,
			Comments: bU,
			Complimentary: kU,
			Confirm: vU,
			Continue: wU,
			Edit: SU,
			Email: CU,
			Emails: xU,
			Forever: EU,
			Manage: TU,
			Monthly: jU,
			Name: $U,
			Plan: AU,
			Price: NU,
			Recommendations: MU,
			Retry: PU,
			Save: _U,
			Subscribe: zU,
			Subscribed: OU,
			Success: DU,
			Unsubscribed: IU,
			Update: RU,
			Visit: YU,
			Yearly: LU,
			default: {
				"{{amount}} days free": "",
				"{{amount}} off": "",
				"{{amount}} off for first {{number}} months.": "",
				"{{amount}} off for first {{period}}.": "",
				"{{amount}} off forever.": "",
				"{{discount}}% discount": "{{discount}}% chegirma",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "",
				"{{memberEmail}} will no longer receive this newsletter.": "",
				"{{trialDays}} days free": "{{trialDays}} kun bepul",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Kirish havolasi email pochtangizga yuborildi. Agar u 3 daqiqada kelmasa, spam bo'limini tekshiring",
				Account: pU,
				"Account settings": "Hisob sozlamalari",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Bepul sinov muddati tugagandan so'ng, siz tanlagan daraja uchun odatdagi narxdan undiriladi. Undan oldin istalgan vaqtda bekor qilishingiz mumkin.",
				"Already a member?": "Allaqachon a'zomisiz?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "",
				Back: fU,
				"Back to Log in": "Kirish sahifasiga qaytish",
				"Billing info": "",
				"Black Friday": "",
				"Cancel anytime.": "",
				"Cancel subscription": "Obunani bekor qilish",
				"Cancellation reason": "Bekor qilish sababi",
				Change: hU,
				"Check spam & promotions folders": "",
				"Check with your mail provider": "",
				Choose: gU,
				"Choose a different plan": "Boshqa rejani tanlang",
				"Choose your newsletters": "Pochta xabarlarini tanlang",
				"Click here to retry": "",
				Close: yU,
				Comments: bU,
				Complimentary: kU,
				Confirm: vU,
				"Confirm cancellation": "",
				"Confirm subscription": "",
				"Contact support": "",
				Continue: wU,
				"Continue subscription": "",
				"Could not sign in. Login link expired.": "",
				"Could not update email! Invalid link.": "",
				"Create a new contact": "",
				"Current plan": "",
				"Delete account": "Hisobni o'chirmoq",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "",
				"Don't have an account?": "Hisobingiz yoqmi?",
				Edit: SU,
				Email: CU,
				"Email newsletter": "",
				"Email preference updated.": "Email sozlamalari yangilandi.",
				"Email preferences": "Email sozlamalari",
				Emails: xU,
				"Emails disabled": "Elektron pochta xabarlari o‘chirilgan",
				"Ends {{offerEndDate}}": "",
				Error: "",
				"Expires {{expiryDate}}": "",
				Forever: EU,
				"Free Trial – Ends {{trialEnd}}": "",
				"Get help": "Yordam olmoq",
				"Get in touch for help": "",
				"Get notified when someone replies to your comment": "Kimdir sharhingizga javob bersa, bildirishnoma oling",
				"Give feedback on this post": "Ushbu post haqida fikr bildiring",
				"Help! I'm not receiving emails": "",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "",
				"Less like this": "Bu kabi kamroq",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "",
				Manage: TU,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: jU,
				"More like this": "Ko'proq shunga o'xshash",
				Name: $U,
				"Need more help? Contact support": "",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "",
				"Not receiving emails?": "Elektron xatlar olmayapsizmi?",
				"Now check your email!": "Endi elektron pochtangizni tekshiring!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "",
				"Permanent failure (bounce)": "",
				Plan: AU,
				"Plan checkout was cancelled.": "",
				"Plan upgrade was cancelled.": "",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "",
				Price: NU,
				"Re-enable emails": "Elektron pochta xabarlarini qayta yoqing",
				Recommendations: MU,
				"Renews at {{price}}.": "",
				Retry: PU,
				Save: _U,
				"Send an email and say hi!": "",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "",
				"Sending login link...": "Kirish havolasi yuborilmoqda...",
				"Sending...": "Yuborilmoqda...",
				"Show all": "",
				"Sign in": "Kirish",
				"Sign out": "",
				"Sign up": "Ro'yxatdan o'tmoq",
				"Signup error: Invalid link": "",
				"Sorry, that didn’t work.": "",
				"Spam complaints": "",
				"Start {{amount}}-day free trial": "{{amount}}-kun sinov muddatini boshlang",
				"Starting {{startDate}}": "",
				"Starting today": "",
				"Submit feedback": "Izoh yuboring",
				Subscribe: zU,
				Subscribed: OU,
				Success: DU,
				"Success! Check your email for magic link to sign-in.": "",
				"Success! Your account is fully activated, you now have access to all content.": "",
				"Success! Your email is updated.": "",
				"Successfully unsubscribed": "Obuna muvaffaqiyatli bekor qilindi",
				"Thanks for the feedback!": "Izoh uchun rahmat!",
				"That didn't go to plan": "Bu rejaga mos kelmadi",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "",
				"This site is invite-only, contact the owner for access.": "Bu saytda faqat taklif qilinadi, kirish uchun egasiga murojaat qiling.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Ro‘yxatdan o‘tishni yakunlash uchun pochta qutingizdagi tasdiqlash havolasini bosing. Agar u 3 daqiqada kelmasa, spam jildini tekshiring!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "",
				"Unlock access to all newsletters by becoming a paid subscriber.": "",
				"Unsubscribe from all emails": "Barcha elektron pochta xabarlariga obunani bekor qiling",
				Unsubscribed: IU,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Elektron pochtalarga obunani bekor qilish {{title}}ga pulli obunanu bekor qilmaydi",
				Update: RU,
				"Update your preferences": "Sozlamalarni yangilash",
				"Verify your email address is correct": "",
				"View plans": "",
				Visit: YU,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Email manzili topilmagani uchun obunangizni bekor qila olmadik. Iltimos, sayt egasi bilan bog'laning.",
				"Welcome back, {{name}}!": "",
				"Welcome back!": "",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "",
				"Why has my email been disabled?": "",
				Yearly: LU,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "",
				"You have been successfully resubscribed": "Siz muvaffaqiyatli qayta obuna bo'ldingiz",
				"You're currently not receiving emails": "",
				"You're not receiving emails": "",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Siz e-pochta xabarlarini olmayapsiz, chunki siz oxirgi xabarni spam deb belgilagansiz yoki xabarlar taqdim etilgan elektron pochta manzilingizga yetkazilmagan.",
				"You're subscribed!": "",
				"You've successfully signed in.": "",
				"You've successfully subscribed to": "",
				"Your account": "Sizning hisobingiz",
				"Your input helps shape what gets published.": "",
				"Your subscription will expire on {{expiryDate}}": "",
				"Your subscription will renew on {{renewalDate}}": "",
				"Your subscription will start on {{subscriptionStart}}": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		FU = "",
		xee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: FU,
			default: {
				"Email sent": "",
				"Now check your email!": "",
				"Please enter a valid email address": "",
				"Something went wrong, please try again.": "",
				Subscribe: FU,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "",
				"Your email address": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		BU = "Ẩn danh",
		UU = "Hủy",
		VU = "Bình luận",
		HU = "Xóa",
		qU = "Thảo luận",
		WU = "Chỉnh sửa",
		KU = "Đã chỉnh sửa",
		JU = "Chuyên môn",
		GU = "Ẩn",
		QU = "Tên",
		XU = "Bác sĩ phẫu thuật thần kinh",
		ZU = "Trả lời",
		eV = "Báo cáo",
		tV = "Lưu",
		nV = "Đang gửi",
		iV = "Đã gửi",
		oV = "Hiển thị",
		rV = "Hôm qua",
		Eee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: BU,
			Cancel: UU,
			Comment: VU,
			Delete: HU,
			Discussion: qU,
			Edit: WU,
			Edited: KU,
			Expertise: JU,
			Hide: GU,
			Name: QU,
			Neurosurgeon: XU,
			Reply: ZU,
			Report: eV,
			Save: tV,
			Sending: nV,
			Sent: iV,
			Show: oV,
			Yesterday: rV,
			default: {
				"{{amount}} characters left": "{{amount}} ký tự còn lại",
				"{{amount}} comments": "{{amount}} bình luận",
				"{{amount}} days ago": "{{amount}} ngày trước",
				"{{amount}} hours ago": "{{amount}} giờ trước",
				"{{amount}} minutes ago": "{{amount}} phút trước",
				"{{amount}} months ago": "{{amount}} tháng trước",
				"{{amount}} seconds ago": "{{amount}} giây trước",
				"{{amount}} weeks ago": "{{amount}} tuần trước",
				"{{amount}} years ago": "{{amount}} năm trước",
				"1 comment": "1 bình luận",
				"Add comment": "Thêm bình luận",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "Thêm ngữ cảnh cho bình luận của bạn, chia sẻ tên và chuyên môn của bạn để thúc đẩy cuộc thảo luận lành mạnh.",
				"Add reply": "Thêm trả lời",
				"Already a member?": "Đã là thành viên?",
				Anonymous: BU,
				"Become a member of {{publication}} to start commenting.": "Trở thành thành viên của {{publication}} để bắt đầu bình luận.",
				"Become a paid member of {{publication}} to start commenting.": "Trở thành thành viên trả phí của {{publication}} để bắt đầu bình luận.",
				Cancel: UU,
				Comment: VU,
				"Complete your profile": "Hoàn thành hồ sơ của bạn",
				Delete: HU,
				"Deleted member": "Thành viên đã xóa",
				Discussion: qU,
				Edit: WU,
				"Edit this comment": "Chỉnh sửa bình luận này",
				Edited: KU,
				"Enter your name": "Nhập tên của bạn",
				Expertise: JU,
				"Founder @ Acme Inc": "Người sáng lập @ Acme Inc",
				"Full-time parent": "Cha mẹ toàn thời gian",
				"Head of Marketing at Acme, Inc": "Trưởng phòng Marketing tại Acme, Inc",
				Hide: GU,
				"Hide comment": "Ẩn bình luận",
				"Jamie Larson": "Jamie Larson",
				"Join the discussion": "Tham gia cuộc thảo luận",
				"Just now": "Vừa xong",
				"Local resident": "Cư dân địa phương",
				"Member discussion": "Thảo luận của thành viên",
				Name: QU,
				Neurosurgeon: XU,
				"One day ago": "Một ngày trước",
				"One hour ago": "Một giờ trước",
				"One minute ago": "Một phút trước",
				"One month ago": "Một tháng trước",
				"One week ago": "Một tuần trước",
				"One year ago": "Một năm trước",
				Reply: ZU,
				"Reply to comment": "Trả lời bình luận",
				Report: eV,
				"Report comment": "Báo cáo bình luận",
				"Report this comment": "Báo cáo bình luận này",
				"Report this comment?": "Báo cáo bình luận này?",
				Save: tV,
				Sending: nV,
				Sent: iV,
				Show: oV,
				"Show {{amount}} more replies": "Hiển thị {{amount}} trả lời khác",
				"Show {{amount}} previous comments": "Hiển thị {{amount}} bình luận trước",
				"Show 1 more reply": "Hiển thị 1 trả lời khác",
				"Show 1 previous comment": "Hiển thị 1 bình luận trước",
				"Show comment": "Hiển thị bình luận",
				"Sign in": "Đăng nhập",
				"Sign up now": "Đăng ký ngay",
				"Start the conversation": "Bắt đầu cuộc trò chuyện",
				"This comment has been hidden.": "Bình luận này đã bị ẩn.",
				"This comment has been removed.": "Bình luận này đã bị xóa.",
				"Upgrade now": "Nâng cấp ngay",
				Yesterday: rV,
				"You want to report this comment?": "Bạn muốn báo cáo bình luận này?",
				"Your request will be sent to the owner of this site.": "Yêu cầu của bạn sẽ được gửi đến chủ sở hữu của trang web này."
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Tee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "Chúc bạn mọi điều tốt đẹp nhất!",
				"Complete signup for {{siteTitle}}!": "Hoàn tất đăng ký {{siteTitle}}!",
				"Complete your sign up to {{siteTitle}}!": "Hoàn tất đăng ký của bạn trên {{siteTitle}}!",
				"Confirm email address": "Xác minh email",
				"Confirm signup": "Xác nhận đăng ký",
				"Confirm your email address": "Nhập lại email",
				"Confirm your email update for {{siteTitle}}!": "Xác nhận cập nhật địa chỉ email của bạn trên {{siteTitle}}!",
				"Confirm your subscription to {{siteTitle}}": "Xác nhận bạn sẽ theo dõi {{siteTitle}}",
				"For your security, the link will expire in 24 hours time.": "Để bảo mật, liên kết sẽ hết hạn trong vòng 24 giờ.",
				"Hey there,": "Chào bạn,",
				"Hey there!": "Chào bạn!",
				"If you did not make this request, you can safely ignore this email.": "Nếu bạn không thực hiện yêu cầu này, vui lòng bỏ qua email này.",
				"If you did not make this request, you can simply delete this message.": "Nếu bạn không thực hiện yêu cầu này, hãy xóa email này.",
				"Please confirm your email address with this link:": "Vui lòng xác minh địa chỉ email của bạn bằng liên kết này:",
				"Secure sign in link for {{siteTitle}}": "Liên kết đăng nhập an toàn trên {{siteTitle}}",
				"See you soon!": "Hẹn gặp lại bạn!",
				"Sent to {{email}}": "Đã gửi đến {{email}}",
				"Sign in": "Đăng nhập",
				"Sign in to {{siteTitle}}": "Đăng nhập {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "Nhấn vào liên kết bên dưới để hoàn tất quy trình đăng ký {{siteTitle}} và tự động đăng nhập:",
				"Thank you for signing up to {{siteTitle}}!": "Cám ơn bạn đã đăng ký thành viên trên {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}!": "Cám ơn bạn đã theo dõi {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}.": "Cám ơn bạn đã theo dõi {{siteTitle}}!",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "Cám ơn bạn đã theo dõi {{siteTitle}}. Nhấp vào liên kết bên dưới để đăng nhập tự động:",
				"This email address will not be used.": "Địa chỉ email này sẽ không còn sử dụng.",
				"Welcome back to {{siteTitle}}!": "Chào mừng trở lại {{siteTitle}}!",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "Chào mừng trở lại! Sử dụng liên kết này để đăng nhập an toàn vào tài khoản {{siteTitle}} của bạn:",
				"You can also copy & paste this URL into your browser:": "Bạn cũng có thể sao chép và dán URL này vào trình duyệt:",
				"You will not be signed up, and no account will be created for you.": "Bạn sẽ không đăng ký và sẽ không tạo tài khoản.",
				"You will not be subscribed.": "Bạn sẽ không theo dõi.",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "Còn một bước nữa để theo dõi {{siteTitle}} — vui lòng xác nhận địa chỉ email của bạn bằng liên kết này:",
				"You're one tap away from subscribing to {{siteTitle}}!": "Còn một bước nữa để theo dõi {{siteTitle}}!"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		aV = "Tài khoản",
		sV = "Quay về",
		lV = "Thay đổi",
		uV = "Chọn",
		cV = "Đóng",
		dV = "Bình luận",
		mV = "Khen tặng",
		pV = "Xác nhận",
		fV = "Tiếp tục",
		hV = "Chỉnh sửa",
		gV = "Email",
		yV = "Emails",
		bV = "Vĩnh viễn",
		kV = "Quản lý",
		vV = "Hàng tháng",
		wV = "Tên",
		SV = "Gói",
		CV = "Giá",
		xV = "",
		EV = "Thử lại",
		TV = "Lưu",
		jV = "Theo dõi",
		$V = "Đã theo dõi",
		AV = "Thành công",
		NV = "Đã hủy theo dõi",
		MV = "Cập nhật",
		PV = "",
		_V = "Hàng năm",
		jee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: aV,
			Back: sV,
			Change: lV,
			Choose: uV,
			Close: cV,
			Comments: dV,
			Complimentary: mV,
			Confirm: pV,
			Continue: fV,
			Edit: hV,
			Email: gV,
			Emails: yV,
			Forever: bV,
			Manage: kV,
			Monthly: vV,
			Name: wV,
			Plan: SV,
			Price: CV,
			Recommendations: xV,
			Retry: EV,
			Save: TV,
			Subscribe: jV,
			Subscribed: $V,
			Success: AV,
			Unsubscribed: NV,
			Update: MV,
			Visit: PV,
			Yearly: _V,
			default: {
				"{{amount}} days free": "{{amount}} ngày đọc thử",
				"{{amount}} off": "Giảm {{amount}}",
				"{{amount}} off for first {{number}} months.": "Giảm {{amount}} cho {{number}} tháng đầu tiên.",
				"{{amount}} off for first {{period}}.": "Giảm {{amount}} cho {{period}} đầu tiên.",
				"{{amount}} off forever.": "Giảm {{amount}} vĩnh viễn.",
				"{{discount}}% discount": "Giảm {{discount}}%",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} sẽ không còn được nhận bản tin {{newsletterName}}.",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} sẽ không còn được nhận email khi ai đó trả lời phản hồi của bạn.",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} sẽ không còn được nhận bản tin này.",
				"{{trialDays}} days free": "{{trialDays}} ngày đọc thử miễn phí",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "Liên kết đăng nhập đã được gửi đến hộp thư của bạn. Sau 3 phút mà chưa thấy, hãy kiểm tra thư hộp thư spam.",
				Account: aV,
				"Account settings": "Cài đặt",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "Sau khi hết thời gian đọc thử miễn phí, sẽ áp dụng giá của gói theo dõi mà bạn đã chọn. Bạn có thể hủy trước khi hết thời gian đọc thử.",
				"Already a member?": "Bạn đã là thành viên?",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "Xảy ra lỗi chưa biết. Hãy thử lại hoặc <a>liên hệ hỗ trợ</a> nếu vẫn tiếp tục lỗi.",
				Back: sV,
				"Back to Log in": "Quay về đăng nhập",
				"Billing info": "Thông tin thanh toán",
				"Black Friday": "Ưu Đãi",
				"Cancel anytime.": "Hủy bất cứ lúc nào.",
				"Cancel subscription": "Hủy gói",
				"Cancellation reason": "Lý do hủy gói",
				Change: lV,
				"Check spam & promotions folders": "Kiểm tra hộp thư spam & quảng cáo",
				"Check with your mail provider": "Yêu cầu nhà cung cấp dịch vụ email hỗ trợ",
				Choose: uV,
				"Choose a different plan": "Chọn gói khác",
				"Choose your newsletters": "Chọn bản tin bạn muốn nhận",
				"Click here to retry": "Nhấn vào đây thử lại",
				Close: cV,
				Comments: dV,
				Complimentary: mV,
				Confirm: pV,
				"Confirm cancellation": "Xác nhận hủy",
				"Confirm subscription": "Xác nhận theo dõi",
				"Contact support": "Liên hệ hỗ trợ",
				Continue: fV,
				"Continue subscription": "Tiếp tục theo dõi",
				"Could not sign in. Login link expired.": "Không đăng nhập được. Liên kết đăng nhập hết hạn.",
				"Could not update email! Invalid link.": "Không cập nhật email được. Liên kết không hợp lệ.",
				"Create a new contact": "Tạo liên hệ mới",
				"Current plan": "Gói hiện tại",
				"Delete account": "Xóa tài khoản",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "Không muốn như vậy? Quản lý thiết lập <button>ở đây</button>.",
				"Don't have an account?": "Bạn chưa có tài khoản?",
				Edit: hV,
				Email: gV,
				"Email newsletter": "Email bản tin",
				"Email preference updated.": "Đã cập nhật email.",
				"Email preferences": "Thiết lập email",
				Emails: yV,
				"Emails disabled": "Vô hiệu hóa email",
				"Ends {{offerEndDate}}": "Kết thúc vào {{offerEndDate}}",
				Error: "Lỗi",
				"Expires {{expiryDate}}": "Hết hạn vào {{expiryDate}}",
				Forever: bV,
				"Free Trial – Ends {{trialEnd}}": "Dùng Thử – Hết hạn vào {{trialEnd}}",
				"Get help": "Trợ giúp",
				"Get in touch for help": "Yêu cầu nhận trợ giúp",
				"Get notified when someone replies to your comment": "Nhận thông báo khi có ai đó trả lời bình luận",
				"Give feedback on this post": "Phản hồi bài viết này",
				"Help! I'm not receiving emails": "Giúp tôi! Tôi không nhận được email",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "Nếu một bản tin bị gắn nhãn thư rác, email sẽ tự động bị vô hiệu hóa đối với địa chỉ đó để đảm bảo bạn không còn nhận được bất kỳ email không mong muốn nào nữa.",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "Nếu khiếu nại về thư rác là vô tình hoặc bạn muốn bắt đầu nhận lại email, bạn có thể đăng ký lại email bằng cách nhấp vào nút trên màn hình trước đó.",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "Nếu bạn hủy đăng ký ngay bây giờ, bạn sẽ tiếp tục có quyền truy cập cho đến {{periodEnd}}.",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "Nếu bạn dùng tài khoản email của công ty hoặc chính phủ, hãy liên hệ với bộ phận IT và yêu cầu họ cho phép nhận email từ {{senderEmail}}",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "Nếu bạn muốn bắt đầu nhận lại email, tốt nhất là kiểm tra địa chỉ email của bạn trong hồ sơ xem có vấn đề gì không và sau đó nhấn vào đăng ký lại trên màn hình trước đó.",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "Nếu bạn không nhận được bản tin email mà bạn đã đăng ký, đây là một số việc cần kiểm tra.",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "Nếu bạn đã hoàn thành tất cả các bước kiểm tra này mà vẫn không nhận được email, hãy liên hệ với {{supportAddress}} để được hỗ trợ.",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "Trong trường hợp nhận được lỗi vĩnh viễn khi cố gắng gửi bản tin, email sẽ bị vô hiệu hóa trên tài khoản.",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "Trong ứng dụng email của bạn, hãy thêm {{senderEmail}} vào danh sách liên hệ của bạn. Điều này báo hiệu cho nhà cung cấp dịch vụ email của bạn rằng các email được gửi từ địa chỉ này là đáng tin cậy.",
				"Less like this": "Không thích lắm",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': 'Hãy chắc rằng email không đang trong hộp thư Spam hoặc Quảng cáo. Nếu đang vậy, chọn "Đánh dấu không phải spam" hoặc "Chuyển tới Hộp thư đến".',
				Manage: kV,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: vV,
				"More like this": "Thích bài viết như này",
				Name: wV,
				"Need more help? Contact support": "Cần giúp đỡ? Liên hệ hỗ trợ",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "Bản tin có thể bị vô hiệu hóa trên tài khoản của bạn vì hai lý do: Email trước đó đã bị đánh dấu là thư rác hoặc lỗi thất bại vĩnh viễn (thư trả lại).",
				"Not receiving emails?": "Bạn không nhận được email?",
				"Now check your email!": "Kiểm tra hộp thư ngay!",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "Sau khi đăng ký lại, nếu bạn vẫn không thấy email trong hộp thư đến của mình, hãy kiểm tra mục thư rác. Một số nhà cung cấp email lưu giữ hồ sơ về các khiếu nại thư rác trước đây và sẽ tiếp tục gắn nhãn email. Nếu điều này xảy ra, hãy đánh dấu bản tin mới nhất là 'Không phải thư rác' để chuyển nó trở lại hộp thư đến chính của bạn.",
				"Permanent failure (bounce)": "Thất bại vĩnh viễn (thư bị trả lại)",
				Plan: SV,
				"Plan checkout was cancelled.": "Đã hủy thanh toán.",
				"Plan upgrade was cancelled.": "Đã hủy nâng cấp gói.",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "Vui lòng điền các mục bắt buộc",
				Price: CV,
				"Re-enable emails": "Kích hoạt lại email",
				Recommendations: xV,
				"Renews at {{price}}.": "Gia hạn giá {{price}}.",
				Retry: EV,
				Save: TV,
				"Send an email and say hi!": "Gửi một email và nói xin chào!",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "Gửi email tới {{senderEmail}} và gửi lời chào. Điều này cũng có thể giúp báo hiệu cho nhà cung cấp dịch vụ email của bạn rằng các email đến và đi từ địa chỉ này là đáng tin cậy.",
				"Sending login link...": "Đang gửi liên kết đăng nhập...",
				"Sending...": "Đang gửi...",
				"Show all": "",
				"Sign in": "Đăng nhập",
				"Sign out": "Đăng xuất",
				"Sign up": "Đăng ký",
				"Signup error: Invalid link": "Lỗi đăng ký: Liên kết không hợp lệ",
				"Sorry, that didn’t work.": "Rất tiếc, không dùng được.",
				"Spam complaints": "Than phiền",
				"Start {{amount}}-day free trial": "Bắt đầu đọc thử {{amount}} ngày",
				"Starting {{startDate}}": "Bắt đầu vào {{startDate}}",
				"Starting today": "Bắt đầu hôm nay",
				"Submit feedback": "Gửi phản hồi",
				Subscribe: jV,
				Subscribed: $V,
				Success: AV,
				"Success! Check your email for magic link to sign-in.": "Xong! Kiểm tra hộp thư để nhận liên kết đăng nhập.",
				"Success! Your account is fully activated, you now have access to all content.": "Xong! Đã kích hoạt tài khoản, giờ bạn có toàn quyền truy cập nội dung.",
				"Success! Your email is updated.": "Xong! Đã cập nhật email của bạn.",
				"Successfully unsubscribed": "Đã hủy theo dõi thành công",
				"Thanks for the feedback!": "Cám ơn phản hồi của bạn!",
				"That didn't go to plan": "Không thực hiện được",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "Địa chỉ email của bạn là {{memberEmail}} — nếu sai, bạn có thể đổi trong <button>cài đặt tài khoản</button>.",
				"There was a problem submitting your feedback. Please try again a little later.": "Có vấn đề khi gửi phản hồi. Xin thử lại sau.",
				"This site is invite-only, contact the owner for access.": "Trang web này chỉ dành cho những người được mời, hãy liên hệ với chủ sở hữu để cấp quyền truy cập.",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Để hoàn tất đăng ký, nhấn vào liên kết xác nhận trong hộp thư đến của bạn. Sau 3 phút mà không thấy, hãy kiểm tra hộp thư spam của bạn!",
				"Try free for {{amount}} days, then {{originalPrice}}.": "Đọc thử {{amount}} ngày, phí sau đọc thử là {{originalPrice}}.",
				"Unlock access to all newsletters by becoming a paid subscriber.": "Trở thành thành viên trả phí để mở khóa truy cập toàn bộ bản tin.",
				"Unsubscribe from all emails": "Hủy theo dõi tất cả email",
				Unsubscribed: NV,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "Việc hủy theo dõi qua email sẽ không hủy gói đăng ký trả phí của bạn đối với {{title}}",
				Update: MV,
				"Update your preferences": "Cập nhật thiết lập",
				"Verify your email address is correct": "Xác minh địa chỉ mail của bạn là đúng",
				"View plans": "Xem các gói",
				Visit: PV,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "Chúng tôi không thể hủy theo dõi vì không tìm thấy địa chỉ email. Vui lòng liên hệ với chủ sở hữu trang web.",
				"Welcome back, {{name}}!": "Chào mừng trở lại, {{name}}!",
				"Welcome back!": "Chào mừng trở lại!",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "Khi hộp thư đến không nhận được email, nó thường được gọi là email bị trả lại. Điều này có thể là tạm thời. Tuy nhiên, trong một số trường hợp, email bị trả lại có thể là lỗi vĩnh viễn nếu địa chỉ email không hợp lệ hoặc không tồn tại.",
				"Why has my email been disabled?": "Tại sao email của tôi bị vô hiệu hóa?",
				Yearly: _V,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "Bạn đang là thành viên thường, hãy nâng cấp gói trả phí để có toàn quyền truy cập.",
				"You have been successfully resubscribed": "Bạn đã theo dõi lại thành công",
				"You're currently not receiving emails": "Những email bạn không nhận được gần đây",
				"You're not receiving emails": "Bạn không nhận được email",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "Bạn không nhận được email vì bạn đã đánh dấu một email gần đây là thư rác, hoặc vì không thể gửi đến địa chỉ email bạn đã cung cấp.",
				"You're subscribed!": "",
				"You've successfully signed in.": "Bạn đã đăng nhập.",
				"You've successfully subscribed to": "",
				"Your account": "Tài khoản của bạn",
				"Your input helps shape what gets published.": "Thông tin của bạn giúp định hình nội dung được xuất bản.",
				"Your subscription will expire on {{expiryDate}}": "Gói của bạn sẽ hết hạn vào {{expiryDate}}",
				"Your subscription will renew on {{renewalDate}}": "Gói của bạn sẽ tự động gia hạn vào {{renewalDate}}",
				"Your subscription will start on {{subscriptionStart}}": "Gói của bạn bắt đầu có hiệu lực vào {{subscriptionStart}}"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		zV = "Theo dõi",
		$ee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: zV,
			default: {
				"Email sent": "Đã gửi email",
				"Now check your email!": "Giờ hãy kiểm tra hộp thư của bạn!",
				"Please enter a valid email address": "Vui lòng nhập địa chỉ email hợp lệ",
				"Something went wrong, please try again.": "Xảy ra lỗi, vui lòng thử lại.",
				Subscribe: zV,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "Để hoàn tất đăng ký, nhấn vào liên kết xác minh trong email. Sau 3 phút mà chưa thấy, hãy kiểm tra thư spam!",
				"Your email address": "Địa chỉ email của bạn"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		OV = "",
		DV = "",
		IV = "",
		RV = "",
		YV = "",
		LV = "",
		FV = "",
		BV = "",
		UV = "",
		VV = "",
		HV = "",
		qV = "",
		WV = "",
		KV = "",
		JV = "",
		GV = "",
		QV = "",
		XV = "",
		Aee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: OV,
			Cancel: DV,
			Comment: IV,
			Delete: RV,
			Discussion: YV,
			Edit: LV,
			Edited: FV,
			Expertise: BV,
			Hide: UV,
			Name: VV,
			Neurosurgeon: HV,
			Reply: qV,
			Report: WV,
			Save: KV,
			Sending: JV,
			Sent: GV,
			Show: QV,
			Yesterday: XV,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: OV,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: DV,
				Comment: IV,
				"Complete your profile": "",
				Delete: RV,
				"Deleted member": "",
				Discussion: YV,
				Edit: LV,
				"Edit this comment": "",
				Edited: FV,
				"Enter your name": "",
				Expertise: BV,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: UV,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: VV,
				Neurosurgeon: HV,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: qV,
				"Reply to comment": "",
				Report: WV,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: KV,
				Sending: JV,
				Sent: GV,
				Show: QV,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: XV,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Nee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "一切顺利！",
				"Complete signup for {{siteTitle}}!": "完成在{{siteTitle}}的注册！",
				"Complete your sign up to {{siteTitle}}!": "完成您在 {{siteTitle}} 的注册！",
				"Confirm email address": "确认电子邮件",
				"Confirm signup": "确认注册",
				"Confirm your email address": "确认您的电子邮件",
				"Confirm your email update for {{siteTitle}}!": "确认您在 {{siteTitle}} 电子邮件的更新!",
				"Confirm your subscription to {{siteTitle}}": "确认您在 {{siteTitle}} 的订阅",
				"For your security, the link will expire in 24 hours time.": "为了您的安全，链接将在24小时后失效。",
				"Hey there,": "你好，",
				"Hey there!": "你好！",
				"If you did not make this request, you can safely ignore this email.": "如果您没有发出此请求，您可以放心地忽略此电子邮件。",
				"If you did not make this request, you can simply delete this message.": "如果您没有发出此请求，您可以直接删除此消息。",
				"Please confirm your email address with this link:": "请通过此链接确认您的电子邮件地址：",
				"Secure sign in link for {{siteTitle}}": "为 {{siteTitle}} 准备的安全登录链接",
				"See you soon!": "再会！",
				"Sent to {{email}}": "发送到 {{email}}",
				"Sign in": "登录",
				"Sign in to {{siteTitle}}": "登录到 {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "请点击下面的链接完成 {{siteTitle}} 的注册，并将自动登录：",
				"Thank you for signing up to {{siteTitle}}!": "感谢您注册 {{siteTitle}}！",
				"Thank you for subscribing to {{siteTitle}}!": "感谢您订阅 {{siteTitle}}！",
				"Thank you for subscribing to {{siteTitle}}.": "感谢订阅{{siteTitle}}。",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "感谢您订阅 {{siteTitle}}。点击下面的链接即可自动登录：",
				"This email address will not be used.": "此电子邮件地址将不会被使用。",
				"Welcome back to {{siteTitle}}!": "欢迎回到 {{siteTitle}}！",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "欢迎回来！请使用此链接安全登录您的 {{siteTitle}} 账户：",
				"You can also copy & paste this URL into your browser:": "您也可以将此URL复制并粘贴到您的浏览器中：",
				"You will not be signed up, and no account will be created for you.": "您不会被注册，也不会为您创建任何账户。",
				"You will not be subscribed.": "您不会被订阅",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "您离订阅 {{siteTitle}} 仅需点击一下 — 请通过此链接确认您的电子邮件地址：",
				"You're one tap away from subscribing to {{siteTitle}}!": "仅需一次点击即可完成{{siteTitle}}的订阅！"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		ZV = "账户",
		eH = "返回",
		tH = "变更",
		nH = "选择",
		iH = "关闭",
		oH = "评论",
		rH = "赠送",
		aH = "确认",
		sH = "继续",
		lH = "编辑",
		uH = "电子邮件",
		cH = "电子邮件列表",
		dH = "永久",
		mH = "管理",
		pH = "月付",
		fH = "名字",
		hH = "订阅计划",
		gH = "价格",
		yH = "",
		bH = "重试",
		kH = "保存",
		vH = "订阅",
		wH = "已订阅",
		SH = "成功",
		CH = "取消订阅",
		xH = "更新",
		EH = "",
		TH = "年付",
		Mee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: ZV,
			Back: eH,
			Change: tH,
			Choose: nH,
			Close: iH,
			Comments: oH,
			Complimentary: rH,
			Confirm: aH,
			Continue: sH,
			Edit: lH,
			Email: uH,
			Emails: cH,
			Forever: dH,
			Manage: mH,
			Monthly: pH,
			Name: fH,
			Plan: hH,
			Price: gH,
			Recommendations: yH,
			Retry: bH,
			Save: kH,
			Subscribe: vH,
			Subscribed: wH,
			Success: SH,
			Unsubscribed: CH,
			Update: xH,
			Visit: EH,
			Yearly: TH,
			default: {
				"{{amount}} days free": "{{amount}}天免费",
				"{{amount}} off": "减免{{amount}}",
				"{{amount}} off for first {{number}} months.": "前{{number}}月减免{{amount}}",
				"{{amount}} off for first {{period}}.": "首{{period}}减免{{amount}}",
				"{{amount}} off forever.": "永久减免{{amount}}",
				"{{discount}}% discount": "{{discount}}% 折扣",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}}将不会再收到{{newsletterName}}的刊物。",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}}将不会再收到评论回复提醒邮件。",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}}将不会再收到本刊物。",
				"{{trialDays}} days free": "{{trialDays}} 天免费试用",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "登录链接已经发送到您的收件箱。如果在3分钟内还没有收到，请务必检查您的垃圾邮件文件夹。",
				Account: ZV,
				"Account settings": "账户设置",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "免费试用结束后，您将被收取所选套餐的标定价格。在此之前，您可以随时取消。",
				"Already a member?": "已经是会员了？",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "遇到意外错误。请重试，若持续出现请<a>联系支持服务</a>。",
				Back: eH,
				"Back to Log in": "返回登录",
				"Billing info": "账单信息",
				"Black Friday": "黑五促销",
				"Cancel anytime.": "随时取消",
				"Cancel subscription": "取消订阅",
				"Cancellation reason": "取消原因",
				Change: tH,
				"Check spam & promotions folders": "检查垃圾邮件与促销邮件目录",
				"Check with your mail provider": "与您的邮件服务商确认",
				Choose: nH,
				"Choose a different plan": "选择其他订阅方案",
				"Choose your newsletters": "选择您的刊物",
				"Click here to retry": "请点此处重试",
				Close: iH,
				Comments: oH,
				Complimentary: rH,
				Confirm: aH,
				"Confirm cancellation": "确认取消",
				"Confirm subscription": "确认订阅",
				"Contact support": "联系支持服务",
				Continue: sH,
				"Continue subscription": "继续订阅",
				"Could not sign in. Login link expired.": "无法登录。登录链接已过期。",
				"Could not update email! Invalid link.": "无法更新电子邮件！链接无效。",
				"Create a new contact": "创建新联系",
				"Current plan": "当前订阅",
				"Delete account": "删除账户",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "误操作？在<button>这里</button>管理您的配置。",
				"Don't have an account?": "还没有账户吗？",
				Edit: lH,
				Email: uH,
				"Email newsletter": "电子邮件快报",
				"Email preference updated.": "电子邮件偏好已更新。",
				"Email preferences": "电子邮件偏好设置",
				Emails: cH,
				"Emails disabled": "关闭电子邮件列表",
				"Ends {{offerEndDate}}": "于{{offerEndDate}}结束",
				Error: "错误",
				"Expires {{expiryDate}}": "于{{expiryDate}}过期",
				Forever: dH,
				"Free Trial – Ends {{trialEnd}}": "免费试用 - {{trialEnd}}结束",
				"Get help": "获取帮助",
				"Get in touch for help": "联系以获取帮助",
				"Get notified when someone replies to your comment": "当有人回复您的评论时，将会收到通知",
				"Give feedback on this post": "对这篇文章提供建议",
				"Help! I'm not receiving emails": "求助！我没有收到电子邮件",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "如果有快报被标记为垃圾邮件，则自动拒绝该地址的邮件以确保后续不再接收不想要的消息。",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "如果误标记为垃圾邮件，或者您希望再次开启邮件接收，您可以通过点击上一页的按钮重新订阅。",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "如果现在取消订阅，当前订阅在{{periodEnd}}依旧有效。",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "如果您使用公司或者政府邮件账户，请联系相应IT部门以允许从{{senderEmail}}接收邮件。",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "如果您希望重新开始接收邮件，接下来最好先检查存档的电子邮件地址，然后在之前的页面点击重新订阅。",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "如果没有收到订阅快报，请检查以下事项。",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "如果您已经完成全部检查项目却依旧没有收到邮件，您可以联系{{supportAddress}}获取支持。",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "当尝试发送快报时遇到永久错误，向该账户的发送邮件的功能将被禁用。",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "在您的电子邮件客户端将 {{senderEmail}} 加入联系人列表。这将向您的邮件供应商表明来自该地址的邮件是可信的。",
				"Less like this": "不喜欢",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "确保邮件没有被意外标记为垃圾或者促销邮件。如果是，点击“非垃圾邮件”或者“移动到收件箱”。",
				Manage: mH,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: pH,
				"More like this": "喜欢",
				Name: fH,
				"Need more help? Contact support": "需要更多帮助？联系支持服务",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "您账户的快报被禁用的可能原因有两个：先前的电子邮件被标记为垃圾邮件，或者发送邮件遇到永久错误 (bounce)",
				"Not receiving emails?": "无法收到电子邮件？",
				"Now check your email!": "现在请检查您的电子邮件！",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "重新订阅后在收件箱依旧没有看到邮件，请检查您的垃圾邮件箱。一些服务商会保留之前的垃圾邮件记录并持续标记。如果是这样，请将最新的快报标记为“非垃圾邮件”并将其移动到收件箱。",
				"Permanent failure (bounce)": "永久错误 (bounce)",
				Plan: hH,
				"Plan checkout was cancelled.": "订阅付款已取消。",
				"Plan upgrade was cancelled.": "订阅升级已取消。",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "请填写必须项目",
				Price: gH,
				"Re-enable emails": "重启电子邮件",
				Recommendations: yH,
				"Renews at {{price}}.": "以{{price}}的价格续费。",
				Retry: bH,
				Save: kH,
				"Send an email and say hi!": "发送邮件问好！",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "发送邮件到{{senderEmail}}问好。这有助于您的邮件服务商将该地址的往来邮件判定为可信邮件。",
				"Sending login link...": "正在发送登录链接...",
				"Sending...": "发送中...",
				"Show all": "",
				"Sign in": "登录",
				"Sign out": "退出",
				"Sign up": "注册",
				"Signup error: Invalid link": "注册错误：链接无效",
				"Sorry, that didn’t work.": "抱歉，该操作无法完成。",
				"Spam complaints": "垃圾邮件",
				"Start {{amount}}-day free trial": "开始 {{amount}}-天免费试用",
				"Starting {{startDate}}": "从{{startDate}}开始",
				"Starting today": "从今天开始",
				"Submit feedback": "提交建议",
				Subscribe: vH,
				Subscribed: wH,
				Success: SH,
				"Success! Check your email for magic link to sign-in.": "成功！检查您的电子邮箱以获取登录链接。",
				"Success! Your account is fully activated, you now have access to all content.": "成功！您的账户已经完全激活，您现在可以访问全部内容了。",
				"Success! Your email is updated.": "成功！您的电子邮件已更新。",
				"Successfully unsubscribed": "成功取消订阅",
				"Thanks for the feedback!": "感谢您的建议！",
				"That didn't go to plan": "似乎出错了",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "",
				"There was a problem submitting your feedback. Please try again a little later.": "提交您的反馈时遇到错误。请稍后重试。",
				"This site is invite-only, contact the owner for access.": "此网站仅限邀请，联系所有者以获取访问",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "要完成注册，请点击您收件箱中的确认链接。如果在3分钟内没有收到，请检查一下您的垃圾邮件文件夹！",
				"Try free for {{amount}} days, then {{originalPrice}}.": "{{amount}}天免费试用，之后{{originalPrice}}。",
				"Unlock access to all newsletters by becoming a paid subscriber.": "成为付费订阅用户以解锁全部快报。",
				"Unsubscribe from all emails": "取消所有邮件订阅",
				Unsubscribed: CH,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "取消邮件订阅不会取消您对 {{title}} 的付费订阅。",
				Update: xH,
				"Update your preferences": "更新您的偏好设置",
				"Verify your email address is correct": "确认您的电子邮件地址是正确的",
				"View plans": "查阅订阅计划",
				Visit: EH,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "我们无法取消您的订阅，因为找不到该电子邮件地址。请联系网站所有者。",
				"Welcome back, {{name}}!": "欢迎回来，{{name}}！",
				"Welcome back!": "欢迎回来！",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "收件箱无法接收邮件时称为“反弹”。大多数时候这是临时的。但是某些情况下，无效或者不存在的邮件地址反弹的邮件会被认定为永久错误。",
				"Why has my email been disabled?": "为什么我的邮件功能被禁用了？",
				Yearly: TH,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "您当前为免费用户，升级为付费订阅以获取全部内容。",
				"You have been successfully resubscribed": "您已成功重新订阅",
				"You're currently not receiving emails": "您当前不会接收电子邮件。",
				"You're not receiving emails": "您当前不会接收电子邮件。",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "您收不到电子邮件是因为您可能将最近的某个消息标记为垃圾邮件，或者无法将消息发送到您提供的电子邮件地址。",
				"You're subscribed!": "",
				"You've successfully signed in.": "您已成功登录。",
				"You've successfully subscribed to": "",
				"Your account": "您的账户",
				"Your input helps shape what gets published.": "您的建议将使我们变得更好。",
				"Your subscription will expire on {{expiryDate}}": "您的订阅将在{{expiryDate}}到期",
				"Your subscription will renew on {{renewalDate}}": "您的订阅将在{{renewalDate}}续费",
				"Your subscription will start on {{subscriptionStart}}": "您的订阅将于{{subscriptionStart}}开始"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		jH = "订阅",
		Pee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: jH,
			default: {
				"Email sent": "邮件已发送",
				"Now check your email!": "现在请检查您的电子邮箱！",
				"Please enter a valid email address": "请输入有效的电子邮件地址",
				"Something went wrong, please try again.": "遇到未知错误，请重试。",
				Subscribe: jH,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "请点击您收件箱中的确认链接以完成注册。如果3分钟后仍没有收到确认邮件，请检查垃圾邮件！",
				"Your email address": "您的电子邮件地址"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		$H = "",
		AH = "",
		NH = "",
		MH = "",
		PH = "",
		_H = "",
		zH = "",
		OH = "",
		DH = "",
		IH = "",
		RH = "",
		YH = "",
		LH = "",
		FH = "",
		BH = "",
		UH = "",
		VH = "",
		HH = "",
		_ee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Anonymous: $H,
			Cancel: AH,
			Comment: NH,
			Delete: MH,
			Discussion: PH,
			Edit: _H,
			Edited: zH,
			Expertise: OH,
			Hide: DH,
			Name: IH,
			Neurosurgeon: RH,
			Reply: YH,
			Report: LH,
			Save: FH,
			Sending: BH,
			Sent: UH,
			Show: VH,
			Yesterday: HH,
			default: {
				"{{amount}} characters left": "",
				"{{amount}} comments": "",
				"{{amount}} days ago": "",
				"{{amount}} hours ago": "",
				"{{amount}} minutes ago": "",
				"{{amount}} months ago": "",
				"{{amount}} seconds ago": "",
				"{{amount}} weeks ago": "",
				"{{amount}} years ago": "",
				"1 comment": "",
				"Add comment": "",
				"Add context to your comment, share your name and expertise to foster a healthy discussion.": "",
				"Add reply": "",
				"Already a member?": "",
				Anonymous: $H,
				"Become a member of {{publication}} to start commenting.": "",
				"Become a paid member of {{publication}} to start commenting.": "",
				Cancel: AH,
				Comment: NH,
				"Complete your profile": "",
				Delete: MH,
				"Deleted member": "",
				Discussion: PH,
				Edit: _H,
				"Edit this comment": "",
				Edited: zH,
				"Enter your name": "",
				Expertise: OH,
				"Founder @ Acme Inc": "",
				"Full-time parent": "",
				"Head of Marketing at Acme, Inc": "",
				Hide: DH,
				"Hide comment": "",
				"Jamie Larson": "",
				"Join the discussion": "",
				"Just now": "",
				"Local resident": "",
				"Member discussion": "",
				Name: IH,
				Neurosurgeon: RH,
				"One day ago": "",
				"One hour ago": "",
				"One minute ago": "",
				"One month ago": "",
				"One week ago": "",
				"One year ago": "",
				Reply: YH,
				"Reply to comment": "",
				Report: LH,
				"Report comment": "",
				"Report this comment": "",
				"Report this comment?": "",
				Save: FH,
				Sending: BH,
				Sent: UH,
				Show: VH,
				"Show {{amount}} more replies": "",
				"Show {{amount}} previous comments": "",
				"Show 1 more reply": "",
				"Show 1 previous comment": "",
				"Show comment": "",
				"Sign in": "",
				"Sign up now": "",
				"Start the conversation": "",
				"This comment has been hidden.": "",
				"This comment has been removed.": "",
				"Upgrade now": "",
				Yesterday: HH,
				"You want to report this comment?": "",
				"Your request will be sent to the owner of this site.": ""
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		zee = Object.freeze(Object.defineProperty({
			__proto__: null,
			default: {
				"All the best!": "祝您有個美好的一天！",
				"Complete signup for {{siteTitle}}!": "完成在{{siteTitle}}的註冊！",
				"Complete your sign up to {{siteTitle}}!": "完成您在{{siteTitle}}的註冊！",
				"Confirm email address": "確認 email 地址",
				"Confirm signup": "確認註冊",
				"Confirm your email address": "確認您的 email 地址",
				"Confirm your email update for {{siteTitle}}!": "確認您在{{siteTitle}} 的 email 變更！",
				"Confirm your subscription to {{siteTitle}}": "確認您在{{siteTitle}}的訂閱",
				"For your security, the link will expire in 24 hours time.": "為了您的安全，連結將在 24 小時後失效。",
				"Hey there,": "你好，",
				"Hey there!": "你好！",
				"If you did not make this request, you can safely ignore this email.": "如果您沒有發出此請求，您可以放心忽略此信件。",
				"If you did not make this request, you can simply delete this message.": "如果您沒有發出此請求，您可以直接刪除此信件。",
				"Please confirm your email address with this link:": "請透過此連結確認您的 email 地址：",
				"Secure sign in link for {{siteTitle}}": "為{{siteTitle}}準備的安全登入連結",
				"See you soon!": "再見！",
				"Sent to {{email}}": "已發送到 {{email}}",
				"Sign in": "登入",
				"Sign in to {{siteTitle}}": "登入到 {{siteTitle}}",
				"Tap the link below to complete the signup process for {{siteTitle}}, and be automatically signed in:": "請點擊下面的連結以完成您在{{siteTitle}}的註冊，我們將為您自動登入：",
				"Thank you for signing up to {{siteTitle}}!": "感謝您註冊{{siteTitle}}！",
				"Thank you for subscribing to {{siteTitle}}!": "感謝您訂閱{{siteTitle}}！",
				"Thank you for subscribing to {{siteTitle}}.": "感謝您訂閱{{siteTitle}}。",
				"Thank you for subscribing to {{siteTitle}}. Tap the link below to be automatically signed in:": "感謝您訂閱{{siteTitle}}。點擊下面的連結即可自動登入：",
				"This email address will not be used.": "此 email 將不會被使用。",
				"Welcome back to {{siteTitle}}!": "歡迎回到{{siteTitle}}！",
				"Welcome back! Use this link to securely sign in to your {{siteTitle}} account:": "歡迎回來！請使用此連結安全地登入您的{{siteTitle}}帳號：",
				"You can also copy & paste this URL into your browser:": "您也可以將此網址複製並貼上到您的瀏覽器中：",
				"You will not be signed up, and no account will be created for you.": "系統不會為您註冊或建立任何帳號。",
				"You will not be subscribed.": "系統不會為您訂閱任何內容。",
				"You're one tap away from subscribing to {{siteTitle}} — please confirm your email address with this link:": "您離訂閱{{siteTitle}}只差一步 — 請透過此連結確認您的 email：",
				"You're one tap away from subscribing to {{siteTitle}}!": "點擊後即可完成{{siteTitle}}的訂閱！"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		qH = "帳號",
		WH = "返回上一頁",
		KH = "變更",
		JH = "選擇",
		GH = "關閉",
		QH = "留言",
		XH = "贈送",
		ZH = "確認",
		eq = "繼續",
		tq = "編輯",
		nq = "email",
		iq = "電子報",
		oq = "永久",
		rq = "管理",
		aq = "每月",
		sq = "名字",
		lq = "訂閱方案",
		uq = "價格",
		cq = "",
		dq = "重試",
		mq = "儲存",
		pq = "訂閱",
		fq = "已訂閱",
		hq = "成功",
		gq = "未訂閱",
		yq = "更新",
		bq = "",
		kq = "年付",
		Oee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Account: qH,
			Back: WH,
			Change: KH,
			Choose: JH,
			Close: GH,
			Comments: QH,
			Complimentary: XH,
			Confirm: ZH,
			Continue: eq,
			Edit: tq,
			Email: nq,
			Emails: iq,
			Forever: oq,
			Manage: rq,
			Monthly: aq,
			Name: sq,
			Plan: lq,
			Price: uq,
			Recommendations: cq,
			Retry: dq,
			Save: mq,
			Subscribe: pq,
			Subscribed: fq,
			Success: hq,
			Unsubscribed: gq,
			Update: yq,
			Visit: bq,
			Yearly: kq,
			default: {
				"{{amount}} days free": "{{amount}} 天免費",
				"{{amount}} off": "{{amount}} 元優惠",
				"{{amount}} off for first {{number}} months.": "前 {{number}} 個月有 {{amount}} 元折扣優惠",
				"{{amount}} off for first {{period}}.": "首{{period}}享 {{amount}} 元折扣優惠",
				"{{amount}} off forever.": "永久享 {{amount}} 元折扣優惠",
				"{{discount}}% discount": "{{discount}}% 折扣",
				"{{memberEmail}} will no longer receive {{newsletterName}} newsletter.": "{{memberEmail}} 將不再收到{{newsletterName}}的電子報。",
				"{{memberEmail}} will no longer receive emails when someone replies to your comments.": "{{memberEmail}} 將不再收到他人回覆您的評論時的通知。",
				"{{memberEmail}} will no longer receive this newsletter.": "{{memberEmail}} 將不再收到此電子報。",
				"{{trialDays}} days free": "{{trialDays}} 天免費試用",
				"A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.": "登入連結已經發送到您的收件匣。如果在 3 分鐘內未收到，請務必檢查您的垃圾郵件。",
				Account: qH,
				"Account settings": "帳號設定",
				"After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.": "免費試用結束後，您將支付所選方案的定價金額。在此之前，您可以隨時取消。",
				"Already a member?": "已經是會員了？",
				"An unexpected error occured. Please try again or <a>contact support</a> if the error persists.": "發生了意外錯誤，請再試一次。如果錯誤持續出現，請<a>聯繫客服</a>。",
				Back: WH,
				"Back to Log in": "返回登入畫面",
				"Billing info": "帳單內容",
				"Black Friday": "黑色星期五促銷",
				"Cancel anytime.": "隨時取消",
				"Cancel subscription": "取消訂閱",
				"Cancellation reason": "取消原因",
				Change: KH,
				"Check spam & promotions folders": "檢查垃圾郵件或促銷郵件",
				"Check with your mail provider": "請向您的電子信箱服務提供商確認",
				Choose: JH,
				"Choose a different plan": "選擇其他訂閱方案",
				"Choose your newsletters": "選擇您的電子報",
				"Click here to retry": "點擊重試",
				Close: GH,
				Comments: QH,
				Complimentary: XH,
				Confirm: ZH,
				"Confirm cancellation": "確認取消",
				"Confirm subscription": "確認訂閱",
				"Contact support": "聯繫客服",
				Continue: eq,
				"Continue subscription": "繼續訂閱",
				"Could not sign in. Login link expired.": "無法登入。登入連結已過期。",
				"Could not update email! Invalid link.": "無法更新 email。連結無效。",
				"Create a new contact": "建立新的聯絡人",
				"Current plan": "目前方案",
				"Delete account": "刪除帳號",
				"Didn't mean to do this? Manage your preferences <button>here</button>.": "不小心按到？在<button>這裡</button>可以變更您的偏好設定。",
				"Don't have an account?": "還沒有帳號嗎？",
				Edit: tq,
				Email: nq,
				"Email newsletter": "電子報",
				"Email preference updated.": "email 偏好已更新。",
				"Email preferences": "email 偏好設定",
				Emails: iq,
				"Emails disabled": "已停止接收電子報",
				"Ends {{offerEndDate}}": "於 {{offerEndDate}} 結束",
				Error: "錯誤",
				"Expires {{expiryDate}}": "於 {{expiryDate}} 過期",
				Forever: oq,
				"Free Trial – Ends {{trialEnd}}": "免費試用──於 {{trialEnd}} 结束",
				"Get help": "取得協助",
				"Get in touch for help": "聯繫以取得協助",
				"Get notified when someone replies to your comment": "當有人回覆我的留言時通知我",
				"Give feedback on this post": "為這篇文章提供意見",
				"Help! I'm not receiving emails": "求救！我沒有收到 email",
				"Here are a few other sites {{siteTitle}} thinks you may enjoy.": "",
				"If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.": "如果有電子報被標記為垃圾郵件，您的 email 地址將自動停止接收該電子報，以確保您不再收到任何不需要的訊息。",
				"If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.": "如果您不小心將電子報標示成垃圾郵件，或者您希望重新開始接收電子報，您可以點擊前一個畫面上的按鈕以重新訂閱電子報。",
				"If you cancel your subscription now, you will continue to have access until {{periodEnd}}.": "如果現在取消訂閱，您在 {{periodEnd}} 之前仍可存取內容。",
				"If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}": "如果您有企業或政府郵件帳戶，請聯繫相關 IT 部門，要求他們允許來自 {{senderEmail}} 的郵件。",
				"If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.": "如果您希望重新開始接收郵件，最好的方法是檢查您註冊的 email 地址是否正常運作，然後在前一個畫面點擊重新訂閱。",
				"If you're not receiving the email newsletter you've subscribed to, here are few things to check.": "如果您沒有收到您訂閱的電子報，請檢查以下幾個事項。",
				"If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.": "如果您已經完成了上述所有檢查項目，但仍然沒有收到電子報，您可以透過聯繫 {{supportAddress}} 取得協助。",
				"In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.": "要是系統發送電子報時遇到永久失敗的情形，該帳號將停止接收電子報。",
				"In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.": "在您的 email 系統中將 {{senderEmail}} 加入您的聯絡人列表中。如此一來，您的 email 系統就會知道可以信任從該地址發送的郵件。",
				"Less like this": "不感興趣",
				'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': "請確保郵件沒有意外地被歸類為垃圾郵件或促銷郵件。如果發生這類情形，請點擊「標記為非垃圾郵件」或「移至收件匣」。",
				Manage: rq,
				"Memberships unavailable, contact the owner for access.": "",
				Monthly: aq,
				"More like this": "感興趣",
				Name: sq,
				"Need more help? Contact support": "需要更多協助？聯繫客服",
				"Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).": "您的帳號可能會因為兩個原因而停止接收電子報：先前的郵件被標記為垃圾郵件，或者嘗試發送郵件時出現永久失敗（郵件遭到退回）。",
				"Not receiving emails?": "沒有收到 email？",
				"Now check your email!": "立即檢查您的 email。",
				"Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": "重新訂閱後，如果您在收件夾中仍然看不到郵件，請檢查您的垃圾郵件匣。一些 email 服務商會保留先前的垃圾郵件記錄並持續標記此類郵件。如果發生這種情況，請將最新的電子報標記為「非垃圾郵件」，將其移回您的主要收件匣。",
				"Permanent failure (bounce)": "永久錯誤 (郵件遭到退回)",
				Plan: lq,
				"Plan checkout was cancelled.": "訂閱付款已取消。",
				"Plan upgrade was cancelled.": "訂閱升級已取消。",
				"Please contact {{supportAddress}} to adjust your complimentary subscription.": "",
				"Please fill in required fields": "請填寫必填項目",
				Price: uq,
				"Re-enable emails": "重新啟用 email",
				Recommendations: cq,
				"Renews at {{price}}.": "以 {{price}} 的價格續約。",
				Retry: dq,
				Save: mq,
				"Send an email and say hi!": "發送 email 問好！",
				"Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.": "向 {{senderEmail}} 發送 email 並問好。這也有助於讓您的 email 供應商了解這個地址的往來郵件應該受到信任。",
				"Sending login link...": "正在發送登入連結...",
				"Sending...": "發送中...",
				"Show all": "",
				"Sign in": "登入",
				"Sign out": "登出",
				"Sign up": "註冊",
				"Signup error: Invalid link": "註冊錯誤：連結無效",
				"Sorry, that didn’t work.": "抱歉，該操作無法完成。",
				"Spam complaints": "垃圾郵件",
				"Start {{amount}}-day free trial": "開始 {{amount}} 天免費試用",
				"Starting {{startDate}}": "從 {{startDate}} 開始",
				"Starting today": "從今天開始",
				"Submit feedback": "提交意見",
				Subscribe: pq,
				Subscribed: fq,
				Success: hq,
				"Success! Check your email for magic link to sign-in.": "成功了！請檢查您的 email 以取得快速登入連結。",
				"Success! Your account is fully activated, you now have access to all content.": "成功了！您的帳號已完全啟用，您現在可以存取所有內容。",
				"Success! Your email is updated.": "成功了！您的 email 已更新。",
				"Successfully unsubscribed": "成功取消訂閱",
				"Thanks for the feedback!": "感謝您的意見！",
				"That didn't go to plan": "發生錯誤",
				"The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.": "就我們所知，您的 email 地址是 {{memberEmail}}。如果有誤，您可以在<button>帳號設定區塊</button>進行更新。",
				"There was a problem submitting your feedback. Please try again a little later.": "提交您的意見時遇到問題。請稍後再試。",
				"This site is invite-only, contact the owner for access.": "此網站僅限受邀請者觀看，請聯繫網站擁有者取得存取權限。",
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "要完成註冊，請點擊您收件匣中的確認連結。如果在 3 分鐘內沒有收到，請檢查您的垃圾郵件。",
				"Try free for {{amount}} days, then {{originalPrice}}.": "免費試用 {{amount}} 天，然後以 {{originalPrice}} 開始訂閱。",
				"Unlock access to all newsletters by becoming a paid subscriber.": "成為付費會員以解鎖所有電子報內容。",
				"Unsubscribe from all emails": "取消所有電子報訂閱",
				Unsubscribed: gq,
				"Unsubscribing from emails will not cancel your paid subscription to {{title}}": "取消接收電子報不會取消您對 {{title}} 的付費訂閱。",
				Update: yq,
				"Update your preferences": "更新您的偏好設定",
				"Verify your email address is correct": "確認你的 email 地址無誤",
				"View plans": "查詢訂閱方案",
				Visit: bq,
				"We couldn't unsubscribe you as the email address was not found. Please contact the site owner.": "我們無法取消您的訂閱，因為找不到該 email 地址。請聯繫網站擁有者。",
				"Welcome back, {{name}}!": "歡迎回來，{{name}}！",
				"Welcome back!": "歡迎回來！",
				"When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": "當收件匣無法接收郵件時，通常稱之為退信。在許多情況下，這可能是暫時的。然而，在某些情況下，當郵件地址無效或不存在時，退回的郵件可能會被視為永久失敗。",
				"Why has my email been disabled?": "為什麼我的 email 被停用了？",
				Yearly: kq,
				"You currently have a free membership, upgrade to a paid subscription for full access.": "您目前是免費會員，升級至付費訂閱以獲得完整存取權。",
				"You have been successfully resubscribed": "您已成功重新訂閱",
				"You're currently not receiving emails": "您目前無法接收郵件。",
				"You're not receiving emails": "您無法接收郵件。",
				"You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.": "您無法接收郵件，可能是因為您最近將某個郵件標記為垃圾郵件，或者郵件無法發送到您提供的 email 地址。",
				"You're subscribed!": "",
				"You've successfully signed in.": "您已成功登入。",
				"You've successfully subscribed to": "",
				"Your account": "您的帳號",
				"Your input helps shape what gets published.": "您的建議有助於改善我們的內容。",
				"Your subscription will expire on {{expiryDate}}": "您的訂閱將於 {{expiryDate}} 到期",
				"Your subscription will renew on {{renewalDate}}": "您的訂閱將於 {{renewalDate}} 自動續訂",
				"Your subscription will start on {{subscriptionStart}}": "您的訂閱將於 {{subscriptionStart}} 開始"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		vq = "訂閱",
		Dee = Object.freeze(Object.defineProperty({
			__proto__: null,
			Subscribe: vq,
			default: {
				"Email sent": "郵件已送出",
				"Now check your email!": "請檢查你的 email 收件匣。",
				"Please enter a valid email address": "請輸入正確的 email 地址",
				"Something went wrong, please try again.": "發生錯誤，請再試一次",
				Subscribe: vq,
				"To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!": "請在 email 收件匣中找到註冊確認信件，點擊內文中的連結u 完成註冊。如果在三分鐘後仍未收到信件，請檢查你的垃圾郵件。",
				"Your email address": "您的 email 地址"
			}
		}, Symbol.toStringTag, {
			value: "Module"
		})),
		Iee = {
			type: "logger",
			log(t) {
				this.output("log", t)
			},
			warn(t) {
				this.output("warn", t)
			},
			error(t) {
				this.output("error", t)
			},
			output(t, e) {
				console && console[t] && console[t].apply(console, e)
			}
		};
	class tl {
		constructor(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			this.init(e, n)
		}
		init(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			this.prefix = n.prefix || "i18next:", this.logger = e || Iee, this.options = n, this.debug = n.debug
		}
		log() {
			for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
			return this.forward(n, "log", "", !0)
		}
		warn() {
			for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
			return this.forward(n, "warn", "", !0)
		}
		error() {
			for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
			return this.forward(n, "error", "")
		}
		deprecate() {
			for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) n[i] = arguments[i];
			return this.forward(n, "warn", "WARNING DEPRECATED: ", !0)
		}
		forward(e, n, i, o) {
			return o && !this.debug ? null : (typeof e[0] == "string" && (e[0] = `${i}${this.prefix} ${e[0]}`), this.logger[n](e))
		}
		create(e) {
			return new tl(this.logger, {
				prefix: `${this.prefix}:${e}:`,
				...this.options
			})
		}
		clone(e) {
			return e = e || this.options, e.prefix = e.prefix || this.prefix, new tl(this.logger, e)
		}
	}
	var Pt = new tl;
	class nl {
		constructor() {
			this.observers = {}
		}
		on(e, n) {
			return e.split(" ").forEach(i => {
				this.observers[i] = this.observers[i] || [], this.observers[i].push(n)
			}), this
		}
		off(e, n) {
			if (this.observers[e]) {
				if (!n) {
					delete this.observers[e];
					return
				}
				this.observers[e] = this.observers[e].filter(i => i !== n)
			}
		}
		emit(e) {
			for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++) i[o - 1] = arguments[o];
			this.observers[e] && [].concat(this.observers[e]).forEach(a => {
				a(...i)
			}), this.observers["*"] && [].concat(this.observers["*"]).forEach(a => {
				a.apply(a, [e, ...i])
			})
		}
	}

	function Rr() {
		let t, e;
		const n = new Promise((i, o) => {
			t = i, e = o
		});
		return n.resolve = t, n.reject = e, n
	}

	function wq(t) {
		return t == null ? "" : "" + t
	}

	function Ree(t, e, n) {
		t.forEach(i => {
			e[i] && (n[i] = e[i])
		})
	}

	function Kd(t, e, n) {
		function i(a) {
			return a && a.indexOf("###") > -1 ? a.replace(/###/g, ".") : a
		}

		function o() {
			return !t || typeof t == "string"
		}
		const r = typeof e != "string" ? [].concat(e) : e.split(".");
		for (; r.length > 1;) {
			if (o()) return {};
			const a = i(r.shift());
			!t[a] && n && (t[a] = new n), Object.prototype.hasOwnProperty.call(t, a) ? t = t[a] : t = {}
		}
		return o() ? {} : {
			obj: t,
			k: i(r.shift())
		}
	}

	function Sq(t, e, n) {
		const {
			obj: i,
			k: o
		} = Kd(t, e, Object);
		i[o] = n
	}

	function Yee(t, e, n, i) {
		const {
			obj: o,
			k: r
		} = Kd(t, e, Object);
		o[r] = o[r] || [], i && (o[r] = o[r].concat(n)), i || o[r].push(n)
	}

	function il(t, e) {
		const {
			obj: n,
			k: i
		} = Kd(t, e);
		if (n) return n[i]
	}

	function Lee(t, e, n) {
		const i = il(t, n);
		return i !== void 0 ? i : il(e, n)
	}

	function Cq(t, e, n) {
		for (const i in e) i !== "__proto__" && i !== "constructor" && (i in t ? typeof t[i] == "string" || t[i] instanceof String || typeof e[i] == "string" || e[i] instanceof String ? n && (t[i] = e[i]) : Cq(t[i], e[i], n) : t[i] = e[i]);
		return t
	}

	function mo(t) {
		return t.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
	}
	var Fee = {
		"&": "&amp;",
		"<": "&lt;",
		">": "&gt;",
		'"': "&quot;",
		"'": "&#39;",
		"/": "&#x2F;"
	};

	function Bee(t) {
		return typeof t == "string" ? t.replace(/[&<>"'\/]/g, e => Fee[e]) : t
	}
	const Uee = [" ", ",", "?", "!", ";"];

	function Vee(t, e, n) {
		e = e || "", n = n || "";
		const i = Uee.filter(a => e.indexOf(a) < 0 && n.indexOf(a) < 0);
		if (i.length === 0) return !0;
		const o = new RegExp(`(${i.map(a=>a==="?"?"\\?":a).join("|")})`);
		let r = !o.test(t);
		if (!r) {
			const a = t.indexOf(n);
			a > 0 && !o.test(t.substring(0, a)) && (r = !0)
		}
		return r
	}

	function ol(t, e) {
		let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
		if (!t) return;
		if (t[e]) return t[e];
		const i = e.split(n);
		let o = t;
		for (let r = 0; r < i.length; ++r) {
			if (!o || typeof o[i[r]] == "string" && r + 1 < i.length) return;
			if (o[i[r]] === void 0) {
				let a = 2,
					s = i.slice(r, r + a).join(n),
					l = o[s];
				for (; l === void 0 && i.length > r + a;) a++, s = i.slice(r, r + a).join(n), l = o[s];
				if (l === void 0) return;
				if (l === null) return null;
				if (e.endsWith(s)) {
					if (typeof l == "string") return l;
					if (s && typeof l[s] == "string") return l[s]
				}
				const u = i.slice(r + a).join(n);
				return u ? ol(l, u, n) : void 0
			}
			o = o[i[r]]
		}
		return o
	}

	function rl(t) {
		return t && t.indexOf("_") > 0 ? t.replace("_", "-") : t
	}
	class xq extends nl {
		constructor(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
				ns: ["translation"],
				defaultNS: "translation"
			};
			super(), this.data = e || {}, this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.options.ignoreJSONStructure === void 0 && (this.options.ignoreJSONStructure = !0)
		}
		addNamespaces(e) {
			this.options.ns.indexOf(e) < 0 && this.options.ns.push(e)
		}
		removeNamespaces(e) {
			const n = this.options.ns.indexOf(e);
			n > -1 && this.options.ns.splice(n, 1)
		}
		getResource(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
			const r = o.keySeparator !== void 0 ? o.keySeparator : this.options.keySeparator,
				a = o.ignoreJSONStructure !== void 0 ? o.ignoreJSONStructure : this.options.ignoreJSONStructure;
			let s = [e, n];
			i && typeof i != "string" && (s = s.concat(i)), i && typeof i == "string" && (s = s.concat(r ? i.split(r) : i)), e.indexOf(".") > -1 && (s = e.split("."));
			const l = il(this.data, s);
			return l || !a || typeof i != "string" ? l : ol(this.data && this.data[e] && this.data[e][n], i, r)
		}
		addResource(e, n, i, o) {
			let r = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
				silent: !1
			};
			const a = r.keySeparator !== void 0 ? r.keySeparator : this.options.keySeparator;
			let s = [e, n];
			i && (s = s.concat(a ? i.split(a) : i)), e.indexOf(".") > -1 && (s = e.split("."), o = n, n = s[1]), this.addNamespaces(n), Sq(this.data, s, o), r.silent || this.emit("added", e, n, i, o)
		}
		addResources(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
				silent: !1
			};
			for (const r in i)(typeof i[r] == "string" || Object.prototype.toString.apply(i[r]) === "[object Array]") && this.addResource(e, n, r, i[r], {
				silent: !0
			});
			o.silent || this.emit("added", e, n, i)
		}
		addResourceBundle(e, n, i, o, r) {
			let a = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
					silent: !1
				},
				s = [e, n];
			e.indexOf(".") > -1 && (s = e.split("."), o = i, i = n, n = s[1]), this.addNamespaces(n);
			let l = il(this.data, s) || {};
			o ? Cq(l, i, r) : l = {
				...l,
				...i
			}, Sq(this.data, s, l), a.silent || this.emit("added", e, n, i)
		}
		removeResourceBundle(e, n) {
			this.hasResourceBundle(e, n) && delete this.data[e][n], this.removeNamespaces(n), this.emit("removed", e, n)
		}
		hasResourceBundle(e, n) {
			return this.getResource(e, n) !== void 0
		}
		getResourceBundle(e, n) {
			return n || (n = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? {
				...this.getResource(e, n)
			} : this.getResource(e, n)
		}
		getDataByLanguage(e) {
			return this.data[e]
		}
		hasLanguageSomeTranslations(e) {
			const n = this.getDataByLanguage(e);
			return !!(n && Object.keys(n) || []).find(o => n[o] && Object.keys(n[o]).length > 0)
		}
		toJSON() {
			return this.data
		}
	}
	var Eq = {
		processors: {},
		addPostProcessor(t) {
			this.processors[t.name] = t
		},
		handle(t, e, n, i, o) {
			return t.forEach(r => {
				this.processors[r] && (e = this.processors[r].process(e, n, i, o))
			}), e
		}
	};
	const Tq = {};
	class al extends nl {
		constructor(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			super(), Ree(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], e, this), this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.logger = Pt.create("translator")
		}
		changeLanguage(e) {
			e && (this.language = e)
		}
		exists(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
				interpolation: {}
			};
			if (e == null) return !1;
			const i = this.resolve(e, n);
			return i && i.res !== void 0
		}
		extractFromKey(e, n) {
			let i = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
			i === void 0 && (i = ":");
			const o = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
			let r = n.ns || this.options.defaultNS || [];
			const a = i && e.indexOf(i) > -1,
				s = !this.options.userDefinedKeySeparator && !n.keySeparator && !this.options.userDefinedNsSeparator && !n.nsSeparator && !Vee(e, i, o);
			if (a && !s) {
				const l = e.match(this.interpolator.nestingRegexp);
				if (l && l.length > 0) return {
					key: e,
					namespaces: r
				};
				const u = e.split(i);
				(i !== o || i === o && this.options.ns.indexOf(u[0]) > -1) && (r = u.shift()), e = u.join(o)
			}
			return typeof r == "string" && (r = [r]), {
				key: e,
				namespaces: r
			}
		}
		translate(e, n, i) {
			if (typeof n != "object" && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)), typeof n == "object" && (n = {
					...n
				}), n || (n = {}), e == null) return "";
			Array.isArray(e) || (e = [String(e)]);
			const o = n.returnDetails !== void 0 ? n.returnDetails : this.options.returnDetails,
				r = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator,
				{
					key: a,
					namespaces: s
				} = this.extractFromKey(e[e.length - 1], n),
				l = s[s.length - 1],
				u = n.lng || this.language,
				c = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
			if (u && u.toLowerCase() === "cimode") {
				if (c) {
					const w = n.nsSeparator || this.options.nsSeparator;
					return o ? {
						res: `${l}${w}${a}`,
						usedKey: a,
						exactUsedKey: a,
						usedLng: u,
						usedNS: l
					} : `${l}${w}${a}`
				}
				return o ? {
					res: a,
					usedKey: a,
					exactUsedKey: a,
					usedLng: u,
					usedNS: l
				} : a
			}
			const m = this.resolve(e, n);
			let d = m && m.res;
			const p = m && m.usedKey || a,
				f = m && m.exactUsedKey || a,
				y = Object.prototype.toString.apply(d),
				h = ["[object Number]", "[object Function]", "[object RegExp]"],
				g = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays,
				b = !this.i18nFormat || this.i18nFormat.handleAsObject;
			if (b && d && (typeof d != "string" && typeof d != "boolean" && typeof d != "number") && h.indexOf(y) < 0 && !(typeof g == "string" && y === "[object Array]")) {
				if (!n.returnObjects && !this.options.returnObjects) {
					this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
					const w = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(p, d, {
						...n,
						ns: s
					}) : `key '${a} (${this.language})' returned an object instead of string.`;
					return o ? (m.res = w, m) : w
				}
				if (r) {
					const w = y === "[object Array]",
						x = w ? [] : {},
						S = w ? f : p;
					for (const E in d)
						if (Object.prototype.hasOwnProperty.call(d, E)) {
							const T = `${S}${r}${E}`;
							x[E] = this.translate(T, {
								...n,
								joinArrays: !1,
								ns: s
							}), x[E] === T && (x[E] = d[E])
						} d = x
				}
			} else if (b && typeof g == "string" && y === "[object Array]") d = d.join(g), d && (d = this.extendTranslation(d, e, n, i));
			else {
				let w = !1,
					x = !1;
				const S = n.count !== void 0 && typeof n.count != "string",
					E = al.hasDefaultValue(n),
					T = S ? this.pluralResolver.getSuffix(u, n.count, n) : "",
					M = n.ordinal && S ? this.pluralResolver.getSuffix(u, n.count, {
						ordinal: !1
					}) : "",
					U = n[`defaultValue${T}`] || n[`defaultValue${M}`] || n.defaultValue;
				!this.isValidLookup(d) && E && (w = !0, d = U), this.isValidLookup(d) || (x = !0, d = a);
				const Z = (n.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && x ? void 0 : d,
					W = E && U !== d && this.options.updateMissing;
				if (x || w || W) {
					if (this.logger.log(W ? "updateKey" : "missingKey", u, l, a, W ? U : d), r) {
						const K = this.resolve(a, {
							...n,
							keySeparator: !1
						});
						K && K.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")
					}
					let Se = [];
					const ae = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
					if (this.options.saveMissingTo === "fallback" && ae && ae[0])
						for (let K = 0; K < ae.length; K++) Se.push(ae[K]);
					else this.options.saveMissingTo === "all" ? Se = this.languageUtils.toResolveHierarchy(n.lng || this.language) : Se.push(n.lng || this.language);
					const Ce = (K, se, Pe) => {
						const Re = E && Pe !== d ? Pe : Z;
						this.options.missingKeyHandler ? this.options.missingKeyHandler(K, l, se, Re, W, n) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(K, l, se, Re, W, n), this.emit("missingKey", K, l, se, d)
					};
					this.options.saveMissing && (this.options.saveMissingPlurals && S ? Se.forEach(K => {
						this.pluralResolver.getSuffixes(K, n).forEach(se => {
							Ce([K], a + se, n[`defaultValue${se}`] || U)
						})
					}) : Ce(Se, a, U))
				}
				d = this.extendTranslation(d, e, n, m, i), x && d === a && this.options.appendNamespaceToMissingKey && (d = `${l}:${a}`), (x || w) && this.options.parseMissingKeyHandler && (this.options.compatibilityAPI !== "v1" ? d = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${l}:${a}` : a, w ? d : void 0) : d = this.options.parseMissingKeyHandler(d))
			}
			return o ? (m.res = d, m) : d
		}
		extendTranslation(e, n, i, o, r) {
			var a = this;
			if (this.i18nFormat && this.i18nFormat.parse) e = this.i18nFormat.parse(e, {
				...this.options.interpolation.defaultVariables,
				...i
			}, i.lng || this.language || o.usedLng, o.usedNS, o.usedKey, {
				resolved: o
			});
			else if (!i.skipInterpolation) {
				i.interpolation && this.interpolator.init({
					...i,
					interpolation: {
						...this.options.interpolation,
						...i.interpolation
					}
				});
				const u = typeof e == "string" && (i && i.interpolation && i.interpolation.skipOnVariables !== void 0 ? i.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
				let c;
				if (u) {
					const d = e.match(this.interpolator.nestingRegexp);
					c = d && d.length
				}
				let m = i.replace && typeof i.replace != "string" ? i.replace : i;
				if (this.options.interpolation.defaultVariables && (m = {
						...this.options.interpolation.defaultVariables,
						...m
					}), e = this.interpolator.interpolate(e, m, i.lng || this.language, i), u) {
					const d = e.match(this.interpolator.nestingRegexp),
						p = d && d.length;
					c < p && (i.nest = !1)
				}!i.lng && this.options.compatibilityAPI !== "v1" && o && o.res && (i.lng = o.usedLng), i.nest !== !1 && (e = this.interpolator.nest(e, function() {
					for (var d = arguments.length, p = new Array(d), f = 0; f < d; f++) p[f] = arguments[f];
					return r && r[0] === p[0] && !i.context ? (a.logger.warn(`It seems you are nesting recursively key: ${p[0]} in key: ${n[0]}`), null) : a.translate(...p, n)
				}, i)), i.interpolation && this.interpolator.reset()
			}
			const s = i.postProcess || this.options.postProcess,
				l = typeof s == "string" ? [s] : s;
			return e != null && l && l.length && i.applyPostProcessor !== !1 && (e = Eq.handle(l, e, n, this.options && this.options.postProcessPassResolved ? {
				i18nResolved: o,
				...i
			} : i, this)), e
		}
		resolve(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
				i, o, r, a, s;
			return typeof e == "string" && (e = [e]), e.forEach(l => {
				if (this.isValidLookup(i)) return;
				const u = this.extractFromKey(l, n),
					c = u.key;
				o = c;
				let m = u.namespaces;
				this.options.fallbackNS && (m = m.concat(this.options.fallbackNS));
				const d = n.count !== void 0 && typeof n.count != "string",
					p = d && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(),
					f = n.context !== void 0 && (typeof n.context == "string" || typeof n.context == "number") && n.context !== "",
					y = n.lngs ? n.lngs : this.languageUtils.toResolveHierarchy(n.lng || this.language, n.fallbackLng);
				m.forEach(h => {
					this.isValidLookup(i) || (s = h, !Tq[`${y[0]}-${h}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(s) && (Tq[`${y[0]}-${h}`] = !0, this.logger.warn(`key "${o}" for languages "${y.join(", ")}" won't get resolved as namespace "${s}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), y.forEach(g => {
						if (this.isValidLookup(i)) return;
						a = g;
						const b = [c];
						if (this.i18nFormat && this.i18nFormat.addLookupKeys) this.i18nFormat.addLookupKeys(b, c, g, h, n);
						else {
							let w;
							d && (w = this.pluralResolver.getSuffix(g, n.count, n));
							const x = `${this.options.pluralSeparator}zero`,
								S = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
							if (d && (b.push(c + w), n.ordinal && w.indexOf(S) === 0 && b.push(c + w.replace(S, this.options.pluralSeparator)), p && b.push(c + x)), f) {
								const E = `${c}${this.options.contextSeparator}${n.context}`;
								b.push(E), d && (b.push(E + w), n.ordinal && w.indexOf(S) === 0 && b.push(E + w.replace(S, this.options.pluralSeparator)), p && b.push(E + x))
							}
						}
						let v;
						for (; v = b.pop();) this.isValidLookup(i) || (r = v, i = this.getResource(g, h, v, n))
					}))
				})
			}), {
				res: i,
				usedKey: o,
				exactUsedKey: r,
				usedLng: a,
				usedNS: s
			}
		}
		isValidLookup(e) {
			return e !== void 0 && !(!this.options.returnNull && e === null) && !(!this.options.returnEmptyString && e === "")
		}
		getResource(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
			return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(e, n, i, o) : this.resourceStore.getResource(e, n, i, o)
		}
		static hasDefaultValue(e) {
			const n = "defaultValue";
			for (const i in e)
				if (Object.prototype.hasOwnProperty.call(e, i) && n === i.substring(0, n.length) && e[i] !== void 0) return !0;
			return !1
		}
	}

	function Jd(t) {
		return t.charAt(0).toUpperCase() + t.slice(1)
	}
	class jq {
		constructor(e) {
			this.options = e, this.supportedLngs = this.options.supportedLngs || !1, this.logger = Pt.create("languageUtils")
		}
		getScriptPartFromCode(e) {
			if (e = rl(e), !e || e.indexOf("-") < 0) return null;
			const n = e.split("-");
			return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x") ? null : this.formatLanguageCode(n.join("-"))
		}
		getLanguagePartFromCode(e) {
			if (e = rl(e), !e || e.indexOf("-") < 0) return e;
			const n = e.split("-");
			return this.formatLanguageCode(n[0])
		}
		formatLanguageCode(e) {
			if (typeof e == "string" && e.indexOf("-") > -1) {
				const n = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
				let i = e.split("-");
				return this.options.lowerCaseLng ? i = i.map(o => o.toLowerCase()) : i.length === 2 ? (i[0] = i[0].toLowerCase(), i[1] = i[1].toUpperCase(), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = Jd(i[1].toLowerCase()))) : i.length === 3 && (i[0] = i[0].toLowerCase(), i[1].length === 2 && (i[1] = i[1].toUpperCase()), i[0] !== "sgn" && i[2].length === 2 && (i[2] = i[2].toUpperCase()), n.indexOf(i[1].toLowerCase()) > -1 && (i[1] = Jd(i[1].toLowerCase())), n.indexOf(i[2].toLowerCase()) > -1 && (i[2] = Jd(i[2].toLowerCase()))), i.join("-")
			}
			return this.options.cleanCode || this.options.lowerCaseLng ? e.toLowerCase() : e
		}
		isSupportedCode(e) {
			return (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) && (e = this.getLanguagePartFromCode(e)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(e) > -1
		}
		getBestMatchFromCodes(e) {
			if (!e) return null;
			let n;
			return e.forEach(i => {
				if (n) return;
				const o = this.formatLanguageCode(i);
				(!this.options.supportedLngs || this.isSupportedCode(o)) && (n = o)
			}), !n && this.options.supportedLngs && e.forEach(i => {
				if (n) return;
				const o = this.getLanguagePartFromCode(i);
				if (this.isSupportedCode(o)) return n = o;
				n = this.options.supportedLngs.find(r => {
					if (r === o) return r;
					if (!(r.indexOf("-") < 0 && o.indexOf("-") < 0) && r.indexOf(o) === 0) return r
				})
			}), n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]), n
		}
		getFallbackCodes(e, n) {
			if (!e) return [];
			if (typeof e == "function" && (e = e(n)), typeof e == "string" && (e = [e]), Object.prototype.toString.apply(e) === "[object Array]") return e;
			if (!n) return e.default || [];
			let i = e[n];
			return i || (i = e[this.getScriptPartFromCode(n)]), i || (i = e[this.formatLanguageCode(n)]), i || (i = e[this.getLanguagePartFromCode(n)]), i || (i = e.default), i || []
		}
		toResolveHierarchy(e, n) {
			const i = this.getFallbackCodes(n || this.options.fallbackLng || [], e),
				o = [],
				r = a => {
					a && (this.isSupportedCode(a) ? o.push(a) : this.logger.warn(`rejecting language code not found in supportedLngs: ${a}`))
				};
			return typeof e == "string" && (e.indexOf("-") > -1 || e.indexOf("_") > -1) ? (this.options.load !== "languageOnly" && r(this.formatLanguageCode(e)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && r(this.getScriptPartFromCode(e)), this.options.load !== "currentOnly" && r(this.getLanguagePartFromCode(e))) : typeof e == "string" && r(this.formatLanguageCode(e)), i.forEach(a => {
				o.indexOf(a) < 0 && r(this.formatLanguageCode(a))
			}), o
		}
	}
	let Hee = [{
			lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
			nr: [1, 2],
			fc: 1
		}, {
			lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
			nr: [1, 2],
			fc: 2
		}, {
			lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
			nr: [1],
			fc: 3
		}, {
			lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
			nr: [1, 2, 5],
			fc: 4
		}, {
			lngs: ["ar"],
			nr: [0, 1, 2, 3, 11, 100],
			fc: 5
		}, {
			lngs: ["cs", "sk"],
			nr: [1, 2, 5],
			fc: 6
		}, {
			lngs: ["csb", "pl"],
			nr: [1, 2, 5],
			fc: 7
		}, {
			lngs: ["cy"],
			nr: [1, 2, 3, 8],
			fc: 8
		}, {
			lngs: ["fr"],
			nr: [1, 2],
			fc: 9
		}, {
			lngs: ["ga"],
			nr: [1, 2, 3, 7, 11],
			fc: 10
		}, {
			lngs: ["gd"],
			nr: [1, 2, 3, 20],
			fc: 11
		}, {
			lngs: ["is"],
			nr: [1, 2],
			fc: 12
		}, {
			lngs: ["jv"],
			nr: [0, 1],
			fc: 13
		}, {
			lngs: ["kw"],
			nr: [1, 2, 3, 4],
			fc: 14
		}, {
			lngs: ["lt"],
			nr: [1, 2, 10],
			fc: 15
		}, {
			lngs: ["lv"],
			nr: [1, 2, 0],
			fc: 16
		}, {
			lngs: ["mk"],
			nr: [1, 2],
			fc: 17
		}, {
			lngs: ["mnk"],
			nr: [0, 1, 2],
			fc: 18
		}, {
			lngs: ["mt"],
			nr: [1, 2, 11, 20],
			fc: 19
		}, {
			lngs: ["or"],
			nr: [2, 1],
			fc: 2
		}, {
			lngs: ["ro"],
			nr: [1, 2, 20],
			fc: 20
		}, {
			lngs: ["sl"],
			nr: [5, 1, 2, 3],
			fc: 21
		}, {
			lngs: ["he", "iw"],
			nr: [1, 2, 20, 21],
			fc: 22
		}],
		qee = {
			1: function(t) {
				return +(t > 1)
			},
			2: function(t) {
				return +(t != 1)
			},
			3: function(t) {
				return 0
			},
			4: function(t) {
				return t % 10 == 1 && t % 100 != 11 ? 0 : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? 1 : 2
			},
			5: function(t) {
				return t == 0 ? 0 : t == 1 ? 1 : t == 2 ? 2 : t % 100 >= 3 && t % 100 <= 10 ? 3 : t % 100 >= 11 ? 4 : 5
			},
			6: function(t) {
				return t == 1 ? 0 : t >= 2 && t <= 4 ? 1 : 2
			},
			7: function(t) {
				return t == 1 ? 0 : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? 1 : 2
			},
			8: function(t) {
				return t == 1 ? 0 : t == 2 ? 1 : t != 8 && t != 11 ? 2 : 3
			},
			9: function(t) {
				return +(t >= 2)
			},
			10: function(t) {
				return t == 1 ? 0 : t == 2 ? 1 : t < 7 ? 2 : t < 11 ? 3 : 4
			},
			11: function(t) {
				return t == 1 || t == 11 ? 0 : t == 2 || t == 12 ? 1 : t > 2 && t < 20 ? 2 : 3
			},
			12: function(t) {
				return +(t % 10 != 1 || t % 100 == 11)
			},
			13: function(t) {
				return +(t !== 0)
			},
			14: function(t) {
				return t == 1 ? 0 : t == 2 ? 1 : t == 3 ? 2 : 3
			},
			15: function(t) {
				return t % 10 == 1 && t % 100 != 11 ? 0 : t % 10 >= 2 && (t % 100 < 10 || t % 100 >= 20) ? 1 : 2
			},
			16: function(t) {
				return t % 10 == 1 && t % 100 != 11 ? 0 : t !== 0 ? 1 : 2
			},
			17: function(t) {
				return t == 1 || t % 10 == 1 && t % 100 != 11 ? 0 : 1
			},
			18: function(t) {
				return t == 0 ? 0 : t == 1 ? 1 : 2
			},
			19: function(t) {
				return t == 1 ? 0 : t == 0 || t % 100 > 1 && t % 100 < 11 ? 1 : t % 100 > 10 && t % 100 < 20 ? 2 : 3
			},
			20: function(t) {
				return t == 1 ? 0 : t == 0 || t % 100 > 0 && t % 100 < 20 ? 1 : 2
			},
			21: function(t) {
				return t % 100 == 1 ? 1 : t % 100 == 2 ? 2 : t % 100 == 3 || t % 100 == 4 ? 3 : 0
			},
			22: function(t) {
				return t == 1 ? 0 : t == 2 ? 1 : (t < 0 || t > 10) && t % 10 == 0 ? 2 : 3
			}
		};
	const Wee = ["v1", "v2", "v3"],
		Kee = ["v4"],
		$q = {
			zero: 0,
			one: 1,
			two: 2,
			few: 3,
			many: 4,
			other: 5
		};

	function Jee() {
		const t = {};
		return Hee.forEach(e => {
			e.lngs.forEach(n => {
				t[n] = {
					numbers: e.nr,
					plurals: qee[e.fc]
				}
			})
		}), t
	}
	class Gee {
		constructor(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			this.languageUtils = e, this.options = n, this.logger = Pt.create("pluralResolver"), (!this.options.compatibilityJSON || Kee.includes(this.options.compatibilityJSON)) && (typeof Intl > "u" || !Intl.PluralRules) && (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = Jee()
		}
		addRule(e, n) {
			this.rules[e] = n
		}
		getRule(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			if (this.shouldUseIntlApi()) try {
				return new Intl.PluralRules(rl(e), {
					type: n.ordinal ? "ordinal" : "cardinal"
				})
			} catch {
				return
			}
			return this.rules[e] || this.rules[this.languageUtils.getLanguagePartFromCode(e)]
		}
		needsPlural(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			const i = this.getRule(e, n);
			return this.shouldUseIntlApi() ? i && i.resolvedOptions().pluralCategories.length > 1 : i && i.numbers.length > 1
		}
		getPluralFormsOfKey(e, n) {
			let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
			return this.getSuffixes(e, i).map(o => `${n}${o}`)
		}
		getSuffixes(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			const i = this.getRule(e, n);
			return i ? this.shouldUseIntlApi() ? i.resolvedOptions().pluralCategories.sort((o, r) => $q[o] - $q[r]).map(o => `${this.options.prepend}${n.ordinal?`ordinal${this.options.prepend}`:""}${o}`) : i.numbers.map(o => this.getSuffix(e, o, n)) : []
		}
		getSuffix(e, n) {
			let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
			const o = this.getRule(e, i);
			return o ? this.shouldUseIntlApi() ? `${this.options.prepend}${i.ordinal?`ordinal${this.options.prepend}`:""}${o.select(n)}` : this.getSuffixRetroCompatible(o, n) : (this.logger.warn(`no plural rule found for: ${e}`), "")
		}
		getSuffixRetroCompatible(e, n) {
			const i = e.noAbs ? e.plurals(n) : e.plurals(Math.abs(n));
			let o = e.numbers[i];
			this.options.simplifyPluralSuffix && e.numbers.length === 2 && e.numbers[0] === 1 && (o === 2 ? o = "plural" : o === 1 && (o = ""));
			const r = () => this.options.prepend && o.toString() ? this.options.prepend + o.toString() : o.toString();
			return this.options.compatibilityJSON === "v1" ? o === 1 ? "" : typeof o == "number" ? `_plural_${o.toString()}` : r() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && e.numbers.length === 2 && e.numbers[0] === 1 ? r() : this.options.prepend && i.toString() ? this.options.prepend + i.toString() : i.toString()
		}
		shouldUseIntlApi() {
			return !Wee.includes(this.options.compatibilityJSON)
		}
	}

	function Aq(t, e, n) {
		let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".",
			o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0,
			r = Lee(t, e, n);
		return !r && o && typeof n == "string" && (r = ol(t, n, i), r === void 0 && (r = ol(e, n, i))), r
	}
	class Qee {
		constructor() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
			this.logger = Pt.create("interpolator"), this.options = e, this.format = e.interpolation && e.interpolation.format || (n => n), this.init(e)
		}
		init() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
			e.interpolation || (e.interpolation = {
				escapeValue: !0
			});
			const n = e.interpolation;
			this.escape = n.escape !== void 0 ? n.escape : Bee, this.escapeValue = n.escapeValue !== void 0 ? n.escapeValue : !0, this.useRawValueToEscape = n.useRawValueToEscape !== void 0 ? n.useRawValueToEscape : !1, this.prefix = n.prefix ? mo(n.prefix) : n.prefixEscaped || "{{", this.suffix = n.suffix ? mo(n.suffix) : n.suffixEscaped || "}}", this.formatSeparator = n.formatSeparator ? n.formatSeparator : n.formatSeparator || ",", this.unescapePrefix = n.unescapeSuffix ? "" : n.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : n.unescapeSuffix || "", this.nestingPrefix = n.nestingPrefix ? mo(n.nestingPrefix) : n.nestingPrefixEscaped || mo("$t("), this.nestingSuffix = n.nestingSuffix ? mo(n.nestingSuffix) : n.nestingSuffixEscaped || mo(")"), this.nestingOptionsSeparator = n.nestingOptionsSeparator ? n.nestingOptionsSeparator : n.nestingOptionsSeparator || ",", this.maxReplaces = n.maxReplaces ? n.maxReplaces : 1e3, this.alwaysFormat = n.alwaysFormat !== void 0 ? n.alwaysFormat : !1, this.resetRegExp()
		}
		reset() {
			this.options && this.init(this.options)
		}
		resetRegExp() {
			const e = `${this.prefix}(.+?)${this.suffix}`;
			this.regexp = new RegExp(e, "g");
			const n = `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;
			this.regexpUnescape = new RegExp(n, "g");
			const i = `${this.nestingPrefix}(.+?)${this.nestingSuffix}`;
			this.nestingRegexp = new RegExp(i, "g")
		}
		interpolate(e, n, i, o) {
			let r, a, s;
			const l = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};

			function u(f) {
				return f.replace(/\$/g, "$$$$")
			}
			const c = f => {
				if (f.indexOf(this.formatSeparator) < 0) {
					const b = Aq(n, l, f, this.options.keySeparator, this.options.ignoreJSONStructure);
					return this.alwaysFormat ? this.format(b, void 0, i, {
						...o,
						...n,
						interpolationkey: f
					}) : b
				}
				const y = f.split(this.formatSeparator),
					h = y.shift().trim(),
					g = y.join(this.formatSeparator).trim();
				return this.format(Aq(n, l, h, this.options.keySeparator, this.options.ignoreJSONStructure), g, i, {
					...o,
					...n,
					interpolationkey: h
				})
			};
			this.resetRegExp();
			const m = o && o.missingInterpolationHandler || this.options.missingInterpolationHandler,
				d = o && o.interpolation && o.interpolation.skipOnVariables !== void 0 ? o.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
			return [{
				regex: this.regexpUnescape,
				safeValue: f => u(f)
			}, {
				regex: this.regexp,
				safeValue: f => this.escapeValue ? u(this.escape(f)) : u(f)
			}].forEach(f => {
				for (s = 0; r = f.regex.exec(e);) {
					const y = r[1].trim();
					if (a = c(y), a === void 0)
						if (typeof m == "function") {
							const g = m(e, r, o);
							a = typeof g == "string" ? g : ""
						} else if (o && Object.prototype.hasOwnProperty.call(o, y)) a = "";
					else if (d) {
						a = r[0];
						continue
					} else this.logger.warn(`missed to pass in variable ${y} for interpolating ${e}`), a = "";
					else typeof a != "string" && !this.useRawValueToEscape && (a = wq(a));
					const h = f.safeValue(a);
					if (e = e.replace(r[0], h), d ? (f.regex.lastIndex += a.length, f.regex.lastIndex -= r[0].length) : f.regex.lastIndex = 0, s++, s >= this.maxReplaces) break
				}
			}), e
		}
		nest(e, n) {
			let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
				o, r, a;

			function s(l, u) {
				const c = this.nestingOptionsSeparator;
				if (l.indexOf(c) < 0) return l;
				const m = l.split(new RegExp(`${c}[ ]*{`));
				let d = `{${m[1]}`;
				l = m[0], d = this.interpolate(d, a);
				const p = d.match(/'/g),
					f = d.match(/"/g);
				(p && p.length % 2 === 0 && !f || f.length % 2 !== 0) && (d = d.replace(/'/g, '"'));
				try {
					a = JSON.parse(d), u && (a = {
						...u,
						...a
					})
				} catch (y) {
					return this.logger.warn(`failed parsing options string in nesting for key ${l}`, y), `${l}${c}${d}`
				}
				return delete a.defaultValue, l
			}
			for (; o = this.nestingRegexp.exec(e);) {
				let l = [];
				a = {
					...i
				}, a = a.replace && typeof a.replace != "string" ? a.replace : a, a.applyPostProcessor = !1, delete a.defaultValue;
				let u = !1;
				if (o[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(o[1])) {
					const c = o[1].split(this.formatSeparator).map(m => m.trim());
					o[1] = c.shift(), l = c, u = !0
				}
				if (r = n(s.call(this, o[1].trim(), a), a), r && o[0] === e && typeof r != "string") return r;
				typeof r != "string" && (r = wq(r)), r || (this.logger.warn(`missed to resolve ${o[1]} for nesting ${e}`), r = ""), u && (r = l.reduce((c, m) => this.format(c, m, i.lng, {
					...i,
					interpolationkey: o[1].trim()
				}), r.trim())), e = e.replace(o[0], r), this.regexp.lastIndex = 0
			}
			return e
		}
	}

	function Xee(t) {
		let e = t.toLowerCase().trim();
		const n = {};
		if (t.indexOf("(") > -1) {
			const i = t.split("(");
			e = i[0].toLowerCase().trim();
			const o = i[1].substring(0, i[1].length - 1);
			e === "currency" && o.indexOf(":") < 0 ? n.currency || (n.currency = o.trim()) : e === "relativetime" && o.indexOf(":") < 0 ? n.range || (n.range = o.trim()) : o.split(";").forEach(a => {
				if (!a) return;
				const [s, ...l] = a.split(":"), u = l.join(":").trim().replace(/^'+|'+$/g, "");
				n[s.trim()] || (n[s.trim()] = u), u === "false" && (n[s.trim()] = !1), u === "true" && (n[s.trim()] = !0), isNaN(u) || (n[s.trim()] = parseInt(u, 10))
			})
		}
		return {
			formatName: e,
			formatOptions: n
		}
	}

	function po(t) {
		const e = {};
		return function(i, o, r) {
			const a = o + JSON.stringify(r);
			let s = e[a];
			return s || (s = t(rl(o), r), e[a] = s), s(i)
		}
	}
	class Zee {
		constructor() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
			this.logger = Pt.create("formatter"), this.options = e, this.formats = {
				number: po((n, i) => {
					const o = new Intl.NumberFormat(n, {
						...i
					});
					return r => o.format(r)
				}),
				currency: po((n, i) => {
					const o = new Intl.NumberFormat(n, {
						...i,
						style: "currency"
					});
					return r => o.format(r)
				}),
				datetime: po((n, i) => {
					const o = new Intl.DateTimeFormat(n, {
						...i
					});
					return r => o.format(r)
				}),
				relativetime: po((n, i) => {
					const o = new Intl.RelativeTimeFormat(n, {
						...i
					});
					return r => o.format(r, i.range || "day")
				}),
				list: po((n, i) => {
					const o = new Intl.ListFormat(n, {
						...i
					});
					return r => o.format(r)
				})
			}, this.init(e)
		}
		init(e) {
			const i = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
				interpolation: {}
			}).interpolation;
			this.formatSeparator = i.formatSeparator ? i.formatSeparator : i.formatSeparator || ","
		}
		add(e, n) {
			this.formats[e.toLowerCase().trim()] = n
		}
		addCached(e, n) {
			this.formats[e.toLowerCase().trim()] = po(n)
		}
		format(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
			return n.split(this.formatSeparator).reduce((s, l) => {
				const {
					formatName: u,
					formatOptions: c
				} = Xee(l);
				if (this.formats[u]) {
					let m = s;
					try {
						const d = o && o.formatParams && o.formatParams[o.interpolationkey] || {},
							p = d.locale || d.lng || o.locale || o.lng || i;
						m = this.formats[u](s, p, {
							...c,
							...o,
							...d
						})
					} catch (d) {
						this.logger.warn(d)
					}
					return m
				} else this.logger.warn(`there was no format function for ${u}`);
				return s
			}, e)
		}
	}

	function ete(t, e) {
		t.pending[e] !== void 0 && (delete t.pending[e], t.pendingCount--)
	}
	class tte extends nl {
		constructor(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
			super(), this.backend = e, this.store = n, this.services = i, this.languageUtils = i.languageUtils, this.options = o, this.logger = Pt.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = o.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = o.maxRetries >= 0 ? o.maxRetries : 5, this.retryTimeout = o.retryTimeout >= 1 ? o.retryTimeout : 350, this.state = {}, this.queue = [], this.backend && this.backend.init && this.backend.init(i, o.backend, o)
		}
		queueLoad(e, n, i, o) {
			const r = {},
				a = {},
				s = {},
				l = {};
			return e.forEach(u => {
				let c = !0;
				n.forEach(m => {
					const d = `${u}|${m}`;
					!i.reload && this.store.hasResourceBundle(u, m) ? this.state[d] = 2 : this.state[d] < 0 || (this.state[d] === 1 ? a[d] === void 0 && (a[d] = !0) : (this.state[d] = 1, c = !1, a[d] === void 0 && (a[d] = !0), r[d] === void 0 && (r[d] = !0), l[m] === void 0 && (l[m] = !0)))
				}), c || (s[u] = !0)
			}), (Object.keys(r).length || Object.keys(a).length) && this.queue.push({
				pending: a,
				pendingCount: Object.keys(a).length,
				loaded: {},
				errors: [],
				callback: o
			}), {
				toLoad: Object.keys(r),
				pending: Object.keys(a),
				toLoadLanguages: Object.keys(s),
				toLoadNamespaces: Object.keys(l)
			}
		}
		loaded(e, n, i) {
			const o = e.split("|"),
				r = o[0],
				a = o[1];
			n && this.emit("failedLoading", r, a, n), i && this.store.addResourceBundle(r, a, i), this.state[e] = n ? -1 : 2;
			const s = {};
			this.queue.forEach(l => {
				Yee(l.loaded, [r], a), ete(l, e), n && l.errors.push(n), l.pendingCount === 0 && !l.done && (Object.keys(l.loaded).forEach(u => {
					s[u] || (s[u] = {});
					const c = l.loaded[u];
					c.length && c.forEach(m => {
						s[u][m] === void 0 && (s[u][m] = !0)
					})
				}), l.done = !0, l.errors.length ? l.callback(l.errors) : l.callback())
			}), this.emit("loaded", s), this.queue = this.queue.filter(l => !l.done)
		}
		read(e, n, i) {
			let o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0,
				r = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout,
				a = arguments.length > 5 ? arguments[5] : void 0;
			if (!e.length) return a(null, {});
			if (this.readingCalls >= this.maxParallelReads) {
				this.waitingReads.push({
					lng: e,
					ns: n,
					fcName: i,
					tried: o,
					wait: r,
					callback: a
				});
				return
			}
			this.readingCalls++;
			const s = (u, c) => {
					if (this.readingCalls--, this.waitingReads.length > 0) {
						const m = this.waitingReads.shift();
						this.read(m.lng, m.ns, m.fcName, m.tried, m.wait, m.callback)
					}
					if (u && c && o < this.maxRetries) {
						setTimeout(() => {
							this.read.call(this, e, n, i, o + 1, r * 2, a)
						}, r);
						return
					}
					a(u, c)
				},
				l = this.backend[i].bind(this.backend);
			if (l.length === 2) {
				try {
					const u = l(e, n);
					u && typeof u.then == "function" ? u.then(c => s(null, c)).catch(s) : s(null, u)
				} catch (u) {
					s(u)
				}
				return
			}
			return l(e, n, s)
		}
		prepareLoading(e, n) {
			let i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {},
				o = arguments.length > 3 ? arguments[3] : void 0;
			if (!this.backend) return this.logger.warn("No backend was added via i18next.use. Will not load resources."), o && o();
			typeof e == "string" && (e = this.languageUtils.toResolveHierarchy(e)), typeof n == "string" && (n = [n]);
			const r = this.queueLoad(e, n, i, o);
			if (!r.toLoad.length) return r.pending.length || o(), null;
			r.toLoad.forEach(a => {
				this.loadOne(a)
			})
		}
		load(e, n, i) {
			this.prepareLoading(e, n, {}, i)
		}
		reload(e, n, i) {
			this.prepareLoading(e, n, {
				reload: !0
			}, i)
		}
		loadOne(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
			const i = e.split("|"),
				o = i[0],
				r = i[1];
			this.read(o, r, "read", void 0, void 0, (a, s) => {
				a && this.logger.warn(`${n}loading namespace ${r} for language ${o} failed`, a), !a && s && this.logger.log(`${n}loaded namespace ${r} for language ${o}`, s), this.loaded(e, a, s)
			})
		}
		saveMissing(e, n, i, o, r) {
			let a = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {},
				s = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {};
			if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(n)) {
				this.logger.warn(`did not save key "${i}" as the namespace "${n}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
				return
			}
			if (!(i == null || i === "")) {
				if (this.backend && this.backend.create) {
					const l = {
							...a,
							isUpdate: r
						},
						u = this.backend.create.bind(this.backend);
					if (u.length < 6) try {
						let c;
						u.length === 5 ? c = u(e, n, i, o, l) : c = u(e, n, i, o), c && typeof c.then == "function" ? c.then(m => s(null, m)).catch(s) : s(null, c)
					} catch (c) {
						s(c)
					} else u(e, n, i, o, s, l)
				}!e || !e[0] || this.store.addResource(e[0], n, i, o)
			}
		}
	}

	function Nq() {
		return {
			debug: !1,
			initImmediate: !0,
			ns: ["translation"],
			defaultNS: ["translation"],
			fallbackLng: ["dev"],
			fallbackNS: !1,
			supportedLngs: !1,
			nonExplicitSupportedLngs: !1,
			load: "all",
			preload: !1,
			simplifyPluralSuffix: !0,
			keySeparator: ".",
			nsSeparator: ":",
			pluralSeparator: "_",
			contextSeparator: "_",
			partialBundledLanguages: !1,
			saveMissing: !1,
			updateMissing: !1,
			saveMissingTo: "fallback",
			saveMissingPlurals: !0,
			missingKeyHandler: !1,
			missingInterpolationHandler: !1,
			postProcess: !1,
			postProcessPassResolved: !1,
			returnNull: !1,
			returnEmptyString: !0,
			returnObjects: !1,
			joinArrays: !1,
			returnedObjectHandler: !1,
			parseMissingKeyHandler: !1,
			appendNamespaceToMissingKey: !1,
			appendNamespaceToCIMode: !1,
			overloadTranslationOptionHandler: function(e) {
				let n = {};
				if (typeof e[1] == "object" && (n = e[1]), typeof e[1] == "string" && (n.defaultValue = e[1]), typeof e[2] == "string" && (n.tDescription = e[2]), typeof e[2] == "object" || typeof e[3] == "object") {
					const i = e[3] || e[2];
					Object.keys(i).forEach(o => {
						n[o] = i[o]
					})
				}
				return n
			},
			interpolation: {
				escapeValue: !0,
				format: (t, e, n, i) => t,
				prefix: "{{",
				suffix: "}}",
				formatSeparator: ",",
				unescapePrefix: "-",
				nestingPrefix: "$t(",
				nestingSuffix: ")",
				nestingOptionsSeparator: ",",
				maxReplaces: 1e3,
				skipOnVariables: !0
			}
		}
	}

	function Mq(t) {
		return typeof t.ns == "string" && (t.ns = [t.ns]), typeof t.fallbackLng == "string" && (t.fallbackLng = [t.fallbackLng]), typeof t.fallbackNS == "string" && (t.fallbackNS = [t.fallbackNS]), t.supportedLngs && t.supportedLngs.indexOf("cimode") < 0 && (t.supportedLngs = t.supportedLngs.concat(["cimode"])), t
	}

	function sl() {}

	function nte(t) {
		Object.getOwnPropertyNames(Object.getPrototypeOf(t)).forEach(n => {
			typeof t[n] == "function" && (t[n] = t[n].bind(t))
		})
	}
	class Yr extends nl {
		constructor() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
				n = arguments.length > 1 ? arguments[1] : void 0;
			if (super(), this.options = Mq(e), this.services = {}, this.logger = Pt, this.modules = {
					external: []
				}, nte(this), n && !this.isInitialized && !e.isClone) {
				if (!this.options.initImmediate) return this.init(e, n), this;
				setTimeout(() => {
					this.init(e, n)
				}, 0)
			}
		}
		init() {
			var e = this;
			let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
				i = arguments.length > 1 ? arguments[1] : void 0;
			typeof n == "function" && (i = n, n = {}), !n.defaultNS && n.defaultNS !== !1 && n.ns && (typeof n.ns == "string" ? n.defaultNS = n.ns : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
			const o = Nq();
			this.options = {
				...o,
				...this.options,
				...Mq(n)
			}, this.options.compatibilityAPI !== "v1" && (this.options.interpolation = {
				...o.interpolation,
				...this.options.interpolation
			}), n.keySeparator !== void 0 && (this.options.userDefinedKeySeparator = n.keySeparator), n.nsSeparator !== void 0 && (this.options.userDefinedNsSeparator = n.nsSeparator);

			function r(c) {
				return c ? typeof c == "function" ? new c : c : null
			}
			if (!this.options.isClone) {
				this.modules.logger ? Pt.init(r(this.modules.logger), this.options) : Pt.init(null, this.options);
				let c;
				this.modules.formatter ? c = this.modules.formatter : typeof Intl < "u" && (c = Zee);
				const m = new jq(this.options);
				this.store = new xq(this.options.resources, this.options);
				const d = this.services;
				d.logger = Pt, d.resourceStore = this.store, d.languageUtils = m, d.pluralResolver = new Gee(m, {
					prepend: this.options.pluralSeparator,
					compatibilityJSON: this.options.compatibilityJSON,
					simplifyPluralSuffix: this.options.simplifyPluralSuffix
				}), c && (!this.options.interpolation.format || this.options.interpolation.format === o.interpolation.format) && (d.formatter = r(c), d.formatter.init(d, this.options), this.options.interpolation.format = d.formatter.format.bind(d.formatter)), d.interpolator = new Qee(this.options), d.utils = {
					hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
				}, d.backendConnector = new tte(r(this.modules.backend), d.resourceStore, d, this.options), d.backendConnector.on("*", function(p) {
					for (var f = arguments.length, y = new Array(f > 1 ? f - 1 : 0), h = 1; h < f; h++) y[h - 1] = arguments[h];
					e.emit(p, ...y)
				}), this.modules.languageDetector && (d.languageDetector = r(this.modules.languageDetector), d.languageDetector.init && d.languageDetector.init(d, this.options.detection, this.options)), this.modules.i18nFormat && (d.i18nFormat = r(this.modules.i18nFormat), d.i18nFormat.init && d.i18nFormat.init(this)), this.translator = new al(this.services, this.options), this.translator.on("*", function(p) {
					for (var f = arguments.length, y = new Array(f > 1 ? f - 1 : 0), h = 1; h < f; h++) y[h - 1] = arguments[h];
					e.emit(p, ...y)
				}), this.modules.external.forEach(p => {
					p.init && p.init(this)
				})
			}
			if (this.format = this.options.interpolation.format, i || (i = sl), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
				const c = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
				c.length > 0 && c[0] !== "dev" && (this.options.lng = c[0])
			}!this.services.languageDetector && !this.options.lng && this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(c => {
				this[c] = function() {
					return e.store[c](...arguments)
				}
			}), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(c => {
				this[c] = function() {
					return e.store[c](...arguments), e
				}
			});
			const l = Rr(),
				u = () => {
					const c = (m, d) => {
						this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), l.resolve(d), i(m, d)
					};
					if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized) return c(null, this.t.bind(this));
					this.changeLanguage(this.options.lng, c)
				};
			return this.options.resources || !this.options.initImmediate ? u() : setTimeout(u, 0), l
		}
		loadResources(e) {
			let i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : sl;
			const o = typeof e == "string" ? e : this.language;
			if (typeof e == "function" && (i = e), !this.options.resources || this.options.partialBundledLanguages) {
				if (o && o.toLowerCase() === "cimode") return i();
				const r = [],
					a = s => {
						if (!s) return;
						this.services.languageUtils.toResolveHierarchy(s).forEach(u => {
							r.indexOf(u) < 0 && r.push(u)
						})
					};
				o ? a(o) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(l => a(l)), this.options.preload && this.options.preload.forEach(s => a(s)), this.services.backendConnector.load(r, this.options.ns, s => {
					!s && !this.resolvedLanguage && this.language && this.setResolvedLanguage(this.language), i(s)
				})
			} else i(null)
		}
		reloadResources(e, n, i) {
			const o = Rr();
			return e || (e = this.languages), n || (n = this.options.ns), i || (i = sl), this.services.backendConnector.reload(e, n, r => {
				o.resolve(), i(r)
			}), o
		}
		use(e) {
			if (!e) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
			if (!e.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
			return e.type === "backend" && (this.modules.backend = e), (e.type === "logger" || e.log && e.warn && e.error) && (this.modules.logger = e), e.type === "languageDetector" && (this.modules.languageDetector = e), e.type === "i18nFormat" && (this.modules.i18nFormat = e), e.type === "postProcessor" && Eq.addPostProcessor(e), e.type === "formatter" && (this.modules.formatter = e), e.type === "3rdParty" && this.modules.external.push(e), this
		}
		setResolvedLanguage(e) {
			if (!(!e || !this.languages) && !(["cimode", "dev"].indexOf(e) > -1))
				for (let n = 0; n < this.languages.length; n++) {
					const i = this.languages[n];
					if (!(["cimode", "dev"].indexOf(i) > -1) && this.store.hasLanguageSomeTranslations(i)) {
						this.resolvedLanguage = i;
						break
					}
				}
		}
		changeLanguage(e, n) {
			var i = this;
			this.isLanguageChangingTo = e;
			const o = Rr();
			this.emit("languageChanging", e);
			const r = l => {
					this.language = l, this.languages = this.services.languageUtils.toResolveHierarchy(l), this.resolvedLanguage = void 0, this.setResolvedLanguage(l)
				},
				a = (l, u) => {
					u ? (r(u), this.translator.changeLanguage(u), this.isLanguageChangingTo = void 0, this.emit("languageChanged", u), this.logger.log("languageChanged", u)) : this.isLanguageChangingTo = void 0, o.resolve(function() {
						return i.t(...arguments)
					}), n && n(l, function() {
						return i.t(...arguments)
					})
				},
				s = l => {
					!e && !l && this.services.languageDetector && (l = []);
					const u = typeof l == "string" ? l : this.services.languageUtils.getBestMatchFromCodes(l);
					u && (this.language || r(u), this.translator.language || this.translator.changeLanguage(u), this.services.languageDetector && this.services.languageDetector.cacheUserLanguage && this.services.languageDetector.cacheUserLanguage(u)), this.loadResources(u, c => {
						a(c, u)
					})
				};
			return !e && this.services.languageDetector && !this.services.languageDetector.async ? s(this.services.languageDetector.detect()) : !e && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect.length === 0 ? this.services.languageDetector.detect().then(s) : this.services.languageDetector.detect(s) : s(e), o
		}
		getFixedT(e, n, i) {
			var o = this;
			const r = function(a, s) {
				let l;
				if (typeof s != "object") {
					for (var u = arguments.length, c = new Array(u > 2 ? u - 2 : 0), m = 2; m < u; m++) c[m - 2] = arguments[m];
					l = o.options.overloadTranslationOptionHandler([a, s].concat(c))
				} else l = {
					...s
				};
				l.lng = l.lng || r.lng, l.lngs = l.lngs || r.lngs, l.ns = l.ns || r.ns, l.keyPrefix = l.keyPrefix || i || r.keyPrefix;
				const d = o.options.keySeparator || ".";
				let p;
				return l.keyPrefix && Array.isArray(a) ? p = a.map(f => `${l.keyPrefix}${d}${f}`) : p = l.keyPrefix ? `${l.keyPrefix}${d}${a}` : a, o.t(p, l)
			};
			return typeof e == "string" ? r.lng = e : r.lngs = e, r.ns = n, r.keyPrefix = i, r
		}
		t() {
			return this.translator && this.translator.translate(...arguments)
		}
		exists() {
			return this.translator && this.translator.exists(...arguments)
		}
		setDefaultNamespace(e) {
			this.options.defaultNS = e
		}
		hasLoadedNamespace(e) {
			let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
			if (!this.isInitialized) return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
			if (!this.languages || !this.languages.length) return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
			const i = n.lng || this.resolvedLanguage || this.languages[0],
				o = this.options ? this.options.fallbackLng : !1,
				r = this.languages[this.languages.length - 1];
			if (i.toLowerCase() === "cimode") return !0;
			const a = (s, l) => {
				const u = this.services.backendConnector.state[`${s}|${l}`];
				return u === -1 || u === 2
			};
			if (n.precheck) {
				const s = n.precheck(this, a);
				if (s !== void 0) return s
			}
			return !!(this.hasResourceBundle(i, e) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || a(i, e) && (!o || a(r, e)))
		}
		loadNamespaces(e, n) {
			const i = Rr();
			return this.options.ns ? (typeof e == "string" && (e = [e]), e.forEach(o => {
				this.options.ns.indexOf(o) < 0 && this.options.ns.push(o)
			}), this.loadResources(o => {
				i.resolve(), n && n(o)
			}), i) : (n && n(), Promise.resolve())
		}
		loadLanguages(e, n) {
			const i = Rr();
			typeof e == "string" && (e = [e]);
			const o = this.options.preload || [],
				r = e.filter(a => o.indexOf(a) < 0);
			return r.length ? (this.options.preload = o.concat(r), this.loadResources(a => {
				i.resolve(), n && n(a)
			}), i) : (n && n(), Promise.resolve())
		}
		dir(e) {
			if (e || (e = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !e) return "rtl";
			const n = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"],
				i = this.services && this.services.languageUtils || new jq(Nq());
			return n.indexOf(i.getLanguagePartFromCode(e)) > -1 || e.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr"
		}
		static createInstance() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
				n = arguments.length > 1 ? arguments[1] : void 0;
			return new Yr(e, n)
		}
		cloneInstance() {
			let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
				n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : sl;
			const i = e.forkResourceStore;
			i && delete e.forkResourceStore;
			const o = {
					...this.options,
					...e,
					isClone: !0
				},
				r = new Yr(o);
			return (e.debug !== void 0 || e.prefix !== void 0) && (r.logger = r.logger.clone(e)), ["store", "services", "language"].forEach(s => {
				r[s] = this[s]
			}), r.services = {
				...this.services
			}, r.services.utils = {
				hasLoadedNamespace: r.hasLoadedNamespace.bind(r)
			}, i && (r.store = new xq(this.store.data, o), r.services.resourceStore = r.store), r.translator = new al(r.services, o), r.translator.on("*", function(s) {
				for (var l = arguments.length, u = new Array(l > 1 ? l - 1 : 0), c = 1; c < l; c++) u[c - 1] = arguments[c];
				r.emit(s, ...u)
			}), r.init(o, n), r.translator.options = o, r.translator.backendConnector.services.utils = {
				hasLoadedNamespace: r.hasLoadedNamespace.bind(r)
			}, r
		}
		toJSON() {
			return {
				options: this.options,
				store: this.store,
				language: this.language,
				languages: this.languages,
				resolvedLanguage: this.resolvedLanguage
			}
		}
	}
	const we = Yr.createInstance();
	we.createInstance = Yr.createInstance;
	const ite = we.createInstance,
		ote = we.dir,
		rte = we.init,
		ate = we.loadResources,
		ste = we.reloadResources,
		lte = we.use,
		ute = we.changeLanguage,
		cte = we.getFixedT,
		dte = we.t,
		mte = we.exists,
		pte = we.setDefaultNamespace,
		fte = we.hasLoadedNamespace,
		hte = we.loadNamespaces,
		gte = we.loadLanguages,
		yte = Object.freeze(Object.defineProperty({
			__proto__: null,
			changeLanguage: ute,
			createInstance: ite,
			default: we,
			dir: ote,
			exists: mte,
			getFixedT: cte,
			hasLoadedNamespace: fte,
			init: rte,
			loadLanguages: gte,
			loadNamespaces: hte,
			loadResources: ate,
			reloadResources: ste,
			setDefaultNamespace: pte,
			t: dte,
			use: lte
		}, Symbol.toStringTag, {
			value: "Module"
		}));
	var Lr = {
		exports: {}
	};
	const bte = we || yte,
		Pq = ["af", "bg", "ca", "cs", "da", "de", "en", "eo", "es", "fi", "fr", "hr", "hu", "id", "is", "it", "ja", "ko", "mn", "ms", "nl", "nn", "no", "pl", "pt", "pt-BR", "ro", "ru", "si", "sl", "sq", "sr", "sv", "tr", "uk", "uz", "vi", "zh", "zh-Hant"];
	Lr.exports = (t = "en", e = "portal") => {
		const n = bte.createInstance();
		return n.init({
			lng: t,
			nsSeparator: !1,
			keySeparator: !1,
			returnEmptyString: !1,
			fallbackLng: !1,
			ns: e,
			defaultNS: e,
			resources: Pq.reduce((i, o) => {
				const r = kte(`../locales/${o}/${e}.json`);
				return i[o] = {
					[e]: {
						...r,
						...r.default && typeof r.default == "object" ? r.default : {}
					}
				}, i
			}, {})
		}), n
	}, Lr.exports.SUPPORTED_LOCALES = Pq;
	const _q = (Lr.exports == null ? {} : Lr.exports).default || Lr.exports;

	function kte(t) {
		switch (t) {
			case "../locales/af/comments":
			case "../locales/af/comments.json":
				return UQ;
			case "../locales/af/ghost":
			case "../locales/af/ghost.json":
				return VQ;
			case "../locales/af/portal":
			case "../locales/af/portal.json":
				return HQ;
			case "../locales/af/signup-form":
			case "../locales/af/signup-form.json":
				return qQ;
			case "../locales/bg/comments":
			case "../locales/bg/comments.json":
				return WQ;
			case "../locales/bg/ghost":
			case "../locales/bg/ghost.json":
				return KQ;
			case "../locales/bg/portal":
			case "../locales/bg/portal.json":
				return JQ;
			case "../locales/bg/signup-form":
			case "../locales/bg/signup-form.json":
				return GQ;
			case "../locales/ca/comments":
			case "../locales/ca/comments.json":
				return QQ;
			case "../locales/ca/ghost":
			case "../locales/ca/ghost.json":
				return XQ;
			case "../locales/ca/portal":
			case "../locales/ca/portal.json":
				return ZQ;
			case "../locales/ca/signup-form":
			case "../locales/ca/signup-form.json":
				return eX;
			case "../locales/cs/comments":
			case "../locales/cs/comments.json":
				return tX;
			case "../locales/cs/ghost":
			case "../locales/cs/ghost.json":
				return nX;
			case "../locales/cs/portal":
			case "../locales/cs/portal.json":
				return iX;
			case "../locales/cs/signup-form":
			case "../locales/cs/signup-form.json":
				return oX;
			case "../locales/da/comments":
			case "../locales/da/comments.json":
				return rX;
			case "../locales/da/ghost":
			case "../locales/da/ghost.json":
				return aX;
			case "../locales/da/portal":
			case "../locales/da/portal.json":
				return sX;
			case "../locales/da/signup-form":
			case "../locales/da/signup-form.json":
				return lX;
			case "../locales/de/comments":
			case "../locales/de/comments.json":
				return uX;
			case "../locales/de/ghost":
			case "../locales/de/ghost.json":
				return cX;
			case "../locales/de/portal":
			case "../locales/de/portal.json":
				return dX;
			case "../locales/de/signup-form":
			case "../locales/de/signup-form.json":
				return mX;
			case "../locales/en/comments":
			case "../locales/en/comments.json":
				return pX;
			case "../locales/en/ghost":
			case "../locales/en/ghost.json":
				return fX;
			case "../locales/en/portal":
			case "../locales/en/portal.json":
				return hX;
			case "../locales/en/signup-form":
			case "../locales/en/signup-form.json":
				return gX;
			case "../locales/eo/comments":
			case "../locales/eo/comments.json":
				return yX;
			case "../locales/eo/ghost":
			case "../locales/eo/ghost.json":
				return bX;
			case "../locales/eo/portal":
			case "../locales/eo/portal.json":
				return kX;
			case "../locales/eo/signup-form":
			case "../locales/eo/signup-form.json":
				return vX;
			case "../locales/es/comments":
			case "../locales/es/comments.json":
				return wX;
			case "../locales/es/ghost":
			case "../locales/es/ghost.json":
				return SX;
			case "../locales/es/portal":
			case "../locales/es/portal.json":
				return CX;
			case "../locales/es/signup-form":
			case "../locales/es/signup-form.json":
				return xX;
			case "../locales/fi/comments":
			case "../locales/fi/comments.json":
				return EX;
			case "../locales/fi/ghost":
			case "../locales/fi/ghost.json":
				return TX;
			case "../locales/fi/portal":
			case "../locales/fi/portal.json":
				return jX;
			case "../locales/fi/signup-form":
			case "../locales/fi/signup-form.json":
				return $X;
			case "../locales/fr/comments":
			case "../locales/fr/comments.json":
				return AX;
			case "../locales/fr/ghost":
			case "../locales/fr/ghost.json":
				return NX;
			case "../locales/fr/portal":
			case "../locales/fr/portal.json":
				return MX;
			case "../locales/fr/signup-form":
			case "../locales/fr/signup-form.json":
				return PX;
			case "../locales/hr/comments":
			case "../locales/hr/comments.json":
				return _X;
			case "../locales/hr/ghost":
			case "../locales/hr/ghost.json":
				return zX;
			case "../locales/hr/portal":
			case "../locales/hr/portal.json":
				return OX;
			case "../locales/hr/signup-form":
			case "../locales/hr/signup-form.json":
				return DX;
			case "../locales/hu/comments":
			case "../locales/hu/comments.json":
				return IX;
			case "../locales/hu/ghost":
			case "../locales/hu/ghost.json":
				return RX;
			case "../locales/hu/portal":
			case "../locales/hu/portal.json":
				return YX;
			case "../locales/hu/signup-form":
			case "../locales/hu/signup-form.json":
				return LX;
			case "../locales/id/comments":
			case "../locales/id/comments.json":
				return FX;
			case "../locales/id/ghost":
			case "../locales/id/ghost.json":
				return BX;
			case "../locales/id/portal":
			case "../locales/id/portal.json":
				return UX;
			case "../locales/id/signup-form":
			case "../locales/id/signup-form.json":
				return VX;
			case "../locales/is/comments":
			case "../locales/is/comments.json":
				return HX;
			case "../locales/is/ghost":
			case "../locales/is/ghost.json":
				return qX;
			case "../locales/is/portal":
			case "../locales/is/portal.json":
				return WX;
			case "../locales/is/signup-form":
			case "../locales/is/signup-form.json":
				return KX;
			case "../locales/it/comments":
			case "../locales/it/comments.json":
				return JX;
			case "../locales/it/ghost":
			case "../locales/it/ghost.json":
				return GX;
			case "../locales/it/portal":
			case "../locales/it/portal.json":
				return QX;
			case "../locales/it/signup-form":
			case "../locales/it/signup-form.json":
				return XX;
			case "../locales/ja/comments":
			case "../locales/ja/comments.json":
				return ZX;
			case "../locales/ja/ghost":
			case "../locales/ja/ghost.json":
				return eZ;
			case "../locales/ja/portal":
			case "../locales/ja/portal.json":
				return tZ;
			case "../locales/ja/signup-form":
			case "../locales/ja/signup-form.json":
				return nZ;
			case "../locales/ko/comments":
			case "../locales/ko/comments.json":
				return iZ;
			case "../locales/ko/ghost":
			case "../locales/ko/ghost.json":
				return oZ;
			case "../locales/ko/portal":
			case "../locales/ko/portal.json":
				return rZ;
			case "../locales/ko/signup-form":
			case "../locales/ko/signup-form.json":
				return aZ;
			case "../locales/mn/comments":
			case "../locales/mn/comments.json":
				return sZ;
			case "../locales/mn/ghost":
			case "../locales/mn/ghost.json":
				return lZ;
			case "../locales/mn/portal":
			case "../locales/mn/portal.json":
				return uZ;
			case "../locales/mn/signup-form":
			case "../locales/mn/signup-form.json":
				return cZ;
			case "../locales/ms/comments":
			case "../locales/ms/comments.json":
				return dZ;
			case "../locales/ms/ghost":
			case "../locales/ms/ghost.json":
				return mZ;
			case "../locales/ms/portal":
			case "../locales/ms/portal.json":
				return pZ;
			case "../locales/ms/signup-form":
			case "../locales/ms/signup-form.json":
				return fZ;
			case "../locales/nl/comments":
			case "../locales/nl/comments.json":
				return hZ;
			case "../locales/nl/ghost":
			case "../locales/nl/ghost.json":
				return gZ;
			case "../locales/nl/portal":
			case "../locales/nl/portal.json":
				return yZ;
			case "../locales/nl/signup-form":
			case "../locales/nl/signup-form.json":
				return bZ;
			case "../locales/nn/comments":
			case "../locales/nn/comments.json":
				return kZ;
			case "../locales/nn/ghost":
			case "../locales/nn/ghost.json":
				return vZ;
			case "../locales/nn/portal":
			case "../locales/nn/portal.json":
				return wZ;
			case "../locales/nn/signup-form":
			case "../locales/nn/signup-form.json":
				return SZ;
			case "../locales/no/comments":
			case "../locales/no/comments.json":
				return CZ;
			case "../locales/no/ghost":
			case "../locales/no/ghost.json":
				return xZ;
			case "../locales/no/portal":
			case "../locales/no/portal.json":
				return EZ;
			case "../locales/no/signup-form":
			case "../locales/no/signup-form.json":
				return TZ;
			case "../locales/pl/comments":
			case "../locales/pl/comments.json":
				return jZ;
			case "../locales/pl/ghost":
			case "../locales/pl/ghost.json":
				return $Z;
			case "../locales/pl/portal":
			case "../locales/pl/portal.json":
				return AZ;
			case "../locales/pl/signup-form":
			case "../locales/pl/signup-form.json":
				return NZ;
			case "../locales/pt/comments":
			case "../locales/pt/comments.json":
				return MZ;
			case "../locales/pt/ghost":
			case "../locales/pt/ghost.json":
				return PZ;
			case "../locales/pt/portal":
			case "../locales/pt/portal.json":
				return _Z;
			case "../locales/pt/signup-form":
			case "../locales/pt/signup-form.json":
				return zZ;
			case "../locales/pt-BR/comments":
			case "../locales/pt-BR/comments.json":
				return OZ;
			case "../locales/pt-BR/ghost":
			case "../locales/pt-BR/ghost.json":
				return DZ;
			case "../locales/pt-BR/portal":
			case "../locales/pt-BR/portal.json":
				return IZ;
			case "../locales/pt-BR/signup-form":
			case "../locales/pt-BR/signup-form.json":
				return RZ;
			case "../locales/ro/comments":
			case "../locales/ro/comments.json":
				return YZ;
			case "../locales/ro/ghost":
			case "../locales/ro/ghost.json":
				return LZ;
			case "../locales/ro/portal":
			case "../locales/ro/portal.json":
				return FZ;
			case "../locales/ro/signup-form":
			case "../locales/ro/signup-form.json":
				return BZ;
			case "../locales/ru/comments":
			case "../locales/ru/comments.json":
				return UZ;
			case "../locales/ru/ghost":
			case "../locales/ru/ghost.json":
				return VZ;
			case "../locales/ru/portal":
			case "../locales/ru/portal.json":
				return HZ;
			case "../locales/ru/signup-form":
			case "../locales/ru/signup-form.json":
				return qZ;
			case "../locales/si/comments":
			case "../locales/si/comments.json":
				return WZ;
			case "../locales/si/ghost":
			case "../locales/si/ghost.json":
				return KZ;
			case "../locales/si/portal":
			case "../locales/si/portal.json":
				return JZ;
			case "../locales/si/signup-form":
			case "../locales/si/signup-form.json":
				return GZ;
			case "../locales/sl/comments":
			case "../locales/sl/comments.json":
				return QZ;
			case "../locales/sl/ghost":
			case "../locales/sl/ghost.json":
				return XZ;
			case "../locales/sl/portal":
			case "../locales/sl/portal.json":
				return ZZ;
			case "../locales/sl/signup-form":
			case "../locales/sl/signup-form.json":
				return eee;
			case "../locales/sq/comments":
			case "../locales/sq/comments.json":
				return tee;
			case "../locales/sq/ghost":
			case "../locales/sq/ghost.json":
				return nee;
			case "../locales/sq/portal":
			case "../locales/sq/portal.json":
				return iee;
			case "../locales/sq/signup-form":
			case "../locales/sq/signup-form.json":
				return oee;
			case "../locales/sr/comments":
			case "../locales/sr/comments.json":
				return ree;
			case "../locales/sr/ghost":
			case "../locales/sr/ghost.json":
				return aee;
			case "../locales/sr/portal":
			case "../locales/sr/portal.json":
				return see;
			case "../locales/sr/signup-form":
			case "../locales/sr/signup-form.json":
				return lee;
			case "../locales/sv/comments":
			case "../locales/sv/comments.json":
				return uee;
			case "../locales/sv/ghost":
			case "../locales/sv/ghost.json":
				return cee;
			case "../locales/sv/portal":
			case "../locales/sv/portal.json":
				return dee;
			case "../locales/sv/signup-form":
			case "../locales/sv/signup-form.json":
				return mee;
			case "../locales/tr/comments":
			case "../locales/tr/comments.json":
				return pee;
			case "../locales/tr/ghost":
			case "../locales/tr/ghost.json":
				return fee;
			case "../locales/tr/portal":
			case "../locales/tr/portal.json":
				return hee;
			case "../locales/tr/signup-form":
			case "../locales/tr/signup-form.json":
				return gee;
			case "../locales/uk/comments":
			case "../locales/uk/comments.json":
				return yee;
			case "../locales/uk/ghost":
			case "../locales/uk/ghost.json":
				return bee;
			case "../locales/uk/portal":
			case "../locales/uk/portal.json":
				return kee;
			case "../locales/uk/signup-form":
			case "../locales/uk/signup-form.json":
				return vee;
			case "../locales/uz/comments":
			case "../locales/uz/comments.json":
				return wee;
			case "../locales/uz/ghost":
			case "../locales/uz/ghost.json":
				return See;
			case "../locales/uz/portal":
			case "../locales/uz/portal.json":
				return Cee;
			case "../locales/uz/signup-form":
			case "../locales/uz/signup-form.json":
				return xee;
			case "../locales/vi/comments":
			case "../locales/vi/comments.json":
				return Eee;
			case "../locales/vi/ghost":
			case "../locales/vi/ghost.json":
				return Tee;
			case "../locales/vi/portal":
			case "../locales/vi/portal.json":
				return jee;
			case "../locales/vi/signup-form":
			case "../locales/vi/signup-form.json":
				return $ee;
			case "../locales/zh/comments":
			case "../locales/zh/comments.json":
				return Aee;
			case "../locales/zh/ghost":
			case "../locales/zh/ghost.json":
				return Nee;
			case "../locales/zh/portal":
			case "../locales/zh/portal.json":
				return Mee;
			case "../locales/zh/signup-form":
			case "../locales/zh/signup-form.json":
				return Pee;
			case "../locales/zh-Hant/comments":
			case "../locales/zh-Hant/comments.json":
				return _ee;
			case "../locales/zh-Hant/ghost":
			case "../locales/zh-Hant/ghost.json":
				return zee;
			case "../locales/zh-Hant/portal":
			case "../locales/zh-Hant/portal.json":
				return Oee;
			case "../locales/zh-Hant/signup-form":
			case "../locales/zh-Hant/signup-form.json":
				return Dee;
			default:
				throw new Error("Cann't found module: " + t)
		}
	}
	const vte = Object.freeze(Object.defineProperty({
		__proto__: null,
		default: _q
	}, Symbol.toStringTag, {
		value: "Module"
	}));
	var ll = {
		exports: {}
	};
	ll.exports = _q || vte;
	const wte = (ll.exports == null ? {} : ll.exports).default || ll.exports;

	function Ste({
		siteUrl: t = window.location.origin,
		apiUrl: e,
		apiKey: n
	}) {
		const i = "members/api";

		function o({
			type: u,
			resource: c,
			params: m = ""
		}) {
			return u === "members" ? `${t.replace(/\/$/,"")}/${i}/${c}/${m}` : ""
		}

		function r({
			resource: u,
			params: c = ""
		}) {
			return e && n ? `${e.replace(/\/$/,"")}/${u}/?key=${n}&limit=all${c}` : ""
		}

		function a({
			url: u,
			method: c = "GET",
			headers: m = {},
			credentials: d = void 0,
			body: p = void 0
		}) {
			return fetch(u, {
				method: c,
				headers: m,
				credentials: d,
				body: p
			})
		}
		let s = null;
		const l = {
			site: {
				settings() {
					const u = r({
						resource: "settings"
					});
					return a({
						url: u,
						method: "GET",
						headers: {
							"Content-Type": "application/json"
						}
					}).then(function(c) {
						if (c.ok) return c.json();
						throw new Error("Failed to fetch site data")
					})
				}
			},
			member: {
				identity() {
					const u = o({
						type: "members",
						resource: "session"
					});
					return a({
						url: u,
						credentials: "same-origin"
					}).then(function(c) {
						return !c.ok || c.status === 204 ? null : c.text()
					})
				},
				sessionData() {
					const u = o({
						type: "members",
						resource: "member"
					});
					return a({
						url: u,
						credentials: "same-origin"
					}).then(function(c) {
						return !c.ok || c.status === 204 ? null : c.json()
					})
				},
				update({
					name: u,
					expertise: c
				}) {
					const m = o({
						type: "members",
						resource: "member"
					});
					return a({
						url: m,
						method: "PUT",
						headers: {
							"Content-Type": "application/json"
						},
						credentials: "same-origin",
						body: JSON.stringify({
							name: u,
							expertise: c
						})
					}).then(function(p) {
						return p.ok ? p.json() : null
					})
				}
			},
			comments: {
				async count({
					postId: u
				}) {
					const c = u ? `?ids=${u}` : "",
						m = o({
							type: "members",
							resource: "comments/counts",
							params: c
						}),
						p = await (await a({
							url: m,
							method: "GET",
							headers: {
								"Content-Type": "application/json"
							},
							credentials: "same-origin"
						})).json();
					return u ? p[u] : p
				},
				browse({
					page: u,
					postId: c
				}) {
					s = s ?? new Date().toISOString();
					const m = encodeURIComponent(`post_id:${c}+created_at:<=${s}`),
						d = encodeURIComponent("created_at DESC, id DESC"),
						p = o({
							type: "members",
							resource: "comments",
							params: `?limit=5&order=${d}&filter=${m}&page=${u}`
						});
					return a({
						url: p,
						method: "GET",
						headers: {
							"Content-Type": "application/json"
						},
						credentials: "same-origin"
					}).then(function(f) {
						if (f.ok) return f.json();
						throw new Error("Failed to fetch comments")
					})
				},
				async replies({
					commentId: u,
					afterReplyId: c,
					limit: m
				}) {
					const d = encodeURIComponent(`id:>${c}`),
						p = encodeURIComponent("created_at ASC, id ASC"),
						f = o({
							type: "members",
							resource: `comments/${u}/replies`,
							params: `?limit=${m??5}&order=${p}&filter=${d}`
						}),
						y = await a({
							url: f,
							method: "GET",
							headers: {
								"Content-Type": "application/json"
							},
							credentials: "same-origin"
						});
					if (y.ok) return y.json();
					throw new Error("Failed to fetch replies")
				},
				add({
					comment: u
				}) {
					const c = {
							comments: [u]
						},
						m = o({
							type: "members",
							resource: "comments"
						});
					return a({
						url: m,
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify(c)
					}).then(function(d) {
						if (d.ok) return d.json();
						throw new Error("Failed to add comment")
					})
				},
				edit({
					comment: u
				}) {
					const c = {
							comments: [u]
						},
						m = o({
							type: "members",
							resource: `comments/${u.id}`
						});
					return a({
						url: m,
						method: "PUT",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify(c)
					}).then(function(d) {
						if (d.ok) return d.json();
						throw new Error("Failed to edit comment")
					})
				},
				read(u) {
					const c = o({
						type: "members",
						resource: `comments/${u}`
					});
					return a({
						url: c,
						method: "GET",
						credentials: "same-origin"
					}).then(function(m) {
						if (m.ok) return m.json();
						throw new Error("Failed to read comment")
					})
				},
				like({
					comment: u
				}) {
					const c = o({
						type: "members",
						resource: `comments/${u.id}/like`
					});
					return a({
						url: c,
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						}
					}).then(function(m) {
						if (m.ok) return "Success";
						throw new Error("Failed to like comment")
					})
				},
				unlike({
					comment: u
				}) {
					const c = {
							comments: [u]
						},
						m = o({
							type: "members",
							resource: `comments/${u.id}/like`
						});
					return a({
						url: m,
						method: "DELETE",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify(c)
					}).then(function(d) {
						if (d.ok) return "Success";
						throw new Error("Failed to unlike comment")
					})
				},
				report({
					comment: u
				}) {
					const c = o({
						type: "members",
						resource: `comments/${u.id}/report`
					});
					return a({
						url: c,
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						}
					}).then(function(m) {
						if (m.ok) return "Success";
						throw new Error("Failed to report comment")
					})
				}
			},
			init: () => {}
		};
		return l.init = async () => {
			const [u] = await Promise.all([l.member.sessionData()]);
			return {
				member: u
			}
		}, l
	}
	async function Cte({
		state: t,
		api: e,
		options: n
	}) {
		let i = 1;
		t.pagination && t.pagination.page && (i = t.pagination.page + 1);
		const o = await e.comments.browse({
			page: i,
			postId: n.postId
		});
		return {
			comments: [...t.comments, ...o.comments],
			pagination: o.meta.pagination
		}
	}
	async function xte({
		state: t,
		api: e,
		data: {
			comment: n,
			limit: i
		}
	}) {
		var r;
		const o = await e.comments.replies({
			commentId: n.id,
			afterReplyId: (r = n.replies[n.replies.length - 1]) == null ? void 0 : r.id,
			limit: i
		});
		return {
			comments: t.comments.map(a => a.id === n.id ? {
				...n,
				replies: [...n.replies, ...o.comments]
			} : a)
		}
	}
	async function Ete({
		state: t,
		api: e,
		data: n
	}) {
		return n = (await e.comments.add({
			comment: n
		})).comments[0], {
			comments: [n, ...t.comments],
			commentCount: t.commentCount + 1
		}
	}
	async function Tte({
		state: t,
		api: e,
		data: {
			reply: n,
			parent: i
		}
	}) {
		let o = n;
		return o.parent_id = i.id, o = (await e.comments.add({
			comment: o
		})).comments[0], {
			comments: t.comments.map(a => a.id === i.id ? {
				...i,
				replies: [...i.replies, o],
				count: {
					...i.count,
					replies: i.count.replies + 1
				}
			} : a),
			commentCount: t.commentCount + 1
		}
	}
	async function jte({
		state: t,
		adminApi: e,
		data: n
	}) {
		return await e.hideComment(n.id), {
			comments: t.comments.map(i => {
				const o = i.replies.map(r => r.id === n.id ? {
					...r,
					status: "hidden"
				} : r);
				return i.id === n.id ? {
					...i,
					status: "hidden",
					replies: o
				} : {
					...i,
					replies: o
				}
			}),
			commentCount: t.commentCount - 1
		}
	}
	async function $te({
		state: t,
		api: e,
		adminApi: n,
		data: i
	}) {
		await n.showComment(i.id);
		const r = (await e.comments.read(i.id)).comments[0];
		return {
			comments: t.comments.map(a => {
				const s = a.replies.map(l => l.id === i.id ? r : l);
				return a.id === i.id ? r : {
					...a,
					replies: s
				}
			}),
			commentCount: t.commentCount + 1
		}
	}
	async function Ate({
		state: t,
		api: e,
		data: n
	}) {
		return await e.comments.like({
			comment: n
		}), {
			comments: t.comments.map(i => {
				const o = i.replies.map(r => r.id === n.id ? {
					...r,
					liked: !0,
					count: {
						...r.count,
						likes: r.count.likes + 1
					}
				} : r);
				return i.id === n.id ? {
					...i,
					liked: !0,
					replies: o,
					count: {
						...i.count,
						likes: i.count.likes + 1
					}
				} : {
					...i,
					replies: o
				}
			})
		}
	}
	async function Nte({
		api: t,
		data: e
	}) {
		return await t.comments.report({
			comment: e
		}), {}
	}
	async function Mte({
		state: t,
		api: e,
		data: n
	}) {
		return await e.comments.unlike({
			comment: n
		}), {
			comments: t.comments.map(i => {
				const o = i.replies.map(r => r.id === n.id ? {
					...r,
					liked: !1,
					count: {
						...r.count,
						likes: r.count.likes - 1
					}
				} : r);
				return i.id === n.id ? {
					...i,
					liked: !1,
					replies: o,
					count: {
						...i.count,
						likes: i.count.likes - 1
					}
				} : {
					...i,
					replies: o
				}
			})
		}
	}
	async function Pte({
		state: t,
		api: e,
		data: n
	}) {
		return await e.comments.edit({
			comment: {
				id: n.id,
				status: "deleted"
			}
		}), {
			comments: t.comments.map(i => {
				const o = i.replies.map(r => r.id === n.id ? {
					...r,
					status: "deleted"
				} : r);
				return i.id === n.id ? {
					...i,
					status: "deleted",
					replies: o
				} : {
					...i,
					replies: o
				}
			}),
			commentCount: t.commentCount - 1
		}
	}
	async function _te({
		state: t,
		api: e,
		data: {
			comment: n,
			parent: i
		}
	}) {
		return n = (await e.comments.edit({
			comment: n
		})).comments[0], {
			comments: t.comments.map(r => i && i.id === r.id ? {
				...r,
				replies: r.replies.map(a => a.id === n.id ? n : a)
			} : r.id === n.id ? n : r)
		}
	}
	async function zte({
		data: t,
		state: e,
		api: n
	}) {
		var l, u;
		const {
			name: i,
			expertise: o
		} = t, r = {}, a = (l = e == null ? void 0 : e.member) == null ? void 0 : l.name;
		i && a !== i && (r.name = i);
		const s = (u = e == null ? void 0 : e.member) == null ? void 0 : u.expertise;
		if (o !== void 0 && s !== o && (r.expertise = o), Object.keys(r).length > 0) try {
			const c = await n.member.update(r);
			if (!c) throw new Error("Failed to update member");
			return {
				member: c,
				success: !0
			}
		} catch (c) {
			return {
				success: !1,
				error: c
			}
		}
		return null
	}

	function Ote({
		data: t
	}) {
		return {
			popup: t
		}
	}

	function Dte() {
		return {
			popup: null
		}
	}

	function Ite({
		state: t
	}) {
		return {
			secundaryFormCount: t.secundaryFormCount + 1
		}
	}

	function Rte({
		state: t
	}) {
		return {
			secundaryFormCount: t.secundaryFormCount - 1
		}
	}
	const zq = {
			openPopup: Ote,
			closePopup: Dte,
			increaseSecundaryFormCount: Ite,
			decreaseSecundaryFormCount: Rte
		},
		Yte = {
			addComment: Ete,
			editComment: _te,
			hideComment: jte,
			deleteComment: Pte,
			showComment: $te,
			likeComment: Ate,
			unlikeComment: Mte,
			reportComment: Nte,
			addReply: Tte,
			loadMoreComments: Cte,
			loadMoreReplies: xte,
			updateMember: zte
		};

	function Lte(t) {
		return !!zq[t]
	}
	async function Fte({
		action: t,
		data: e,
		state: n,
		api: i,
		adminApi: o,
		options: r
	}) {
		const a = Yte[t];
		return a ? await a({
			data: e,
			state: n,
			api: i,
			adminApi: o,
			options: r
		}) || {} : {}
	}

	function Bte({
		action: t,
		data: e,
		state: n,
		api: i,
		adminApi: o,
		options: r
	}) {
		const a = zq[t];
		return a ? a({
			data: e,
			state: n,
			api: i,
			adminApi: o,
			options: r
		}) || {} : {}
	}

	function Ute({
		adminUrl: t
	}) {
		const e = document.querySelector('iframe[data-frame="admin-auth"]');
		let n = 1;
		const i = {},
			o = new URL(t).origin;
		window.addEventListener("message", function(s) {
			if (s.origin !== o) return;
			let l = null;
			try {
				l = JSON.parse(s.data)
			} catch (c) {
				console.error("Error parsing event data", c);
				return
			}
			const u = i[l.uid];
			u && (delete i[l.uid], u(l.error, l.result))
		});

		function r(s, l) {
			return new Promise((u, c) => {
				function m(d, p) {
					return d ? c(d) : u(p)
				}
				n += 1, i[n] = m, e.contentWindow.postMessage(JSON.stringify({
					uid: n,
					action: s,
					...l
				}), o)
			})
		}
		return {
			async getUser() {
				const s = await r("getUser");
				return !s || !s.users ? null : s.users[0]
			},
			async hideComment(s) {
				return await r("hideComment", {
					id: s
				})
			},
			async showComment(s) {
				return await r("showComment", {
					id: s
				})
			}
		}
	}

	function Vte(t) {
		const e = q.useCallback(() => {
				const r = t.dataset,
					a = r.ghostComments || window.location.origin,
					s = r.key,
					l = r.api,
					u = r.admin,
					c = r.postId || "",
					m = r.colorScheme,
					d = r.avatarSaturation ? parseInt(r.avatarSaturation) : void 0,
					p = r.accentColor ?? "#000000",
					f = r.commentsEnabled,
					y = r.title === "null" ? null : r.title ?? "",
					h = r.count === "true",
					g = r.publication ?? "";
				return {
					locale: r.locale ?? "en",
					siteUrl: a,
					apiKey: s,
					apiUrl: l,
					postId: c,
					adminUrl: u,
					colorScheme: m,
					avatarSaturation: d,
					accentColor: p,
					commentsEnabled: f,
					title: y,
					showCount: h,
					publication: g
				}
			}, [t]),
			n = C.useMemo(() => e(), []),
			[i, o] = q.useState(n);
		return q.useEffect(() => {
			const r = new MutationObserver(a => {
				a.some(s => s.type === "attributes") && o(e())
			});
			return r.observe(t, {
				attributes: !0
			}), () => {
				r.disconnect()
			}
		}, [t, e]), i
	}
	const Hte = ({
		scriptTag: t
	}) => {
		const e = Vte(t),
			[n, i] = C.useState({
				initStatus: "running",
				member: null,
				admin: null,
				comments: [],
				pagination: null,
				commentCount: 0,
				secundaryFormCount: 0,
				popup: null
			}),
			o = q.useMemo(() => Ste({
				siteUrl: e.siteUrl,
				apiUrl: e.apiUrl,
				apiKey: e.apiKey
			}), [e]),
			[r, a] = C.useState(null),
			s = C.useCallback(y => {
				i(h => (typeof y == "function" && (y = y(h)), {
					...h,
					...y
				}))
			}, [i]),
			l = C.useCallback(async (y, h) => {
				if (Lte(y)) {
					s(g => Bte({
						action: y,
						data: h,
						state: g,
						api: o,
						adminApi: r,
						options: e
					}));
					return
				}
				s(g => (Fte({
					action: y,
					data: h,
					state: g,
					api: o,
					adminApi: r,
					options: e
				}).then(b => {
					s({
						...b
					})
				}).catch(console.error), {}))
			}, [o, r, e]),
			u = C.useMemo(() => wte(e.locale, "comments"), [e.locale]),
			c = {
				...e,
				...n,
				t: u.t,
				dispatchAction: l
			},
			m = async () => {
				if (!(r || !e.adminUrl)) try {
					const y = Ute({
						adminUrl: e.adminUrl
					});
					a(y);
					let h = null;
					try {
						h = await y.getUser()
					} catch (g) {
						console.warn("[Comments] Failed to fetch current admin user:", g)
					}
					s({
						admin: h
					})
				} catch (y) {
					console.error("[Comments] Failed to initialize admin authentication:", y)
				}
			}, d = async () => {
				const y = o.comments.browse({
						page: 1,
						postId: e.postId
					}),
					h = o.comments.count({
						postId: e.postId
					}),
					[g, b] = await Promise.all([y, h]);
				return {
					comments: g.comments,
					pagination: g.meta.pagination,
					count: b
				}
			}, p = async () => {
				try {
					const {
						member: y
					} = await o.init(), {
						comments: h,
						pagination: g,
						count: b
					} = await d();
					s({
						member: y,
						initStatus: "success",
						comments: h,
						pagination: g,
						commentCount: b
					})
				} catch (y) {
					console.error("[Comments] Failed to initialize:", y), s({
						initStatus: "failed"
					})
				}
			};
		C.useEffect(() => {
			p()
		}, []);
		const f = n.initStatus === "success";
		return k.jsxs(hl.Provider, {
			value: c,
			children: [k.jsx(OQ, {
				children: k.jsx(MQ, {
					done: f
				})
			}), k.jsx(Jq, {
				adminUrl: e.adminUrl,
				onLoad: m
			}), k.jsx(BQ, {})]
		})
	};

	function qte() {
		let t = document.currentScript;
		if (!t) throw new Error("[Comments-UI] Cannot find current script tag");
		return t
	}

	function Wte(t) {
		if (t.previousElementSibling && t.previousElementSibling.id === el) return t.previousElementSibling;
		if (!t.parentElement) throw new Error("[Comments-UI] Script tag does not have a parent element");
		const e = document.createElement("div");
		return e.id = el, t.parentElement.insertBefore(e, t), e
	}

	function Kte() {
		const t = new URL(window.location.href);
		t.searchParams.get("token") && (t.searchParams.delete("token"), window.history.replaceState({}, document.title, t.href))
	}

	function Jte() {
		const t = qte(),
			e = Wte(t);
		try {
			Kte(), By.render(k.jsx(q.StrictMode, {
				children: k.jsx(Hte, {
					scriptTag: t
				})
			}), e)
		} catch (n) {
			console.error(n)
		}
	}
	Jte()
});
//# sourceMappingURL=comments-ui.min.js.map
